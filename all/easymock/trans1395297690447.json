[{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[91,92,93,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[95,96,207,208,164],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"delegateTo","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[37,38,39,40,209,41,42,43,45,46,210,211,47,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,12,213,14,214,30,35,36,215,49,51,52,216,77,78,79,80,81,82,83,217,218,219,87,88,89,90,94,220,221,222,109,110,223,111,224,225,226,227,228,113,229,230,231,232,114,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,179,180,181,248,249,250,251,192,194,195,197,201,204],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[252,253],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[254,255,256,257,258,0,1,2,3,259,260,261,262,263,4,264,265,266,267,268,269,5,6,7,8,9,10,11,270,12,271,272,13,213,14,214,273,274,15,16,17,18,19,20,21,22,23,24,25,26,27,28,275,276,29,277,278,279,280,281,30,31,32,33,34,282,283,284,35,36,37,38,39,40,209,41,42,43,44,45,46,210,211,47,48,285,215,286,287,288,49,50,51,289,52,290,291,53,216,292,54,293,294,295,296,297,55,298,299,300,301,302,303,304,305,56,57,306,58,59,60,307,308,61,62,63,309,64,310,311,312,65,313,314,315,316,317,66,67,318,68,69,319,70,320,321,71,322,323,72,73,74,75,76,324,325,252,326,77,78,79,80,327,81,82,83,328,329,84,217,85,218,219,86,330,331,332,333,334,335,336,337,338,339,340,341,342,87,343,344,88,345,346,347,348,349,350,351,352,353,89,354,355,356,357,358,90,359,360,91,92,93,94,361,362,363,364,95,220,96,207,208,365,97,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,98,99,100,101,102,103,104,105,391,106,107,108,392,393,221,222,109,110,223,111,394,395,224,225,112,226,227,228,396,113,229,230,231,232,397,398,399,114,400,401,115,116,402,403,233,234,235,236,237,404,405,406,407,408,409,410,411,412,413,414,415,117,118,119,120,416,417,418,419,420,121,122,421,123,422,423,424,425,124,426,427,428,429,125,430,431,432,433,126,127,128,434,129,130,435,131,132,133,134,135,436,437,238,239,240,241,438,439,440,441,442,443,444,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,445,242,243,244,245,446,163,447,164,165,448,166,167,449,450,451,452,453,454,246,247,455,168,456,457,169,170,171,172,173,458,459,174,175,460,461,176,177,178,462,463,464,179,180,465,181,466,467,468,182,469,183,184,248,185,249,250,186,187,470,471,472,473,474,475,251,476,477,188,478,479,189,480,481,482,483,484,485,486,190,191,487,192,193,194,195,196,197,198,488,199,200,489,490,201,202,203,204,205],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[218,136,137,491,249],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[91,92,93,206],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[412],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[492],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[51,409],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[255,256,257,258,0,1,2,3,259,260,261,262,263,4,264,265,266,267,268,269,5,6,7,8,9,10,11,12,271,272,13,213,14,214,273,274,15,16,17,18,19,20,21,22,23,24,25,26,27,28,275,276,29,277,278,279,280,281,30,31,32,33,34,282,35,36,37,38,39,40,209,41,42,43,44,45,46,210,211,47,48,215,286,288,49,50,51,52,291,53,216,54,293,294,295,296,297,55,298,299,300,301,302,303,304,305,56,57,306,58,59,60,307,308,61,62,63,309,64,310,311,312,65,313,314,315,316,317,66,67,318,68,69,319,70,320,321,71,322,323,72,73,74,75,76,324,325,252,326,77,78,79,80,81,82,83,329,84,217,85,218,219,86,330,331,332,333,337,338,339,340,341,342,87,343,344,88,345,346,347,348,349,350,351,352,353,89,354,355,356,357,358,90,359,360,91,92,93,94,361,363,364,95,220,96,207,208,365,97,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,98,99,100,101,102,103,104,105,391,106,107,108,392,393,221,222,109,110,223,111,394,395,224,225,112,226,227,228,396,113,229,230,231,232,397,398,399,114,400,401,115,116,402,403,233,234,235,236,237,404,407,408,409,410,411,412,413,414,415,117,118,119,120,416,417,418,419,420,121,122,421,123,422,423,424,425,124,426,427,428,429,125,430,431,432,433,126,127,128,434,129,130,435,131,132,133,134,135,436,437,238,239,240,241,438,439,440,441,442,443,444,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,242,243,244,245,446,163,447,164,165,448,166,167,449,450,451,452,453,454,246,247,455,168,456,457,169,170,171,172,173,458,459,174,175,460,461,176,177,178,462,463,464,179,180,465,181,466,467,468,182,469,183,184,248,185,249,250,186,187,470,471,472,473,474,475,251,476,477,188,478,189,480,481,482,483,484,486,190,191,487,192,193,194,195,196,197,198,488,199,200,489,489,490,490,201,202,203,204,205],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[289,493,494,495,496,497,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[28,330,332,363,380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[37,39,46,312,65,315,317,66,318,72,324],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[498,499,500,501],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[6,213,214,16,20,21,24,281,215,53,216,54,56,58,59,60,62,63,309,64,312,71,329,85,218,219,363,415,435,136,137,242,171,172,173,458,174,175,176,177,178,469,184,185,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[91,92,93,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[221,222,224,113,241,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[289,291,493,494,495,502,503,91,94,361],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[255,256,257,258,4,5,6,7,8,9,10,12,213,14,214,15,16,17,18,19,20,21,23,24,25,26,27,28,29,277,278,279,280,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,215,49,51,52,216,55,304,305,56,57,306,58,59,60,62,63,309,64,310,311,312,65,314,315,316,317,66,67,68,69,319,70,320,321,71,322,323,72,73,74,76,324,325,252,77,78,79,80,81,82,83,329,84,217,85,218,219,86,330,332,87,88,89,90,91,92,93,94,363,95,220,208,221,222,109,110,223,111,394,395,224,225,112,226,227,228,396,113,229,230,231,232,114,115,116,233,234,235,236,237,415,419,420,121,122,421,123,422,423,424,425,124,426,427,428,429,125,430,431,432,433,126,127,128,129,130,435,131,132,133,134,135,436,444,136,137,156,157,242,243,244,245,166,453,246,247,455,456,457,169,170,172,173,458,459,175,176,177,178,179,180,181,182,469,183,184,248,185,249,250,186,251,476,477,188,478,191,487,192,193,194,195,196,197,488,199,200,201,202,203,204,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[255,256,257,258,4,5,6,7,8,9,10,12,213,14,214,15,16,17,18,19,20,21,22,23,24,25,26,27,28,275,276,29,277,278,279,280,281,30,31,32,33,34,282,35,36,37,38,39,40,209,41,42,43,44,45,46,210,211,47,215,49,51,52,216,55,304,305,56,57,306,58,59,60,307,308,61,62,63,309,64,310,311,312,65,314,315,316,317,66,67,318,68,69,319,70,320,321,71,322,323,72,73,74,75,76,324,325,252,77,78,79,80,81,82,83,329,84,217,85,218,219,86,330,332,87,88,89,90,91,92,93,94,363,364,95,220,96,207,208,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,221,222,109,110,223,111,394,395,224,225,112,226,227,228,396,113,229,230,231,232,114,115,116,402,233,234,235,236,237,412,413,414,415,416,417,418,419,420,121,122,421,123,422,423,424,425,124,426,427,428,429,125,430,431,432,433,126,127,128,129,130,435,131,132,133,134,135,436,437,238,239,240,241,438,440,441,444,136,137,155,156,157,158,159,160,161,162,242,243,244,245,446,163,164,165,166,449,450,451,452,453,454,246,247,455,456,457,169,170,172,173,458,459,175,460,461,176,177,178,179,180,181,182,469,183,184,248,185,249,250,186,187,470,471,472,474,251,476,477,188,478,190,191,487,192,193,194,195,196,197,488,199,200,489,489,490,490,201,202,203,204,205],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[401,115,116,402,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[504,505,506,507,508,509,306,217,218,219,365,97,510,511,512,415,444,136,137,459,248,249,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.RecordState:324","failures":[136,159,160],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,23,24,25,26,27,28,29,277,278,279,280,281,30,31,32,33,34,282,35,36,37,38,39,40,209,41,42,43,44,45,46,210,211,47,55,304,305,56,57,306,59,60,307,308,62,309,64,310,311,312,65,314,315,316,317,66,67,68,69,319,70,320,321,71,322,323,72,73,74,75,76,324,325,252,77,80,81,84,217,85,218,219,86,330,332,87,92,93,363,95,220,96,208,104,105,391,108,221,222,109,110,223,111,394,395,224,225,112,226,227,228,396,113,229,230,231,232,114,115,116,403,233,234,235,236,237,415,419,420,121,122,421,123,422,423,424,425,124,426,427,428,429,125,430,431,432,433,126,127,128,129,130,131,132,133,134,135,436,437,238,239,240,241,438,440,441,444,136,137,155,156,157,158,159,160,161,162,242,244,245,163,164,165,449,450,451,452,453,454,246,247,456,457,169,170,172,173,458,459,460,461,176,178,182,183,248,185,249,250,186,251,476,477,188,478,190,191,487,192,193,194,195,196,197,488,199,200,202,203,204,205],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[38,43,44,47,317,68,217,233,234,235,236,237,415,436,437,453,246,247,248,251,476,477,188,478],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[255,256,257,258,306,58,62,63,217,218,219,415,444,136,137,513,514,491,459,175,176,177,184,248,249,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[505,515,516,510,174,184],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":65,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":458,"org.easymock.tests2.UsageTest.argumentsOrdered":63,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":60,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":205,"org.easymock.tests2.DelegateToTest.testReturnException":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":450,"org.easymock.tests.MockingTest.testPartialClassMocking":179,"org.easymock.tests.MockClassControlTest.testToString":100,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":254,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":419,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":88,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":513,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":67,"org.easymock.tests2.UsageTest.wrongArguments":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":251,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":119,"org.easymock.samples.ExampleTest.answerVsDelegate":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":409,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":467,"org.easymock.tests2.UsageConstraintsTest.testNull":315,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":8,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":24,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":478,"org.easymock.tests.UsageTest.moreThanOneArgument":459,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":433,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":240,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":439,"org.easymock.tests.UsageTest.argumentsOrdered":177,"org.easymock.tests.UsageVarargTest.varargIntAccepted":128,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":335,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":237,"org.easymock.tests.ReplayStateInvalidUsageTest.times":151,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests2.DependencyTest.testClassMocking":283,"org.easymock.tests2.AnswerTest.answer":28,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":3,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":406,"org.easymock.tests2.CaptureTest.testAnd":37,"org.easymock.tests2.UsageTest.strictResetToDefault":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":443,"org.easymock.tests2.DelegateToTest.testDelegate":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":125,"org.easymock.tests.LimitationsTest.mockFinalMethod":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":453,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":142,"org.easymock.tests2.DependencyTest.testClassMockingSupport":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":209,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":1,"org.easymock.tests.UsageThrowableTest.throwError":155,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":145,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":408,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":445,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":360,"org.easymock.samples.PartialClassMockTest.testGetArea":201,"org.easymock.tests.MockingTest.testInterfaceMocking":465,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":234,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":420,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests2.UsageTest.niceToStrict":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":356,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":300,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":425,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":20,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":405,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":418,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":117,"org.easymock.tests.UsageOverloadedMethodTest.overloading":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":358,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":320,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":226,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":70,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":45,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":434,"org.easymock.tests.MockClassControlTest.testEquals":104,"org.easymock.tests2.EasyMockSupportClassTest.testAll":87,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":140,"org.easymock.tests2.CaptureTest.testCaptureAll":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":2,"org.easymock.tests.MockNameTest.defaultName":397,"org.easymock.tests2.UsageConstraintsTest.testMatches":321,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":241,"org.easymock.samples.ExampleTest.voteForRemovals":197,"org.easymock.tests.UsageVarargTest.allKinds":135,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":141,"org.easymock.samples.BasicClassMockTest.testPrintContent":200,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":161,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":454,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":207,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":485,"org.easymock.tests2.UsageConstraintsTest.greaterThan":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":214,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":486,"org.easymock.samples.ExampleTest.voteForRemoval":194,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":273,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":11,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":182,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":17,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":449,"org.easymock.tests2.CaptureTest.testCaptureFirst":47,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":18,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":395,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":30,"org.easymock.tests2.CaptureTest.testCapture2_2446744":211,"org.easymock.tests2.UsageTest.moreThanOneArgument":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":216,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":134,"org.easymock.tests.GenericTest.testBridgedEquals":403,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":172,"org.easymock.tests.UsageExpectAndReturnTest.longType":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":432,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":446,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":75,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":430,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":238,"org.easymock.tests.UsageCallCountTest.tooManyCalls":173,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":160,"org.easymock.tests.MockingTest.testNiceClassMocking":468,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":78,"org.easymock.tests.MockingTest.testClassMocking":463,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":168,"org.easymock.tests2.UsageConstraintsTest.testContains":319,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":34,"org.easymock.tests2.UsageConstraintsTest.testFind":314,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":487,"org.easymock.tests.MockTypeTest.fromEasyMockClass":407,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":332,"org.easymock.tests.UsageExpectAndReturnTest.object":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":301,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":130,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":108,"org.easymock.tests.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":440,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":361,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":229,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":164,"org.easymock.tests.MockClassControlTest.testHashCode":103,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":260,"org.easymock.tests2.EasyMockSupportTest.testVerify":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":351,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":0,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":326,"org.easymock.tests.UsageVarargTest.varargCharAccepted":129,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":479,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastCall":307,"org.easymock.tests.DefaultClassInstantiatorTest.object":189,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":26,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":416,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":106,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":512,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":352,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":259,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":213,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":422,"org.easymock.tests.CapturesMatcherTest.test":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":230,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":470,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":507,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":90,"org.easymock.tests2.UsageTest.resumeIfFailure":309,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":452,"org.easymock.tests2.StubTest.stubWithReturnValue":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":289,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":93,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":383,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":515,"org.easymock.samples.SupportTest.voteForRemovals":204,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":427,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":206,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":389,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":275,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":475,"org.easymock.tests.UsageExpectAndThrowTest.object":124,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":73,"org.easymock.tests2.DelegateToTest.testWrongClass":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":247,"org.easymock.samples.ConstructorCalledMockTest.testTax":489,"org.easymock.tests.UsageStrictMockTest.range":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":338,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":22,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":426,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":516,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":414,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":499,"org.easymock.tests.UsageUnorderedTest.message":415,"org.easymock.tests.UsageVerifyTest.twoReturns":137,"org.easymock.tests.UsageVarargTest.varargByteAccepted":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":354,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":170,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":199,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":188,"org.easymock.tests2.UsageConstraintsTest.any":68,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":150,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndThrowTest.longType":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":483,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":149,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests2.SerializationTest.testClass":91,"org.easymock.tests.LimitationsTest.mockNativeMethod":114,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":232,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":295,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":86,"org.easymock.tests2.NameTest.nameForMocksControl":258,"org.easymock.tests2.MockedExceptionTest.testMockedException":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":344,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":461,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":421,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":181,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":331,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":5,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":180,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":10,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":66,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":74,"org.easymock.tests.MockingTest.testTwoMocks":464,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":424,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":325,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":198,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":147,"org.easymock.tests.UsageStrictMockTest.differentMethods":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":261,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":481,"org.easymock.tests2.ConstraintsToStringTest.andToString":508,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":281,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":98,"org.easymock.tests.UsageExpectAndThrowTest.floatType":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":345,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":29,"org.easymock.tests.UsageVerifyTest.twoThrows":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":362,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":89,"org.easymock.samples.ExampleTest.voteAgainstRemoval":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":14,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":162,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":32,"org.easymock.tests2.UsageTest.defaultResetToNice":61,"org.easymock.samples.ExampleTest.voteAgainstRemovals":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.differentLength":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":294,"org.easymock.tests2.CallbackTest.callback":363,"org.easymock.tests2.UsageConstraintsTest.equals":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":271,"org.easymock.tests.UsageTest.openCallCountByLastCall":460,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":477,"org.easymock.tests.UsageCallCountTest.tooFewCalls":457,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":120,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":500,"org.easymock.tests.UsageThrowableTest.throwCheckedException":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":462,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":298,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":81,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":278,"org.easymock.tests.ObjectMethodsTest.testHashCode":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":31,"org.easymock.tests2.NameTest.nameForNiceMock":257,"org.easymock.tests2.DependencyTest.testInterfaceMocking":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":355,"org.easymock.tests2.DelegateToTest.testStubDelegate":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.stubAnswer":277,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":248,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":290,"org.easymock.tests.UsageVarargTest.varargLongAccepted":132,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":376,"org.easymock.tests.UsageExpectAndReturnTest.floatType":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":94,"org.easymock.tests2.ConstraintsToStringTest.orToString":504,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":490,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests.UsageThrowableTest.noUpperLimit":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":267,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":323,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":311,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":333,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":41,"org.easymock.tests2.SerializationTest.test":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":222,"org.easymock.tests2.UsageConstraintsTest.testSame":316,"org.easymock.samples.SupportTest.addDocument":203,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":327,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":346,"org.easymock.tests.GenericTest.testPackageScope":115,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":266,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":466,"org.easymock.tests2.NameTest.nameForMock":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":227,"org.easymock.tests2.UsageStrictMockTest.differentMethods":219,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":292,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":272,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":429,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests2.MockedExceptionTest.testRealException":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":511,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":476,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":154,"org.easymock.tests2.NameTest.nameForStrictMock":256,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":288,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":337,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":514,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":482,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":215,"org.easymock.tests2.UsageStrictMockTest.range":218,"org.easymock.tests2.UsageConstraintsTest.lessThan":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":502,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":375,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":350,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":498,"org.easymock.tests2.UsageConstraintsTest.testOr":317,"org.easymock.tests.UsageRangeTest.combination":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":175,"org.easymock.tests2.MockBuilderTest.testWithConstructor":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":347,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":368,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":484,"org.easymock.tests.UsageVarargTest.varargShortAccepted":131,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":171,"org.easymock.tests2.UsageConstraintsTest.cmpTo":69,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":276,"org.easymock.tests2.CompareToTest.testLessThan":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests2.CaptureTest.testCaptureFromStub":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":144,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":286,"org.easymock.tests.UsageTest.unexpectedCallWithArray":174,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":169,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":396,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.UsageConstraintsTest.constraints":312,"org.easymock.samples.ExampleTest.addAndChangeDocument":488,"org.easymock.tests2.ConstraintsToStringTest.notToString":506,"org.easymock.tests.UsageStrictMockTest.testVerify":187,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":202,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":139,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":235,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":394,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":236,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":491,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":21}}]
