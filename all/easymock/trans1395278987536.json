[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[2],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[21,22],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[23,24,25,26,27,28,29,30,31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,3,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,4,122,5,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,11,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,12,215,13,216,217,218,219,220,221,222,223,224,225,226,16,18,19,20,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[266,122,5,215,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[266],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[25,88,90,93,137,267,227],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[268,65],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[23,269,270,31,31,32,32,44,271,54,81,82,83,84,86,87,95,96,97,98,107,108,110,111,112,272,113,266,114,115,116,273,274,275,141,276,277,143,278,144,279,145,146,280,147,281,282,283,284,179,285,286,197,198,199,216,287,217,218],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"position":"org.easymock.internal.Range:40","failures":[23,288,24,25,26,27,289,28,290,29,291,30,269,270,292,31,32,33,34,293,35,36,294,295,37,38,39,40,41,42,43,44,45,271,46,47,48,49,50,51,52,53,54,296,297,55,56,57,58,298,59,60,61,62,63,64,268,65,66,67,68,69,70,71,72,73,74,75,76,299,77,78,79,80,300,301,302,303,304,305,306,81,82,83,84,307,85,86,87,308,88,89,90,91,92,93,309,310,311,312,313,94,314,315,316,317,318,319,320,321,322,95,323,324,96,325,326,327,328,329,330,331,332,333,97,334,335,336,337,338,98,339,340,99,100,3,341,101,342,102,103,104,343,344,105,106,345,107,108,109,110,111,112,272,346,113,347,348,266,114,115,116,349,350,117,118,119,120,121,351,352,4,353,122,5,6,354,355,123,124,125,126,127,128,129,130,131,132,133,134,135,136,356,357,7,8,9,10,137,358,359,360,361,362,363,364,365,366,138,367,368,369,370,371,372,139,140,141,142,276,373,143,278,374,375,144,279,145,376,146,377,378,280,147,379,282,148,380,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,283,381,382,383,384,284,385,386,387,388,389,390,391,392,393,394,395,396,397,179,398,399,400,401,402,403,404,405,406,407,408,409,410,180,181,182,183,184,185,411,285,412,413,414,415,416,417,186,187,188,189,190,418,419,420,421,422,423,424,425,426,427,428,429,430,267,431,432,191,433,434,435,436,437,192,438,193,11,439,440,194,195,441,442,196,443,444,445,446,447,448,449,286,197,198,450,199,451,452,453,200,201,202,203,454,455,456,457,204,205,206,207,208,209,210,211,458,459,212,460,213,214,461,462,463,12,464,215,13,14,465,21,216,287,217,22,218,219,220,221,222,223,224,225,226,15,466,16,17,467,468,469,470,471,18,19,20,227,472,228,229,473,230,474,231,232,233,234,235,236,475,237,476,477,478,479,480,481,482,483,484,485,486,487,488,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[44,45,271,496],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[122,497,215,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[68,410,463],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[44,54,296,498,499,500,501,502,376,378],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[472,473,475,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[44,45,271,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[31,32,347,373,503,379],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[267],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[33,293,40,57,58,60,62,63,268,74,78],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[44,54,296,498,499,500,501,502,376,378],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[31,31,32,32,41,55,56,59,60,61,62,67,69,70,72,73,78,79,80,4,186,187,188,189,190,204,205,206,207,208,213,12,238,239,242,263,264,265],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[388,389,390,391,393,395],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[341,343,344,105,122,5,134,143,280,147,282,178,504,505,439,440,441,442,200,506,458,463,215,13,469,470,471,19,20,474],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.UsageTest.argumentsOrdered":344,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":428,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":342,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":288,"org.easymock.tests2.DelegateToTest.testReturnException":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":181,"org.easymock.tests.MockingTest.testPartialClassMocking":197,"org.easymock.tests.MockClassControlTest.testToString":412,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":357,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":243,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":238,"org.easymock.tests2.UsageTest.wrongArguments":341,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":456,"org.easymock.samples.ExampleTest.answerVsDelegate":25,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":284,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":134,"org.easymock.tests2.CaptureTest.testPrimitive":35,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":242,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":262,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":188,"org.easymock.tests.UsageTest.argumentsOrdered":442,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":222,"org.easymock.tests.UsageVarargTest.varargIntAccepted":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":208,"org.easymock.tests.ReplayStateInvalidUsageTest.times":485,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests2.DependencyTest.testClassMocking":354,"org.easymock.tests2.AnswerTest.answer":88,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":361,"org.easymock.tests2.CaptureTest.testAnd":33,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":382,"org.easymock.tests2.UsageTest.strictResetToDefault":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":202,"org.easymock.tests2.DelegateToTest.testDelegate":51,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":258,"org.easymock.tests.LimitationsTest.mockFinalMethod":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":447,"org.easymock.tests2.DependencyTest.testClassMockingSupport":355,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":475,"org.easymock.tests2.CaptureTest.testCapture1_2446744":36,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":359,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":479,"org.easymock.tests.UsageThrowableTest.throwError":170,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":384,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":458,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":340,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":480,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":232,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":494,"org.easymock.tests2.UsageTest.niceToStrict":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":144,"org.easymock.tests2.MockBuilderTest.testCreateMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":252,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":236,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":454,"org.easymock.tests.UsageOverloadedMethodTest.overloading":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":161,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":219,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":68,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":39,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":402,"org.easymock.tests.MockClassControlTest.testEquals":416,"org.easymock.tests2.EasyMockSupportClassTest.testAll":95,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":260,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":445,"org.easymock.tests2.CaptureTest.testCaptureAll":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":360,"org.easymock.tests.MockNameTest.defaultName":495,"org.easymock.tests2.UsageConstraintsTest.testMatches":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":477,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":189,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":410,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":446,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":176,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":185,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":394,"org.easymock.tests2.UsageConstraintsTest.greaterThan":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":323,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":116,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":395,"org.easymock.samples.ExampleTest.voteForRemoval":26,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":118,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":272,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":218,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":180,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":46,"org.easymock.tests2.CaptureTest.testCaptureFirst":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":157,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":120,"org.easymock.tests2.CaptureTest.testCapture2_2446744":42,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":147,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":409,"org.easymock.tests.GenericTest.testBridgedEquals":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":470,"org.easymock.tests.UsageExpectAndReturnTest.longType":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":443,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":261,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":281,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":210,"org.easymock.tests.UsageCallCountTest.tooManyCalls":471,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":175,"org.easymock.tests.MockingTest.testNiceClassMocking":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":82,"org.easymock.tests.MockingTest.testClassMocking":449,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":466,"org.easymock.tests2.UsageConstraintsTest.testContains":67,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":277,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":141,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":221,"org.easymock.tests.MockTypeTest.fromEasyMockClass":383,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":461,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":149,"org.easymock.tests.UsageExpectAndReturnTest.object":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":404,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":492,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":296,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":166,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":228,"org.easymock.tests.MockClassControlTest.testHashCode":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":331,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":224,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":235,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":358,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":345,"org.easymock.tests.UsageVarargTest.varargCharAccepted":403,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":387,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastCall":102,"org.easymock.tests.DefaultClassInstantiatorTest.object":388,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":234,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":490,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":414,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":249,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":209,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":98,"org.easymock.tests2.UsageTest.resumeIfFailure":105,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":183,"org.easymock.tests2.StubTest.stubWithReturnValue":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":159,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":77,"org.easymock.tests2.SerializationTest.testAllMockedMethod":271,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":191,"org.easymock.samples.SupportTest.voteForRemovals":30,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":255,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":192,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":89,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":460,"org.easymock.tests.UsageExpectAndThrowTest.object":253,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":264,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.UsageStrictMockTest.range":215,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":305,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":487,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":455,"org.easymock.tests2.CaptureTest.testCaptureNone":38,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":233,"org.easymock.tests.UsageUnorderedTest.message":178,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":506,"org.easymock.tests.UsageVerifyTest.twoReturns":20,"org.easymock.tests.UsageVarargTest.varargByteAccepted":408,"org.easymock.tests2.ThreadingTest.testThreadSafe":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":334,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":468,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":493,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests2.CaptureTest.testCapture_2617107":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":241,"org.easymock.tests2.UsageConstraintsTest.any":65,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":484,"org.easymock.tests2.StubTest.stub":52,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":182,"org.easymock.tests.UsageExpectAndThrowTest.longType":246,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":392,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":483,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":353,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests.LimitationsTest.mockNativeMethod":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":169,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":217,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":311,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":6,"org.easymock.tests2.NameTest.nameForMocksControl":10,"org.easymock.tests2.MockedExceptionTest.testMockedException":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":324,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":247,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":380,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":107,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":198,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.CaptureTest.testCaptureLast":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":309,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":237,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.MockingTest.testTwoMocks":286,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":308,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":251,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":343,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.samples.ExampleTest.removeNonExistingDocument":290,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":481,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":315,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":390,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":119,"org.easymock.tests2.MockBuilderTest.testCreateMockString":282,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":411,"org.easymock.tests.UsageExpectAndThrowTest.floatType":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":325,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":91,"org.easymock.tests.UsageVerifyTest.twoThrows":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":297,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":97,"org.easymock.samples.ExampleTest.voteAgainstRemoval":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":231,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests.LimitationsTest.privateConstructor":397,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":139,"org.easymock.tests2.UsageTest.defaultResetToNice":104,"org.easymock.samples.ExampleTest.voteAgainstRemovals":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":165,"org.easymock.tests.UsageVarargTest.differentLength":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":310,"org.easymock.tests2.CallbackTest.callback":137,"org.easymock.tests2.UsageConstraintsTest.equals":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":347,"org.easymock.tests.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":240,"org.easymock.tests.UsageCallCountTest.tooFewCalls":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":457,"org.easymock.tests.UsageThrowableTest.throwCheckedException":174,"org.easymock.tests.MockingTest.testStrictClassMocking":448,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":86,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":214,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":314,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":486,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":85,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":93,"org.easymock.tests.ObjectMethodsTest.testHashCode":491,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":121,"org.easymock.tests2.NameTest.nameForNiceMock":9,"org.easymock.tests2.DependencyTest.testInterfaceMocking":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":335,"org.easymock.tests2.DelegateToTest.testStubDelegate":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.AnswerTest.stubAnswer":92,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":377,"org.easymock.tests.UsageVarargTest.varargLongAccepted":407,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":168,"org.easymock.tests.UsageExpectAndReturnTest.floatType":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests.UsageThrowableTest.noUpperLimit":171,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":300,"org.easymock.tests2.SerializationTest.test":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":294,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":151,"org.easymock.tests2.UsageConstraintsTest.testSame":61,"org.easymock.samples.SupportTest.addDocument":291,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":307,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":326,"org.easymock.tests.GenericTest.testPackageScope":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests2.NameTest.nameForMock":7,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":162,"org.easymock.tests2.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":154,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":257,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":489,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":203,"org.easymock.tests2.MockedExceptionTest.testRealException":142,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":306,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":267,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":239,"org.easymock.tests2.NameTest.nameForStrictMock":8,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":375,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":304,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":391,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.UsageStrictMockTest.range":122,"org.easymock.tests2.UsageConstraintsTest.lessThan":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":330,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":108,"org.easymock.tests.UsageTest.wrongArguments":440,"org.easymock.tests2.MockBuilderTest.testWithConstructor":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":327,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":163,"org.easymock.tests.UsageVarargTest.varargShortAccepted":406,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":393,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":469,"org.easymock.tests2.UsageConstraintsTest.cmpTo":66,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests2.CaptureTest.testCaptureFromStub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":478,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":278,"org.easymock.tests.UsageTest.unexpectedCallWithArray":439,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":463,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":467,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":164,"org.easymock.tests2.CaptureTest.testCapture":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":464,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":465,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":292,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":462,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":444,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":206,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":274,"org.easymock.tests.LimitationsTest.abstractClass":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":207,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":497,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131}}]
