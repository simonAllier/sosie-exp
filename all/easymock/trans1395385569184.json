[{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[5,6,7,8,9,10,11,12,3,13,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:67","sourceCode":"if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (this.int);\n} else {\n    return ((\"between \" + (this.int)) + \" and \") + (this.int);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"maximum","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[40,43,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,37,78,79,80,16,81,82,83,84,21,85,22,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,24,118,119,120,121,122,123,124,125,126,127,128,38,41,43,45,46,48,129,130,131,132,133,134,51,52,53,135,136,137,138,139,29,140,141,142,143,144,145,146,0,147,148,149,150,151,55,56,2,152,153,154,155,156,157,158,159,160,161,162,163,33,164,34,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,58,197,198,199,3,200,201,202,13,203,204,205,206,207,208,209,210,211,212,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[214,167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[215,216,217,218,219,220,221,64,222,65,223,66,67,68,69,70,71,224,225,226,72,73,74,75,76,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,77,243,15,80,16,17,81,82,18,19,83,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,20,21,265,85,22,266,86,87,267,268,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,23,24,118,119,269,270,120,271,272,273,274,275,121,122,123,124,276,125,126,277,127,278,43,129,130,131,132,133,279,280,281,135,136,138,139,29,30,140,282,141,142,31,32,144,145,146,0,147,148,149,150,151,56,283,284,33,285,164,34,286,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,287,187,188,189,190,191,193,288,194,289,290,291,195,292,58,197,293,199,3,202,13,294,203,295,296,204,205,297,206,207,298,299,208,209,210,211,300,212,213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[206],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[167,168,169,170,171,172,173,174,301,175,184,185,188,189,204,205,297,206,211,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[191,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[302,222,227,228,229,230,231,232,303,304,305,290,291,195,292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[306,77,243,37,307],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[68,69,23],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:79","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[309],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[58,197,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[65,66,67,68,69,70,71,226,231,80,82,310,311,312,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,23,123,135,138,142],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1373","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[167,168,172,173,301,184,204,297,211],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:218","sourceCode":"return ","type":"CtReturnImpl"},"failures":[314,315,215,216,217,218,316,219,220,317,318,319,320,221,64,222,65,223,67,70,71,321,322,72,323,324,73,74,75,76,227,228,229,230,231,232,233,234,235,236,237,325,238,239,240,241,242,77,37,15,326,327,328,329,330,331,80,16,332,17,81,82,18,19,244,245,248,250,251,252,253,255,256,257,258,260,261,262,263,333,334,20,21,85,22,335,86,87,336,337,338,339,267,340,341,342,343,268,344,345,346,347,348,349,350,351,352,353,354,355,88,89,92,94,95,96,97,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,23,24,118,119,269,270,120,356,357,358,359,360,361,362,363,271,272,273,274,275,123,364,278,365,365,366,366,38,39,41,43,44,47,48,50,129,130,131,132,367,368,369,370,134,51,52,53,279,280,281,135,25,26,27,28,29,30,140,282,141,142,143,31,32,144,146,0,147,148,149,150,54,151,1,56,283,152,153,154,155,156,157,158,159,160,161,162,163,371,372,33,164,34,165,166,167,168,169,170,171,172,173,174,301,175,176,177,178,179,180,181,182,183,184,185,186,287,187,188,189,190,191,192,193,373,14,194,289,290,291,195,292,196,293,198,199,3,200,201,202,13,203,296,204,205,297,206,207,298,299,208,209,210,211,300,212,213],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[374],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[375],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.UsageTest.argumentsOrdered":32,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":230,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":282,"org.easymock.tests2.StubTest.stubWithReturnValue":135,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests2.SerializationTest.testAllMockedMethod":293,"org.easymock.tests2.DelegateToTest.testReturnException":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":228,"org.easymock.tests.MockingTest.testPartialClassMocking":73,"org.easymock.samples.SupportTest.voteForRemovals":128,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":306,"org.easymock.tests.MockClassControlTest.testToString":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":244,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":51,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":373,"org.easymock.tests.UsageExpectAndThrowTest.object":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":137,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":185,"org.easymock.tests2.DelegateToTest.testWrongClass":295,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":87,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests2.UsageTest.wrongArguments":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":118,"org.easymock.samples.ConstructorCalledMockTest.testTax":365,"org.easymock.tests.UsageStrictMockTest.range":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":319,"org.easymock.samples.ExampleTest.answerVsDelegate":276,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":36,"org.easymock.tests2.UsageConstraintsTest.testNull":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests2.CaptureTest.testPrimitive":206,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":263,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":318,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests2.CaptureTest.testCaptureNone":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":79,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":308,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":240,"org.easymock.tests2.ThreadingTest.testThreadSafe":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":351,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":235,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":218,"org.easymock.tests2.CaptureTest.testCapture_2617107":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":112,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":61,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":44,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":375,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":346,"org.easymock.tests2.StubTest.stub":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":116,"org.easymock.tests.UsageExpectAndThrowTest.longType":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":62,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests.ReplayStateInvalidUsageTest.times":347,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":192,"org.easymock.tests.LimitationsTest.mockNativeMethod":76,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":313,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":107,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":370,"org.easymock.tests2.CaptureTest.testAnd":204,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":8,"org.easymock.tests2.NameTest.nameForMocksControl":28,"org.easymock.tests2.MockedExceptionTest.testMockedException":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":156,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":355,"org.easymock.tests2.DelegateToTest.testDelegate":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":248,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":75,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":259,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.CaptureTest.testCaptureLast":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":267,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":13,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":330,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":186,"org.easymock.tests.MockingTest.testTwoMocks":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":339,"org.easymock.tests2.CaptureTest.testCapture1_2446744":207,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":342,"org.easymock.tests.UsageThrowableTest.throwError":65,"org.easymock.samples.ExampleTest.removeNonExistingDocument":364,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":268,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.ConstraintsToStringTest.andToString":214,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":131,"org.easymock.tests2.MockBuilderTest.testCreateMockString":50,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests.UsageExpectAndThrowTest.floatType":246,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":181,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":288,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":52,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":113,"org.easymock.samples.ExampleTest.voteAgainstRemoval":126,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":331,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":60,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":245,"org.easymock.tests2.UsageTest.niceToStrict":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":71,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.tests2.UsageTest.defaultResetToNice":143,"org.easymock.samples.ExampleTest.voteAgainstRemovals":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":103,"org.easymock.tests.UsageVarargTest.differentLength":325,"org.easymock.tests2.CallbackTest.callback":283,"org.easymock.tests.UsageTest.openCallCountByLastCall":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":253,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":269,"org.easymock.tests.UsageCallCountTest.tooFewCalls":216,"org.easymock.tests.UsageOverloadedMethodTest.overloading":122,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":226,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":99,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":121,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":309,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":178,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":320,"org.easymock.tests.UsageThrowableTest.throwCheckedException":68,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests2.EasyMockSupportClassTest.testAll":134,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":328,"org.easymock.tests2.CaptureTest.testCaptureAll":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":3,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":348,"org.easymock.tests2.UsageConstraintsTest.testMatches":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.tests2.CompareToTest.testGreateOrEqual":374,"org.easymock.tests.ObjectMethodsTest.testHashCode":337,"org.easymock.samples.ExampleTest.voteForRemovals":127,"org.easymock.tests2.NameTest.nameForNiceMock":27,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":133,"org.easymock.tests.UsageVarargTest.allKinds":242,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":117,"org.easymock.tests2.DependencyTest.testInterfaceMocking":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":329,"org.easymock.samples.ExampleTest.addDocument":277,"org.easymock.tests2.DelegateToTest.testStubDelegate":203,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":70,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":372,"org.easymock.tests2.AnswerTest.stubAnswer":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":232,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":109,"org.easymock.tests.UsageVarargTest.varargLongAccepted":239,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":2,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":59,"org.easymock.samples.ExampleTest.voteForRemoval":125,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":130,"org.easymock.tests.UsageExpectAndReturnTest.floatType":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":191,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":366,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests.UsageThrowableTest.noUpperLimit":223,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":221,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":298,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":89,"org.easymock.tests2.UsageConstraintsTest.testSame":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":227,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":155,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":95,"org.easymock.tests.GenericTest.testPackageScope":77,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":29,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":354,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":241,"org.easymock.tests.GenericTest.testBridgedEquals":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":219,"org.easymock.tests2.NameTest.nameForMock":25,"org.easymock.tests.UsageExpectAndReturnTest.longType":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":326,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":262,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":100,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":260,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":11,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":92,"org.easymock.tests.UsageCallCountTest.tooManyCalls":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":111,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":215,"org.easymock.tests2.MockedExceptionTest.testRealException":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":249,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":199,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":315,"org.easymock.tests2.NameTest.nameForStrictMock":26,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":40,"org.easymock.tests2.UsageConstraintsTest.testContains":177,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":195,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":123,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":149,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":280,"org.easymock.tests.UsageExpectAndReturnTest.object":98,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":164,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":237,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":338,"org.easymock.tests.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests2.CaptureTest.testCaptureRightOne":211,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":352,"org.easymock.tests2.UsageConstraintsTest.testOr":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageRangeTest.combination":108,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":104,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":225,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":7,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":101,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":311,"org.easymock.tests.UsageVarargTest.varargShortAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":316,"org.easymock.tests2.UsageConstraintsTest.cmpTo":176,"org.easymock.tests.UsageVarargTest.varargCharAccepted":236,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":14,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":63,"org.easymock.tests2.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests.DefaultClassInstantiatorTest.object":333,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":310,"org.easymock.tests2.CaptureTest.testCaptureFromStub":300,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":341,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":42,"org.easymock.tests.UsageTest.unexpectedCallWithArray":332,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":67,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":217,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":102,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":360,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests2.UsageConstraintsTest.constraints":167,"org.easymock.samples.ExampleTest.addAndChangeDocument":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":250,"org.easymock.tests.UsageStrictMockTest.testVerify":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":303,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":359,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":327,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":299,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":35,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":115,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158}}]
