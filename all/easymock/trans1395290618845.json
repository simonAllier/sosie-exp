[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[7,8],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[9,10,11,12],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[41,42,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.RecordState:136","failures":[44,44,45,45,28,46,47,48,49,50,51,52,53,54,55,56,21,57,58,59,34,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,27],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[75,76,77,78,0,79,1,80,2,81,3,82,83,84,4,5,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[86,87,88,89,90,50,52,91,92,22,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,11,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,41,138,139,140,141,142,8,143,144,145,146],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[9,10,11,12],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[147],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[44,44,45,45,148,149,93,94,150,151,152,153,154,155,156,157,158,159,160,95,96,161,97,98,99,162,163,100,164,101,102,165,166,103,104,105,167,106,107,168,169,170,28,171,172,173,174,175,176,177,178,179,86,180,87,181,182,183,184,185,186,187,88,46,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,29,206,75,76,207,208,30,31,209,77,78,210,32,211,212,14,213,214,215,216,217,218,15,219,220,221,222,223,224,225,226,227,228,229,230,231,16,232,233,234,108,235,236,109,237,238,239,110,111,240,241,33,242,243,244,245,246,9,10,11,247,248,249,250,251,252,253,254,255,256,257,258,112,259,260,113,261,114,262,115,116,263,264,117,265,266,118,267,268,119,120,269,270,121,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,47,48,89,90,288,49,50,51,52,91,17,92,18,289,53,19,54,55,20,56,21,22,23,24,290,25,57,58,59,291,292,293,294,295,296,297,298,299,300,301,302,303,304,122,123,124,305,306,307,308,309,310,125,311,312,2,34,313,314,315,316,317,60,61,318,319,62,63,64,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,35,81,3,82,36,37,83,84,38,374,375,376,377,378,379,380,381,382,383,384,126,127,128,129,130,131,132,133,26,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,6,410,411,412,413,414,415,416,417,418,419,134,135,136,137,41,138,139,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,39,437,40,438,439,440,441,442,443,444,445,65,66,67,68,69,70,71,72,73,74,140,7,141,142,446,8,447,448,449,450,451,452,453,454,455,143,144,145,146,456,457,13,458,459,460,27,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[44,45,164,482,483,484,230,485,486,487,488,489,233,234,9],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[28,171,172,173,176,177,178,179,180,87,182,183,184,185,186,189,29,75,76,30,31,77,78,32,33,245,274,276,279,50,18,20,57,2,34,313,314,315,61,62,35,81,82,36,37,83,84,38,413,432,436,39,437,40,440,454],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[490,17,54,59],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[148,149,93,94,150,151,152,153,154,155,157,158,159,160,95,96,161,97,98,99,100,166,107,170,28,171,172,173,174,86,180,87,181,182,183,184,185,186,187,88,188,189,195,29,206,75,76,207,208,30,31,77,78,210,32,211,212,14,213,214,215,216,218,15,219,220,221,226,228,229,233,108,235,236,109,237,238,239,33,244,245,9,10,11,252,113,262,268,271,274,275,276,278,279,280,282,283,284,285,286,287,47,48,89,90,49,50,51,52,91,17,18,289,53,19,54,55,20,56,21,22,23,24,290,25,57,58,59,293,294,295,297,298,300,301,303,305,306,308,312,2,34,313,314,315,316,60,61,318,319,62,63,64,334,335,336,337,339,340,342,343,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,35,81,82,36,37,83,84,38,26,386,387,411,412,413,421,422,423,425,426,428,429,430,431,432,436,39,437,40,438,439,440,441,442,443,444,445,70,71,72,73,74,140,141,142,454,145,27,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[149,160,190,191,192,193,194,195,196,197,198,199,200,201,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[172,76,77,78,304,2,314,3,82,83,84,492,436,437,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[44,44,45,45,148,149,93,94,150,151,152,153,154,155,156,157,158,159,160,95,96,161,97,98,99,162,100,28,86,180,87,181,182,183,184,185,186,187,88,46,188,189,493,287,47,48,89,90,49,50,51,52,91,17,92,18,289,53,19,54,55,20,56,21,22,23,24,290,25,57,58,59,293,294,295,297,2,34,60,61,318,319,62,63,64,432,436,70,71,72,73,74,454,27,461],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[44,45,148,149,93,94,150,151,152,153,154,155,157,158,159,160,95,96,161,97,98,99,162,100,102,165,166,103,167,106,107,168,169,170,28,171,172,173,174,86,180,87,181,182,183,184,185,186,187,88,46,188,189,195,202,203,204,205,29,206,75,76,207,208,30,31,209,77,78,210,32,211,212,14,213,214,215,216,217,218,15,219,220,221,222,223,226,227,228,229,231,16,232,233,108,235,236,109,237,238,239,33,244,245,246,9,10,11,252,113,262,268,271,274,275,276,278,279,280,282,283,284,285,286,287,47,48,89,90,49,50,51,52,91,17,18,289,53,19,54,55,20,56,21,22,23,24,290,25,57,58,59,293,294,295,297,298,300,301,304,305,306,308,311,312,2,34,313,314,315,316,60,61,318,319,62,63,64,334,335,336,337,338,339,340,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,35,81,3,82,36,37,83,84,38,381,382,383,384,26,386,387,411,412,413,421,422,423,425,426,427,428,429,430,431,432,436,39,437,40,438,439,440,441,442,443,444,445,65,66,67,68,69,70,71,72,73,74,140,141,142,450,451,452,453,454,455,145,27,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[165,105,223,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.ConstructorArgs:54","failures":[44,45,482,483,484,230,485,486,233,234,236,239,494,495,496,9,112,259,260,113,261,114,262,115,116,263,264,117,265,266,118,267,268,119,120,269,270,121,271,272,273],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[497,47,56,25],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[482,483,484,485,486,234,498,236,239,494,495,496,499,500,501,502,503,504],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[172,76,77,78,304,2,314,3,82,83,84,492,436,437,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[345],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","candidateMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":90,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.UsageTest.argumentsOrdered":78,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":398,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":208,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":149,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":451,"org.easymock.tests.MockingTest.testPartialClassMocking":305,"org.easymock.tests.MockClassControlTest.testToString":128,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":175,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":354,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":294,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":60,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":383,"org.easymock.samples.ExampleTest.answerVsDelegate":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":377,"org.easymock.tests2.UsageConstraintsTest.testNull":50,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":97,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":133,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":15,"org.easymock.tests2.CaptureTest.testPrimitive":181,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":62,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":373,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":67,"org.easymock.tests.UsageTest.argumentsOrdered":84,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":341,"org.easymock.tests.UsageVarargTest.varargIntAccepted":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":70,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":74,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests.ReplayStateInvalidUsageTest.times":328,"org.easymock.tests2.DependencyTest.testClassMocking":291,"org.easymock.tests2.AnswerTest.answer":33,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":405,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":205,"org.easymock.tests2.CaptureTest.testAnd":86,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests2.DelegateToTest.testDelegate":282,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":369,"org.easymock.tests.LimitationsTest.mockFinalMethod":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":454,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests2.DependencyTest.testClassMockingSupport":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":346,"org.easymock.tests2.CaptureTest.testCapture1_2446744":182,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":203,"org.easymock.tests.UsageThrowableTest.throwError":438,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":322,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":376,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":69,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":487,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":273,"org.easymock.samples.PartialClassMockTest.testGetArea":148,"org.easymock.tests.MockingTest.testInterfaceMocking":307,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":323,"org.easymock.tests2.CompareToTest.testLessOrEqual":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":457,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":117,"org.easymock.tests2.UsageTest.niceToStrict":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":226,"org.easymock.tests2.MockBuilderTest.testCreateMock":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":198,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":363,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":435,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":501,"org.easymock.tests.UsageOverloadedMethodTest.overloading":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":267,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":54,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":473,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":411,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":42,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":19,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":187,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":424,"org.easymock.tests.MockClassControlTest.testEquals":132,"org.easymock.tests2.EasyMockSupportClassTest.testAll":113,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":142,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":371,"org.easymock.tests2.CaptureTest.testCaptureAll":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests.MockNameTest.defaultName":420,"org.easymock.tests2.UsageConstraintsTest.testMatches":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.samples.ExampleTest.voteForRemovals":155,"org.easymock.tests.UsageVarargTest.allKinds":432,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":39,"org.easymock.samples.BasicClassMockTest.testPrintContent":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":444,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":254,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":281,"org.easymock.tests2.UsageConstraintsTest.greaterThan":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":385,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":103,"org.easymock.samples.ExampleTest.voteForRemoval":152,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":139,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":104,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":284,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":147,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":378,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":162,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":14,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":450,"org.easymock.tests2.CaptureTest.testCaptureFirst":189,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":213,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":469,"org.easymock.tests2.CaptureTest.testCapture2_2446744":188,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":16,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":431,"org.easymock.tests.GenericTest.testBridgedEquals":8,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":502,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":499,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":339,"org.easymock.tests.UsageExpectAndReturnTest.longType":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":372,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":290,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":370,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":459,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":65,"org.easymock.tests.UsageCallCountTest.tooManyCalls":340,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":359,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":443,"org.easymock.tests.MockingTest.testNiceClassMocking":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":235,"org.easymock.tests.MockingTest.testClassMocking":123,"org.easymock.tests2.UsageConstraintsTest.testContains":53,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":333,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":107,"org.easymock.tests2.UsageConstraintsTest.testFind":49,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":413,"org.easymock.tests.MockTypeTest.fromEasyMockClass":375,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":297,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":311,"org.easymock.tests.UsageExpectAndReturnTest.object":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":218,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":426,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":417,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":503,"org.easymock.tests.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":342,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":234,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":478,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":421,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":300,"org.easymock.tests.MockClassControlTest.testHashCode":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":248,"org.easymock.tests2.EasyMockSupportTest.testVerify":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":266,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":434,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":202,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":493,"org.easymock.tests.UsageVarargTest.varargCharAccepted":425,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastCall":30,"org.easymock.tests.DefaultClassInstantiatorTest.object":134,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":433,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":415,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":361,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":441,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":165,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":479,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":458,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":271,"org.easymock.tests2.UsageTest.resumeIfFailure":210,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":453,"org.easymock.tests2.StubTest.stubWithReturnValue":276,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":471,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":25,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":404,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":489,"org.easymock.samples.SupportTest.voteForRemovals":159,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":366,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":6,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":242,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":449,"org.easymock.tests.UsageExpectAndThrowTest.object":364,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":23,"org.easymock.tests2.DelegateToTest.testWrongClass":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":63,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":64,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":314,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":240,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":108,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":365,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":112,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":382,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":13,"org.easymock.tests.UsageUnorderedTest.message":436,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests.UsageVarargTest.varargByteAccepted":430,"org.easymock.tests2.ThreadingTest.testThreadSafe":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":119,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":337,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":418,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":93,"org.easymock.tests2.CaptureTest.testCapture_2617107":87,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":319,"org.easymock.tests2.UsageConstraintsTest.any":18,"org.easymock.tests2.StubTest.stub":275,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndThrowTest.longType":357,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":41,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":326,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":252,"org.easymock.tests.LimitationsTest.mockNativeMethod":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":481,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":446,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":192,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":179,"org.easymock.tests2.MockedExceptionTest.testMockedException":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":114,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":296,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":358,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":229,"org.easymock.tests.MockingTest.testNicePartialClassMocking":306,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":99,"org.easymock.tests2.CompareToTest.testCompareEqual":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":190,"org.easymock.tests2.CaptureTest.testCaptureLast":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":347,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":239,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":24,"org.easymock.tests.MockingTest.testTwoMocks":124,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":494,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":362,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":58,"org.easymock.samples.ExampleTest.removeNonExistingDocument":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":197,"org.easymock.tests.UsageStrictMockTest.differentMethods":315,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":249,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":136,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":285,"org.easymock.tests2.MockBuilderTest.testCreateMockString":232,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":115,"org.easymock.tests.UsageExpectAndThrowTest.floatType":356,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests.UsageVerifyTest.twoThrows":437,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":268,"org.easymock.samples.ExampleTest.voteAgainstRemoval":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":166,"org.easymock.tests.LimitationsTest.privateConstructor":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":496,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":445,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":167,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":400,"org.easymock.tests.UsageVarargTest.differentLength":427,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":191,"org.easymock.tests2.CallbackTest.callback":274,"org.easymock.tests2.UsageConstraintsTest.equals":288,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":164,"org.easymock.tests.UsageTest.openCallCountByLastCall":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":318,"org.easymock.tests.UsageCallCountTest.tooFewCalls":335,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":384,"org.easymock.tests.UsageThrowableTest.throwCheckedException":442,"org.easymock.tests.MockingTest.testStrictClassMocking":122,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":461,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":196,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":237,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests2.CompareToTest.testGreateOrEqual":490,"org.easymock.tests.ObjectMethodsTest.testHashCode":416,"org.easymock.tests2.NameTest.nameForNiceMock":178,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":287,"org.easymock.tests2.DependencyTest.testInterfaceMocking":293,"org.easymock.samples.ExampleTest.addDocument":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.DelegateToTest.testStubDelegate":279,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests.UsageVarargTest.varargLongAccepted":429,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":480,"org.easymock.tests.UsageExpectAndReturnTest.floatType":464,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":233,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":439,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":256,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":463,"org.easymock.tests2.UsageConstraintsTest.testSame":51,"org.easymock.samples.SupportTest.addDocument":158,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":116,"org.easymock.tests.GenericTest.testPackageScope":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":255,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":309,"org.easymock.tests2.NameTest.nameForMock":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":474,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":486,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":101,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":466,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":368,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":387,"org.easymock.tests2.MockedExceptionTest.testRealException":168,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":401,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":331,"org.easymock.tests2.NameTest.nameForStrictMock":177,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":498,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":295,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":98,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":111,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":137,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":223,"org.easymock.tests2.UsageStrictMockTest.range":172,"org.easymock.tests2.UsageConstraintsTest.lessThan":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":212,"org.easymock.tests2.CaptureTest.testCaptureRightOne":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":265,"org.easymock.tests2.UsageConstraintsTest.testOr":52,"org.easymock.tests.UsageRangeTest.combination":26,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.UsageTest.wrongArguments":82,"org.easymock.tests2.MockBuilderTest.testWithConstructor":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":263,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":428,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":138,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":338,"org.easymock.tests2.UsageConstraintsTest.cmpTo":289,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":391,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":321,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":224,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":336,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":485,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":476,"org.easymock.tests2.UsageConstraintsTest.constraints":89,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.samples.ExampleTest.addAndChangeDocument":157,"org.easymock.tests.UsageStrictMockTest.testVerify":317,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":160,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":468,"org.easymock.tests.LimitationsTest.abstractClass":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":73,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":216}}]
