[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[4,5,6,3],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[8,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,0,1,39,40,41,42,43,44,45,46,47,48,49,50,4,51,52,53,10,54,55,56,57,58,59,60,61,62,6,63,64,65,3,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[60,263,264,265,266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[267,268,269,18,270,271,272,273,274,35,39,106,275,276,277,278,279,107,108,280,281,282,283,284,285,109,286,110,287,288,289,120,290,291,292,293,294],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[296,297,298,299,300,301,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:315","failures":[19,26,34,35,36,37,38,138,139,144,150,151,185,189,190,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,304,237,238,239,240,241,242],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[48,49,50,4,51,52,53,10,5,54,6,63,3,66,83,84,85,86,93,94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[268,269,275,286,288],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[305,83,85,86,87,88,89,90,92,306,93,94,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.Range:36","failures":[11,12,13,14,15,16,307,17,308,309,310,311,312,267,268,269,313,18,270,271,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,314,315,316,317,318,319,272,320,321,322,323,324,325,326,327,328,273,329,330,331,332,333,274,334,335,35,36,37,38,0,336,1,39,40,41,337,338,339,340,341,342,343,344,345,346,347,348,349,350,42,43,44,351,45,46,47,48,49,352,50,4,51,52,53,10,5,54,55,56,57,58,59,60,61,62,6,63,64,2,65,3,66,67,68,69,70,71,72,73,74,353,75,76,77,78,79,354,355,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,356,357,358,359,360,361,362,363,364,365,366,367,368,102,103,369,370,371,104,105,372,106,275,276,277,278,279,107,108,280,281,282,283,284,285,109,286,110,373,374,111,375,376,377,378,379,380,381,382,112,113,114,115,116,117,287,383,118,288,384,119,289,120,385,386,290,387,388,389,390,391,392,393,394,395,396,397,398,121,122,123,124,125,126,399,400,127,401,128,129,130,131,402,403,404,132,133,134,135,136,405,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,406,407,408,154,155,409,156,410,411,412,157,158,291,159,160,292,413,414,161,415,296,416,417,418,297,298,419,420,421,422,423,424,425,426,299,427,428,429,430,300,431,432,433,434,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,301,435,436,437,182,438,439,440,441,442,443,444,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,445,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,293,446,447,448,449,294,450,451,452,453,454,218,219,220,221,222,223,455,456,457,224,225,226,227,228,229,230,231,232,458,459,460,304,461,233,462,234,235,236,463,464,465,466,467,468,469,470,471,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,472,473,474,303,475,476,302,477,478,479,480,481,252,253,254,482,255,256,483,257,258,259,260,261,484,485,486,487,488,489,490,262,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[60,2,84,85,87,88,89,90,91,96],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[48,49,52,53,5,6,83,85,93],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[415],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[153,498],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"failures":[106,110],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,295],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[263,264,141,501,265,226],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[263,264,141,501,265,226],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[54,196],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[419],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[385],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[453,454,473,474],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[19,26,34,35,36,37,38,138,139,144,150,151,183,185,186,187,188,189,190,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,304,235,237,238,239,240,241,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[291],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":49,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.UsageTest.argumentsOrdered":29,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":423,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":24,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":310,"org.easymock.tests2.DelegateToTest.testReturnException":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":238,"org.easymock.tests.MockingTest.testPartialClassMocking":154,"org.easymock.tests.MockClassControlTest.testToString":491,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":323,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":198,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":272,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":148,"org.easymock.tests2.UsageTest.wrongArguments":22,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":130,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":294,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":411,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":496,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":346,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":152,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":477,"org.easymock.tests.UsageTest.argumentsOrdered":146,"org.easymock.tests.UsageVarargTest.varargIntAccepted":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":243,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":366,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":378,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":247,"org.easymock.tests.ReplayStateInvalidUsageTest.times":441,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":392,"org.easymock.tests2.DependencyTest.testClassMocking":373,"org.easymock.tests2.AnswerTest.answer":79,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":100,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":447,"org.easymock.tests2.CaptureTest.testAnd":83,"org.easymock.tests2.UsageTest.strictResetToDefault":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":341,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":481,"org.easymock.tests2.DelegateToTest.testDelegate":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests.LimitationsTest.mockFinalMethod":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":136,"org.easymock.tests2.DependencyTest.testClassMockingSupport":374,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":414,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":98,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":436,"org.easymock.tests.UsageThrowableTest.throwError":183,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":449,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":497,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":335,"org.easymock.samples.PartialClassMockTest.testGetArea":267,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":437,"org.easymock.tests.MockingTest.testInterfaceMocking":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":475,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":489,"org.easymock.tests2.UsageTest.niceToStrict":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":324,"org.easymock.tests2.ThreadingTest.testChangeDefault":9,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.MockBuilderTest.testCreateMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":207,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":263,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":454,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":128,"org.easymock.tests.UsageOverloadedMethodTest.overloading":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":58,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":304,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":57,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":482,"org.easymock.tests.MockClassControlTest.testEquals":495,"org.easymock.tests2.EasyMockSupportClassTest.testAll":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":99,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests.MockNameTest.defaultName":445,"org.easymock.tests2.UsageConstraintsTest.testMatches":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":194,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":301,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests.UsageVarargTest.allKinds":261,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":135,"org.easymock.samples.BasicClassMockTest.testPrintContent":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":189,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":242,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":363,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":470,"org.easymock.tests2.UsageConstraintsTest.greaterThan":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":318,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":385,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":471,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":386,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":379,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":287,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":126,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":339,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":237,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":340,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":169,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":124,"org.easymock.tests2.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.CaptureTest.testCapture2_2446744":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":109,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":260,"org.easymock.tests.GenericTest.testBridgedEquals":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":456,"org.easymock.tests.UsageExpectAndReturnTest.longType":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":132,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":337,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":2,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":191,"org.easymock.tests.UsageCallCountTest.tooManyCalls":457,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":188,"org.easymock.tests.MockingTest.testNiceClassMocking":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":102,"org.easymock.tests.MockingTest.testClassMocking":407,"org.easymock.tests2.UsageConstraintsTest.testContains":56,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":219,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":37,"org.easymock.tests2.UsageConstraintsTest.testFind":50,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":138,"org.easymock.tests.MockTypeTest.fromEasyMockClass":448,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":1,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":224,"org.easymock.tests.UsageExpectAndReturnTest.object":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":345,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":256,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":487,"org.easymock.tests.UsageTest.exactCallCountByLastCall":147,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":478,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":402,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":270,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":178,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":252,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":460,"org.easymock.tests.MockClassControlTest.testHashCode":494,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":326,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":479,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":458,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":97,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":32,"org.easymock.tests.UsageVarargTest.varargCharAccepted":255,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":463,"org.easymock.tests2.CaptureTest.testCaptureMultiple":305,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastCall":25,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":499,"org.easymock.tests.DefaultClassInstantiatorTest.object":464,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":452,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":493,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":472,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":274,"org.easymock.tests2.UsageTest.resumeIfFailure":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":240,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":171,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":428,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":264,"org.easymock.samples.SupportTest.voteForRemovals":309,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":210,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":433,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":354,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":404,"org.easymock.tests.UsageExpectAndThrowTest.object":208,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":63,"org.easymock.tests2.DelegateToTest.testWrongClass":44,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":158,"org.easymock.tests.UsageStrictMockTest.range":229,"org.easymock.samples.ConstructorCalledMockTest.testTax":268,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":381,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":280,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":443,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":129,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":476,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests.UsageUnorderedTest.message":153,"org.easymock.tests.UsageVerifyTest.twoReturns":236,"org.easymock.tests.UsageVarargTest.varargByteAccepted":259,"org.easymock.tests2.ThreadingTest.testThreadSafe":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":329,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":223,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":488,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":311,"org.easymock.tests2.CaptureTest.testCapture_2617107":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":151,"org.easymock.tests2.UsageConstraintsTest.any":54,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":440,"org.easymock.tests2.StubTest.stub":33,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndThrowTest.longType":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":239,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":468,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":439,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":361,"org.easymock.tests.LimitationsTest.mockNativeMethod":127,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":181,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":292,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":74,"org.easymock.tests2.NameTest.nameForMocksControl":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":319,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":202,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":336,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":282,"org.easymock.tests.MockingTest.testNicePartialClassMocking":155,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests2.CaptureTest.testCaptureLast":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":64,"org.easymock.tests.MockingTest.testTwoMocks":408,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":66,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":8,"org.easymock.samples.ExampleTest.removeNonExistingDocument":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":182,"org.easymock.tests.UsageStrictMockTest.differentMethods":230,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":466,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":110,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":490,"org.easymock.tests.UsageExpectAndThrowTest.floatType":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":320,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":80,"org.easymock.tests.UsageVerifyTest.twoThrows":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":271,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":273,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests.LimitationsTest.privateConstructor":400,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":190,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":35,"org.easymock.tests2.UsageTest.defaultResetToNice":27,"org.easymock.samples.ExampleTest.voteAgainstRemovals":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":177,"org.easymock.tests.UsageVarargTest.differentLength":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests2.CallbackTest.callback":101,"org.easymock.tests2.UsageConstraintsTest.equals":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":288,"org.easymock.tests.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":150,"org.easymock.tests.UsageCallCountTest.tooFewCalls":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":131,"org.easymock.tests.UsageThrowableTest.throwCheckedException":187,"org.easymock.tests.MockingTest.testStrictClassMocking":406,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":265,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":442,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":371,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":82,"org.easymock.tests.ObjectMethodsTest.testHashCode":486,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":125,"org.easymock.tests2.NameTest.nameForNiceMock":77,"org.easymock.tests2.DependencyTest.testInterfaceMocking":111,"org.easymock.samples.ExampleTest.addDocument":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":330,"org.easymock.tests2.DelegateToTest.testStubDelegate":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.AnswerTest.stubAnswer":81,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":227,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":283,"org.easymock.tests.UsageVarargTest.varargLongAccepted":258,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":180,"org.easymock.tests.UsageExpectAndReturnTest.floatType":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":269,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageThrowableTest.noUpperLimit":184,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":365,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":47,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":376,"org.easymock.tests2.SerializationTest.test":40,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":163,"org.easymock.tests2.UsageConstraintsTest.testSame":51,"org.easymock.samples.SupportTest.addDocument":308,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":370,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":321,"org.easymock.tests.GenericTest.testPackageScope":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":364,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":410,"org.easymock.tests2.NameTest.nameForMock":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":174,"org.easymock.tests2.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":212,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":251,"org.easymock.tests2.MockedExceptionTest.testRealException":38,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":149,"org.easymock.tests2.NameTest.nameForStrictMock":76,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":500,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":380,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":467,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":276,"org.easymock.tests2.UsageStrictMockTest.range":72,"org.easymock.tests2.UsageConstraintsTest.lessThan":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":338,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":325,"org.easymock.tests2.UsageConstraintsTest.testOr":52,"org.easymock.tests.UsageRangeTest.combination":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageTest.wrongArguments":142,"org.easymock.tests2.MockBuilderTest.testWithConstructor":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":322,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":175,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":469,"org.easymock.tests.UsageVarargTest.varargShortAccepted":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":455,"org.easymock.tests2.UsageConstraintsTest.cmpTo":55,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":26,"org.easymock.tests2.CaptureTest.testCaptureFromStub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":435,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":277,"org.easymock.tests.UsageTest.unexpectedCallWithArray":141,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":226,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":222,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":176,"org.easymock.tests2.CaptureTest.testCapture":306,"org.easymock.tests2.UsageConstraintsTest.constraints":48,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":228,"org.easymock.samples.ExampleTest.addAndChangeDocument":17,"org.easymock.tests.UsageStrictMockTest.testVerify":232,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":313,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":133,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":245,"org.easymock.tests.LimitationsTest.abstractClass":399,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":168,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":246,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":343}}]
