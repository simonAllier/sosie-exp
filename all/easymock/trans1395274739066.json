[{"position":"org.easymock.internal.ReflectionUtils:161","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[21],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[23,24,25,26,27,28,29,30,31,32,33],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,23,55,56,57,58,59,60,25,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,26,27,89,28,90,29,30,91,92,93,94,95,96,97,98,99,100,32,101,102,103,33,104,105,106,107,108,109,110,4,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,13,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,152,153,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,35,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:773","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[91],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[280,281,282,283,284,285,286,36,37,38,39,40,41,42,287,43,288,289,290,291,292,293,294,44,295,45,46,296,297,298,299,47,300,301,48,302,303,304,305,306,307,308,309,310,49,311,312,313,314,315,50,316,317,51,52,53,54,318,319,320,321,322,23,55,24,56,57,323,324,58,59,60,25,61,62,63,325,326,64,65,327,328,329,330,331,66,332,333,334,335,336,337,67,68,69,70,71,72,338,339,73,340,341,342,74,75,76,343,344,345,346,347,348,349,77,350,351,352,353,354,355,78,79,80,356,81,357,82,83,84,358,359,85,86,87,88,26,27,360,89,28,90,29,30,91,31,92,93,94,95,96,97,98,99,100,32,101,102,361,103,33,104,105,362,363,106,364,365,366,107,367,108,0,109,368,1,369,110,370,371,4,5,372,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,373,128,13,129,374,130,131,132,133,134,135,136,137,138,139,140,141,375,142,143,144,376,145,377,378,379,146,147,148,149,380,150,381,151,152,153,382,154,383,384,385,386,387,155,156,388,157,389,390,391,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,198,408,34,409,410,411,199,412,413,414,16,200,415,201,202,416,417,418,419,420,421,422,423,203,204,205,206,207,424,208,425,209,210,426,211,427,212,428,213,214,215,429,430,216,431,432,433,434,435,436,217,218,219,437,438,220,439,221,222,223,224,225,226,227,228,229,230,17,440,231,232,441,442,233,443,444,445,446,234,235,35,236,237,238,239,240,241,242,243,244,245,246,447,448,449,450,451,452,453,454,247,248,249,250,455,456,457,458,459,460,461,462,463,251,252,253,254,464,465,466,467,468,469,470,471,255,472,473,474,22,475,256,476,477,478,479,480,481,257,258,259,260,261,262,263,264,265,482,266,267,483,268,484,485,269,270,271,272,273,486,487,488,489,490,491,492,493,494,495,496,497,274,275,276,277,278,279,498,499,500,501,502],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[13,129,374,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[13,129,374,503],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:42","sourceCode":"return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[13,129,374,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[342,156],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.LastControl:95","failures":[23,24,25,26,27,28,29,30,31,32,33],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[504,99],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[505,96,102,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:134","failures":[506,507],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[508,339,509],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[328,329,331,333,334,337,346,347,349,351,352,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[28,361,114,497],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[131,133,134,135,147,394,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[36,39,40,41,42,43,293,44,295,45,46,296,48,49,50,53,23,55,24,56,57,323,324,60,25,64,65,66,67,69,70,72,77,78,79,80,356,81,357,82,83,358,359,86,87,88,26,27,89,28,90,29,30,91,92,93,94,95,96,97,98,99,100,32,101,102,103,33,104,105,107,108,109,110,4,111,113,114,115,116,118,119,120,121,124,126,127,128,13,129,131,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,413,16,200,415,201,202,416,209,210,218,219,220,221,223,224,225,226,227,228,229,230,440,231,232,441,442,233,235,35,247,249,250,257,258,259,260,261,263,264,268,269,270,271,272,273,274,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[211,212,428],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[51,52,53,54,78,83,137,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,219,221,223,224,225,226,227,228,229,232,241,242,243,244,245,246,258,262,263,267,276],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[327,328,329,331,332,333,334,337,345,346,347,349,350,351,352,355,377,383],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.UsageTest.argumentsOrdered":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":402,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":357,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":383,"org.easymock.tests2.DelegateToTest.testReturnException":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":242,"org.easymock.tests.MockingTest.testPartialClassMocking":155,"org.easymock.tests.MockClassControlTest.testToString":449,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":288,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":178,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":48,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":260,"org.easymock.tests2.UsageTest.wrongArguments":356,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":445,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":469,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":390,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":70,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.CaptureTest.testPrimitive":56,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":197,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":205,"org.easymock.tests.UsageTest.argumentsOrdered":442,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":234,"org.easymock.tests.UsageVarargTest.varargIntAccepted":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":11,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":273,"org.easymock.tests.ReplayStateInvalidUsageTest.times":478,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests2.DependencyTest.testClassMocking":325,"org.easymock.tests2.AnswerTest.answer":36,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":321,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":466,"org.easymock.tests2.CaptureTest.testAnd":23,"org.easymock.tests2.UsageTest.strictResetToDefault":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":342,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":249,"org.easymock.tests2.DelegateToTest.testDelegate":135,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":193,"org.easymock.tests.LimitationsTest.mockFinalMethod":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":502,"org.easymock.tests2.DependencyTest.testClassMockingSupport":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":424,"org.easymock.tests2.CaptureTest.testCapture1_2446744":57,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":319,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":474,"org.easymock.tests.UsageThrowableTest.throwError":221,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":468,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":485,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":317,"org.easymock.samples.PartialClassMockTest.testGetArea":145,"org.easymock.tests.MockingTest.testInterfaceMocking":388,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":278,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":423,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":179,"org.easymock.tests2.UsageTest.niceToStrict":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":306,"org.easymock.tests2.ThreadingTest.testChangeDefault":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.MockBuilderTest.testCreateMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":313,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":187,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":14,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":465,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":443,"org.easymock.tests.UsageOverloadedMethodTest.overloading":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":315,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":96,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":217,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":489,"org.easymock.tests.MockClassControlTest.testEquals":453,"org.easymock.tests2.EasyMockSupportClassTest.testAll":47,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":427,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":500,"org.easymock.tests2.CaptureTest.testCaptureAll":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":320,"org.easymock.tests.MockNameTest.defaultName":384,"org.easymock.tests2.UsageConstraintsTest.testMatches":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":472,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":206,"org.easymock.samples.ExampleTest.voteForRemovals":150,"org.easymock.tests.UsageVarargTest.allKinds":497,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":501,"org.easymock.samples.BasicClassMockTest.testPrintContent":379,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":227,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":462,"org.easymock.tests2.UsageConstraintsTest.greaterThan":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":463,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":343,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":338,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":78,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":255,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":241,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":130,"org.easymock.tests2.CaptureTest.testCaptureFirst":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":114,"org.easymock.tests2.CaptureTest.testCapture2_2446744":62,"org.easymock.tests2.UsageTest.moreThanOneArgument":80,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":496,"org.easymock.tests.GenericTest.testBridgedEquals":428,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":435,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":20,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":498,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":196,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":254,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":214,"org.easymock.tests.UsageCallCountTest.tooManyCalls":436,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":226,"org.easymock.tests.MockingTest.testNiceClassMocking":391,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":139,"org.easymock.tests.MockingTest.testClassMocking":386,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":430,"org.easymock.tests2.UsageConstraintsTest.testContains":94,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":219,"org.easymock.tests.MockTypeTest.fromEasyMockClass":467,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":413,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":43,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":491,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":421,"org.easymock.tests.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":235,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests.MockClassControlTest.testHashCode":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests2.EasyMockSupportTest.testVerify":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":308,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":318,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":322,"org.easymock.tests.UsageVarargTest.varargCharAccepted":490,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":455,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastCall":82,"org.easymock.tests.DefaultClassInstantiatorTest.object":456,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":251,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":419,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":327,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":451,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":184,"org.easymock.tests.CapturesMatcherTest.test":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":213,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests2.UsageTest.resumeIfFailure":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":244,"org.easymock.tests2.StubTest.stubWithReturnValue":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests2.SerializationTest.testAllMockedMethod":374,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":3,"org.easymock.samples.SupportTest.voteForRemovals":154,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":190,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":503,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":199,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":37,"org.easymock.tests.UsageExpectAndThrowTest.object":188,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":240,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DelegateToTest.testWrongClass":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":209,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":210,"org.easymock.samples.ConstructorCalledMockTest.testTax":152,"org.easymock.tests.UsageStrictMockTest.range":201,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":285,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":108,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":480,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":444,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":18,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":279,"org.easymock.tests.UsageUnorderedTest.message":274,"org.easymock.tests.UsageVerifyTest.twoReturns":259,"org.easymock.tests.UsageVarargTest.varargByteAccepted":495,"org.easymock.tests2.ThreadingTest.testThreadSafe":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":311,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":433,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":422,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":378,"org.easymock.tests2.CaptureTest.testCapture_2617107":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":263,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":477,"org.easymock.tests2.StubTest.stub":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndThrowTest.longType":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":460,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":476,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests.LimitationsTest.mockNativeMethod":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":347,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests2.NameTest.nameForMocksControl":292,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":301,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":182,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":157,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":287,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":67,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":109,"org.easymock.tests.MockingTest.testNicePartialClassMocking":156,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":6,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":208,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":144,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests.MockingTest.testTwoMocks":387,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":358,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":104,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":508,"org.easymock.samples.ExampleTest.removeNonExistingDocument":381,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":475,"org.easymock.tests.UsageStrictMockTest.differentMethods":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":458,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":113,"org.easymock.tests2.MockBuilderTest.testCreateMockString":371,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":447,"org.easymock.tests.UsageExpectAndThrowTest.floatType":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":302,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":39,"org.easymock.tests.UsageVerifyTest.twoThrows":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":372,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":49,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests.LimitationsTest.privateConstructor":438,"org.easymock.tests2.UsageConstraintsTest.testNotNull":33,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":228,"org.easymock.tests2.UsageTest.defaultResetToNice":84,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests.UsageVarargTest.differentLength":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":346,"org.easymock.tests2.CallbackTest.callback":128,"org.easymock.tests2.UsageConstraintsTest.equals":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":262,"org.easymock.tests.UsageCallCountTest.tooFewCalls":431,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":141,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":446,"org.easymock.tests.UsageThrowableTest.throwCheckedException":225,"org.easymock.tests.MockingTest.testStrictClassMocking":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":479,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":142,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":41,"org.easymock.tests.ObjectMethodsTest.testHashCode":420,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":115,"org.easymock.tests2.NameTest.nameForNiceMock":291,"org.easymock.tests2.DependencyTest.testInterfaceMocking":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.ExampleTest.addDocument":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":312,"org.easymock.tests2.DelegateToTest.testStubDelegate":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":316,"org.easymock.tests2.AnswerTest.stubAnswer":40,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":200,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":368,"org.easymock.tests.UsageVarargTest.varargLongAccepted":494,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":176,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":153,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":100,"org.easymock.tests.UsageThrowableTest.noUpperLimit":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":280,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":323,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.samples.SupportTest.addDocument":382,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":375,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":303,"org.easymock.tests.GenericTest.testPackageScope":211,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":389,"org.easymock.tests2.NameTest.nameForMock":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":370,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":192,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":250,"org.easymock.tests2.MockedExceptionTest.testRealException":54,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":286,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":481,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":261,"org.easymock.tests2.NameTest.nameForStrictMock":290,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":366,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":284,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":459,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":106,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":307,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":68,"org.easymock.tests.UsageTest.wrongArguments":440,"org.easymock.tests2.MockBuilderTest.testWithConstructor":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":304,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.UsageVarargTest.varargShortAccepted":493,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":461,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":434,"org.easymock.tests2.UsageConstraintsTest.cmpTo":93,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":38,"org.easymock.tests2.CompareToTest.testLessThan":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests2.CaptureTest.testCaptureFromStub":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":473,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests2.CaptureTest.testCapture":506,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":415,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.samples.ExampleTest.addAndChangeDocument":151,"org.easymock.tests.UsageStrictMockTest.testVerify":417,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":377,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":414,"org.easymock.tests2.CompareToTest.testGreateThan":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":499,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":271,"org.easymock.tests.LimitationsTest.abstractClass":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":272,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122}}]
