[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"position":"org.easymock.Capture:134","failures":[31,32],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[33,34,35,36,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,4,118,119,120],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[121,119,122,123,124,125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[126,127,128],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[129,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[131,132,133],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[134,135,136,137],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,138,51,52,139,53,7,8,9,10,11,12,13,14,15,16,17,18,140,141,142,143,144,145,146,147,148,149,150,151,152,19,20,21,22,23,24,25,26,27,28,29,30,131,153,132,154,155,156,157,158,159,160,161,162,163,164,165,166,54,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,55,56,190,191,192,193,57,194,58,195,196,197,198,199,200,201,202,203,204,205,59,60,61,62,206,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,207,208,209,210,211,212,213,214,215,216,217,218,87,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,88,89,90,91,92,93,94,95,96,97,98,99,100,101,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,102,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,134,135,136,279,280,281,282,283,284,285,286,287,288,289,103,104,105,106,107,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,108,340,341,342,3,343,344,345,346,347,348,109,110,111,112,113,349,350,351,352,353,354,355,356,357,358,129,359,360,361,130,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,114,409,410,411,412,413,414,415,416,417,418,419,420,115,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,133,470,471,472,473,474,475,476,477,478,479,480,481,482,121,483,484,485,486,487,488,489,490,491,492,493,494,116,117,495,496,4,118,497,498,499,500,501,119,120,502,503,122,504,123,505,506,507,508,509,510,511,512,513,514,515,516,517,124,125,518],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[33,47,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[61,62,64,66,67,69,79,84,88,90,98],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[134,135,136,137],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[134,135,136,137],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[129,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[34,35,36,37,46,140,519,141,142,0,143,144,145,146,520,147,149,150,151,521,152,157,158,159,160,163,164,167,170,190,191,192,211,212,214,215,216,217,87,219,220,221,222,223,224,225,226,233,234,522,235,236,238,240,241,242,243,244,246,247,248,249,251,252,253,254,255,256,257,134,136,282,287,324,325,326,327,328,357,358,129,359,360,361,130,362,385,386,387,388,389,391,394,433,434,435,436,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[131,132,133],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[427],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[12,13,140,141,142,146,147,150,151,152,24,25,158,159,163,164,166,175,177,178,179,180,184,185,186,187,202,203,204,205,61,76,212,221,224,226,260,102,262,263,264,265,267,269,271,272,274,275,282,285,286,287,288,289,331,334,335,341,342,3,343,346,347,348,363,365,366,369,370,371,379,382,383,384,404,409,410,411,412,115,437,438,489,490,491,495,4,118,497,498,499,500,518],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[129,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[129,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,139,53,12,140,141,144,145,146,147,150,151,152,24,153,132,154,156,157,158,159,160,162,163,164,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,55,56,190,191,192,193,57,58,195,198,199,200,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,207,208,209,210,211,212,213,214,215,216,217,87,221,222,223,224,233,88,89,90,91,92,93,94,95,96,97,98,99,100,101,238,241,251,257,260,261,102,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,134,135,136,103,104,105,106,107,290,291,292,293,294,320,321,322,323,325,326,336,337,338,339,108,340,32,32,341,342,3,343,344,345,346,347,348,109,110,111,112,113,349,350,351,352,353,354,355,356,357,365,366,367,368,369,370,371,375,376,377,378,380,381,384,388,389,391,398,399,400,402,403,404,405,406,407,408,114,409,410,411,412,414,415,115,435,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,121,483,484,485,486,116,117,495,496,4,118,497,498,499,500,119,120,502,503,122,504,123,505,506,507,508,509,510,511,512,513,514,515,516,517,124,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[523],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[12,140,145,146,147,151,152,24,175,178,179,180,183,184,185,187,61,207,208,209,210,217,221,260,262,263,264,268,270,271,273,274,290,291,292,293,294,320,321,322,323,341,3,343,346,347,348,410,411,115,495,4,497,498,499],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests2.UsageTest.argumentsOrdered":185,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":341,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":133,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":180,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":47,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":337,"org.easymock.tests.MockingTest.testPartialClassMocking":388,"org.easymock.tests.MockClassControlTest.testToString":489,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":201,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":440,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":241,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":56,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":316,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests2.UsageTest.wrongArguments":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":103,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":39,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":287,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":393,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":214,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":494,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":275,"org.easymock.tests2.CaptureTest.testPrimitive":91,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":459,"org.easymock.tests.UsageTest.moreThanOneArgument":342,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":484,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":416,"org.easymock.tests.UsageTest.argumentsOrdered":347,"org.easymock.tests.UsageVarargTest.varargIntAccepted":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":140,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":29,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":113,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":300,"org.easymock.tests.ReplayStateInvalidUsageTest.times":429,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":12,"org.easymock.tests2.DependencyTest.testClassMocking":188,"org.easymock.tests2.AnswerTest.answer":195,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":210,"org.easymock.tests2.CaptureTest.testAnd":88,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":284,"org.easymock.tests2.UsageTest.strictResetToDefault":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":270,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":420,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":455,"org.easymock.tests.LimitationsTest.mockFinalMethod":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":294,"org.easymock.tests2.DependencyTest.testClassMockingSupport":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":437,"org.easymock.tests2.CaptureTest.testCapture1_2446744":92,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":208,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":423,"org.easymock.tests.UsageThrowableTest.throwError":349,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":286,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":259,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":303,"org.easymock.samples.PartialClassMockTest.testGetArea":46,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":424,"org.easymock.tests.MockingTest.testInterfaceMocking":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":441,"org.easymock.tests2.UsageTest.niceToStrict":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":246,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":335,"org.easymock.tests2.ThreadingTest.testChangeDefault":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":126,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":144,"org.easymock.tests2.MockBuilderTest.testCreateMock":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":15,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":449,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageOverloadedMethodTest.overloading":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":256,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":74,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":381,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":511,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":375,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":97,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":401,"org.easymock.tests.MockClassControlTest.testEquals":493,"org.easymock.tests2.EasyMockSupportClassTest.testAll":238,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":457,"org.easymock.tests2.CaptureTest.testCaptureAll":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":292,"org.easymock.tests.MockNameTest.defaultName":518,"org.easymock.tests2.UsageConstraintsTest.testMatches":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":485,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":421,"org.easymock.samples.ExampleTest.voteForRemovals":43,"org.easymock.tests.UsageVarargTest.allKinds":114,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":409,"org.easymock.samples.BasicClassMockTest.testPrintContent":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":293,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":355,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":340,"org.easymock.tests2.UsageConstraintsTest.greaterThan":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":413,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":224,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":304,"org.easymock.samples.ExampleTest.voteForRemoval":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":362,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":51,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":217,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":296,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":175,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":357,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":268,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":336,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":131,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":269,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":507,"org.easymock.tests2.UsageTest.moreThanOneArgument":177,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":408,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":370,"org.easymock.tests.UsageExpectAndReturnTest.longType":504,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":458,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":82,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":121,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":371,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":508,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":445,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":354,"org.easymock.tests.MockingTest.testNiceClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests.MockingTest.testClassMocking":386,"org.easymock.tests2.UsageConstraintsTest.testContains":72,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":192,"org.easymock.tests2.UsageConstraintsTest.testFind":63,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":377,"org.easymock.tests.MockTypeTest.fromEasyMockClass":285,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":495,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":58,"org.easymock.tests.UsageExpectAndReturnTest.object":510,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":274,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":403,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests.UsageTest.exactCallCountByLastCall":348,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":417,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":234,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":516,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":398,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":380,"org.easymock.tests.MockClassControlTest.testHashCode":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":20,"org.easymock.tests2.EasyMockSupportTest.testVerify":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":248,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":418,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":207,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":54,"org.easymock.tests.UsageVarargTest.varargCharAccepted":402,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastCall":181,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":277,"org.easymock.tests.DefaultClassInstantiatorTest.object":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":372,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":352,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":10,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":19,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":491,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":222,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":446,"org.easymock.tests.CapturesMatcherTest.test":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":517,"org.easymock.tests.ReplayStateInvalidCallsTest.times":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":309,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":257,"org.easymock.tests2.UsageTest.resumeIfFailure":186,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":282,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":339,"org.easymock.tests2.StubTest.stubWithReturnValue":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":520,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":509,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":83,"org.easymock.tests2.SerializationTest.testAllMockedMethod":136,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":475,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.samples.SupportTest.voteForRemovals":49,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":452,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":137,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":481,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":196,"org.easymock.tests.UsageExpectAndThrowTest.object":450,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":319,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.DelegateToTest.testWrongClass":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":119,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":306,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":120,"org.easymock.tests.UsageStrictMockTest.range":498,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":171,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":523,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":451,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":235,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":5,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":298,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":397,"org.easymock.tests2.CaptureTest.testCaptureNone":96,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":228,"org.easymock.tests.UsageUnorderedTest.message":115,"org.easymock.tests.UsageVerifyTest.twoReturns":411,"org.easymock.tests.UsageVarargTest.varargByteAccepted":407,"org.easymock.tests2.ThreadingTest.testThreadSafe":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":252,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":368,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":34,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":106,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":428,"org.easymock.tests2.StubTest.stub":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndThrowTest.longType":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":427,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":262,"org.easymock.tests2.SerializationTest.testClass":134,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests.LimitationsTest.mockNativeMethod":435,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":125,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":9,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":314,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests2.NameTest.nameForMocksControl":205,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":229,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":240,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":444,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":391,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":211,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":147,"org.easymock.tests.MockingTest.testNicePartialClassMocking":389,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":7,"org.easymock.tests2.CaptureTest.testCaptureLast":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":438,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":164,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":313,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.MockingTest.testTwoMocks":387,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":310,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":502,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":448,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":184,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":85,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":232,"org.easymock.samples.ExampleTest.removeNonExistingDocument":44,"org.easymock.tests.UsageStrictMockTest.differentMethods":499,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":425,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":21,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":231,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":359,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":52,"org.easymock.tests2.MockBuilderTest.testCreateMockString":152,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":487,"org.easymock.tests.UsageExpectAndThrowTest.floatType":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":242,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":198,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":522,"org.easymock.tests.UsageVerifyTest.twoThrows":410,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":251,"org.easymock.samples.ExampleTest.voteAgainstRemoval":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":395,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":223,"org.easymock.tests.LimitationsTest.privateConstructor":434,"org.easymock.tests2.UsageConstraintsTest.testNotNull":84,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":356,"org.easymock.tests2.UsageTest.defaultResetToNice":183,"org.easymock.samples.ExampleTest.voteAgainstRemovals":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageVarargTest.differentLength":404,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":8,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests2.UsageConstraintsTest.equals":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":219,"org.easymock.tests.UsageTest.openCallCountByLastCall":344,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":105,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":230,"org.easymock.tests.UsageThrowableTest.throwCheckedException":353,"org.easymock.tests.MockingTest.testStrictClassMocking":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":163,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":13,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":430,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":162,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":200,"org.easymock.tests.ObjectMethodsTest.testHashCode":332,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":53,"org.easymock.tests2.NameTest.nameForNiceMock":204,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":312,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":307,"org.easymock.tests2.DependencyTest.testInterfaceMocking":55,"org.easymock.samples.ExampleTest.addDocument":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":253,"org.easymock.tests2.DelegateToTest.testStubDelegate":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":258,"org.easymock.tests2.AnswerTest.stubAnswer":199,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":118,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":148,"org.easymock.tests.UsageVarargTest.varargLongAccepted":406,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":124,"org.easymock.tests.UsageExpectAndReturnTest.floatType":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":233,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":28,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":78,"org.easymock.tests.UsageThrowableTest.noUpperLimit":350,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":167,"org.easymock.tests2.SerializationTest.test":135,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":93,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":503,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.samples.SupportTest.addDocument":48,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":161,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":297,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":243,"org.easymock.tests.GenericTest.testPackageScope":325,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":27,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":392,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":295,"org.easymock.tests2.NameTest.nameForMock":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":512,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":521,"org.easymock.tests2.UsageStrictMockTest.differentMethods":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":454,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":415,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":102,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":104,"org.easymock.tests2.NameTest.nameForStrictMock":203,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":128,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":170,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":79,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":141,"org.easymock.tests2.UsageStrictMockTest.range":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":301,"org.easymock.tests2.UsageConstraintsTest.lessThan":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":267,"org.easymock.tests2.CaptureTest.testCaptureRightOne":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":247,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":227,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":212,"org.easymock.tests.UsageTest.wrongArguments":343,"org.easymock.tests2.MockBuilderTest.testWithConstructor":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":244,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":488,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":505,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":461,"org.easymock.tests.UsageVarargTest.varargShortAccepted":405,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":130,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":369,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":315,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":197,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests2.CaptureTest.testCaptureFromStub":99,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":422,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":142,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":311,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":514,"org.easymock.tests2.CaptureTest.testCapture":31,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":497,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.samples.ExampleTest.addAndChangeDocument":45,"org.easymock.tests.UsageStrictMockTest.testVerify":501,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":33,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":291,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":506,"org.easymock.tests.LimitationsTest.abstractClass":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":112,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":272}}]
