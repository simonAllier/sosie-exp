[{"position":"org.easymock.internal.matchers.Equals:54","failures":[0],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[21,22,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[288,289],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[290,291,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[292,128,293,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.RecordState:305","failures":[184,185,228],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[20,35,295,296,297,298,299,300,301,76,79,80,81,85,86,87,88,91,103,107,108,111,121,124,125,126,302,303,304,305,187,191,193,194,197,198,199,210,235,264,265,271,272,273,276,278,280,281,282],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[307,308,309,310,311,312,313,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[315,316,316,317,317,1,2,3,4,5,6,318,7,8,319,320,9,10,11,307,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,321,295,322,323,324,325,296,297,298,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,299,65,326,327,328,329,330,306,300,331,301,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,98,99,100,332,333,334,335,101,336,337,102,103,104,105,106,107,108,109,110,111,112,113,114,338,339,340,341,115,118,119,120,121,122,123,124,125,126,127,292,128,293,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,342,343,344,345,346,290,347,348,349,350,351,352,353,354,355,172,173,174,175,176,177,178,179,180,182,183,185,187,188,189,190,191,192,193,194,195,196,197,198,199,356,205,206,207,208,209,357,210,214,215,216,217,218,219,220,221,222,223,224,358,225,226,227,230,231,232,233,234,235,236,237,238,239,240,241,359,360,361,362,363,364,365,366,242,243,244,245,246,247,248,249,250,251,252,253,254,255,367,368,369,257,258,259,260,261,262,263,264,265,266,370,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"suffix"}},{"position":"org.easymock.internal.MocksControl:189","failures":[20,46,47,48,49,321,323,324,325,297,298,329,306,75,76,79,80,81,84,85,86,88,92,104,106,107,109,110,121,124,125,126,191,193,194,197,198,199,205,206,207,208,209,210,247,248,249,250,264,265,276,278,280,281,282],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[372,33,40,45],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[373,374,375,376,377,378,78,123,125,126,178,181,182,183,184,185,379,380,305,192,210,263,264,265,279,281,282],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[288,289],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[316,316,317,317,18,19,22,23,24,25,31,33,34,36,37,43,44,45,61,100,123,345,172,173,174,175,176,186,214,381,382,383,384,385,242,243,246,251,252,253,254,255,274,275,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[1,2,3,4,5,6,7,8,319,320,9,10,11,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,299,65,326,327,328,330,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,87,88,89,90,91,92,94,95,96,98,99,100,332,335,101,102,103,104,105,106,107,108,110,111,112,113,114,338,115,118,119,120,122,123,124,125,126,127,128,293,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,187,189,190,191,192,195,196,197,199,356,201,202,210,214,215,216,217,218,219,220,221,222,223,224,358,386,225,226,227,230,231,232,233,234,236,237,238,239,240,364,365,366,242,243,244,245,246,251,252,253,254,255,387,369,257,258,259,260,261,262,263,264,265,267,268,269,270,272,273,274,275,277,279,280,281,282,283],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[99,245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[292,128,293,294],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[373,375,388,377,389,378,390,78,79,85,86,123,125,126,184,185,192,194,197,198,210,263,264,265,279,281,282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[149,150,151,354,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[357,288,289],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[315,1,2,3,4,6,11,307,21,22,23,24,26,27,29,30,32,33,35,36,38,39,40,41,42,43,295,322,324,325,297,50,51,52,53,54,57,58,59,60,63,64,299,65,326,327,328,330,300,331,301,69,70,73,75,76,77,80,84,88,89,90,92,94,96,98,332,333,334,335,101,336,337,102,103,104,105,106,107,108,109,110,111,112,113,338,339,340,341,115,120,123,125,126,292,128,131,132,134,139,144,154,155,157,162,167,342,343,344,177,179,180,182,187,199,214,215,216,218,219,220,221,222,223,224,225,226,366,242,243,246,247,251,252,253,254,255,261,264,265,274,275,276,279,281,282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[43],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[21,26,27,29,32,38,39,40,42,297,60,299,331,80,81,86,91,103,105,107,108,111,112,113,121,125,126,187,198,210,216,217,219,220,221,222,223,226,264,276,281,282],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[316,317,18,19,22,23,24,25,31,33,34,36,37,43,44,45,61,100,123,172,173,174,175,176,214,381,382,383,384,385,242,243,246,251,252,253,254,255,274,275,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[374,389,393,379,193,278],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[177,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"t":"t"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests2.UsageTest.argumentsOrdered":86,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":81,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":8,"org.easymock.tests2.DelegateToTest.testReturnException":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":342,"org.easymock.tests.MockClassControlTest.testToString":360,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":129,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":339,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":309,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":27,"org.easymock.tests2.UsageTest.wrongArguments":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":249,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":326,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":365,"org.easymock.tests2.CaptureTest.testPrimitive":53,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":148,"org.easymock.tests.UsageTest.moreThanOneArgument":192,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":174,"org.easymock.tests.UsageTest.argumentsOrdered":198,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":200,"org.easymock.tests.UsageVarargTest.varargIntAccepted":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":291,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":313,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":255,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":388,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests.ReplayStateInvalidUsageTest.times":352,"org.easymock.tests2.AnswerTest.answer":115,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":49,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":173,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests2.DelegateToTest.testDelegate":98,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":184,"org.easymock.tests2.CaptureTest.testCapture1_2446744":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":47,"org.easymock.tests.UsageThrowableTest.throwError":216,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":290,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":176,"org.easymock.samples.PartialClassMockTest.testGetArea":315,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":130,"org.easymock.tests2.UsageTest.niceToStrict":80,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":322,"org.easymock.tests2.MockBuilderTest.testCreateMock":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":138,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":374,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":247,"org.easymock.tests.UsageOverloadedMethodTest.overloading":226,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":33,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":163,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":225,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":32,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":59,"org.easymock.tests2.EasyMockSupportClassTest.testAll":338,"org.easymock.tests.MockClassControlTest.testEquals":364,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":48,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":207,"org.easymock.tests2.UsageConstraintsTest.testMatches":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":175,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":345,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":240,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":208,"org.easymock.samples.BasicClassMockTest.testPrintContent":320,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":222,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":262,"org.easymock.tests2.UsageConstraintsTest.greaterThan":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":188,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":301,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":329,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.CaptureTest.testCaptureFirst":63,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":88,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests2.CaptureTest.testCapture2_2446744":62,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":297,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":239,"org.easymock.tests.GenericTest.testBridgedEquals":386,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":371,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":147,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":186,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":150,"org.easymock.tests.UsageCallCountTest.tooManyCalls":273,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":221,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":333,"org.easymock.tests2.UsageConstraintsTest.testContains":31,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":22,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":227,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":17,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndReturnTest.object":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":310,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":369,"org.easymock.tests.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":201,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":168,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":230,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":179,"org.easymock.tests.MockClassControlTest.testHashCode":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":202,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":46,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":304,"org.easymock.tests.UsageVarargTest.varargCharAccepted":233,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests2.UsageTest.openCallCountByLastCall":82,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.DefaultClassInstantiatorTest.object":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":211,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":367,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":300,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":341,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":361,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":376,"org.easymock.tests2.UsageTest.resumeIfFailure":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.StubTest.stubWithReturnValue":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":42,"org.easymock.tests2.SerializationTest.testAllMockedMethod":293,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":228,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":389,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":141,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":294,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":229,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":116,"org.easymock.tests.UsageExpectAndThrowTest.object":139,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":39,"org.easymock.tests2.DelegateToTest.testWrongClass":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":275,"org.easymock.tests.UsageStrictMockTest.range":281,"org.easymock.samples.ConstructorCalledMockTest.testTax":316,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":324,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":248,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":393,"org.easymock.tests2.CaptureTest.testCaptureNone":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":287,"org.easymock.tests.UsageUnorderedTest.message":210,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":302,"org.easymock.tests.UsageVerifyTest.twoReturns":265,"org.easymock.tests.UsageVarargTest.varargByteAccepted":238,"org.easymock.tests2.ThreadingTest.testThreadSafe":66,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":270,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":319,"org.easymock.tests2.CaptureTest.testCapture_2617107":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":245,"org.easymock.tests2.UsageConstraintsTest.any":29,"org.easymock.tests2.StubTest.stub":99,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":151,"org.easymock.tests.UsageExpectAndThrowTest.longType":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":124,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests2.SerializationTest.testClass":292,"org.easymock.tests.LimitationsTest.mockNativeMethod":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":171,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":127,"org.easymock.tests2.NameTest.nameForMocksControl":15,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":133,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":344,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":325,"org.easymock.tests.MockingTest.testNicePartialClassMocking":343,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":328,"org.easymock.tests2.CaptureTest.testCaptureLast":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":185,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":337,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":137,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":85,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":44,"org.easymock.samples.ExampleTest.removeNonExistingDocument":318,"org.easymock.tests.UsageStrictMockTest.differentMethods":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":68,"org.easymock.tests2.ConstraintsToStringTest.andToString":377,"org.easymock.tests2.MockBuilderTest.testCreateMockString":298,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":241,"org.easymock.tests.UsageExpectAndThrowTest.floatType":131,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":35,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":118,"org.easymock.tests.UsageVerifyTest.twoThrows":264,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":340,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":331,"org.easymock.tests2.UsageConstraintsTest.testNotNull":43,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":223,"org.easymock.tests2.UsageTest.defaultResetToNice":84,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":167,"org.easymock.tests.UsageVarargTest.differentLength":235,"org.easymock.tests2.CallbackTest.callback":91,"org.easymock.tests2.UsageConstraintsTest.equals":0,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.UsageCallCountTest.tooFewCalls":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":250,"org.easymock.tests.UsageThrowableTest.throwCheckedException":220,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":379,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":215,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":336,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":101,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":120,"org.easymock.tests.ObjectMethodsTest.testHashCode":368,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":312,"org.easymock.tests2.NameTest.nameForNiceMock":14,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":70,"org.easymock.tests2.DependencyTest.testInterfaceMocking":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":311,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.AnswerTest.stubAnswer":119,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":279,"org.easymock.tests.UsageVarargTest.varargLongAccepted":237,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":170,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":307,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":317,"org.easymock.tests2.ConstraintsToStringTest.orToString":373,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":37,"org.easymock.tests.UsageThrowableTest.noUpperLimit":217,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":19,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":55,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.tests2.UsageConstraintsTest.testSame":24,"org.easymock.samples.SupportTest.addDocument":10,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":349,"org.easymock.tests.GenericTest.testPackageScope":224,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.NameTest.nameForMock":12,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":164,"org.easymock.tests2.UsageStrictMockTest.differentMethods":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":143,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":190,"org.easymock.tests2.MockedExceptionTest.testRealException":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":380,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":243,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":355,"org.easymock.tests2.NameTest.nameForStrictMock":13,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":327,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":295,"org.easymock.tests2.UsageStrictMockTest.range":125,"org.easymock.tests2.UsageConstraintsTest.lessThan":45,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.CaptureTest.testCaptureRightOne":60,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":299,"org.easymock.tests.UsageTest.wrongArguments":194,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":165,"org.easymock.tests.UsageVarargTest.varargShortAccepted":236,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":271,"org.easymock.tests2.UsageConstraintsTest.cmpTo":30,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":117,"org.easymock.tests2.CompareToTest.testLessThan":372,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests2.CaptureTest.testCaptureFromStub":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":193,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests2.ConstraintsToStringTest.notToString":375,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":206,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":231}}]
