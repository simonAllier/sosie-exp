[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.ConstructorArgs:54","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[56],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[57,58,15,59,60,61,16,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,0,84,85,86,87,88,1,2,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,21,24,34,40,106,43,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,3,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,50,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,4,5,208,209,6,7,210,8,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,10,254,255,11,256,257,258,259,12,13,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,14,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,54,55],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[43,107,108,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[328,329,330,331,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[43,46,47,333,334,335,336,337,50,51],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[109,110,145,147],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[338,339,340,341,342,343],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[57,58,15,59,60,61,16,62,63,65,66,69,70,71,72,74,75,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,21,24,34,40,106,43,107,111,112,113,114,115,116,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,152,156,160,3,162,165,169,170,172,173,175,178,50,179,180,181,182,183,184,206,207,208,209,210,211,233,235,236,237,238,239,240,246,344,248,249,250,251,254,11,256,259,13,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,345,298,346,299,300,306,307,310,311,312,313,315,316,318,321,325],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[21,24,34,40,43,112,117,120,121,122,347,168,169,348,170,172,173,175,349,176,350,351,352,353,354,50,246,344,248,258,272,273,274,325,54,54,55,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[115,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[355,356,4,357,358,10],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:45","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[125,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[125,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[359],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.NICE":"type"}},{"position":"org.easymock.internal.LastControl:61","failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,360,109,110,118,123,124,125,126,127,128,129,130,131,132,361,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,182,195,200,8,211,212,10,254,267,268,269,270,271,306,307,308,309,310,311,312],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[57,58,15,59,61,16,362,363,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,364,365,366,367,43,108,111,112,114,115,116,117,118,368,369,119,120,121,122,370,371,154,155,156,168,169,348,372,170,171,172,173,47,174,175,176,50,51,56,246,247,344,373,374,375,248,376,377,378,379,380,381,382,383,384,258,385,386,387,388,389,272,273,274,390,338,339,340,341,391,342,343,323,324,325,54,54,55,55],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[58,15,61,16,83,0,1,2,94,97,99,106,392,112,119,122,371,160,3,162,393,394,395,396,168,348,172,173,175,176,184,397,207,4,5,6,7,8,398,399,400,401,402,403,10,254,11,256,379,380,381,385,404,405,386,406,407,259,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[56,373],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[408],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[409,410,411,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":126,"org.easymock.tests2.UsageTest.argumentsOrdered":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":397,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":85,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":326,"org.easymock.tests2.DelegateToTest.testReturnException":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":197,"org.easymock.tests.MockingTest.testPartialClassMocking":272,"org.easymock.tests.MockClassControlTest.testToString":379,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":213,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":132,"org.easymock.tests2.UsageTest.wrongArguments":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":204,"org.easymock.samples.ExampleTest.answerVsDelegate":314,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":386,"org.easymock.tests2.UsageConstraintsTest.testNull":128,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":114,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":100,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":350,"org.easymock.tests2.CaptureTest.testPrimitive":65,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":310,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":232,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":409,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":366,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":271,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests2.DependencyTest.testClassMocking":362,"org.easymock.tests2.AnswerTest.answer":150,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":79,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests2.UsageTest.strictResetToDefault":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":299,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":228,"org.easymock.tests.LimitationsTest.mockFinalMethod":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":305,"org.easymock.tests2.DependencyTest.testClassMockingSupport":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":399,"org.easymock.tests2.CaptureTest.testCapture1_2446744":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":77,"org.easymock.tests.UsageThrowableTest.throwError":233,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":245,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":42,"org.easymock.samples.PartialClassMockTest.testGetArea":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":268,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":29,"org.easymock.tests2.UsageTest.niceToStrict":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":214,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":170,"org.easymock.tests2.MockBuilderTest.testCreateMock":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":222,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":355,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageOverloadedMethodTest.overloading":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":137,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":297,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":286,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":136,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":71,"org.easymock.tests2.EasyMockSupportClassTest.testAll":21,"org.easymock.tests.MockClassControlTest.testEquals":383,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":230,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":351,"org.easymock.tests2.CaptureTest.testCaptureAll":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":303,"org.easymock.tests.MockNameTest.defaultName":398,"org.easymock.tests2.UsageConstraintsTest.testMatches":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":244,"org.easymock.samples.ExampleTest.voteForRemovals":318,"org.easymock.tests.UsageVarargTest.allKinds":195,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":304,"org.easymock.samples.BasicClassMockTest.testPrintContent":324,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":239,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":201,"org.easymock.tests2.UsageConstraintsTest.greaterThan":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":122,"org.easymock.samples.ExampleTest.voteForRemoval":315,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":343,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":370,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":117,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":93,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":196,"org.easymock.tests2.CaptureTest.testCaptureFirst":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":94,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":90,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":74,"org.easymock.tests2.UsageTest.moreThanOneArgument":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":175,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":194,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":265,"org.easymock.tests.UsageExpectAndReturnTest.longType":278,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":329,"org.easymock.tests.UsageCallCountTest.tooManyCalls":266,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":238,"org.easymock.tests.MockingTest.testNiceClassMocking":390,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":58,"org.easymock.tests.MockingTest.testClassMocking":388,"org.easymock.tests2.UsageConstraintsTest.testContains":135,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":156,"org.easymock.tests2.UsageConstraintsTest.testFind":127,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":251,"org.easymock.tests.MockTypeTest.fromEasyMockClass":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":110,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests.UsageExpectAndReturnTest.object":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":99,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":334,"org.easymock.tests.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":51,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":291,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":296,"org.easymock.tests.MockClassControlTest.testHashCode":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":31,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":360,"org.easymock.tests.UsageVarargTest.varargCharAccepted":188,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests2.UsageTest.openCallCountByLastCall":86,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":102,"org.easymock.tests.DefaultClassInstantiatorTest.object":338,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":32,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":236,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":354,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":120,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":381,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":219,"org.easymock.tests.CapturesMatcherTest.test":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":380,"org.easymock.tests2.UsageTest.resumeIfFailure":89,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":199,"org.easymock.tests2.StubTest.stubWithReturnValue":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":46,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.tests2.SerializationTest.testAllMockedMethod":108,"org.easymock.samples.SupportTest.voteForRemovals":321,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":356,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":225,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":327,"org.easymock.tests.UsageExpectAndThrowTest.object":223,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":143,"org.easymock.tests2.DelegateToTest.testWrongClass":166,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":312,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":98,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":203,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":357,"org.easymock.tests2.CaptureTest.testCaptureNone":70,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":193,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":35,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":263,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":402,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":323,"org.easymock.tests2.CaptureTest.testCapture_2617107":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":309,"org.easymock.tests2.UsageConstraintsTest.any":133,"org.easymock.tests2.StubTest.stub":177,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":216,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":391,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":294,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":344,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":353,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":163,"org.easymock.tests2.NameTest.nameForMocksControl":396,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":359,"org.easymock.tests2.MockedExceptionTest.testMockedException":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":23,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":217,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":274,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":273,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.CaptureTest.testCaptureLast":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":16,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":144,"org.easymock.tests.MockingTest.testTwoMocks":389,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":221,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":148,"org.easymock.tests.UsageStrictMockTest.differentMethods":256,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":181,"org.easymock.tests2.MockBuilderTest.testCreateMockString":176,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":25,"org.easymock.tests.UsageExpectAndThrowTest.floatType":215,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":34,"org.easymock.samples.ExampleTest.voteAgainstRemoval":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":121,"org.easymock.tests.LimitationsTest.privateConstructor":375,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":53,"org.easymock.tests2.UsageConstraintsTest.testNotNull":147,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":240,"org.easymock.tests2.UsageTest.defaultResetToNice":88,"org.easymock.samples.ExampleTest.voteAgainstRemovals":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":290,"org.easymock.tests.UsageVarargTest.differentLength":190,"org.easymock.tests2.CallbackTest.callback":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":368,"org.easymock.tests.UsageTest.openCallCountByLastCall":208,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":308,"org.easymock.tests.UsageCallCountTest.tooFewCalls":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":205,"org.easymock.tests.UsageThrowableTest.throwCheckedException":237,"org.easymock.tests.MockingTest.testStrictClassMocking":387,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":358,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":60,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":153,"org.easymock.tests2.NameTest.nameForNiceMock":395,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":183,"org.easymock.tests2.DependencyTest.testInterfaceMocking":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":335,"org.easymock.samples.ExampleTest.addDocument":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":36,"org.easymock.tests2.DelegateToTest.testStubDelegate":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":41,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":254,"org.easymock.tests.UsageVarargTest.varargLongAccepted":192,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests.UsageExpectAndReturnTest.floatType":277,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":141,"org.easymock.tests.UsageThrowableTest.noUpperLimit":234,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":124,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":364,"org.easymock.tests2.SerializationTest.test":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testSame":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":276,"org.easymock.samples.SupportTest.addDocument":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":26,"org.easymock.tests.GenericTest.testPackageScope":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests2.NameTest.nameForMock":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":287,"org.easymock.tests2.UsageStrictMockTest.differentMethods":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests2.MockedExceptionTest.testRealException":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":307,"org.easymock.tests2.NameTest.nameForStrictMock":394,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":372,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":367,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":142,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":169,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":149,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":30,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests2.UsageConstraintsTest.testOr":130,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":112,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":27,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":378,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":288,"org.easymock.tests.UsageVarargTest.varargShortAccepted":191,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":264,"org.easymock.tests2.UsageConstraintsTest.cmpTo":134,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":87,"org.easymock.tests2.CaptureTest.testCaptureFromStub":73,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":348,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":262,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":48,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":289,"org.easymock.tests2.UsageConstraintsTest.constraints":125,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.samples.ExampleTest.addAndChangeDocument":319,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":302,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":269,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":281,"org.easymock.tests.LimitationsTest.abstractClass":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":270,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":97}}]
