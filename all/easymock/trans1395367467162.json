[{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:643","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,13,14,52,53,54,55,56,57,58,59,60,0,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,18,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,8,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,1,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,16,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,2,215,3,5,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[272,273,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,14,52,53,54,55,56,57,274,60,275,0,61,276,277,278,279,280,281,282,283,284,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,285,84,85,86,87,88,89,286,287,288,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,289,290,291,292,293,105,106,294,295,107,18,296,297,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,8,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,298,299,300,301,152,153,154,302,302,303,303,155,1,156,157,158,159,160,161,162,304,163,164,165,166,167,168,169,170,171,172,305,173,174,16,175,306,307,308,309,310,176,311,312,177,178,313,314,179,180,181,182,183,184,185,315,316,317,318,186,187,319,320,321,188,189,322,323,190,191,192,324,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,325,209,210,211,212,213,214,326,327,328,329,330,2,215,3,4,5,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,331,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,332,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[163,164,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[355,356,357,358,359,360,272,273,361,27,28,362,29,30,31,32,33,34,35,36,37,363,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,14,52,53,54,55,56,57,274,364,365,366,367,368,58,59,60,275,0,61,276,277,369,278,279,280,370,281,371,372,373,374,375,376,282,283,284,62,377,378,63,379,380,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,285,381,84,85,86,87,382,88,89,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,286,15,17,399,400,401,287,402,288,403,404,90,405,91,92,93,94,95,96,97,98,99,100,101,102,103,104,406,407,289,290,291,408,292,409,410,411,293,412,413,414,415,416,417,418,419,420,421,422,105,106,294,423,424,425,426,295,107,18,296,297,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,8,130,131,132,133,134,135,427,428,429,430,431,432,433,136,137,138,139,140,141,142,143,144,145,146,147,148,434,149,150,298,151,299,300,301,152,153,154,302,303,155,1,156,157,158,159,435,160,161,162,304,163,164,165,166,167,168,169,170,171,172,305,173,174,16,175,436,437,438,439,440,306,441,442,307,443,308,309,444,445,310,446,176,311,312,177,178,313,314,179,180,181,182,183,184,447,448,185,449,450,315,316,317,318,451,452,333,334,335,336,337,186,338,339,340,341,342,343,453,454,455,187,456,457,319,458,459,460,461,462,463,464,465,466,320,467,468,469,470,471,321,472,473,344,345,346,347,348,188,349,350,351,352,353,354,474,475,476,477,189,322,323,190,191,192,324,478,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,325,209,210,211,212,213,214,479,326,327,328,329,330,2,215,3,4,5,216,217,218,219,220,221,222,223,224,225,226,227,228,480,229,230,231,232,233,234,331,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,481,482,252,253,332,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,483,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[227,228,232,233,331,244,256,258,266],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[259],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[362,29,32,33,369,484,92,93,94,8,132,168,173,174,222],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[307,485],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[486,19,20,21,23,24,25,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[361,28,277,91,92,93,130,133,134,167,220,223,224],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:46","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[264],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":228,"org.easymock.tests2.UsageTest.argumentsOrdered":174,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":393,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":170,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":164,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":53,"org.easymock.tests.MockingTest.testPartialClassMocking":290,"org.easymock.tests.MockClassControlTest.testToString":365,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":479,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":108,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":319,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":19,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":234,"org.easymock.tests2.UsageTest.wrongArguments":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":46,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":424,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":358,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":410,"org.easymock.tests2.UsageConstraintsTest.testNull":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":182,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":210,"org.easymock.tests2.CaptureTest.testPrimitive":259,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":127,"org.easymock.tests.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":99,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":295,"org.easymock.tests.UsageVarargTest.varargIntAccepted":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":144,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":353,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":148,"org.easymock.tests.ReplayStateInvalidUsageTest.times":419,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests2.DependencyTest.testClassMocking":481,"org.easymock.tests2.AnswerTest.answer":189,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":477,"org.easymock.tests2.CaptureTest.testAnd":256,"org.easymock.tests2.UsageTest.strictResetToDefault":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":98,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":206,"org.easymock.tests2.DelegateToTest.testDelegate":5,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":123,"org.easymock.tests.LimitationsTest.mockFinalMethod":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":376,"org.easymock.tests2.DependencyTest.testClassMockingSupport":482,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":272,"org.easymock.tests2.CaptureTest.testCapture1_2446744":260,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":475,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":413,"org.easymock.tests.UsageThrowableTest.throwError":136,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":357,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":473,"org.easymock.samples.PartialClassMockTest.testGetArea":304,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":414,"org.easymock.tests.MockingTest.testInterfaceMocking":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":462,"org.easymock.tests2.UsageTest.niceToStrict":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":109,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":307,"org.easymock.tests2.MockBuilderTest.testCreateMock":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":117,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":9,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":294,"org.easymock.tests.UsageOverloadedMethodTest.overloading":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":61,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":239,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":75,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":238,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":265,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":363,"org.easymock.tests2.EasyMockSupportClassTest.testAll":187,"org.easymock.tests.MockClassControlTest.testEquals":58,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":476,"org.easymock.tests2.CaptureTest.testCaptureAll":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":374,"org.easymock.tests.MockNameTest.defaultName":426,"org.easymock.tests2.UsageConstraintsTest.testMatches":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":293,"org.easymock.samples.ExampleTest.voteForRemovals":159,"org.easymock.tests.UsageVarargTest.allKinds":45,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":91,"org.easymock.samples.BasicClassMockTest.testPrintContent":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":375,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":142,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":25,"org.easymock.tests2.UsageConstraintsTest.greaterThan":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":318,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":433,"org.easymock.samples.ExampleTest.voteForRemoval":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":194,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":26,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":447,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":152,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":204,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":52,"org.easymock.tests2.CaptureTest.testCaptureFirst":269,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":205,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":71,"org.easymock.tests2.UsageTest.moreThanOneArgument":167,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":196,"org.easymock.tests2.CaptureTest.testCapture2_2446744":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":44,"org.easymock.tests.GenericTest.testBridgedEquals":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":88,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":372,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":485,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":126,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":247,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":279,"org.easymock.tests.UsageCallCountTest.tooManyCalls":89,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":141,"org.easymock.tests.MockingTest.testNiceClassMocking":411,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":311,"org.easymock.tests.MockingTest.testClassMocking":407,"org.easymock.tests2.UsageConstraintsTest.testContains":237,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":381,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":200,"org.easymock.tests2.UsageConstraintsTest.testFind":229,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":104,"org.easymock.tests.MockTypeTest.fromEasyMockClass":356,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":128,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":271,"org.easymock.tests.UsageExpectAndReturnTest.object":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":209,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":20,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":63,"org.easymock.tests.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":107,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":478,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":0,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":345,"org.easymock.tests.MockClassControlTest.testHashCode":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":464,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":18,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":60,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":474,"org.easymock.tests.UsageVarargTest.varargCharAccepted":38,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastCall":171,"org.easymock.tests.DefaultClassInstantiatorTest.object":427,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":212,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":282,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":377,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":344,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":316,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":321,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":366,"org.easymock.tests2.UsageTest.resumeIfFailure":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":55,"org.easymock.tests2.StubTest.stubWithReturnValue":217,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":255,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":286,"org.easymock.samples.SupportTest.voteForRemovals":154,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":10,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":120,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":287,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":322,"org.easymock.tests.UsageExpectAndThrowTest.object":118,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":371,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":245,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":95,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":96,"org.easymock.tests.UsageStrictMockTest.range":132,"org.easymock.samples.ConstructorCalledMockTest.testTax":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":438,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":453,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":421,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":423,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":6,"org.easymock.tests2.CaptureTest.testCaptureNone":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":301,"org.easymock.tests.UsageUnorderedTest.message":94,"org.easymock.tests.UsageVerifyTest.twoReturns":93,"org.easymock.tests.UsageVarargTest.varargByteAccepted":43,"org.easymock.tests2.ThreadingTest.testThreadSafe":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":467,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":87,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":161,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":379,"org.easymock.tests2.CaptureTest.testCapture_2617107":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":49,"org.easymock.tests2.UsageConstraintsTest.any":235,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":418,"org.easymock.tests2.StubTest.stub":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndThrowTest.longType":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":54,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":431,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":417,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.SerializationTest.testClass":332,"org.easymock.tests.LimitationsTest.mockNativeMethod":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":335,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests2.NameTest.nameForMocksControl":329,"org.easymock.tests2.MockedExceptionTest.testMockedException":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":457,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":483,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":292,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":179,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":309,"org.easymock.tests.MockingTest.testNicePartialClassMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":486,"org.easymock.tests2.CaptureTest.testCaptureLast":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":333,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":233,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":314,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":246,"org.easymock.tests.MockingTest.testTwoMocks":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":116,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":250,"org.easymock.samples.ExampleTest.removeNonExistingDocument":435,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":415,"org.easymock.tests.UsageStrictMockTest.differentMethods":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":346,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":429,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":195,"org.easymock.tests2.MockBuilderTest.testCreateMockString":446,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":458,"org.easymock.tests.UsageExpectAndThrowTest.floatType":110,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":190,"org.easymock.tests.UsageVerifyTest.twoThrows":92,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":320,"org.easymock.samples.ExampleTest.voteAgainstRemoval":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":394,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":299,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":317,"org.easymock.tests.LimitationsTest.privateConstructor":404,"org.easymock.tests2.UsageConstraintsTest.testNotNull":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":143,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":198,"org.easymock.tests2.UsageTest.defaultResetToNice":305,"org.easymock.samples.ExampleTest.voteAgainstRemovals":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":79,"org.easymock.tests.UsageVarargTest.differentLength":40,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":334,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.UsageConstraintsTest.equals":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":449,"org.easymock.tests.UsageTest.openCallCountByLastCall":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":48,"org.easymock.tests.UsageCallCountTest.tooFewCalls":85,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":425,"org.easymock.tests.UsageThrowableTest.throwCheckedException":140,"org.easymock.tests.MockingTest.testStrictClassMocking":406,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":313,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":178,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":192,"org.easymock.tests.ObjectMethodsTest.testHashCode":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":23,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":197,"org.easymock.tests2.NameTest.nameForNiceMock":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":21,"org.easymock.samples.ExampleTest.addDocument":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.DelegateToTest.testStubDelegate":215,"org.easymock.tests2.AnswerTest.stubAnswer":191,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":130,"org.easymock.tests.UsageVarargTest.varargLongAccepted":42,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":324,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":303,"org.easymock.tests.UsageThrowableTest.noUpperLimit":137,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":243,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":226,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":436,"org.easymock.tests2.SerializationTest.test":254,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":261,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.tests2.UsageConstraintsTest.testSame":231,"org.easymock.samples.SupportTest.addDocument":153,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":459,"org.easymock.tests.GenericTest.testPackageScope":149,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":351,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":409,"org.easymock.tests2.NameTest.nameForMock":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":76,"org.easymock.tests2.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":122,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":14,"org.easymock.tests2.MockedExceptionTest.testRealException":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":396,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":220,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":47,"org.easymock.tests2.NameTest.nameForStrictMock":327,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":442,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":183,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":437,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":430,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":244,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":306,"org.easymock.tests2.UsageStrictMockTest.range":222,"org.easymock.tests2.UsageConstraintsTest.lessThan":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":348,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":463,"org.easymock.tests2.CaptureTest.testCaptureRightOne":266,"org.easymock.tests2.UsageConstraintsTest.testOr":232,"org.easymock.tests.UsageRangeTest.combination":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":180,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":460,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":77,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":432,"org.easymock.tests.UsageVarargTest.varargShortAccepted":41,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":382,"org.easymock.tests2.UsageConstraintsTest.cmpTo":236,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":386,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":172,"org.easymock.tests2.CaptureTest.testCaptureFromStub":267,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":412,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":441,"org.easymock.tests.UsageTest.unexpectedCallWithArray":362,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":78,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":131,"org.easymock.tests2.UsageConstraintsTest.constraints":227,"org.easymock.samples.ExampleTest.addAndChangeDocument":160,"org.easymock.tests.UsageStrictMockTest.testVerify":135,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":163,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":373,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":146,"org.easymock.tests.LimitationsTest.abstractClass":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":147,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":208}}]
