[{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[55,56,57,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[59,60],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[61,62,63,64,65,66,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[57,7,9,10,11,68,17,69,70,71,72,73,74,75,76,77,78,79,80,81,29,30,31,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,34,35,36,97,98,99,39,40,41,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,51,52,53,54,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:136","failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[151,152,33,153,154,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[155,156,157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[158,131,30,31,159,41,160,161,162,163,164,43,44,150,53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[165,166,167,168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[6,169,170,171,172,173,174,175,176,95,177,32,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[209,55,56,57,210,165,211,212,166,167,213,214,215,216,6,217,158,7,8,9,218,169,219,10,11,12,13,220,14,221,68,222,15,16,223,224,17,69,70,71,18,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,170,19,72,242,243,21,244,73,74,245,246,75,76,77,78,247,248,116,249,79,250,23,251,252,253,254,255,24,256,25,117,118,26,257,119,120,121,122,258,259,59,60,260,123,261,124,125,27,126,127,262,263,264,80,265,128,129,130,171,172,173,174,266,267,268,269,270,271,272,273,274,275,276,277,28,81,131,29,30,31,82,83,84,85,86,278,87,88,89,90,91,92,132,132,133,133,279,93,94,280,281,282,134,175,283,284,176,285,135,136,95,177,137,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,96,32,159,34,306,178,35,36,37,307,308,309,310,311,97,98,99,39,40,138,139,140,141,142,41,312,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,313,102,199,314,315,316,200,201,143,144,317,318,319,320,321,322,168,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,202,203,204,205,206,207,103,104,105,106,107,42,108,109,110,111,112,341,113,342,164,43,44,145,146,147,148,149,343,344,208,345,346,347,348,49,349,350,351,50,114,51,150,52,53,54,115,352,353,354,355,356,357],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[358,259,124,130],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[215,216,244,73,74,245,246,75,76,77,78,247,248,116,249,79,255,117,118,26,257,119,120,121,122,258,259,59,60,260,123,261,124,125,27,126,127,262,263,264,80,265,128,129,130,276,131,134,175,135,136,95,177,137,138,139,140,141,142,41,143,144,206,112,51,150],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[1,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[55,56,57,58],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[244,74,248,26,257,120,122,258,59,262,128],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[359,117,126,265],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[360],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,85,92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[55,232,61,234,235,72,383,384,20,22,385,256,386,132,133,279,387,342],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[210,268,270,343,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[315,316,43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[61,62,63,64,65,66,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[257,258,262],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"this.org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[166,217,8,9,10,11,220,14,221,68,15,16,17,69,70,18,241,170,72,21,73,74,245,246,75,76,77,78,247,248,249,79,23,253,256,117,118,257,119,120,121,122,258,259,60,123,261,124,125,27,126,127,262,263,264,80,265,128,129,130,269,272,28,81,131,29,30,31,82,84,86,278,87,88,90,91,279,134,284,135,136,95,177,137,35,36,97,99,40,138,139,140,141,142,41,100,313,102,314,315,316,200,201,143,144,206,103,104,105,106,107,108,109,110,111,112,43,49,50,114,150,52,53,54,115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[388],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":257,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests2.UsageTest.argumentsOrdered":11,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":326,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":85,"org.easymock.tests2.DelegateToTest.testReturnException":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":203,"org.easymock.tests.MockingTest.testPartialClassMocking":353,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":388,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":179,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":234,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":160,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":63,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":135,"org.easymock.tests2.UsageTest.wrongArguments":7,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.samples.ExampleTest.answerVsDelegate":278,"org.easymock.tests2.UsageConstraintsTest.testNull":120,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":252,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":17,"org.easymock.tests2.CaptureTest.testPrimitive":245,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests.UsageTest.moreThanOneArgument":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":198,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":147,"org.easymock.tests.UsageTest.argumentsOrdered":36,"org.easymock.tests.UsageVarargTest.varargIntAccepted":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":142,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests2.AnswerTest.answer":210,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":333,"org.easymock.tests2.CaptureTest.testAnd":244,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":350,"org.easymock.tests2.DelegateToTest.testDelegate":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":100,"org.easymock.tests2.CaptureTest.testCapture1_2446744":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":192,"org.easymock.tests.UsageThrowableTest.throwError":313,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":46,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":149,"org.easymock.samples.PartialClassMockTest.testGetArea":279,"org.easymock.tests2.CompareToTest.testLessOrEqual":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":180,"org.easymock.tests2.UsageTest.niceToStrict":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":188,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":151,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":15,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":310,"org.easymock.tests.UsageOverloadedMethodTest.overloading":284,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":124,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":208,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":261,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":247,"org.easymock.tests2.EasyMockSupportClassTest.testAll":233,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":196,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests2.UsageConstraintsTest.testMatches":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":148,"org.easymock.samples.ExampleTest.voteForRemovals":90,"org.easymock.tests.UsageVarargTest.allKinds":112,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":164,"org.easymock.samples.BasicClassMockTest.testPrintContent":94,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":200,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":207,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":349,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":5,"org.easymock.samples.ExampleTest.voteForRemoval":87,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":274,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":96,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":221,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":202,"org.easymock.tests2.CaptureTest.testCaptureFirst":79,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":68,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":293,"org.easymock.tests2.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.CaptureTest.testCapture2_2446744":249,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":334,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":111,"org.easymock.tests.GenericTest.testBridgedEquals":360,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":39,"org.easymock.tests.UsageExpectAndReturnTest.longType":289,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":197,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":80,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":308,"org.easymock.tests.UsageCallCountTest.tooManyCalls":40,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":316,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":226,"org.easymock.tests2.UsageConstraintsTest.testContains":123,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":173,"org.easymock.tests2.UsageConstraintsTest.testFind":119,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":216,"org.easymock.tests.UsageExpectAndReturnTest.object":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":224,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":64,"org.easymock.tests.UsageTest.exactCallCountByLastCall":37,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":61,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":344,"org.easymock.tests.ResultTest.createThrowResultToString":157,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":347,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":47,"org.easymock.tests.UsageVarargTest.varargCharAccepted":106,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageTest.openCallCountByLastCall":218,"org.easymock.tests.DefaultClassInstantiatorTest.object":0,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":346,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":372,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":236,"org.easymock.tests2.UsageTest.resumeIfFailure":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":205,"org.easymock.tests2.StubTest.stubWithReturnValue":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":62,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":295,"org.easymock.tests2.SerializationTest.testAllMockedMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":332,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":152,"org.easymock.samples.SupportTest.voteForRemovals":84,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":191,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":338,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":165,"org.easymock.tests.UsageExpectAndThrowTest.object":189,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":263,"org.easymock.tests2.DelegateToTest.testWrongClass":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":144,"org.easymock.samples.ConstructorCalledMockTest.testTax":132,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":242,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":153,"org.easymock.tests2.CaptureTest.testCaptureNone":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":282,"org.easymock.tests.UsageUnorderedTest.message":41,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":45,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":110,"org.easymock.tests2.ThreadingTest.testThreadSafe":273,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":99,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":93,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests2.StubTest.stub":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageExpectAndThrowTest.longType":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests.LimitationsTest.mockNativeMethod":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":305,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":82,"org.easymock.tests2.NameTest.nameForMocksControl":240,"org.easymock.tests2.MockedExceptionTest.testMockedException":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":183,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":355,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":250,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":243,"org.easymock.tests.MockingTest.testNicePartialClassMocking":354,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":254,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":231,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":258,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":187,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":129,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":374,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":2,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":275,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.UsageExpectAndThrowTest.floatType":181,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests.ResultTest.createReturnResultToString":156,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":212,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":235,"org.easymock.tests.ResultTest.createDelegateResultToString":155,"org.easymock.samples.ExampleTest.voteAgainstRemoval":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":256,"org.easymock.tests2.UsageConstraintsTest.testNotNull":128,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":201,"org.easymock.tests2.UsageTest.defaultResetToNice":219,"org.easymock.samples.ExampleTest.voteAgainstRemovals":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":328,"org.easymock.tests.UsageVarargTest.differentLength":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":385,"org.easymock.tests.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":95,"org.easymock.tests.UsageCallCountTest.tooFewCalls":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":228,"org.easymock.tests.UsageThrowableTest.throwCheckedException":315,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":230,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":229,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":167,"org.easymock.tests2.CompareToTest.testGreateOrEqual":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":66,"org.easymock.tests2.NameTest.nameForNiceMock":239,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":277,"org.easymock.tests2.DependencyTest.testInterfaceMocking":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":65,"org.easymock.samples.ExampleTest.addDocument":89,"org.easymock.tests2.DelegateToTest.testStubDelegate":269,"org.easymock.tests2.AnswerTest.stubAnswer":166,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":150,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":383,"org.easymock.tests.UsageVarargTest.varargLongAccepted":109,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":325,"org.easymock.tests.UsageExpectAndReturnTest.floatType":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":232,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":133,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests.UsageThrowableTest.noUpperLimit":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":118,"org.easymock.tests2.SerializationTest.test":56,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests2.UsageConstraintsTest.testSame":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":287,"org.easymock.samples.SupportTest.addDocument":83,"org.easymock.tests.GenericTest.testPackageScope":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests2.NameTest.nameForMock":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":298,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":351,"org.easymock.tests2.MockedExceptionTest.testRealException":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":136,"org.easymock.tests2.NameTest.nameForStrictMock":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":253,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":161,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":3,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":262,"org.easymock.tests.ErrorMessageTest.testGetters":162,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":376,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":324,"org.easymock.tests2.CaptureTest.testCaptureRightOne":248,"org.easymock.tests2.UsageConstraintsTest.testOr":122,"org.easymock.tests.UsageRangeTest.combination":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":318,"org.easymock.tests.UsageVarargTest.varargShortAccepted":108,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":4,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":38,"org.easymock.tests2.UsageConstraintsTest.cmpTo":260,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":320,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":116,"org.easymock.tests.UsageTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":300,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.samples.ExampleTest.addAndChangeDocument":91,"org.easymock.tests.UsageStrictMockTest.testVerify":352,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":92,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":114,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":140,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":141,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":163,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":16}}]
