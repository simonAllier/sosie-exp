[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[53,54,55,56,57,58],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[59,60,61,62,63,64,65,66,38,67,68,69,70,71],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[72,73],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[74,75],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[76,77,64,78,79,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[80,81,82,83],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[59,60,61,62,63,64,65,66,38,67,68,69,70,71,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[87,88,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[90,91,2,4,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,47,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,7,8,9,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,51,51,52,52,153,53,54,55,56,154,57,58,0,155,156,157,1,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[180,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[182,183],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[184,185,186,187,188,189,190,84,191,192,193,194,195,196,197,72,198,86,199,200],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[201,202,203,81,82,204,59,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,90,224,2,3,6,92,93,94,95,225,96,97,184,185,186,187,226,227,228,229,188,230,180,181,231,232,233,234,235,236,237,238,239,240,241,242,243,244,190,84,191,192,193,194,195,196,72,245,246,247,248,249,250,75,251,198,86,252,253,254,199,200,255,100,101,256,102,103,104,106,109,110,111,115,118,120,121,124,257,9,129,132,142,148,258,259,260,261,262,263,153,155,264,65,265,266,267,268,269,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,168,173,174,175,31,270,32,33,34,35,36,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,73,37,291,292,293,294,295,296,297,298,299,300,301,38,67,302,303,39,304,305,306,307,308,309,310,311,312,40,313,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[184,186,188,190,84,194,195,197,198],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[250],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,314,37,41,42,43,44,45,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[184,186,188,190,84,192,194,195,197,198,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[6,181,235,7,8,9,10,314,315,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,270,35,36,37,39,304,307,40,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[316,317,318,319,320,321,201,202,203,80,322,323,81,82,324,325,204,326,59,205,327,207,208,209,211,212,214,216,217,218,328,219,220,221,222,223,90,224,329,330,3,4,331,6,95,225,98,99,332,333,184,185,186,187,226,334,335,227,228,229,188,189,230,180,181,231,232,60,233,336,234,235,236,61,62,237,238,337,239,240,241,338,242,339,243,244,190,84,191,192,193,194,195,196,197,72,245,246,247,248,249,250,75,251,198,86,252,253,254,199,200,255,340,100,101,256,102,103,104,341,106,107,108,109,111,112,7,8,9,10,126,129,131,134,140,144,147,151,152,258,259,260,261,342,262,343,344,345,263,346,347,348,349,350,351,53,54,55,56,154,57,352,58,63,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,155,156,157,1,158,159,160,161,162,163,164,165,376,377,64,264,378,65,265,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,266,267,314,315,268,269,395,396,397,398,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,166,168,399,170,171,172,173,400,401,402,176,31,403,270,32,33,34,35,36,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,73,37,404,405,406,407,408,409,291,292,293,294,295,296,410,411,412,413,414,415,416,417,418,419,297,298,299,300,301,38,67,420,302,303,39,304,305,68,69,306,307,70,71,308,421,422,423,424,425,426,427,428,429,309,310,311,430,312,40,431,313,85,179,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[348,158,163],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[184,186,188,190,84,192,194,195,197,198,199],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[7,8,9,10,373,374,375,432,37,41,42,43,44,45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":84,"org.easymock.tests2.UsageTest.argumentsOrdered":62,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":304,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":183,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":336,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":42,"org.easymock.tests.MockingTest.testPartialClassMocking":173,"org.easymock.tests.MockClassControlTest.testToString":160,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":136,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":11,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":196,"org.easymock.tests2.UsageTest.wrongArguments":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":423,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":178,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":402,"org.easymock.tests2.UsageConstraintsTest.testNull":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":216,"org.easymock.tests2.CaptureTest.testPrimitive":187,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":30,"org.easymock.tests.UsageTest.moreThanOneArgument":305,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":370,"org.easymock.tests.UsageTest.argumentsOrdered":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":269,"org.easymock.tests.UsageVarargTest.varargIntAccepted":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":291,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":114,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":119,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":295,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests.ReplayStateInvalidUsageTest.times":361,"org.easymock.tests2.DependencyTest.testClassMocking":320,"org.easymock.tests2.AnswerTest.answer":203,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":319,"org.easymock.tests2.CaptureTest.testAnd":184,"org.easymock.tests2.UsageTest.strictResetToDefault":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":299,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":398,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":26,"org.easymock.tests.LimitationsTest.mockFinalMethod":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":409,"org.easymock.tests2.DependencyTest.testClassMockingSupport":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":425,"org.easymock.tests2.CaptureTest.testCapture1_2446744":226,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":317,"org.easymock.tests.UsageThrowableTest.throwError":31,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":150,"org.easymock.samples.PartialClassMockTest.testGetArea":153,"org.easymock.tests.MockingTest.testInterfaceMocking":400,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":12,"org.easymock.tests2.UsageTest.niceToStrict":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":89,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":118,"org.easymock.tests2.MockBuilderTest.testCreateMock":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":20,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":76,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":212,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":384,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":421,"org.easymock.tests.UsageOverloadedMethodTest.overloading":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":141,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":40,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":282,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":302,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":247,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":229,"org.easymock.tests.MockClassControlTest.testEquals":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":129,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":407,"org.easymock.tests2.CaptureTest.testCaptureAll":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":318,"org.easymock.tests.MockNameTest.defaultName":399,"org.easymock.tests2.UsageConstraintsTest.testMatches":249,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":371,"org.easymock.samples.ExampleTest.voteForRemovals":262,"org.easymock.tests.UsageVarargTest.allKinds":419,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":408,"org.easymock.samples.BasicClassMockTest.testPrintContent":152,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":35,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":46,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":338,"org.easymock.tests2.UsageConstraintsTest.greaterThan":75,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":111,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":58,"org.easymock.samples.ExampleTest.voteForRemoval":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":112,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":105,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":179,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":209,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":41,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":210,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":278,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":222,"org.easymock.tests2.CaptureTest.testCapture2_2446744":230,"org.easymock.tests2.UsageTest.moreThanOneArgument":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":124,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":418,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":391,"org.easymock.tests.UsageExpectAndReturnTest.longType":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":405,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":420,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":374,"org.easymock.tests.UsageCallCountTest.tooManyCalls":392,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":34,"org.easymock.tests.MockingTest.testNiceClassMocking":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":93,"org.easymock.tests.MockingTest.testClassMocking":171,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":385,"org.easymock.tests2.UsageConstraintsTest.testContains":246,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":9,"org.easymock.tests2.UsageConstraintsTest.testFind":191,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":39,"org.easymock.tests.MockTypeTest.fromEasyMockClass":428,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":330,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":376,"org.easymock.tests.UsageExpectAndReturnTest.object":281,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":215,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":413,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":349,"org.easymock.tests.UsageTest.exactCallCountByLastCall":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":395,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":287,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":312,"org.easymock.tests.MockClassControlTest.testHashCode":163,"org.easymock.tests2.EasyMockSupportTest.testVerify":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":139,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":396,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":316,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":339,"org.easymock.tests.UsageVarargTest.varargCharAccepted":412,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":351,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests.DefaultClassInstantiatorTest.object":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":87,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":365,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":347,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":32,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":109,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":373,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":148,"org.easymock.tests2.UsageTest.resumeIfFailure":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":44,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":280,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":393,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":77,"org.easymock.samples.SupportTest.voteForRemovals":263,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":23,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":394,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":80,"org.easymock.tests.UsageExpectAndThrowTest.object":21,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":309,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":310,"org.easymock.samples.ConstructorCalledMockTest.testTax":51,"org.easymock.tests.UsageStrictMockTest.range":65,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":332,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":22,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":126,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":422,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":78,"org.easymock.tests2.CaptureTest.testCaptureNone":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":383,"org.easymock.tests.UsageUnorderedTest.message":63,"org.easymock.tests.UsageVerifyTest.twoReturns":67,"org.easymock.tests.UsageVarargTest.varargByteAccepted":417,"org.easymock.tests2.ThreadingTest.testThreadSafe":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":143,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":389,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":151,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":186,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":315,"org.easymock.tests2.UsageConstraintsTest.any":72,"org.easymock.tests2.StubTest.stub":331,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":43,"org.easymock.tests.UsageExpectAndThrowTest.longType":14,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":154,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":359,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests.LimitationsTest.mockNativeMethod":168,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":290,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.MockedExceptionTest.testMockedException":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":131,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":15,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":121,"org.easymock.tests.MockingTest.testNicePartialClassMocking":174,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.CaptureTest.testCaptureLast":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":195,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":252,"org.easymock.tests.MockingTest.testTwoMocks":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":19,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":200,"org.easymock.samples.ExampleTest.removeNonExistingDocument":343,"org.easymock.tests.UsageStrictMockTest.differentMethods":265,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":357,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":55,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":221,"org.easymock.tests2.MockBuilderTest.testCreateMockString":125,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":133,"org.easymock.tests.UsageExpectAndThrowTest.floatType":13,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":323,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":142,"org.easymock.samples.ExampleTest.voteAgainstRemoval":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":110,"org.easymock.tests.LimitationsTest.privateConstructor":167,"org.easymock.tests2.UsageConstraintsTest.testNotNull":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":7,"org.easymock.tests2.UsageTest.defaultResetToNice":236,"org.easymock.samples.ExampleTest.voteAgainstRemovals":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":286,"org.easymock.tests.UsageVarargTest.differentLength":414,"org.easymock.tests2.CallbackTest.callback":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":47,"org.easymock.tests.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":314,"org.easymock.tests.UsageCallCountTest.tooFewCalls":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":424,"org.easymock.tests.UsageThrowableTest.throwCheckedException":33,"org.easymock.tests.MockingTest.testStrictClassMocking":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":94,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":362,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":225,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":82,"org.easymock.tests.ObjectMethodsTest.testHashCode":348,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":201,"org.easymock.samples.ExampleTest.addDocument":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":149,"org.easymock.tests2.DelegateToTest.testStubDelegate":240,"org.easymock.tests2.AnswerTest.stubAnswer":81,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":264,"org.easymock.tests.UsageVarargTest.varargLongAccepted":416,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":379,"org.easymock.tests.UsageExpectAndReturnTest.floatType":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":90,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":52,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageThrowableTest.noUpperLimit":403,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":251,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":244,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":98,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":334,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":54,"org.easymock.tests2.UsageConstraintsTest.testSame":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":272,"org.easymock.samples.SupportTest.addDocument":345,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":134,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":397,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":401,"org.easymock.tests2.NameTest.nameForMock":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":283,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":50,"org.easymock.tests2.UsageStrictMockTest.differentMethods":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":25,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests2.MockedExceptionTest.testRealException":10,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":429,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":333,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":267,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":364,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":88,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":99,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":56,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":198,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":115,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":255,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":208,"org.easymock.tests2.CaptureTest.testCaptureRightOne":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":138,"org.easymock.tests2.UsageConstraintsTest.testOr":194,"org.easymock.tests.UsageRangeTest.combination":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":101,"org.easymock.tests.UsageTest.wrongArguments":69,"org.easymock.tests2.MockBuilderTest.testWithConstructor":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":135,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":284,"org.easymock.tests.UsageVarargTest.varargShortAccepted":415,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":57,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":390,"org.easymock.tests2.UsageConstraintsTest.cmpTo":245,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":322,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests2.CaptureTest.testCaptureFromStub":189,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":354,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":116,"org.easymock.tests.UsageTest.unexpectedCallWithArray":68,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":388,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":285,"org.easymock.tests2.UsageConstraintsTest.constraints":190,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":378,"org.easymock.samples.ExampleTest.addAndChangeDocument":344,"org.easymock.tests.UsageStrictMockTest.testVerify":380,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":406,"org.easymock.tests2.CompareToTest.testGreateThan":74,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":293,"org.easymock.tests.LimitationsTest.abstractClass":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":294,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":213}}]
