[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,3],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[23,24,25,26,27,28,29,30,31,32,33],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[23,24,26,27,28,29,31,32,33],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[38,39],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[3,4,5,6],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[40,41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.ConstructorArgs:54","failures":[45,46,7,8,47,48,49,50,9,10,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,3],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[81,45,45,46,46,82,83,7,84,85,86,87,88,89,38,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,53,109,110,54,111,59,62,72,78,3,5,112,37,113,114,115,39,116,117,118,119,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[122],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[11,12,13,18,19],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[123,124,125,126,127,128],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[23,129,86,91,92,94,96,103,105,130,131,44,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,127,152,153,154,155,156,157,158,159,160,161,162,163,128,164,165,166],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[123,124,125,126,127,128],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[167],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[85,88,103,104,168,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[81,45,46,170,171,172,173,174,175,176,177,82,83,178,179,180,7,181,182,183,184,23,24,185,25,186,26,27,187,188,189,190,2,191,192,129,193,194,29,195,196,197,198,30,199,200,201,202,203,204,84,86,88,89,38,90,91,92,94,31,205,32,206,207,208,209,34,210,35,33,211,212,213,95,96,214,97,98,99,100,101,102,103,104,105,215,216,217,40,218,219,220,106,221,222,130,223,224,131,44,132,225,226,227,133,134,135,136,228,229,137,230,231,232,233,234,235,236,107,108,53,109,237,110,54,238,138,239,240,241,139,140,242,243,141,244,245,246,59,62,72,78,247,248,249,250,142,251,252,143,144,145,253,3,4,5,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,37,113,114,294,295,296,297,298,0,1,299,300,150,301,302,151,303,127,152,304,305,153,154,155,116,306,307,308,309,310,156,311,312,21,313,314,22,315,316,317,318,117,118,319,320,321,322,323,324,325,326,157,327,328,329,330,331,332,332,121,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,158,159,354,355,356,357,160,161,162,358,359,163,360,128,361,164,165,166,362],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[23,129,86,91,92,94,96,103,105,130,131,44,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,127,152,153,154,155,156,157,158,159,160,161,162,163,128,164,165,166],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[62],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[363,123,364,365,366,367,368,369,124,370,371,23,129,96,103,105,130,224,131,44,132,133,134,136,137,138,139,140,141,142,252,143,144,145,253,372,373,374,300,375,376,125,377,126,378,379,380,149,151,303,127,152,153,154,155,156,157,353,158,159,163,128,361,164,165,166,362],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[31,32,206,207,208,209,34,35,36,33,211,213],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[381,223],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[81,45,46,170,171,172,173,174,175,382,176,177,82,83,178,179,180,7,8,383,384,385,386,387,388,181,389,182,183,184,23,24,390,185,25,186,26,27,187,28,188,189,190,2,191,192,129,193,194,29,195,196,197,198,30,199,200,201,202,203,204,84,49,86,87,50,391,88,89,38,9,90,392,10,91,92,52,94,31,205,32,206,207,208,209,34,210,35,33,211,212,213,95,96,214,97,98,99,100,393,101,394,381,102,103,104,105,395,396,215,216,217,40,218,219,220,106,221,397,398,399,400,401,222,402,403,404,405,406,407,130,223,224,131,44,132,225,226,227,133,134,135,136,408,409,228,229,137,410,411,412,413,414,415,230,416,417,418,419,420,421,422,231,232,233,423,234,424,425,426,427,428,429,430,235,236,107,108,53,109,431,237,110,54,55,238,138,239,240,241,139,140,242,243,141,244,245,246,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,247,432,433,248,249,250,142,251,252,143,144,145,253,3,4,5,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,434,435,436,147,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,437,438,112,37,113,439,114,440,441,442,443,444,445,446,447,41,448,449,450,451,452,453,294,295,296,297,298,115,454,455,456,457,39,458,459,0,372,1,299,373,374,300,375,376,460,461,150,462,301,302,151,303,127,152,304,305,153,154,155,116,463,464,465,466,467,306,307,308,309,310,468,469,470,471,472,473,474,475,476,156,477,478,479,311,312,480,21,313,314,22,315,316,317,318,167,117,118,119,481,319,320,321,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,322,323,324,506,325,326,157,327,328,329,330,331,507,120,508,509,510,511,512,513,514,515,121,516,333,334,335,336,337,338,339,340,341,342,343,344,345,346,42,517,43,518,519,520,521,522,523,347,348,349,350,351,352,353,158,159,524,525,354,355,356,357,160,161,162,358,359,163,360,128,361,164,165,166,362,526,527,528,529],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[45,46,49,51,52,394],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[473,530,531],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[449,499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[45,45,46,46,183,184,185,25,186,26,190,191,192,193,194,30,199,200,211,236,252,294,295,296,297,298,311,333,334,337,342,343,344,345,346,358,359,361],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[31,32,206,207,208,209,34,35,36,33,211,213],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.UsageTest.argumentsOrdered":134,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":492,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":132,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":177,"org.easymock.tests2.DelegateToTest.testReturnException":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":348,"org.easymock.tests.MockingTest.testPartialClassMocking":37,"org.easymock.tests.MockClassControlTest.testToString":508,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":384,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":501,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":187,"org.easymock.tests2.UsageTest.wrongArguments":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":333,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":421,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":340,"org.easymock.samples.ExampleTest.answerVsDelegate":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":39,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":97,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":513,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests2.CaptureTest.testPrimitive":206,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":273,"org.easymock.tests.UsageTest.moreThanOneArgument":303,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":296,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":463,"org.easymock.tests.UsageTest.argumentsOrdered":154,"org.easymock.tests.UsageVarargTest.varargIntAccepted":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":497,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":346,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":366,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests2.DependencyTest.testClassMocking":408,"org.easymock.tests2.AnswerTest.answer":247,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":499,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":204,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":455,"org.easymock.tests2.CaptureTest.testAnd":31,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":467,"org.easymock.tests2.DelegateToTest.testDelegate":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":269,"org.easymock.tests.LimitationsTest.mockFinalMethod":516,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":310,"org.easymock.tests2.DependencyTest.testClassMockingSupport":409,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":375,"org.easymock.tests2.CaptureTest.testCapture1_2446744":207,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":202,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":445,"org.easymock.tests.UsageThrowableTest.throwError":21,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":457,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":407,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":298,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":80,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":446,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":343,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":528,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":523,"org.easymock.tests2.UsageTest.niceToStrict":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":418,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":263,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":454,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":479,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":524,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":338,"org.easymock.tests.UsageOverloadedMethodTest.overloading":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":77,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":191,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":285,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":319,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":530,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":2,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":35,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":506,"org.easymock.tests.MockClassControlTest.testEquals":512,"org.easymock.tests2.EasyMockSupportClassTest.testAll":59,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":271,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":368,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":203,"org.easymock.tests2.CaptureTest.testCaptureAll":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":308,"org.easymock.tests.MockNameTest.defaultName":480,"org.easymock.tests2.UsageConstraintsTest.testMatches":192,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":297,"org.easymock.samples.ExampleTest.voteForRemovals":175,"org.easymock.tests.UsageVarargTest.allKinds":331,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":353,"org.easymock.samples.BasicClassMockTest.testPrintContent":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":309,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":317,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":352,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":20,"org.easymock.tests2.UsageConstraintsTest.greaterThan":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":462,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":105,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":476,"org.easymock.samples.ExampleTest.voteForRemoval":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":395,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":100,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":116,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":239,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":347,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":422,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":488,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":240,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":281,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":40,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":500,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":330,"org.easymock.tests.GenericTest.testBridgedEquals":481,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":161,"org.easymock.tests.UsageExpectAndReturnTest.longType":277,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":306,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":272,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":461,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":294,"org.easymock.tests.UsageCallCountTest.tooManyCalls":162,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":377,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":316,"org.easymock.tests.MockingTest.testNiceClassMocking":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":108,"org.easymock.tests.MockingTest.testClassMocking":438,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":525,"org.easymock.tests2.UsageConstraintsTest.testContains":190,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":85,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":106,"org.easymock.tests2.UsageConstraintsTest.testFind":185,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":321,"org.easymock.tests.MockTypeTest.fromEasyMockClass":456,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests.UsageExpectAndReturnTest.object":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":15,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":521,"org.easymock.tests.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":487,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":464,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":42,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":290,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":322,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":1,"org.easymock.tests.MockClassControlTest.testHashCode":511,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":398,"org.easymock.tests2.EasyMockSupportTest.testVerify":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":69,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":365,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":465,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":478,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":0,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":148,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":201,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":410,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":468,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":505,"org.easymock.tests2.UsageTest.openCallCountByLastCall":225,"org.easymock.tests.DefaultClassInstantiatorTest.object":469,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":477,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":519,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":414,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":397,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":510,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":260,"org.easymock.tests.CapturesMatcherTest.test":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":434,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":78,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":367,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":350,"org.easymock.tests2.StubTest.stubWithReturnValue":236,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":283,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":498,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":12,"org.easymock.samples.SupportTest.voteForRemovals":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":124,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":266,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":504,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":432,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":43,"org.easymock.tests.UsageExpectAndThrowTest.object":264,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":195,"org.easymock.tests2.DelegateToTest.testWrongClass":233,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":358,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":359,"org.easymock.tests.UsageStrictMockTest.range":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":429,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":339,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":125,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":529,"org.easymock.tests2.CaptureTest.testCaptureNone":210,"org.easymock.tests.UsageUnorderedTest.message":156,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":146,"org.easymock.tests.UsageVerifyTest.twoReturns":159,"org.easymock.tests.UsageVarargTest.varargByteAccepted":329,"org.easymock.tests2.ThreadingTest.testThreadSafe":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":73,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":357,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":522,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":82,"org.easymock.tests2.CaptureTest.testCapture_2617107":32,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":502,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":336,"org.easymock.tests2.UsageConstraintsTest.any":188,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":503,"org.easymock.tests.UsageExpectAndThrowTest.longType":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":473,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests.LimitationsTest.mockNativeMethod":121,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":413,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":169,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests2.NameTest.nameForMocksControl":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":415,"org.easymock.tests2.MockedExceptionTest.testMockedException":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":61,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":389,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":258,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":90,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":411,"org.easymock.tests2.CaptureTest.testCaptureLast":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":376,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests.MockingTest.testTwoMocks":112,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":262,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":199,"org.easymock.samples.ExampleTest.removeNonExistingDocument":382,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":399,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":471,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":217,"org.easymock.tests2.ConstraintsToStringTest.andToString":369,"org.easymock.tests2.MockBuilderTest.testCreateMockString":94,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":63,"org.easymock.tests.UsageExpectAndThrowTest.floatType":256,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":248,"org.easymock.tests.UsageVerifyTest.twoThrows":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":383,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":72,"org.easymock.samples.ExampleTest.voteAgainstRemoval":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":527,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":493,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.LimitationsTest.privateConstructor":515,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":48,"org.easymock.tests2.UsageConstraintsTest.testNotNull":30,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":318,"org.easymock.tests2.UsageTest.defaultResetToNice":227,"org.easymock.samples.ExampleTest.voteAgainstRemovals":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":412,"org.easymock.tests.UsageVarargTest.differentLength":157,"org.easymock.tests2.CallbackTest.callback":137,"org.easymock.tests2.UsageConstraintsTest.equals":390,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":378,"org.easymock.tests.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":335,"org.easymock.tests.UsageCallCountTest.tooFewCalls":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":341,"org.easymock.tests.UsageThrowableTest.throwCheckedException":315,"org.easymock.tests.MockingTest.testStrictClassMocking":437,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":126,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":110,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":237,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":250,"org.easymock.tests.ObjectMethodsTest.testHashCode":520,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":18,"org.easymock.tests2.NameTest.nameForNiceMock":387,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":16,"org.easymock.samples.ExampleTest.addDocument":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.DelegateToTest.testStubDelegate":232,"org.easymock.tests2.AnswerTest.stubAnswer":249,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":361,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":392,"org.easymock.tests.UsageVarargTest.varargLongAccepted":328,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageExpectAndReturnTest.floatType":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":292,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":46,"org.easymock.tests2.ConstraintsToStringTest.orToString":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":405,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":194,"org.easymock.tests.UsageThrowableTest.noUpperLimit":313,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":424,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":208,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":531,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":470,"org.easymock.tests2.UsageConstraintsTest.testSame":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":275,"org.easymock.samples.SupportTest.addDocument":179,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":431,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":64,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":404,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests2.NameTest.nameForMock":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":286,"org.easymock.tests2.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":52,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":268,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":518,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":496,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":430,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":379,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":495,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":252,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":334,"org.easymock.tests2.NameTest.nameForStrictMock":386,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":391,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":98,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":428,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":472,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":144,"org.easymock.tests2.UsageConstraintsTest.lessThan":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":17,"org.easymock.tests2.CaptureTest.testCaptureRightOne":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":68,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":122,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.UsageTest.wrongArguments":152,"org.easymock.tests2.MockBuilderTest.testWithConstructor":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":65,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":287,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":474,"org.easymock.tests.UsageVarargTest.varargShortAccepted":327,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":160,"org.easymock.tests2.UsageConstraintsTest.cmpTo":189,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":485,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":444,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":87,"org.easymock.tests.UsageTest.unexpectedCallWithArray":127,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":128,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":356,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":288,"org.easymock.tests2.CaptureTest.testCapture":36,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.samples.ExampleTest.addAndChangeDocument":176,"org.easymock.tests2.ConstraintsToStringTest.notToString":364,"org.easymock.tests.UsageStrictMockTest.testVerify":526,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":178,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":307,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":209,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":344,"org.easymock.tests.LimitationsTest.abstractClass":514,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":345,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":140,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":323}}]
