[{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[72,23,73,74,75,24,25,76,77,26,78,79,80,81,27,82,83,84,85,86,87,88,89,90,91,92,93,94,28,95,96,97,98,99,100,101,102,103,29,104,105,106,31,12,107,108,33,109,110,111,112,113,34,114,35,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,21,145,38,39,146,147,148,149,150,40,151,152,42,153,154,155,46,47,156,157,158,159,160,161,162,163,164,48,165,166,167,168,169,170,171,172,172,173,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,52,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,58,249,62,63,250,64,251,252,253,69,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,70,71,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[297],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[8,14,15,16,18,19,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[38,41,44,45,54,58,60,62,65,66,67,68,70,71],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[144,295],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:190","failures":[72,23,73,74,75,24,25,76,77,26,78,79,80,81,27,82,83,84,85,86,87,88,89,90,91,92,93,94,28,95,96,97,98,99,100,101,102,103,104,12,107,33,111,113,34,114,35,115,116,117,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,143,145,38,39,150,40,151,152,42,153,154,155,46,47,156,162,182,184,185,186,187,188,189,193,195,196,198,199,52,202,203,204,205,207,208,211,242,243,249,62,63,64,251,252,253,69,268,269,270,273,274,275,276,277,284,71,287,289,296],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[140,141,142,143,144,182,185,186,187,188,189,199,206,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,257,258,259,260,261,262,70,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[298,299,300,301,302,303,304,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[12,107,306,307],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[58,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[113,309,310,311,34,114,35,312,313,314,315,316,141,142,143,21,22,317,318,319,146,320,321,147,322,323,324,325,326,327,328,329,330,148,331,332,333,334,335,149,336,337,165,166,167,168,170,171,338,339,172,172,173,173,174,340,200,341,201,342,343,344,345,346,347,348,349,350,351,352,353,354,240,355,250,356,357,358,359,360,361,362,363,364,365,290,291,292,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[82,83],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[367,368,369,370,60,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[156,159,161,163,164,48,177,293],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[371,372,373,374,375,72,23,73,74,75,24,25,76,77,26,78,79,376,80,81,27,82,377,83,84,85,86,87,88,378,89,90,91,92,93,94,28,95,96,97,98,99,379,100,101,102,103,380,29,381,382,104,383,105,106,9,30,31,32,12,107,306,108,33,109,110,111,112,384,385,113,309,310,311,34,114,35,312,313,386,387,388,389,115,116,117,118,119,120,121,122,123,124,125,126,127,390,128,129,391,392,130,131,132,133,134,135,136,314,316,393,394,395,396,397,137,138,139,140,141,142,143,144,21,22,36,398,145,37,38,39,399,317,318,319,146,320,321,147,322,323,324,325,326,327,328,329,330,148,331,332,333,334,335,149,336,337,400,401,402,403,298,150,404,299,405,300,301,406,40,151,152,41,42,43,153,154,155,44,45,46,47,156,157,158,159,160,161,407,408,409,410,302,162,411,303,412,304,305,413,163,297,164,48,165,166,167,168,169,170,171,338,339,172,172,173,173,414,174,415,416,175,176,177,178,179,417,180,418,181,182,183,184,185,186,187,188,189,190,191,192,193,194,419,195,420,196,197,198,199,421,422,423,424,425,426,49,427,428,429,430,431,340,200,341,201,342,52,202,203,204,205,206,207,208,209,210,211,432,433,434,435,436,437,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,343,344,345,346,347,348,349,350,438,439,232,440,441,442,55,56,57,351,443,444,352,445,446,233,234,235,236,237,238,239,447,448,449,450,451,452,453,454,455,456,457,458,353,354,240,355,241,242,243,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,244,475,476,477,478,479,245,480,246,247,248,58,481,482,483,484,485,59,486,60,249,61,62,63,487,488,250,64,251,65,66,252,253,67,68,69,254,255,256,257,258,259,260,261,262,489,490,491,492,356,357,358,359,360,361,362,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,493,283,494,284,70,71,285,286,287,288,289,495,363,364,365,290,291,496,292,497,498,366,293,499,294,295,500,296,501],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[12,107,306],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[27,82,84,86,87,378,97,101,126,390,133],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[120,124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[38,41,44,45,54,58,60,62,65,66,67,68,70,71],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[12,107,306,307],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[80,81,27,82,83,84,85,86,87,88,378,89,90,91,92,93,94,28,95,96,97,98,99,379,100,101,102,103,113,118,126,127,390,128,129,391,392,130,131,132,133,134,135,136,145,163,164,190,191,192,193,194,431,205,206,207,208,209,210,211,233,234,58,60,249,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[378],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[84],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":82,"org.easymock.tests2.UsageTest.argumentsOrdered":45,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":64,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":43,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":414,"org.easymock.tests2.DelegateToTest.testReturnException":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":290,"org.easymock.tests.MockClassControlTest.testToString":345,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":371,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":212,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests2.UsageTest.wrongArguments":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":207,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":491,"org.easymock.samples.ExampleTest.answerVsDelegate":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":352,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":498,"org.easymock.tests2.UsageConstraintsTest.testNull":84,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":350,"org.easymock.tests2.CaptureTest.testPrimitive":128,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":287,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":235,"org.easymock.tests.UsageVarargTest.varargIntAccepted":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":380,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests.ReplayStateInvalidUsageTest.times":455,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests2.DependencyTest.testClassMocking":396,"org.easymock.tests2.AnswerTest.answer":156,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":389,"org.easymock.tests2.CaptureTest.testAnd":126,"org.easymock.tests2.UsageTest.strictResetToDefault":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":203,"org.easymock.tests2.DelegateToTest.testDelegate":125,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":227,"org.easymock.tests.LimitationsTest.mockFinalMethod":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":485,"org.easymock.tests2.DependencyTest.testClassMockingSupport":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":493,"org.easymock.tests2.CaptureTest.testCapture1_2446744":129,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":387,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":449,"org.easymock.tests.UsageThrowableTest.throwError":182,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":444,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":337,"org.easymock.samples.PartialClassMockTest.testGetArea":174,"org.easymock.tests.MockingTest.testInterfaceMocking":496,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":242,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":437,"org.easymock.tests2.UsageTest.niceToStrict":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":5,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":104,"org.easymock.tests2.MockBuilderTest.testCreateMock":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":367,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":24,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":438,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":489,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":2,"org.easymock.tests.UsageOverloadedMethodTest.overloading":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":335,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":295,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":132,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":424,"org.easymock.tests2.EasyMockSupportClassTest.testAll":146,"org.easymock.tests.MockClassControlTest.testEquals":349,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":388,"org.easymock.tests2.CaptureTest.testCaptureAll":127,"org.easymock.tests.MockNameTest.defaultName":495,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":288,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests.UsageVarargTest.allKinds":431,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":484,"org.easymock.samples.BasicClassMockTest.testPrintContent":339,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":188,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":36,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":20,"org.easymock.tests2.UsageConstraintsTest.greaterThan":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":202,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.samples.ExampleTest.voteForRemoval":178,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":362,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":116,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":384,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":250,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":73,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.CaptureTest.testCaptureFirst":136,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":74,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":47,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":270,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.CaptureTest.testCapture2_2446744":135,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":476,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":31,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":430,"org.easymock.tests.GenericTest.testBridgedEquals":342,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":3,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":56,"org.easymock.tests.UsageExpectAndReturnTest.longType":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":481,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":196,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":285,"org.easymock.tests.UsageCallCountTest.tooManyCalls":57,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":166,"org.easymock.tests.MockingTest.testNiceClassMocking":366,"org.easymock.tests.MockingTest.testClassMocking":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":439,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":143,"org.easymock.tests2.UsageConstraintsTest.testFind":83,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":199,"org.easymock.tests.MockTypeTest.fromEasyMockClass":443,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":59,"org.easymock.tests.UsageExpectAndReturnTest.object":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":15,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":435,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":4,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":408,"org.easymock.tests.MockClassControlTest.testHashCode":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":328,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":386,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":53,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":395,"org.easymock.tests.UsageVarargTest.varargCharAccepted":425,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":480,"org.easymock.tests2.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":6,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":79,"org.easymock.tests.DefaultClassInstantiatorTest.object":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":246,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":433,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":407,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":149,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":346,"org.easymock.tests2.UsageTest.resumeIfFailure":46,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":272,"org.easymock.tests2.SerializationTest.testAllMockedMethod":306,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":11,"org.easymock.samples.SupportTest.voteForRemovals":175,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":368,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":410,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":307,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":245,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":157,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":420,"org.easymock.tests.UsageExpectAndThrowTest.object":222,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":98,"org.easymock.tests2.DelegateToTest.testWrongClass":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":233,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":234,"org.easymock.samples.ConstructorCalledMockTest.testTax":172,"org.easymock.tests.UsageStrictMockTest.range":62,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":393,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":165,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":105,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":457,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":490,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":369,"org.easymock.tests2.CaptureTest.testCaptureNone":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":243,"org.easymock.tests.UsageUnorderedTest.message":58,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":50,"org.easymock.tests.UsageVerifyTest.twoReturns":71,"org.easymock.tests.UsageVarargTest.varargByteAccepted":429,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":331,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":442,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":436,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":338,"org.easymock.tests2.CaptureTest.testCapture_2617107":390,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":210,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":454,"org.easymock.tests2.StubTest.stub":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndThrowTest.longType":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":453,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests.LimitationsTest.mockNativeMethod":240,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":402,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":399,"org.easymock.tests2.NameTest.nameForMocksControl":375,"org.easymock.tests2.MockedExceptionTest.testMockedException":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":321,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":292,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":106,"org.easymock.tests.MockingTest.testNicePartialClassMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":400,"org.easymock.tests2.CaptureTest.testCaptureLast":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":283,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":171,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":99,"org.easymock.tests.MockingTest.testTwoMocks":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":102,"org.easymock.samples.ExampleTest.removeNonExistingDocument":418,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":451,"org.easymock.tests.UsageStrictMockTest.differentMethods":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":409,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":117,"org.easymock.tests2.MockBuilderTest.testCreateMockString":32,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":343,"org.easymock.tests.UsageExpectAndThrowTest.floatType":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":322,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":319,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":159,"org.easymock.tests.UsageVerifyTest.twoThrows":70,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":148,"org.easymock.samples.ExampleTest.voteAgainstRemoval":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":241,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":354,"org.easymock.tests2.UsageConstraintsTest.testNotNull":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":189,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":141,"org.easymock.tests2.UsageTest.defaultResetToNice":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":401,"org.easymock.tests.UsageVarargTest.differentLength":49,"org.easymock.tests2.CallbackTest.callback":48,"org.easymock.tests2.UsageConstraintsTest.equals":377,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":309,"org.easymock.tests.UsageTest.openCallCountByLastCall":252,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":209,"org.easymock.tests.UsageCallCountTest.tooFewCalls":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":492,"org.easymock.tests.UsageThrowableTest.throwCheckedException":186,"org.easymock.tests.MockingTest.testStrictClassMocking":363,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":370,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":404,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":167,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":456,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":169,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":161,"org.easymock.tests.ObjectMethodsTest.testHashCode":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":18,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":119,"org.easymock.tests2.NameTest.nameForNiceMock":374,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":16,"org.easymock.samples.ExampleTest.addDocument":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":332,"org.easymock.tests2.DelegateToTest.testStubDelegate":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.AnswerTest.stubAnswer":160,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":249,"org.easymock.tests.UsageVarargTest.varargLongAccepted":428,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatType":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":173,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":500,"org.easymock.tests.UsageThrowableTest.noUpperLimit":183,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":304,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":314,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":391,"org.easymock.tests2.SerializationTest.test":107,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":357,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":264,"org.easymock.samples.SupportTest.addDocument":416,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":323,"org.easymock.tests.GenericTest.testPackageScope":200,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":497,"org.easymock.tests2.NameTest.nameForMock":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":275,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":267,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":226,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":204,"org.easymock.tests2.MockedExceptionTest.testRealException":144,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":394,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":145,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":458,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":208,"org.easymock.tests2.NameTest.nameForStrictMock":373,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":316,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":97,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":308,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":17,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":23,"org.easymock.tests2.CaptureTest.testCaptureRightOne":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":327,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests.UsageRangeTest.combination":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":324,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":276,"org.easymock.tests.UsageVarargTest.varargShortAccepted":427,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":55,"org.easymock.tests2.UsageConstraintsTest.cmpTo":90,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":134,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":448,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":381,"org.easymock.tests.UsageTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":277,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.samples.ExampleTest.addAndChangeDocument":181,"org.easymock.tests.UsageStrictMockTest.testVerify":488,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":415,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":482,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":269,"org.easymock.tests.LimitationsTest.abstractClass":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":296,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":25}}]
