[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,23,24,25,26,12,13,14,15,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    this.java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:434","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[33,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[35,36,37,38,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,33,52,53,54,55,56,57,58,59,27,28,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,0,81,1,2,82,83,84,3,4,85,86,87,88,89,5,6,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,165,166,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,11,12,238,13,14,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,15,264,16,265,266,17,18,267,19,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,20,21,22,305,306,307,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[83,88,159,160,161,162,164,177,186,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,229,230,263,266,274,275,283,284,285,286,287,288,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,31,41,42,44,45,47,49,50,51,33,52,53,54,55,56,57,58,59,27,28,60,61,62,63,64,65,67,69,70,71,72,73,76,0,1,2,83,84,3,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,141,142,143,145,146,151,152,153,154,155,156,157,158,161,164,167,168,169,171,172,173,176,188,190,191,192,193,194,196,223,225,226,227,228,229,230,232,233,234,12,13,14,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,15,265,266,267,268,269,270,271,272,273,276,277,292,302,303,304,20,22,305,306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[309,310,311,312,313,39,314,315,46,48,27,72,316,73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[317],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[319],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,23,24,26,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[309,310,311,312,320,321,313,314,322,316],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[1,24,26,13,19,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[315,27],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[323,324,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[138,139,140,142,326,146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[35,38,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,33,52,53,54,55,56,57,58,59,327,27,28,29,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,79,80,328,0,81,1,2,82,83,84,3,4,85,86,87,88,89,5,6,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,329,167,330,331,168,169,170,171,172,332,173,174,333,334,175,335,336,337,338,339,340,176,177,178,179,180,181,182,183,185,186,189,190,191,192,193,194,195,196,341,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,237,342,11,12,238,13,14,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,263,15,264,16,265,266,17,18,267,19,268,270,271,272,273,274,275,276,277,283,284,285,286,287,288,293,294,295,296,297,298,299,300,301,302,303,304,20,21,22,305,306,343,344,345,346,347,348,349,350,351,352,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[35,38,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,33,52,53,54,55,56,57,58,59,327,27,28,29,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,79,80,328,0,81,1,2,82,83,84,3,4,85,86,87,88,89,5,6,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,7,8,9,10,165,165,166,166,329,167,330,331,168,169,170,171,172,332,173,353,174,333,334,354,355,175,335,336,337,338,339,340,176,177,178,179,180,181,182,356,357,358,359,360,361,362,363,183,185,186,188,189,190,191,192,193,194,195,196,341,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,364,365,366,367,368,369,370,371,372,373,374,375,237,342,11,12,238,13,14,239,376,377,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,263,15,264,16,265,266,17,18,267,19,268,269,270,271,272,273,274,275,276,277,283,284,285,286,287,288,378,379,380,293,294,295,296,297,298,299,300,301,302,303,304,20,21,22,305,306,343,344,345,346,347,348,349,350,351,352,308],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":95,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.UsageTest.argumentsOrdered":6,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":286,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":86,"org.easymock.tests2.StubTest.stubWithReturnValue":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":314,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":249,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests2.DelegateToTest.testReturnException":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":284,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":198,"org.easymock.tests.MockingTest.testPartialClassMocking":232,"org.easymock.samples.SupportTest.voteForRemovals":168,"org.easymock.tests.MockClassControlTest.testToString":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":199,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":36,"org.easymock.tests.UsageExpectAndThrowTest.object":213,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":309,"org.easymock.tests2.DelegateToTest.testWrongClass":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":272,"org.easymock.tests2.UsageTest.wrongArguments":4,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":295,"org.easymock.samples.ExampleTest.answerVsDelegate":170,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests2.UsageConstraintsTest.testNull":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":214,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":57,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":276,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":374,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":222,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":294,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":262,"org.easymock.tests2.CaptureTest.testCaptureNone":141,"org.easymock.tests.UsageUnorderedTest.message":19,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":351,"org.easymock.tests2.ThreadingTest.testThreadSafe":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":278,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.UsageVarargTest.varargIntAccepted":345,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":337,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":333,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":43,"org.easymock.tests2.UsageConstraintsTest.any":103,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests2.StubTest.stub":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":285,"org.easymock.tests.UsageExpectAndThrowTest.longType":206,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":370,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":81,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests.LimitationsTest.mockNativeMethod":277,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":151,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":259,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":197,"org.easymock.tests2.AnswerTest.answer":35,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":150,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":68,"org.easymock.tests2.NameTest.nameForMocksControl":10,"org.easymock.tests2.MockedExceptionTest.testMockedException":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":52,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":282,"org.easymock.tests2.DelegateToTest.testDelegate":79,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":207,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":218,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.CaptureTest.testCaptureLast":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":301,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.MockingTest.testTwoMocks":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":235,"org.easymock.tests2.CaptureTest.testCapture1_2446744":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":148,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":118,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":366,"org.easymock.tests.UsageThrowableTest.throwError":223,"org.easymock.samples.ExampleTest.removeNonExistingDocument":353,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":368,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":130,"org.easymock.tests2.MockBuilderTest.testCreateMockString":48,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.floatType":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":38,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.PartialClassMockTest.testGetArea":167,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.samples.ExampleTest.voteAgainstRemoval":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.UsageTest.niceToStrict":85,"org.easymock.tests2.UsageConstraintsTest.testNotNull":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":230,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":159,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.UsageTest.defaultResetToNice":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":46,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":255,"org.easymock.tests.UsageVarargTest.differentLength":348,"org.easymock.tests2.CallbackTest.callback":39,"org.easymock.tests.UsageTest.openCallCountByLastCall":265,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":212,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":92,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":202,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.UsageCallCountTest.tooFewCalls":335,"org.easymock.tests.UsageOverloadedMethodTest.overloading":303,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":186,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":324,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":106,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":296,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":319,"org.easymock.tests.UsageThrowableTest.throwCheckedException":227,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":220,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":299,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":149,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":373,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.tests.ObjectMethodsTest.testHashCode":379,"org.easymock.samples.ExampleTest.voteForRemovals":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":320,"org.easymock.tests2.NameTest.nameForNiceMock":9,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":132,"org.easymock.tests.UsageVarargTest.allKinds":308,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":311,"org.easymock.samples.BasicClassMockTest.testPrintContent":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":300,"org.easymock.samples.ExampleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testStubDelegate":76,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":229,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":80,"org.easymock.tests2.AnswerTest.stubAnswer":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":288,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":78,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":313,"org.easymock.tests2.UsageConstraintsTest.greaterThan":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":269,"org.easymock.tests.UsageVarargTest.varargLongAccepted":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":239,"org.easymock.samples.ExampleTest.voteForRemoval":171,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":258,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":66,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":166,"org.easymock.tests.UsageThrowableTest.noUpperLimit":224,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":195,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":93,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":138,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":315,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":51,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":241,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.samples.SupportTest.addDocument":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":283,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":74,"org.easymock.tests2.CaptureTest.testCaptureFirst":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":33,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":369,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":247,"org.easymock.tests.GenericTest.testPackageScope":196,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":131,"org.easymock.tests2.CaptureTest.testCapture2_2446744":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":339,"org.easymock.tests2.NameTest.nameForMock":7,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":297,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":221,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":115,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":219,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":244,"org.easymock.tests.UsageCallCountTest.tooManyCalls":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":271,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests2.MockedExceptionTest.testRealException":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":208,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":228,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":355,"org.easymock.tests2.NameTest.nameForStrictMock":8,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":161,"org.easymock.tests2.UsageConstraintsTest.testFind":96,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":304,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":121,"org.easymock.tests.UsageExpectAndReturnTest.object":250,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":24,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":67,"org.easymock.tests.ErrorMessageTest.testGetters":25,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":56,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":347,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":310,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":380,"org.easymock.tests.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":312,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":50,"org.easymock.tests2.CaptureTest.testCaptureRightOne":143,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":279,"org.easymock.tests2.UsageConstraintsTest.testOr":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":316,"org.easymock.tests.UsageRangeTest.combination":268,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":343,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":185,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":253,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":280,"org.easymock.tests.UsageVarargTest.varargShortAccepted":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":183,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":338,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests.UsageVarargTest.varargCharAccepted":346,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":37,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":328,"org.easymock.tests2.UsageTest.openCallCountByLastCall":87,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests.DefaultClassInstantiatorTest.object":377,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":59,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":200,"org.easymock.tests2.CaptureTest.testCaptureFromStub":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":365,"org.easymock.tests.UsageTest.unexpectedCallWithArray":264,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":226,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":254,"org.easymock.tests2.CaptureTest.testCapture":326,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":360,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":238,"org.easymock.tests2.UsageConstraintsTest.constraints":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":209,"org.easymock.samples.ExampleTest.addAndChangeDocument":174,"org.easymock.tests.UsageStrictMockTest.testVerify":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":289,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":330,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":359,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":298,"org.easymock.tests2.UsageTest.resumeIfFailure":90,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":54,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":26}}]
