[{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[5,6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,9,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,6,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[220,141],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[221],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[222],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[224,225,226,227,228,229,230,231,232,233,234,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[220,236,237,238,239,115,119,120,240,241,242,141,243,215,216,217,218],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[70,71,72,244,245,246,247,248,249,250,251,252,253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[254],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[255,256,257,258,259,260,254,261,262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[32,264,265,266,37,267,268,38,269,43,44,47,48,61,68,270,271,73,272,81,83,85,86,88,89,273,9,274,275,276,277,106,278,279,109,110,111,280,112,113,239,115,116,117,119,120,281,121,282,130,131,5,6,283,141,284,142,285,286,143,146,287,288,289,290,291,292,293,294,295,296,297,152,153,154,7,8,177,178,298,299,300,208,209,210,301,302,243,215,216,217,218,219],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":93,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":302,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":249,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":117,"org.easymock.tests2.StubTest.stubWithReturnValue":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":261,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests2.DelegateToTest.testReturnException":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":247,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":222,"org.easymock.tests.MockingTest.testPartialClassMocking":203,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":237,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":221,"org.easymock.tests.MockClassControlTest.testToString":208,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":34,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":256,"org.easymock.tests2.DelegateToTest.testWrongClass":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests2.UsageTest.wrongArguments":115,"org.easymock.tests.UsageStrictMockTest.range":285,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":128,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":87,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":213,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageTest.moreThanOneArgument":243,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":172,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":127,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":240,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":263,"org.easymock.tests.UsageUnorderedTest.message":298,"org.easymock.tests.UsageVerifyTest.twoReturns":131,"org.easymock.tests.UsageVarargTest.varargByteAccepted":200,"org.easymock.tests.UsageTest.argumentsOrdered":218,"org.easymock.tests.UsageVarargTest.varargIntAccepted":195,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":151,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":287,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":27,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":260,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":190,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":248,"org.easymock.tests.UsageExpectAndThrowTest.longType":180,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":168,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests.ReplayStateInvalidUsageTest.times":170,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests2.AnswerTest.answer":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":225,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":68,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests2.NameTest.nameForMocksControl":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":226,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":84,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":303,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":183,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":6,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":48,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":75,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests.UsageThrowableTest.throwError":132,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":164,"org.easymock.samples.ExampleTest.removeNonExistingDocument":24,"org.easymock.tests.UsageStrictMockTest.differentMethods":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":166,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":231,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":235,"org.easymock.tests2.MockBuilderTest.testCreateMockString":112,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":206,"org.easymock.tests.UsageExpectAndThrowTest.floatType":179,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":9,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":105,"org.easymock.tests.UsageVerifyTest.twoThrows":130,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":165,"org.easymock.samples.ExampleTest.voteAgainstRemoval":21,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":288,"org.easymock.tests2.UsageTest.niceToStrict":116,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":139,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":11,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.MockBuilderTest.testCreateMock":111,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":161,"org.easymock.tests.UsageVarargTest.differentLength":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":224,"org.easymock.tests2.CallbackTest.callback":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":220,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":126,"org.easymock.tests.UsageCallCountTest.tooFewCalls":297,"org.easymock.tests.UsageOverloadedMethodTest.overloading":192,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":45,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":98,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":129,"org.easymock.tests.UsageThrowableTest.throwCheckedException":136,"org.easymock.tests.MockClassControlTest.testEquals":212,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":241,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":76,"org.easymock.tests2.CaptureTest.testCaptureAll":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":252,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":47,"org.easymock.tests.MockNameTest.defaultName":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":264,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":162,"org.easymock.tests.ObjectMethodsTest.testHashCode":147,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":259,"org.easymock.tests2.NameTest.nameForNiceMock":276,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":31,"org.easymock.tests.UsageVarargTest.allKinds":202,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":282,"org.easymock.tests2.DependencyTest.testInterfaceMocking":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":258,"org.easymock.samples.BasicClassMockTest.testPrintContent":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":188,"org.easymock.samples.ExampleTest.addDocument":22,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":138,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":233,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":254,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":270,"org.easymock.tests.UsageVarargTest.varargLongAccepted":199,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.samples.ExampleTest.voteForRemoval":20,"org.easymock.tests.UsageExpectAndReturnTest.floatType":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":35,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":8,"org.easymock.tests.UsageThrowableTest.noUpperLimit":133,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":214,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests2.SerializationTest.test":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":82,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":134,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":246,"org.easymock.tests2.CaptureTest.testCaptureFirst":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests2.UsageTest.moreThanOneArgument":239,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":30,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":234,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":201,"org.easymock.tests.GenericTest.testBridgedEquals":223,"org.easymock.tests2.NameTest.nameForMock":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":153,"org.easymock.tests.UsageExpectAndReturnTest.longType":158,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":185,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":10,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests2.UsageStrictMockTest.differentMethods":268,"org.easymock.tests.UsageCallCountTest.tooManyCalls":154,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":296,"org.easymock.tests2.MockedExceptionTest.testRealException":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":262,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":43,"org.easymock.tests2.NameTest.nameForStrictMock":275,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":149,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests.MockTypeTest.fromEasyMockClass":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndReturnTest.object":160,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":278,"org.easymock.tests2.UsageStrictMockTest.range":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":257,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":232,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":148,"org.easymock.tests.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":81,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":242,"org.easymock.tests.UsageRangeTest.combination":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":255,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":216,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":175,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":230,"org.easymock.tests.MockClassControlTest.testHashCode":211,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":207,"org.easymock.tests2.EasyMockSupportTest.testVerify":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":159,"org.easymock.tests.UsageVarargTest.varargShortAccepted":198,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":174,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":74,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":152,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests.UsageVarargTest.varargCharAccepted":196,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":36,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests.DefaultClassInstantiatorTest.object":145,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":163,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":279,"org.easymock.tests.UsageTest.unexpectedCallWithArray":215,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":135,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":141,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":150,"org.easymock.tests2.UsageConstraintsTest.constraints":273,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":210,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests.UsageStrictMockTest.testVerify":144,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":29,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":186,"org.easymock.tests2.UsageTest.resumeIfFailure":281,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":289,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":86}}]
