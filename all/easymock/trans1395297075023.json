[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,31,32,33,34,35,36,44,37,45,46,47,38,39,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:74","sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","type":"CtAssignmentImpl"},"failures":[48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[57,58,59,60,61,62,63,64,65,3,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,83,84,84,85],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[86,87,88,89,90,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,60,132,133,134,135,136,137,138,139,140,64,141,142,5,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,66,72,73,74,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,13,14,16,21,26,175,176,177,178,179,180,43,181,182,183,48,49,50,51,53,54,55,56,184,185,186,187,188,189,190,191,44,192,37,45,46,47,38,39,193,194,195,196,197,40,198,199,200,201,202,203,204,205,41,42,206,207,208,209,210,211,212,213,214,215,216,217,218,85],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[219],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[112,113,114,115,220,116,117,118,120,121,221,222,122,223],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[224,159,161,162,225,226,43,181,187,189,190,227,228,229,230,195],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[60,132,133,231],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[86,89,232,233,234,235,224,113,118,119,122,236,237,238,239,225,9,11,17,23,27,29,240,241,242,195,243,244,245,246,247,218],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[92,219,99,104],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[248],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[90,57,58,59,125,126,127,128,130,131,60,133,134,135,137,138,139,61,140,249,63,64,250,65,5,66,68,69,70,72,251,73,74,252,77,78,253,254,165,166,167,174,180,193,194,80,255,256,257,258,81,82,83,83,84,84,210,211,85],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:136","failures":[259,260,261,262,263,264,265,90,266,267,57,268,269,270,271,272,273,274,275,276,58,277,278,279,280,281,59,282,283,125,126,127,128,130,131,60,133,134,135,137,138,139,61,140,62,284,249,63,64,250,285,65,3,4,5,286,287,66,67,68,69,70,71,72,251,73,74,76,252,77,78,288,289,254,165,166,167,290,291,292,174,293,180,294,295,296,297,298,299,300,79,193,194,80,301,302,255,256,257,258,303,304,305,81,82,83,83,84,84,210,211,85],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[106,109,110,161,306,168,169,170,43,181,186,189,307,195,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[298,309,310],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[60,132,133,231],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[228,195],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4,5,6,313,314,315,10,31,32,33,34,35,36,316,41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[317,223],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[90,57,58,59,125,126,127,128,130,131,60,133,134,135,137,138,139,61,140,249,63,64,250,318,319,320,5,66,68,321,69,70,72,251,73,74,252,77,322,78,254,165,166,167,174,180,193,194,80,255,81,82,83,83,84,84,210,211,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[97,184,186],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[323,90,57,58,59,123,125,126,127,128,129,130,131,134,135,136,137,138,139,140,63,64,250,156,157,66,69,72,73,74,77,159,161,162,324,325,326,327,328,329,330,165,166,167,174,182,331,332,333,334,335,336,337,187,189,190,243,338,199,200,339,201,340,341,342,245,343,203,246,344,247,345,204,209,212,214,215,217,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"message","methodName":"message"}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[60,132,133,231],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[295,299],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[346,285,347],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":91,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":7,"org.easymock.tests2.UsageTest.argumentsOrdered":110,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":34,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":108,"org.easymock.tests2.StubTest.stubWithReturnValue":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":341,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":206,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests2.SerializationTest.testAllMockedMethod":133,"org.easymock.tests2.DelegateToTest.testReturnException":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":32,"org.easymock.tests.MockingTest.testPartialClassMocking":165,"org.easymock.samples.SupportTest.voteForRemovals":209,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":79,"org.easymock.tests.MockClassControlTest.testToString":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":271,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":231,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":11,"org.easymock.tests.UsageExpectAndThrowTest.object":21,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":227,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":157,"org.easymock.tests2.DelegateToTest.testWrongClass":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":324,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":325,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageTest.wrongArguments":106,"org.easymock.samples.ConstructorCalledMockTest.testTax":83,"org.easymock.tests.UsageStrictMockTest.range":189,"org.easymock.samples.ExampleTest.answerVsDelegate":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":125,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":311,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":22,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":305,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":152,"org.easymock.tests2.CaptureTest.testPrimitive":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":263,"org.easymock.tests.UsageTest.moreThanOneArgument":225,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":30,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":336,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.UsageUnorderedTest.message":195,"org.easymock.tests.UsageVerifyTest.twoReturns":181,"org.easymock.tests.UsageVarargTest.varargByteAccepted":55,"org.easymock.tests2.ThreadingTest.testThreadSafe":236,"org.easymock.tests.UsageTest.argumentsOrdered":170,"org.easymock.tests.UsageVarargTest.varargIntAccepted":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":277,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":177,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":326,"org.easymock.tests2.CaptureTest.testCapture_2617107":114,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":42,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":251,"org.easymock.tests2.UsageConstraintsTest.any":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":315,"org.easymock.tests.UsageExpectAndThrowTest.longType":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":33,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":298,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.tests2.SerializationTest.testClass":60,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests.ReplayStateInvalidUsageTest.times":240,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests.LimitationsTest.mockNativeMethod":174,"org.easymock.tests2.DependencyTest.testClassMocking":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":345,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":80,"org.easymock.tests2.AnswerTest.answer":141,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":320,"org.easymock.tests2.CaptureTest.testAnd":112,"org.easymock.tests2.UsageTest.strictResetToDefault":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":249,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":163,"org.easymock.tests2.MockedExceptionTest.testMockedException":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":8,"org.easymock.tests2.DelegateToTest.testDelegate":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":15,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":26,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests.LimitationsTest.mockFinalMethod":293,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":35,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":93,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests2.DependencyTest.testClassMockingSupport":287,"org.easymock.tests.MockingTest.testTwoMocks":254,"org.easymock.tests2.CaptureTest.testCapture1_2446744":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":19,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":109,"org.easymock.tests.UsageThrowableTest.throwError":44,"org.easymock.tests.UsageStrictMockTest.differentMethods":190,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":296,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":346,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":268,"org.easymock.tests.UsageExpectAndThrowTest.floatType":13,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":142,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":58,"org.easymock.samples.PartialClassMockTest.testGetArea":85,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":327,"org.easymock.samples.ExampleTest.voteAgainstRemoval":215,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":272,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":12,"org.easymock.tests2.UsageTest.niceToStrict":107,"org.easymock.tests.LimitationsTest.privateConstructor":292,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":39,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":252,"org.easymock.tests2.UsageTest.defaultResetToNice":248,"org.easymock.samples.ExampleTest.voteAgainstRemovals":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":279,"org.easymock.tests.UsageVarargTest.differentLength":52,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":20,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":41,"org.easymock.tests.UsageCallCountTest.tooFewCalls":175,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":276,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":233,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":128,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":309,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":97,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.UsageThrowableTest.throwCheckedException":46,"org.easymock.tests.MockClassControlTest.testEquals":304,"org.easymock.tests2.EasyMockSupportClassTest.testAll":90,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":194,"org.easymock.tests.MockingTest.testStrictClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":28,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":318,"org.easymock.tests2.CaptureTest.testCaptureAll":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":337,"org.easymock.samples.ExampleTest.voteForRemovals":217,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":124,"org.easymock.tests.UsageVarargTest.allKinds":184,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":226,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":211,"org.easymock.samples.ExampleTest.addDocument":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":278,"org.easymock.tests2.DelegateToTest.testStubDelegate":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":36,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":187,"org.easymock.tests2.UsageConstraintsTest.greaterThan":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":331,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":250,"org.easymock.tests.UsageVarargTest.varargLongAccepted":54,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":300,"org.easymock.samples.ExampleTest.voteForRemoval":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":285,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":84,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":312,"org.easymock.tests.UsageThrowableTest.noUpperLimit":192,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":180,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":259,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":116,"org.easymock.tests2.SerializationTest.test":132,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":316,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":310,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":264,"org.easymock.samples.SupportTest.addDocument":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":31,"org.easymock.tests2.CaptureTest.testCaptureFirst":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":269,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests2.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":222,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":56,"org.easymock.tests.GenericTest.testBridgedEquals":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":178,"org.easymock.tests.UsageExpectAndReturnTest.longType":200,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":29,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":27,"org.easymock.tests2.UsageStrictMockTest.differentMethods":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":314,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":339,"org.easymock.tests.UsageCallCountTest.tooManyCalls":179,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":280,"org.easymock.tests2.MockedExceptionTest.testRealException":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":16,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":47,"org.easymock.tests.MockingTest.testNiceClassMocking":290,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":126,"org.easymock.tests.MockingTest.testClassMocking":289,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":9,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":71,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":239,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":262,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":297,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":228,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":140,"org.easymock.tests.ErrorMessageTest.testGetters":229,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":69,"org.easymock.tests2.UsageStrictMockTest.range":161,"org.easymock.tests2.UsageConstraintsTest.lessThan":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":151,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":51,"org.easymock.tests.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":273,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":67,"org.easymock.tests.UsageRangeTest.combination":182,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":183,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":197,"org.easymock.tests.UsageTest.wrongArguments":168,"org.easymock.tests.MockClassControlTest.testHashCode":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":270,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests2.EasyMockSupportTest.testVerify":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":274,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":196,"org.easymock.tests.UsageVarargTest.varargShortAccepted":53,"org.easymock.tests2.UsageConstraintsTest.cmpTo":96,"org.easymock.tests.UsageVarargTest.varargCharAccepted":50,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests.DefaultClassInstantiatorTest.object":294,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":221,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":70,"org.easymock.tests.UsageTest.unexpectedCallWithArray":306,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":45,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":176,"org.easymock.tests2.CaptureTest.testCapture":317,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":63,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":17,"org.easymock.tests.CapturesMatcherTest.test":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":313,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":207,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":59,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":328,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":319,"org.easymock.tests.LimitationsTest.abstractClass":291,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":329,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":230,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":260}}]
