[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:97","sourceCode":"if ((org.easymock.internal.Result == null) && (boolean)) {\n    org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType()));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[124,125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[90,127,128,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[129,130,131,132,54,54,55,55,133,57,64,134,66,135,136,124,103,104,137,138,139,106,107,140,141,109,110,142,143,144,145,146],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[90,91,127,148,128,149,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[150,151,128],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:235","failures":[54,55,134,124,152,153,154,141,155,156,157,158,159,145,146],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[129,130,132,133,64,66,135,136,124,103,104,137,139,105,106,107,108,109,110,142,143,144],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[63,65,67,160,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[162,163],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[23,164,165,45,166,167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[8,168,20,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,44,198,62,113,199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[66,135,200,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[97,201],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[202,203,204,151],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[205,206,169,29,177,183,189,193,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,86,94,97,101,112,221,222,223],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[224,225],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[226,227,228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,9,24,31,32,33,35,36,37,38,39,54,55,56,62,73,86,87,89,90,91,92,93,94,95,97,98,99,100,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[230,231,232],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[233,234,235,236,237,238,239,240,241,242,243,244,245,246,0,1,2,3,4,247,248,249,5,6,7,8,9,10,11,12,13,168,14,129,250,251,252,253,130,254,255,256,257,258,259,260,261,262,263,264,265,266,267,205,268,269,270,206,271,272,273,274,275,276,277,15,16,17,18,19,278,20,21,279,280,281,169,22,282,23,24,25,26,27,283,284,28,285,286,287,131,288,289,132,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,170,311,171,172,173,174,175,176,29,312,313,314,315,316,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,317,318,319,320,321,322,30,323,324,325,326,327,31,32,162,328,329,33,34,35,36,37,38,39,330,331,332,333,334,335,40,41,42,336,337,338,197,339,340,43,341,342,343,229,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,207,363,364,365,366,367,208,368,369,370,371,372,209,373,374,375,210,376,211,377,44,212,45,46,378,198,47,48,49,50,51,52,53,163,379,380,381,382,383,384,54,55,133,385,386,387,388,389,390,391,392,213,393,394,202,214,203,395,396,397,398,215,216,399,204,56,400,217,57,58,59,60,61,62,401,63,402,403,404,405,64,406,230,134,407,65,66,135,67,408,136,409,410,411,412,413,414,415,416,417,418,419,420,218,219,421,422,423,424,425,160,426,427,428,429,430,161,68,69,70,71,72,431,73,74,75,76,432,124,125,126,433,77,78,434,79,80,81,82,83,84,435,436,437,438,439,85,440,441,220,86,87,88,150,442,89,90,91,92,151,443,127,148,231,93,444,94,95,96,97,98,128,149,445,446,447,99,100,101,448,449,450,451,452,102,453,454,455,456,457,458,103,152,104,137,153,138,139,105,106,154,107,140,141,108,109,156,110,459,460,461,462,463,111,464,465,466,467,468,469,470,471,472,473,474,475,142,476,477,478,479,480,481,482,483,484,143,485,486,487,488,489,144,490,491,492,493,494,495,496,112,113,497,221,114,115,116,498,199,117,118,119,120,121,222,499,223,145,146,500,501,502,503,504,122,123],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[215,399,225],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[86,88,506],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[507,124,125,126],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[8,168,20,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,44,198,62,113,199],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,9,24,31,32,33,35,36,37,38,39,54,54,55,55,56,62,73,86,87,89,90,91,92,93,94,95,97,98,128,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":150,"org.easymock.tests2.UsageTest.argumentsOrdered":119,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":266,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":116,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":385,"org.easymock.tests2.DelegateToTest.testReturnException":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":11,"org.easymock.tests.MockingTest.testPartialClassMocking":229,"org.easymock.tests.MockClassControlTest.testToString":293,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":409,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":177,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":142,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":443,"org.easymock.tests2.UsageTest.wrongArguments":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":5,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":52,"org.easymock.samples.ExampleTest.answerVsDelegate":387,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":130,"org.easymock.tests2.UsageConstraintsTest.testNull":90,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":298,"org.easymock.tests2.CaptureTest.testPrimitive":395,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":196,"org.easymock.tests.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":37,"org.easymock.tests.UsageTest.argumentsOrdered":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":242,"org.easymock.tests.UsageVarargTest.varargIntAccepted":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":0,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":4,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":228,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests.ReplayStateInvalidUsageTest.times":307,"org.easymock.tests2.DependencyTest.testClassMocking":492,"org.easymock.tests2.AnswerTest.answer":501,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":71,"org.easymock.tests2.CaptureTest.testAnd":202,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":251,"org.easymock.tests2.UsageTest.strictResetToDefault":497,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":286,"org.easymock.tests2.DelegateToTest.testDelegate":220,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":192,"org.easymock.tests.LimitationsTest.mockFinalMethod":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":19,"org.easymock.tests2.DependencyTest.testClassMockingSupport":493,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":247,"org.easymock.tests2.CaptureTest.testCapture1_2446744":396,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":69,"org.easymock.tests.UsageThrowableTest.throwError":170,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":301,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":253,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":39,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":491,"org.easymock.samples.PartialClassMockTest.testGetArea":133,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":302,"org.easymock.tests.MockingTest.testInterfaceMocking":345,"org.easymock.tests2.CompareToTest.testLessOrEqual":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":1,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":480,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":178,"org.easymock.tests2.UsageTest.niceToStrict":115,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":139,"org.easymock.tests2.MockBuilderTest.testCreateMock":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":487,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":186,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":166,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":80,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":50,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":94,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":197,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":372,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":444,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":399,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":320,"org.easymock.tests2.EasyMockSupportClassTest.testAll":473,"org.easymock.tests.MockClassControlTest.testEquals":297,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":17,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":70,"org.easymock.tests2.CaptureTest.testCaptureAll":214,"org.easymock.tests.MockNameTest.defaultName":312,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":299,"org.easymock.samples.ExampleTest.voteForRemovals":391,"org.easymock.tests.UsageVarargTest.allKinds":327,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":278,"org.easymock.samples.BasicClassMockTest.testPrintContent":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":18,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":175,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.samples.ExampleTest.voteForRemoval":388,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":408,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":254,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":64,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":279,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":78,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":10,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":438,"org.easymock.tests2.CaptureTest.testCaptureFirst":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":434,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":368,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":422,"org.easymock.tests2.CaptureTest.testCapture2_2446744":400,"org.easymock.tests2.UsageTest.moreThanOneArgument":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":272,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":326,"org.easymock.tests.GenericTest.testBridgedEquals":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":41,"org.easymock.tests.UsageExpectAndReturnTest.longType":365,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":195,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":446,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.UsageCallCountTest.tooManyCalls":42,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":226,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":488,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":425,"org.easymock.tests.MockingTest.testNiceClassMocking":349,"org.easymock.tests.MockingTest.testClassMocking":342,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":200,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":331,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":59,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":169,"org.easymock.tests.MockTypeTest.fromEasyMockClass":252,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":223,"org.easymock.tests.UsageExpectAndReturnTest.object":371,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":83,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":322,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":236,"org.easymock.tests.UsageTest.exactCallCountByLastCall":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":239,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":449,"org.easymock.tests.MockClassControlTest.testHashCode":296,"org.easymock.tests2.EasyMockSupportTest.testVerify":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":482,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":227,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":68,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":496,"org.easymock.tests.UsageVarargTest.varargCharAccepted":321,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":354,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":277,"org.easymock.tests2.UsageTest.openCallCountByLastCall":498,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":436,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":163,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":483,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":462,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":66,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":183,"org.easymock.tests.CapturesMatcherTest.test":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":376,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":144,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":294,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":129,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":13,"org.easymock.tests2.StubTest.stubWithReturnValue":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":447,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":370,"org.easymock.tests2.SerializationTest.testAllMockedMethod":126,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":206,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":159,"org.easymock.samples.SupportTest.voteForRemovals":394,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":167,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":189,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":276,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":502,"org.easymock.tests.UsageExpectAndThrowTest.object":187,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":241,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":149,"org.easymock.tests2.DelegateToTest.testWrongClass":440,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":31,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":32,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":419,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":424,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":505,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":470,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":51,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":164,"org.easymock.tests2.CaptureTest.testCaptureNone":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":353,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":325,"org.easymock.tests2.ThreadingTest.testThreadSafe":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":485,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":335,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":237,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":274,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests2.StubTest.stub":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":306,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageExpectAndThrowTest.longType":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":359,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":305,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.tests2.SerializationTest.testClass":124,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests.LimitationsTest.mockNativeMethod":315,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":461,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":432,"org.easymock.tests2.NameTest.nameForMocksControl":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":463,"org.easymock.tests2.MockedExceptionTest.testMockedException":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":475,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":181,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":346,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":107,"org.easymock.tests.MockingTest.testNicePartialClassMocking":344,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":459,"org.easymock.tests2.CaptureTest.testCaptureLast":215,"org.easymock.tests2.CompareToTest.testCompareEqual":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":430,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":151,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":445,"org.easymock.tests.MockingTest.testTwoMocks":343,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":185,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":100,"org.easymock.samples.ExampleTest.removeNonExistingDocument":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":450,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":357,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":421,"org.easymock.tests2.MockBuilderTest.testCreateMockString":110,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":476,"org.easymock.tests.UsageExpectAndThrowTest.floatType":179,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":504,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":500,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":143,"org.easymock.samples.ExampleTest.voteAgainstRemoval":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":135,"org.easymock.tests.LimitationsTest.privateConstructor":314,"org.easymock.tests2.UsageConstraintsTest.testNotNull":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":176,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":57,"org.easymock.tests2.UsageTest.defaultResetToNice":117,"org.easymock.samples.ExampleTest.voteAgainstRemovals":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":460,"org.easymock.tests.UsageVarargTest.differentLength":30,"org.easymock.tests2.CallbackTest.callback":112,"org.easymock.tests2.UsageConstraintsTest.equals":442,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":134,"org.easymock.tests.UsageTest.openCallCountByLastCall":378,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.UsageCallCountTest.tooFewCalls":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":426,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":53,"org.easymock.tests.UsageThrowableTest.throwCheckedException":173,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":165,"org.easymock.tests.MockingTest.testStrictClassMocking":341,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":429,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":464,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":160,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":428,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":123,"org.easymock.tests.ObjectMethodsTest.testHashCode":235,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":423,"org.easymock.tests2.NameTest.nameForNiceMock":412,"org.easymock.tests2.DependencyTest.testInterfaceMocking":494,"org.easymock.samples.ExampleTest.addDocument":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.DelegateToTest.testStubDelegate":85,"org.easymock.tests2.AnswerTest.stubAnswer":122,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":140,"org.easymock.tests.UsageVarargTest.varargLongAccepted":324,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":145,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests.UsageThrowableTest.noUpperLimit":311,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":87,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":414,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":397,"org.easymock.tests2.SerializationTest.test":125,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":356,"org.easymock.tests2.UsageConstraintsTest.testSame":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":363,"org.easymock.samples.SupportTest.addDocument":393,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":427,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":477,"org.easymock.tests.GenericTest.testPackageScope":288,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":347,"org.easymock.tests2.NameTest.nameForMock":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":156,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":191,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":287,"org.easymock.tests2.MockedExceptionTest.testRealException":60,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":255,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":158,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":310,"org.easymock.tests2.NameTest.nameForStrictMock":411,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":418,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":128,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":104,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":147,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":481,"org.easymock.tests2.CaptureTest.testCaptureRightOne":204,"org.easymock.tests2.UsageConstraintsTest.testOr":92,"org.easymock.tests.UsageRangeTest.combination":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":46,"org.easymock.tests2.MockBuilderTest.testWithConstructor":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":478,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":373,"org.easymock.tests.UsageVarargTest.varargShortAccepted":323,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":40,"org.easymock.tests2.UsageConstraintsTest.cmpTo":231,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":259,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.CaptureTest.testCaptureFromStub":56,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":300,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":137,"org.easymock.tests.UsageTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":334,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":374,"org.easymock.tests2.CaptureTest.testCapture":225,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":25,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.samples.ExampleTest.addAndChangeDocument":213,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":382,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":16,"org.easymock.tests2.CompareToTest.testGreateThan":201,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":2,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":208,"org.easymock.tests.LimitationsTest.abstractClass":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":3,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":81,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":318}}]
