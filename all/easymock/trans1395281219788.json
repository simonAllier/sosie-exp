[{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[2],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[57,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return this.java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:61","sourceCode":"org.easymock.internal.MocksBehavior.lastBehaviorList().addExpected(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result, org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[3,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,4,5,79,6,7,80,81,82,83,84,85,86,87,88,89,90,91,92,93,37,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,13,158,159,160,161,162,163,15,16,17,46,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,20,201,21,22,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,50,238,239,240,241,242,243,244,245,53,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,52,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,23,292,293,294,295,296,297,298,299,300,301,302,303,304,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[58,266,267,268,269,270,271,272,273,275,276,305,277,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[306,238,255,261],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[307,307,308,308,186],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[309,266,268,269,270,271,272,273,275,59,276,305,278],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[310,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[257],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[6,312,16,17,21],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[57,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[313,297],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[3,60,36,72,73,74,75,76,314,315,316,5,6,7,317,82,83,318,2,84,86,92,93,37,94,95,319,320,321,96,322,98,99,100,101,323,324,325,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,326,142,143,144,145,39,40,41,146,147,148,149,150,151,152,153,154,155,156,327,328,329,330,331,157,13,159,160,163,15,16,17,19,42,43,44,45,46,47,332,333,334,164,165,166,167,168,169,172,174,175,176,177,178,180,181,307,307,308,308,184,335,336,185,186,187,188,189,190,191,192,193,194,195,196,197,198,20,21,22,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,310,233,234,235,311,236,237,48,49,50,51,238,239,240,241,242,243,244,245,53,246,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,52,266,267,269,270,273,274,275,276,305,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,23,293,295,296,297,300,301,302,303,304,54,55],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[18,19,337,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[3,66,77,4,79,6,7,339,90,91,340,341,98,342,12,157,14,158,161,162,163,16,17,189,195,197,198,199,201,21,22,204,208,209,212,223,343,227,344,240,254,290,292,293,294,298,299,300,301],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[345,335,186,187],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[347,348,349],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[189,350,351,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[352,353,354,355,356,357],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[358,166,176,184,336,185,187,198,283,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[359,360],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[57,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":241,"org.easymock.tests2.UsageTest.argumentsOrdered":299,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":45,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":294,"org.easymock.tests2.StubTest.stubWithReturnValue":52,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests2.DelegateToTest.testReturnException":233,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":43,"org.easymock.tests.MockingTest.testPartialClassMocking":154,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":31,"org.easymock.samples.SupportTest.voteForRemovals":174,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":351,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":324,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":102,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":335,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":316,"org.easymock.tests.UsageExpectAndThrowTest.object":112,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":303,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":258,"org.easymock.tests2.DelegateToTest.testWrongClass":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":246,"org.easymock.tests2.UsageTest.wrongArguments":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":92,"org.easymock.samples.ConstructorCalledMockTest.testTax":307,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ExampleTest.answerVsDelegate":176,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":216,"org.easymock.tests2.UsageConstraintsTest.testNull":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":225,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":212,"org.easymock.tests2.CaptureTest.testPrimitive":269,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":95,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":121,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":329,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":334,"org.easymock.tests2.CaptureTest.testCaptureNone":274,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":353,"org.easymock.tests.UsageUnorderedTest.message":3,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":340,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":69,"org.easymock.tests2.ThreadingTest.testThreadSafe":285,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":317,"org.easymock.tests.UsageTest.argumentsOrdered":162,"org.easymock.tests.UsageVarargTest.varargIntAccepted":63,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":89,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":182,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":32,"org.easymock.tests2.CaptureTest.testCapture_2617107":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":94,"org.easymock.tests2.UsageConstraintsTest.any":248,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":360,"org.easymock.tests2.StubTest.stub":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":44,"org.easymock.tests.UsageExpectAndThrowTest.longType":105,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":28,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests.LimitationsTest.mockNativeMethod":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":359,"org.easymock.tests2.CaptureTest.testAnd":266,"org.easymock.tests2.UsageTest.strictResetToDefault":291,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":354,"org.easymock.tests2.NameTest.nameForMocksControl":232,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.DelegateToTest.testDelegate":236,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":106,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":156,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":226,"org.easymock.tests.MockingTest.testNicePartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":117,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":193,"org.easymock.tests2.CaptureTest.testCaptureLast":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":19,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":222,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":259,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":18,"org.easymock.tests2.CaptureTest.testCapture1_2446744":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":110,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":263,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":357,"org.easymock.tests.UsageThrowableTest.throwError":146,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":356,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":287,"org.easymock.tests2.ConstraintsToStringTest.andToString":30,"org.easymock.tests2.MockBuilderTest.testCreateMockString":344,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":331,"org.easymock.tests.UsageExpectAndThrowTest.floatType":104,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":254,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":185,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":281,"org.easymock.samples.PartialClassMockTest.testGetArea":172,"org.easymock.tests2.CompareToTest.testLessOrEqual":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":332,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":196,"org.easymock.tests2.UsageTest.niceToStrict":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":103,"org.easymock.tests2.UsageConstraintsTest.testNotNull":262,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":35,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":224,"org.easymock.tests2.MockBuilderTest.testCreateMock":343,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests.UsageVarargTest.differentLength":66,"org.easymock.tests2.CallbackTest.callback":198,"org.easymock.tests.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":111,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":208,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":238,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":37,"org.easymock.tests.UsageCallCountTest.tooFewCalls":87,"org.easymock.tests.UsageOverloadedMethodTest.overloading":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":252,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":251,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":275,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":355,"org.easymock.tests.UsageThrowableTest.throwCheckedException":150,"org.easymock.tests2.EasyMockSupportClassTest.testAll":279,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":97,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":119,"org.easymock.tests2.CaptureTest.testCaptureAll":267,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":218,"org.easymock.tests2.UsageConstraintsTest.testMatches":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":220,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":330,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":289,"org.easymock.tests2.NameTest.nameForNiceMock":231,"org.easymock.tests.UsageVarargTest.allKinds":71,"org.easymock.tests2.DependencyTest.testInterfaceMocking":302,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":183,"org.easymock.samples.ExampleTest.addDocument":179,"org.easymock.tests2.DelegateToTest.testStubDelegate":234,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":199,"org.easymock.tests2.AnswerTest.stubAnswer":186,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":47,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests2.UsageConstraintsTest.greaterThan":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":197,"org.easymock.tests.UsageVarargTest.varargLongAccepted":68,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":80,"org.easymock.samples.ExampleTest.voteForRemoval":177,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":286,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":228,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":308,"org.easymock.tests2.ConstraintsToStringTest.orToString":24,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":256,"org.easymock.tests.UsageThrowableTest.noUpperLimit":147,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":239,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":84,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":271,"org.easymock.tests2.SerializationTest.test":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":38,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":205,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.testSame":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.samples.SupportTest.addDocument":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":42,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":310,"org.easymock.tests2.CaptureTest.testCaptureFirst":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":206,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests.GenericTest.testPackageScope":96,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":288,"org.easymock.tests2.CaptureTest.testCapture2_2446744":277,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":227,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":70,"org.easymock.tests2.NameTest.nameForMock":229,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":90,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":260,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageCallCountTest.tooManyCalls":91,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":86,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":358,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":217,"org.easymock.tests2.UsageConstraintsTest.testContains":250,"org.easymock.tests2.NameTest.nameForStrictMock":230,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":242,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":192,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":77,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":223,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":211,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":65,"org.easymock.tests.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":204,"org.easymock.tests2.CaptureTest.testCaptureRightOne":276,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":352,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":314,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":82,"org.easymock.tests2.UsageConstraintsTest.testOr":245,"org.easymock.tests.UsageRangeTest.combination":98,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":189,"org.easymock.tests.UsageTest.wrongArguments":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":167,"org.easymock.tests2.EasyMockSupportTest.testVerify":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":27,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":83,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":320,"org.easymock.tests.UsageVarargTest.varargShortAccepted":67,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":166,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":339,"org.easymock.tests2.UsageConstraintsTest.cmpTo":249,"org.easymock.tests.UsageVarargTest.varargCharAccepted":64,"org.easymock.tests2.CaptureTest.testCaptureMultiple":309,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":336,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests.DefaultClassInstantiatorTest.object":347,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":33,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":319,"org.easymock.tests2.CaptureTest.testCaptureFromStub":305,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":0,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":12,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":109,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":88,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests2.CaptureTest.testCapture":59,"org.easymock.tests2.UsageConstraintsTest.constraints":240,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":195,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":108,"org.easymock.samples.ExampleTest.addAndChangeDocument":181,"org.easymock.tests2.ConstraintsToStringTest.notToString":26,"org.easymock.tests.CapturesMatcherTest.test":58,"org.easymock.tests.UsageStrictMockTest.testVerify":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":39,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":282,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":78,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":29,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":75,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":209,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":62}}]
