[{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[0],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,1,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[151,152,153,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[2,2,3,3,28,490],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[443],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[220],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,114,115,116,118,121,122,124,125,128,129,130,131,133,134,135,144,145,146,147,148,149,150,151,152,153,159,169,172,182,188,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,1,223,224,225,226,227,228,229,230,231,232,235,236,237,239,240,241,242,243,244,245,246,249,250,251,253,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,377,383,385,386,387,389,390,391,395,404,405,406,408,409,410,411,412,413,414,415,416,417,418,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,445,446,449,451,452,453,454,455,456,459,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[491,259],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[44,45,85,91,92,93,104,110,121,122,124,246,259,262,263,291,292,293,329,330,333,334,357,492,493,494,419,420,422,423],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[4,25,108,495,110,111,114,115,116,118,121,122,496,497,124,151,336,341,446],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[491,498,259,499,500],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[501,502,503,504,505,506,507,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[508,205,223,229],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[5,18,66,67,68,74,77,154,155,156,162,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[144],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[509,510,511,512,513,514,515,516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:126","failures":[9,195,197,199,242],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[2,2,3,3,4,8,9,10,11,13,15,17,19,20,21,22,23,24,27,31,32,33,36,37,38,39,40,42,43,44,45,46,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,114,116,118,122,124,125,128,129,130,131,133,134,135,144,145,146,147,148,149,151,152,159,169,172,182,188,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,1,223,224,225,226,227,228,229,230,231,232,235,236,237,239,240,242,243,245,250,251,253,257,259,260,261,262,263,264,266,267,268,269,270,271,272,287,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,344,345,346,347,357,358,359,360,377,383,385,386,387,415,416,417,418,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,446,449,451,452,453,454,455,456,459,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[4,8,10,11,13,17,19,20,21,22,23,24,27,31,32,33,38,42,44,45,52,53,55,56,59,60,61,62,64,65,71,82,83,84,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,114,116,118,122,125,128,129,130,131,133,134,135,148,151,152,159,169,172,182,188,193,196,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,217,218,219,220,221,222,1,223,224,225,226,227,229,230,231,232,235,236,245,250,251,253,260,262,263,266,267,270,271,272,327,328,331,332,335,357,358,359,360,385,386,387,421,423,424,426,427,428,429,430,431,437,438,439,440,441,444,446,459,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[8,10,11,13,17,302,439],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[151,152,153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[509,510,516],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[517],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,113,114,115,116,118,120,121,122,124,125,126,128,129,130,131,133,134,135,137,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,1,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[42,44,45,48,49,50,51,84,85,91,92,259,260,262,263,328,330,333,334,518,519,520,420,421,422,423],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[2,2,3,3,4,8,9,11,14,19,20,21,22,23,24,25,27,30,31,32,33,36,37,38,39,40,42,43,44,45,46,52,55,56,61,62,63,64,71,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,115,116,118,121,122,124,125,128,129,130,131,133,134,135,144,147,148,149,151,152,159,169,172,182,188,193,195,196,197,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,217,218,219,220,221,222,1,223,224,225,226,227,229,230,231,232,235,236,240,241,242,243,245,246,250,251,253,257,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,291,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,385,386,387,389,390,391,395,420,421,422,423,424,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,444,451,452,453,454,455,456,459,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[82,89,193,243,269,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,332,387,422,424,426,427,428,429,430,431,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[443,447],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":208,"org.easymock.tests2.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":371,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":87,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testReturnException":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":452,"org.easymock.tests.MockingTest.testPartialClassMocking":250,"org.easymock.tests.MockClassControlTest.testToString":351,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":47,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":176,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":307,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":518,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":502,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":215,"org.easymock.tests2.UsageTest.wrongArguments":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":266,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":347,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":341,"org.easymock.tests2.UsageConstraintsTest.testNull":211,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":326,"org.easymock.tests.UsageTest.moreThanOneArgument":328,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":434,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":294,"org.easymock.tests.UsageTest.argumentsOrdered":334,"org.easymock.tests.UsageVarargTest.varargIntAccepted":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":437,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":506,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":164,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":139,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":441,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests.ReplayStateInvalidUsageTest.times":281,"org.easymock.tests2.DependencyTest.testClassMocking":233,"org.easymock.tests2.AnswerTest.answer":144,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":81,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":338,"org.easymock.tests2.UsageTest.strictResetToDefault":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":359,"org.easymock.tests2.DelegateToTest.testDelegate":199,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":322,"org.easymock.tests.LimitationsTest.mockFinalMethod":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":455,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":306,"org.easymock.tests2.DependencyTest.testClassMockingSupport":234,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":299,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":79,"org.easymock.tests.UsageThrowableTest.throwError":424,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":275,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":340,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":419,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":190,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":252,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":276,"org.easymock.tests2.CompareToTest.testLessOrEqual":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":438,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":462,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":177,"org.easymock.tests2.UsageTest.niceToStrict":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":185,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":74,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":316,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":418,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":345,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":513,"org.easymock.tests.UsageOverloadedMethodTest.overloading":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":181,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":221,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":480,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":385,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":220,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":407,"org.easymock.tests2.EasyMockSupportClassTest.testAll":169,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":445,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":324,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":304,"org.easymock.tests.MockNameTest.defaultName":403,"org.easymock.tests2.UsageConstraintsTest.testMatches":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":435,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":273,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests.UsageVarargTest.allKinds":415,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":421,"org.easymock.samples.BasicClassMockTest.testPrintContent":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":305,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":430,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":456,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":161,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":401,"org.easymock.tests2.UsageConstraintsTest.greaterThan":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":402,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":34,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":201,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":496,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":442,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":97,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":451,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":98,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":476,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":84,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":203,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":414,"org.easymock.tests.GenericTest.testBridgedEquals":447,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":514,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":511,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":292,"org.easymock.tests.UsageExpectAndReturnTest.longType":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":302,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":325,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":228,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":465,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":432,"org.easymock.tests.UsageCallCountTest.tooManyCalls":293,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testNiceClassMocking":256,"org.easymock.tests.MockingTest.testClassMocking":248,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests2.UsageConstraintsTest.testContains":219,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":286,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":210,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":387,"org.easymock.tests.MockTypeTest.fromEasyMockClass":339,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":239,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests.UsageExpectAndReturnTest.object":479,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":75,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":503,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":409,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":515,"org.easymock.tests.UsageTest.exactCallCountByLastCall":335,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":485,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":404,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":155,"org.easymock.tests.MockClassControlTest.testHashCode":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":179,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":240,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":78,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":150,"org.easymock.tests.UsageVarargTest.varargCharAccepted":408,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":394,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastCall":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":509,"org.easymock.tests.DefaultClassInstantiatorTest.object":395,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":416,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":389,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":180,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":69,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":31,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":313,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":486,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":188,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":352,"org.easymock.tests2.UsageTest.resumeIfFailure":93,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":454,"org.easymock.tests2.StubTest.stubWithReturnValue":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":478,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":229,"org.easymock.tests2.SerializationTest.testAllMockedMethod":153,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":377,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":319,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":383,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":145,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":450,"org.easymock.tests.UsageExpectAndThrowTest.object":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":226,"org.easymock.tests2.DelegateToTest.testWrongClass":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":262,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":142,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":512,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":318,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":283,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":346,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":463,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":420,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":494,"org.easymock.tests.UsageVerifyTest.twoReturns":423,"org.easymock.tests.UsageVarargTest.varargByteAccepted":413,"org.easymock.tests2.ThreadingTest.testThreadSafe":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":183,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":290,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":6,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageConstraintsTest.any":217,"org.easymock.tests2.StubTest.stub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":453,"org.easymock.tests.UsageExpectAndThrowTest.longType":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":399,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":279,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests2.SerializationTest.testClass":151,"org.easymock.tests.LimitationsTest.mockNativeMethod":459,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":488,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":446,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":68,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests2.NameTest.nameForMocksControl":51,"org.easymock.tests2.MockedExceptionTest.testMockedException":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":171,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":332,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":238,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":311,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":19,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":251,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":501,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":300,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":135,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":214,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":227,"org.easymock.tests.MockingTest.testTwoMocks":249,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":315,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":231,"org.easymock.samples.ExampleTest.removeNonExistingDocument":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":73,"org.easymock.tests.UsageStrictMockTest.differentMethods":263,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":156,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":397,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":202,"org.easymock.tests2.MockBuilderTest.testCreateMockString":124,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":173,"org.easymock.tests.UsageExpectAndThrowTest.floatType":309,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":147,"org.easymock.tests.UsageVerifyTest.twoThrows":422,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":127,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":182,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.LimitationsTest.privateConstructor":458,"org.easymock.tests2.UsageConstraintsTest.testNotNull":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":431,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":36,"org.easymock.tests2.UsageTest.defaultResetToNice":90,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":373,"org.easymock.tests.UsageVarargTest.differentLength":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":67,"org.easymock.tests2.CallbackTest.callback":191,"org.easymock.tests2.UsageConstraintsTest.equals":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":331,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":268,"org.easymock.tests.UsageCallCountTest.tooFewCalls":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":348,"org.easymock.tests.UsageThrowableTest.throwCheckedException":428,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":72,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":282,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":149,"org.easymock.tests.ObjectMethodsTest.testHashCode":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":505,"org.easymock.tests2.NameTest.nameForNiceMock":50,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":204,"org.easymock.tests2.DependencyTest.testInterfaceMocking":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":504,"org.easymock.samples.ExampleTest.addDocument":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":189,"org.easymock.tests2.DelegateToTest.testStubDelegate":196,"org.easymock.tests2.AnswerTest.stubAnswer":148,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":260,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":119,"org.easymock.tests.UsageVarargTest.varargLongAccepted":412,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":370,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":487,"org.easymock.tests.UsageExpectAndReturnTest.floatType":471,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":425,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":163,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":224,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":206,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":137,"org.easymock.tests2.SerializationTest.test":152,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":470,"org.easymock.tests2.UsageConstraintsTest.testSame":212,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":132,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":174,"org.easymock.tests.GenericTest.testPackageScope":444,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":162,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":254,"org.easymock.tests2.NameTest.nameForMock":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":481,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":123,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":321,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":360,"org.easymock.tests2.MockedExceptionTest.testRealException":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":267,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":284,"org.easymock.tests2.NameTest.nameForStrictMock":49,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":510,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":141,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":519,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":398,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":158,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":517,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":178,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.UsageConstraintsTest.testOr":213,"org.easymock.tests.UsageRangeTest.combination":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":20,"org.easymock.tests.UsageTest.wrongArguments":330,"org.easymock.tests2.MockBuilderTest.testWithConstructor":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":175,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":362,"org.easymock.tests.UsageVarargTest.varargShortAccepted":411,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":400,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":291,"org.easymock.tests2.UsageConstraintsTest.cmpTo":218,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":274,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":111,"org.easymock.tests.UsageTest.unexpectedCallWithArray":329,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":289,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":483,"org.easymock.tests2.UsageConstraintsTest.constraints":207,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageStrictMockTest.testVerify":265,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":303,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":439,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":475,"org.easymock.tests.LimitationsTest.abstractClass":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":440,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":520,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101}}]
