[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[37,38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[16,41,42,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[44,44,45,45,15,46,47,48,49,16,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,17,66,67,68,69,18,19,70,71,20,72,73,74,21,75,22,23,76,24,25,26,27,77,28,29,78,30,79,80,81,82,83,84,85,86,31,87,88,89,90,91,92,93,94,95,32,96,97,98,99,100,33,101,102,103,104,105,106,107,108,109,110,34,35,111,112,113,36,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[135,136,137,138,139,140],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[141,142,143,144,145,146,147,148,149,150],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[151,152,153,154,155,156,157,158,159,160,161,48,162,163,164,165,16,41,42,166,51,52,54,55,167,141,142,168,144,145,146,147,169,170,148,61,171,63,64,65,66,69,19,172,173,72,73,74,174,175,176,177,178,179,180,181,8,182,183,184,185,186,187,0,1,188,189,190,3,191,192,193,194,195,149,196,197,4,5,198,199,6,7,200,201,202,203,204,205,206,39,40,21,24,25,207,208,209,210,211,9,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,112,113,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,117,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,122,123,124,127,134,312,12,13,14,313],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[314,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[316,151,153,154,156,15,158,159,317,318,160,319,161,320,48,163,321,164,16,41,50,51,52,53,322,54,55,167,141,168,143,146,147,169,170,323,148,61,62,171,63,64,65,66,18,19,70,74,324,180,325,326,327,328,329,330,331,332,333,334,335,336,182,183,184,185,186,187,0,1,188,189,190,3,191,192,193,194,195,149,196,197,4,5,198,199,6,7,200,205,39,22,24,26,27,29,337,207,208,209,338,339,211,9,340,84,31,32,33,341,342,216,218,219,220,221,222,223,343,344,225,345,346,347,348,349,227,350,228,112,36,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,117,284,290,291,292,351,293,294,305,306,122,123,124,352,353,354,355,356,312,12,13,14,357,313,358,359,360],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[163,205,337,338,339,340,216,218,227,357,358,359,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[361,316,151,152,153,154,155,156,157,44,45,362,15,46,47,363,158,159,318,160,319,161,320,48,364,162,163,365,321,164,165,16,41,42,166,50,51,52,53,322,54,55,167,141,142,168,143,144,145,146,147,169,170,366,323,148,61,62,171,63,64,65,17,66,69,18,19,70,172,173,72,73,74,174,324,175,176,177,178,179,180,367,181,325,326,327,328,329,330,331,332,333,334,335,336,368,8,182,183,184,185,186,187,0,1,188,189,190,3,191,192,193,194,195,149,196,197,4,5,198,150,199,6,7,200,205,206,39,40,21,22,24,25,26,27,28,29,30,337,207,208,369,209,210,338,339,211,370,371,9,340,84,31,32,33,212,213,214,215,216,217,218,219,220,221,222,223,344,224,225,345,346,347,348,349,372,226,139,227,373,350,228,229,231,232,233,234,235,236,239,240,241,242,374,375,376,112,113,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,377,378,379,380,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,381,117,284,382,285,286,287,288,289,290,291,383,384,292,351,293,294,295,296,297,298,299,385,300,301,302,303,304,305,306,307,308,309,310,311,122,123,124,134,312,13,14,357,313,140,386,358,359,387,388,360],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[389,390,391,392,393,394],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[395,396,397,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[163,321,164,201,202,203,204,208,369,370,371,216,217,218,139,227,350,228,381,313,386,387,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[321,164,350,228,247,251,252,254,257,268,272,273,275,278,399,400,401,402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":186,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":357,"org.easymock.tests2.UsageTest.argumentsOrdered":371,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":335,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":210,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":362,"org.easymock.tests2.DelegateToTest.testReturnException":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":232,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.tests.MockClassControlTest.testToString":128,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":290,"org.easymock.tests2.UsageTest.wrongArguments":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":214,"org.easymock.samples.ExampleTest.answerVsDelegate":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":35,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":133,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":334,"org.easymock.tests2.CaptureTest.testPrimitive":168,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":283,"org.easymock.tests.UsageTest.moreThanOneArgument":313,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":309,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":399,"org.easymock.tests.UsageTest.argumentsOrdered":388,"org.easymock.tests.UsageVarargTest.varargIntAccepted":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":219,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":223,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":319,"org.easymock.tests2.AnswerTest.answer":205,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":11,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":178,"org.easymock.tests2.CaptureTest.testAnd":167,"org.easymock.tests2.UsageTest.strictResetToDefault":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":329,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":401,"org.easymock.tests2.DelegateToTest.testDelegate":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":279,"org.easymock.tests.LimitationsTest.mockFinalMethod":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":289,"org.easymock.tests2.CaptureTest.testCapture1_2446744":143,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":176,"org.easymock.tests.UsageThrowableTest.throwError":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":102,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":220,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":341,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":91,"org.easymock.tests2.UsageTest.niceToStrict":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":24,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":98,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":135,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":273,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":212,"org.easymock.tests.UsageOverloadedMethodTest.overloading":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":379,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":254,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":351,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":193,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":169,"org.easymock.tests.MockClassControlTest.testEquals":132,"org.easymock.tests2.EasyMockSupportClassTest.testAll":84,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":281,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":177,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":287,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":310,"org.easymock.samples.ExampleTest.voteForRemovals":156,"org.easymock.tests.UsageVarargTest.allKinds":304,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":216,"org.easymock.samples.BasicClassMockTest.testPrintContent":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":288,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":348,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":236,"org.easymock.tests2.UsageConstraintsTest.greaterThan":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.samples.ExampleTest.voteForRemoval":153,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":109,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":17,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":134,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":337,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":327,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":231,"org.easymock.tests2.CaptureTest.testCaptureFirst":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":328,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":340,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":250,"org.easymock.tests2.UsageTest.moreThanOneArgument":208,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":318,"org.easymock.tests2.CaptureTest.testCapture2_2446744":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":303,"org.easymock.tests.GenericTest.testBridgedEquals":114,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":375,"org.easymock.tests.UsageExpectAndReturnTest.longType":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":285,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":325,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":282,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":389,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":376,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":347,"org.easymock.tests.MockingTest.testNiceClassMocking":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testClassMocking":120,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":75,"org.easymock.tests2.UsageConstraintsTest.testContains":192,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":238,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":187,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":294,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":173,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":372,"org.easymock.tests.UsageExpectAndReturnTest.object":253,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":333,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":299,"org.easymock.tests.UsageTest.exactCallCountByLastCall":360,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":259,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":378,"org.easymock.tests.MockClassControlTest.testHashCode":131,"org.easymock.tests2.EasyMockSupportTest.testVerify":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":175,"org.easymock.tests.UsageVarargTest.varargCharAccepted":298,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageTest.openCallCountByLastCall":338,"org.easymock.tests.DefaultClassInstantiatorTest.object":103,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":94,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":271,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":37,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":130,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":270,"org.easymock.tests.CapturesMatcherTest.test":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests2.UsageTest.resumeIfFailure":9,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":234,"org.easymock.tests2.StubTest.stubWithReturnValue":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":252,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":136,"org.easymock.samples.SupportTest.voteForRemovals":316,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":276,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":43,"org.easymock.tests.UsageExpectAndThrowTest.object":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":5,"org.easymock.tests2.DelegateToTest.testWrongClass":367,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":350,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":275,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":213,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":137,"org.easymock.tests2.CaptureTest.testCaptureNone":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":342,"org.easymock.tests.UsageUnorderedTest.message":381,"org.easymock.tests.UsageVerifyTest.twoReturns":218,"org.easymock.tests.UsageVarargTest.varargByteAccepted":302,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":96,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":242,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":46,"org.easymock.tests2.CaptureTest.testCapture_2617107":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":354,"org.easymock.tests2.UsageConstraintsTest.any":3,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":10,"org.easymock.tests2.StubTest.stub":8,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":233,"org.easymock.tests.UsageExpectAndThrowTest.longType":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":355,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":107,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":365,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests.LimitationsTest.mockNativeMethod":117,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":262,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":59,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.tests2.NameTest.nameForMocksControl":204,"org.easymock.tests2.MockedExceptionTest.testMockedException":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":86,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":359,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":268,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.CaptureTest.testCaptureLast":146,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":198,"org.easymock.tests.MockingTest.testTwoMocks":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":272,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":370,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":228,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":105,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":317,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":87,"org.easymock.tests.UsageExpectAndThrowTest.floatType":266,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":206,"org.easymock.tests.UsageVerifyTest.twoThrows":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":19,"org.easymock.tests.LimitationsTest.privateConstructor":116,"org.easymock.tests2.UsageConstraintsTest.testNotNull":6,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":349,"org.easymock.tests2.UsageTest.defaultResetToNice":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":258,"org.easymock.tests.UsageVarargTest.differentLength":385,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":67,"org.easymock.tests.UsageTest.openCallCountByLastCall":358,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":383,"org.easymock.tests.UsageCallCountTest.tooFewCalls":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":215,"org.easymock.tests.UsageThrowableTest.throwCheckedException":346,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":138,"org.easymock.tests.MockingTest.testStrictClassMocking":119,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":382,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":322,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":40,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":160,"org.easymock.tests2.NameTest.nameForNiceMock":203,"org.easymock.tests2.DependencyTest.testInterfaceMocking":161,"org.easymock.samples.ExampleTest.addDocument":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":97,"org.easymock.tests2.DelegateToTest.testStubDelegate":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":101,"org.easymock.tests2.AnswerTest.stubAnswer":39,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":227,"org.easymock.tests.UsageVarargTest.varargLongAccepted":301,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":352,"org.easymock.tests.UsageExpectAndReturnTest.floatType":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":197,"org.easymock.tests.UsageThrowableTest.noUpperLimit":224,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":79,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":144,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":104,"org.easymock.tests2.UsageConstraintsTest.testSame":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":244,"org.easymock.samples.SupportTest.addDocument":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":88,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.NameTest.nameForMock":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":255,"org.easymock.tests2.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":14,"org.easymock.tests2.MockedExceptionTest.testRealException":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":291,"org.easymock.tests2.NameTest.nameForStrictMock":202,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":76,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":80,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":106,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":321,"org.easymock.tests2.UsageConstraintsTest.lessThan":200,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":326,"org.easymock.tests2.CaptureTest.testCaptureRightOne":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":92,"org.easymock.tests2.UsageConstraintsTest.testOr":188,"org.easymock.tests.UsageRangeTest.combination":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":62,"org.easymock.tests.UsageTest.wrongArguments":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":89,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":256,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":108,"org.easymock.tests.UsageVarargTest.varargShortAccepted":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":374,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":339,"org.easymock.tests2.CaptureTest.testCaptureFromStub":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":23,"org.easymock.tests.UsageTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":139,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":257,"org.easymock.tests2.UsageConstraintsTest.constraints":185,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":373,"org.easymock.samples.ExampleTest.addAndChangeDocument":157,"org.easymock.tests.UsageStrictMockTest.testVerify":230,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":363,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":286,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":221,"org.easymock.tests.LimitationsTest.abstractClass":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":222,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":331}}]
