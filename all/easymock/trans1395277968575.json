[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[11,12,13,14],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[15,16,17,18],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[20,21,22,23,24,25,26,27,28,29,30],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,11,184,185,12,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,8,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,5,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,6,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,9,405,406,407,408,409,410,19,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,20,431,21,7,432,433,434,435,436,437,22,438,439,440,441,442,13,443,444,445,446,447,448,14,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,23,24,471,472,25,473,26,27,474,28,475,476,477,478,479,480,10,481,482,29,483,484,485,486,30,487,488,16,17,18,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[51,54,55,74,75,76,77,78,83,115,116,118,119,120,121,122,123,180,203,231,256,257,258,312,313,314,315,318,332,334,335,337,338,340,341,343,356,357,358,359,416,420,427,431,21,432,433,434,435,436,440,25,475,10,30,489],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[134,425],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[55,74,77,490,117,118,121,122,168,257,258,314,335,340,341],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[24,472],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[31,32,36,37,38,39,40,41,46,47,50,51,52,53,54,55,57,59,60,62,65,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,151,152,153,154,155,156,157,158,159,160,161,167,169,170,171,173,174,176,177,178,179,180,192,193,195,199,200,201,202,203,204,218,219,222,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,272,273,274,275,276,277,278,279,280,281,282,284,285,285,286,286,287,288,289,290,291,292,293,299,308,309,310,311,312,313,314,315,316,317,318,323,324,325,326,328,329,330,332,333,334,335,336,8,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,356,357,358,359,360,366,367,368,369,373,375,379,382,392,398,401,402,403,404,9,405,408,19,412,416,419,420,421,422,424,426,427,428,430,20,431,21,7,432,433,434,435,436,437,22,438,439,440,441,442,13,443,444,445,446,447,448,14,449,450,451,458,465,466,467,468,469,470,23,24,472,25,473,26,27,474,475,476,477,478,479,480,10,481,482,29,483,484,486,30,487,488,16,17,18,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[46,47,48,70,151,191,192,193,195,210,215,222,285,285,286,286,287,290,291,491,492,493,323,324,325,326,329,330,346,353,360,494,362,363,366,367,368,369,372,373,495,375,379,382,392,398,401,402,404,9,405,406,408,19,411,412,413,16,18],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[31,32,46,47,50,51,54,55,70,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,116,117,119,120,123,140,152,153,154,155,156,157,167,168,192,193,195,199,218,219,229,230,231,232,252,253,254,255,256,257,258,259,277,278,279,280,281,282,283,287,288,293,299,308,309,310,312,313,314,315,316,318,323,324,325,326,328,329,330,332,333,334,336,8,337,338,339,340,342,343,344,346,348,349,350,351,352,353,362,366,368,369,372,373,375,379,382,392,398,401,402,403,404,9,405,408,19,411,412,413,416,420,427,20,431,7,432,435,436,437,22,439,440,441,442,13,443,444,445,446,447,448,14,449,450,451,458,465,469,470,23,24,472,25,473,26,27,474,475,476,477,478,479,480,10,481,482,29,483,484,486,30,487,488,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.UsageTest.argumentsOrdered":341,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":134,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":8,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":288,"org.easymock.tests2.DelegateToTest.testReturnException":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":192,"org.easymock.tests.MockClassControlTest.testToString":223,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":355,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":232,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":382,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":0,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":50,"org.easymock.tests2.UsageTest.wrongArguments":335,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":261,"org.easymock.samples.ExampleTest.answerVsDelegate":278,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":215,"org.easymock.tests2.UsageConstraintsTest.testNull":25,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":14,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":228,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.UsageTest.moreThanOneArgument":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":274,"org.easymock.tests.UsageTest.argumentsOrdered":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":205,"org.easymock.tests.UsageVarargTest.varargIntAccepted":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":4,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":304,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":156,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":458,"org.easymock.tests.ReplayStateInvalidUsageTest.times":64,"org.easymock.tests2.DependencyTest.testClassMocking":306,"org.easymock.tests2.AnswerTest.answer":416,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":468,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":212,"org.easymock.tests2.UsageTest.strictResetToDefault":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":444,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":254,"org.easymock.tests2.DelegateToTest.testDelegate":430,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":247,"org.easymock.tests.LimitationsTest.mockFinalMethod":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":161,"org.easymock.tests2.DependencyTest.testClassMockingSupport":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":109,"org.easymock.tests2.CaptureTest.testCapture1_2446744":432,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":466,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":58,"org.easymock.tests.UsageThrowableTest.throwError":81,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":214,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":400,"org.easymock.samples.PartialClassMockTest.testGetArea":287,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":59,"org.easymock.tests.MockingTest.testInterfaceMocking":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":387,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":233,"org.easymock.tests2.UsageTest.niceToStrict":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":124,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":366,"org.easymock.tests2.MockBuilderTest.testCreateMock":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":241,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":445,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":211,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":259,"org.easymock.tests.UsageOverloadedMethodTest.overloading":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":479,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":100,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":229,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":478,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":437,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":172,"org.easymock.tests.MockClassControlTest.testEquals":227,"org.easymock.tests2.EasyMockSupportClassTest.testAll":379,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":249,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":467,"org.easymock.tests2.CaptureTest.testCaptureAll":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":159,"org.easymock.tests.MockNameTest.defaultName":220,"org.easymock.tests2.UsageConstraintsTest.testMatches":480,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":275,"org.easymock.samples.ExampleTest.voteForRemovals":282,"org.easymock.tests.UsageVarargTest.allKinds":180,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":160,"org.easymock.samples.BasicClassMockTest.testPrintContent":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":87,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":301,"org.easymock.tests2.UsageConstraintsTest.greaterThan":481,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":413,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":271,"org.easymock.samples.ExampleTest.voteForRemoval":279,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":414,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":406,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":332,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":13,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.CaptureTest.testCaptureFirst":440,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":443,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":343,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":96,"org.easymock.tests2.CaptureTest.testCapture2_2446744":439,"org.easymock.tests2.UsageTest.moreThanOneArgument":334,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":142,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":373,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":179,"org.easymock.tests.GenericTest.testBridgedEquals":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":43,"org.easymock.tests.UsageExpectAndReturnTest.longType":92,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":441,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":157,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":250,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":485,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":272,"org.easymock.tests.UsageCallCountTest.tooManyCalls":44,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":86,"org.easymock.tests.MockingTest.testNiceClassMocking":198,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":324,"org.easymock.tests.MockingTest.testClassMocking":190,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests2.UsageConstraintsTest.testContains":477,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":37,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":346,"org.easymock.tests2.UsageConstraintsTest.testFind":472,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":231,"org.easymock.tests.MockTypeTest.fromEasyMockClass":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":424,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests.UsageExpectAndReturnTest.object":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":448,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":1,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":12,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":129,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":112,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":164,"org.easymock.tests.MockClassControlTest.testHashCode":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":295,"org.easymock.tests2.EasyMockSupportTest.testVerify":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":389,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":207,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":465,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":452,"org.easymock.tests.UsageVarargTest.varargCharAccepted":173,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":263,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":147,"org.easymock.tests2.UsageTest.openCallCountByLastCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":450,"org.easymock.tests.DefaultClassInstantiatorTest.object":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":33,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":184,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":390,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":294,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":411,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":398,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":224,"org.easymock.tests2.UsageTest.resumeIfFailure":342,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":98,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":140,"org.easymock.samples.SupportTest.voteForRemovals":293,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":244,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":146,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":417,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":114,"org.easymock.tests.UsageExpectAndThrowTest.object":242,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":483,"org.easymock.tests2.DelegateToTest.testWrongClass":428,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.tests.UsageStrictMockTest.range":77,"org.easymock.samples.ConstructorCalledMockTest.testTax":285,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":321,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":447,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":368,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":260,"org.easymock.tests2.CaptureTest.testCaptureNone":436,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":183,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":178,"org.easymock.tests2.ThreadingTest.testThreadSafe":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":41,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":186,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":290,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":53,"org.easymock.tests2.UsageConstraintsTest.any":475,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":63,"org.easymock.tests2.StubTest.stub":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.UsageExpectAndThrowTest.longType":235,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":62,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":299,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":108,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":493,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests2.NameTest.nameForMocksControl":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockedExceptionTest.testMockedException":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":381,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":423,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":369,"org.easymock.tests.MockingTest.testNicePartialClassMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":435,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":110,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":330,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":484,"org.easymock.tests.MockingTest.testTwoMocks":191,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":240,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":340,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":487,"org.easymock.samples.ExampleTest.removeNonExistingDocument":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":60,"org.easymock.tests.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":296,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":266,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":350,"org.easymock.tests2.MockBuilderTest.testCreateMockString":375,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":221,"org.easymock.tests.UsageExpectAndThrowTest.floatType":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":419,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":354,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":392,"org.easymock.samples.ExampleTest.voteAgainstRemoval":280,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":135,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":412,"org.easymock.tests.LimitationsTest.privateConstructor":69,"org.easymock.tests2.UsageConstraintsTest.testNotNull":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":88,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":344,"org.easymock.tests2.UsageTest.defaultResetToNice":339,"org.easymock.samples.ExampleTest.voteAgainstRemovals":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":175,"org.easymock.tests2.CallbackTest.callback":489,"org.easymock.tests2.UsageConstraintsTest.equals":471,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":409,"org.easymock.tests.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":52,"org.easymock.tests.UsageCallCountTest.tooFewCalls":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":262,"org.easymock.tests.UsageThrowableTest.throwCheckedException":85,"org.easymock.tests.MockingTest.testStrictClassMocking":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":325,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":65,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":328,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":421,"org.easymock.tests.ObjectMethodsTest.testHashCode":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":352,"org.easymock.tests2.NameTest.nameForNiceMock":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":2,"org.easymock.samples.ExampleTest.addDocument":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.DelegateToTest.testStubDelegate":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":399,"org.easymock.tests2.AnswerTest.stubAnswer":420,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":75,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":370,"org.easymock.tests.UsageVarargTest.varargLongAccepted":177,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":107,"org.easymock.tests.UsageExpectAndReturnTest.floatType":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":353,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":286,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":482,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageThrowableTest.noUpperLimit":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":470,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":319,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":433,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":265,"org.easymock.tests2.UsageConstraintsTest.testSame":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":90,"org.easymock.samples.SupportTest.addDocument":292,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":327,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":384,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":302,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":196,"org.easymock.tests2.NameTest.nameForMock":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":101,"org.easymock.tests2.UsageStrictMockTest.differentMethods":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":374,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":246,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":11,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":255,"org.easymock.tests2.MockedExceptionTest.testRealException":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":137,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":51,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":67,"org.easymock.tests2.NameTest.nameForStrictMock":357,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":365,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":320,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":29,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":362,"org.easymock.tests2.UsageStrictMockTest.range":314,"org.easymock.tests2.UsageConstraintsTest.lessThan":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":298,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":388,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":402,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests2.MockBuilderTest.testWithConstructor":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":385,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":102,"org.easymock.tests.UsageVarargTest.varargShortAccepted":176,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":42,"org.easymock.tests2.UsageConstraintsTest.cmpTo":476,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":127,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests2.CaptureTest.testCaptureFromStub":438,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":57,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":363,"org.easymock.tests.UsageTest.unexpectedCallWithArray":117,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":74,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":76,"org.easymock.samples.ExampleTest.addAndChangeDocument":284,"org.easymock.tests.UsageStrictMockTest.testVerify":80,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":289,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":158,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":434,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":154,"org.easymock.tests.LimitationsTest.abstractClass":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":95,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":446,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":170}}]
