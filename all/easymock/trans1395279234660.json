[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:109","sourceCode":"org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[52,53,3,4,5,7,9,10,11,14,15,16,17,19,21,22,23,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[54,55,56,57,58,59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[61,62,54,63,64,65,66,60,67,68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[70,71,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[75,76,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[77,78,79,80],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[81,82,83,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[86,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[88,89,90,91,92,93,29,94,30,95,96,31,32,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,77,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,70,170,171,172,173,174,175,176,177,178,179,33,180,181,182,183,184,34,35,36,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,81,254,255,256,82,83,257,258,259,260,261,262,263,264,84,265,266,267,268,85,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,37,38,285,39,40,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,52,312,53,313,71,314,315,316,317,318,319,320,321,322,323,324,325,41,42,326,327,328,329,330,43,44,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,75,361,76,362,363,364,86,365,366,78,367,87,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,79,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,80,407,408,3,4,5,6,7,8,9,10,11,12,13,14,409,72,410,73,411,74,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,45,46,47,48,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,15,16,17,18,19,20,21,22,23,24,25,26,448,449,49,450,50,51,451,452,453,454,455,456,457,458,69,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[54,55,56,57,58,59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[327],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:178","failures":[101,340],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[364,86,78,87,368,370,380,384,459,461,469],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[86,366,370,371],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[261,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[344,345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[383],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[86,368,380],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[378,473],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[344,345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[459,461,462,463,464,465,466,468,474,469,470,472],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[368,369],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[28],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[88,89,90,91,92,93,29,95,96,97,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,140,141,142,143,77,155,168,70,170,174,175,176,33,180,181,182,183,184,34,35,36,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,220,223,224,225,226,227,228,284,38,285,39,40,286,288,289,307,308,309,310,311,52,53,313,71,314,315,316,317,319,320,321,322,323,324,325,41,326,327,328,329,331,332,337,339,340,346,347,349,352,360,86,78,87,368,384,387,390,391,404,405,406,407,408,8,72,410,73,74,475,412,414,415,416,417,418,419,420,422,423,424,425,20,449,49,450,50,51,451,452,453,459,460,466,467,469,472],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests2.UsageTest.argumentsOrdered":44,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":261,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":327,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":53,"org.easymock.tests2.DelegateToTest.testReturnException":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":224,"org.easymock.tests.MockClassControlTest.testToString":301,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":427,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":85,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":113,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":347,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":55,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":369,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageTest.wrongArguments":42,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":275,"org.easymock.samples.ExampleTest.answerVsDelegate":71,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":104,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":162,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":351,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":423,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":306,"org.easymock.tests2.CaptureTest.testPrimitive":462,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":132,"org.easymock.tests.UsageTest.moreThanOneArgument":29,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":90,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":294,"org.easymock.tests.UsageVarargTest.varargIntAccepted":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":13,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":311,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":20,"org.easymock.tests.ReplayStateInvalidUsageTest.times":241,"org.easymock.tests2.DependencyTest.testClassMocking":344,"org.easymock.tests2.AnswerTest.answer":387,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":396,"org.easymock.tests2.CaptureTest.testAnd":459,"org.easymock.tests2.UsageTest.strictResetToDefault":325,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":166,"org.easymock.tests2.DelegateToTest.testDelegate":74,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":128,"org.easymock.tests.LimitationsTest.mockFinalMethod":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":217,"org.easymock.tests2.DependencyTest.testClassMockingSupport":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":177,"org.easymock.tests2.CaptureTest.testCapture1_2446744":463,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":394,"org.easymock.tests.UsageThrowableTest.throwError":205,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":235,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":103,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":92,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":65,"org.easymock.samples.PartialClassMockTest.testGetArea":312,"org.easymock.tests.MockingTest.testInterfaceMocking":160,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":308,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":114,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":282,"org.easymock.tests2.UsageTest.niceToStrict":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":81,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":337,"org.easymock.tests2.MockBuilderTest.testCreateMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":444,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":122,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":145,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":273,"org.easymock.tests.UsageOverloadedMethodTest.overloading":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":446,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":375,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":27,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":374,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":468,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":136,"org.easymock.tests2.EasyMockSupportClassTest.testAll":434,"org.easymock.tests.MockClassControlTest.testEquals":305,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":130,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":2,"org.easymock.tests2.CaptureTest.testCaptureAll":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":215,"org.easymock.tests.MockNameTest.defaultName":154,"org.easymock.tests2.UsageConstraintsTest.testMatches":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":91,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":233,"org.easymock.samples.ExampleTest.voteForRemovals":317,"org.easymock.tests.UsageVarargTest.allKinds":77,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":216,"org.easymock.samples.BasicClassMockTest.testPrintContent":321,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":448,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":228,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":252,"org.easymock.tests2.UsageConstraintsTest.greaterThan":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":165,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":75,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":253,"org.easymock.samples.ExampleTest.voteForRemoval":314,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":405,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":361,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":354,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":144,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":416,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":223,"org.easymock.tests2.CaptureTest.testCaptureFirst":472,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":417,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":332,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests2.CaptureTest.testCapture2_2446744":471,"org.easymock.tests2.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":342,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":143,"org.easymock.tests.GenericTest.testBridgedEquals":222,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":152,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":414,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":131,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":79,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":88,"org.easymock.tests.UsageCallCountTest.tooManyCalls":153,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":210,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":456,"org.easymock.tests.MockingTest.testNiceClassMocking":163,"org.easymock.tests.MockingTest.testClassMocking":158,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":146,"org.easymock.tests2.UsageConstraintsTest.testContains":373,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":399,"org.easymock.tests2.UsageConstraintsTest.testFind":366,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests.MockTypeTest.fromEasyMockClass":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":403,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":356,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":422,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":56,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":83,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":98,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":60,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":70,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":4,"org.easymock.tests.MockClassControlTest.testHashCode":304,"org.easymock.tests2.EasyMockSupportTest.testVerify":426,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":0,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":393,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":454,"org.easymock.tests.UsageVarargTest.varargCharAccepted":137,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":245,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":272,"org.easymock.tests2.UsageTest.openCallCountByLastCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":425,"org.easymock.tests.DefaultClassInstantiatorTest.object":246,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":110,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":440,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":18,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":3,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":447,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":1,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":302,"org.easymock.tests2.UsageTest.resumeIfFailure":331,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":226,"org.easymock.tests2.StubTest.stubWithReturnValue":453,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":383,"org.easymock.tests2.SerializationTest.testAllMockedMethod":413,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":266,"org.easymock.samples.SupportTest.voteForRemovals":323,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":125,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":271,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":388,"org.easymock.tests.UsageExpectAndThrowTest.object":123,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":100,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":381,"org.easymock.tests2.DelegateToTest.testWrongClass":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":430,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":432,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":243,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":274,"org.easymock.tests2.CaptureTest.testCaptureNone":467,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":292,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":142,"org.easymock.tests2.ThreadingTest.testThreadSafe":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":442,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":150,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":281,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":320,"org.easymock.tests2.CaptureTest.testCapture_2617107":461,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":269,"org.easymock.tests2.UsageConstraintsTest.any":371,"org.easymock.tests2.StubTest.stub":452,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":109,"org.easymock.tests.UsageExpectAndThrowTest.longType":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":270,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":239,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":450,"org.easymock.tests2.SerializationTest.testClass":475,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":17,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":451,"org.easymock.tests2.NameTest.nameForMocksControl":48,"org.easymock.tests2.MockedExceptionTest.testMockedException":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":435,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":402,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":117,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":348,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":340,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":353,"org.easymock.tests2.CaptureTest.testCaptureLast":466,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":368,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":382,"org.easymock.tests.MockingTest.testTwoMocks":159,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":121,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":385,"org.easymock.samples.ExampleTest.removeNonExistingDocument":318,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":22,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":5,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":248,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":406,"org.easymock.tests2.MockBuilderTest.testCreateMockString":343,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":115,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":377,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":390,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":441,"org.easymock.samples.ExampleTest.voteAgainstRemoval":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":262,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":290,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":360,"org.easymock.tests.LimitationsTest.privateConstructor":230,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":66,"org.easymock.tests2.UsageConstraintsTest.testNotNull":384,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":397,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests2.UsageTest.defaultResetToNice":330,"org.easymock.samples.ExampleTest.voteAgainstRemovals":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":263,"org.easymock.tests.UsageVarargTest.differentLength":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":16,"org.easymock.tests2.CallbackTest.callback":408,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":182,"org.easymock.tests.UsageCallCountTest.tooFewCalls":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":276,"org.easymock.tests.UsageThrowableTest.throwCheckedException":209,"org.easymock.tests.MockingTest.testStrictClassMocking":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":458,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":392,"org.easymock.tests.ObjectMethodsTest.testHashCode":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":58,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":407,"org.easymock.tests2.NameTest.nameForNiceMock":47,"org.easymock.tests2.DependencyTest.testInterfaceMocking":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":57,"org.easymock.samples.ExampleTest.addDocument":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":443,"org.easymock.tests2.DelegateToTest.testStubDelegate":410,"org.easymock.tests2.AnswerTest.stubAnswer":391,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests.UsageVarargTest.varargLongAccepted":141,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":260,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":12,"org.easymock.tests.UsageThrowableTest.noUpperLimit":206,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":363,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":428,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":464,"org.easymock.tests2.SerializationTest.test":412,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":28,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests2.UsageConstraintsTest.testSame":367,"org.easymock.samples.SupportTest.addDocument":322,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":219,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":82,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":11,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":161,"org.easymock.tests2.NameTest.nameForMock":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":127,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":167,"org.easymock.tests2.MockedExceptionTest.testRealException":400,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":84,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":264,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":244,"org.easymock.tests2.NameTest.nameForStrictMock":46,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":336,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":429,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":249,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":380,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":334,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":386,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":7,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":259,"org.easymock.tests2.CaptureTest.testCaptureRightOne":469,"org.easymock.tests2.UsageConstraintsTest.testOr":87,"org.easymock.tests.UsageRangeTest.combination":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":349,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.MockBuilderTest.testWithConstructor":61,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":254,"org.easymock.tests.UsageVarargTest.varargShortAccepted":140,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":151,"org.easymock.tests2.UsageConstraintsTest.cmpTo":372,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":256,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":329,"org.easymock.tests2.CaptureTest.testCaptureFromStub":470,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":234,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":335,"org.easymock.tests.UsageTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":149,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":63,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests2.CaptureTest.testCapture":474,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.UsageConstraintsTest.constraints":364,"org.easymock.samples.ExampleTest.addAndChangeDocument":319,"org.easymock.tests.UsageStrictMockTest.testVerify":287,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":52,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests2.CompareToTest.testGreateThan":473,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":214,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.LimitationsTest.abstractClass":229,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":420,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":134}}]
