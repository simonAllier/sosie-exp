[{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[0,16,17],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[18,19,20,21,22,23,0,16,17,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,1,62,63,64,65,66,67,68,69,70,71,72,73,74,75,15,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,13,13,14,14,305,306,307,308,309,310,311],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[0,16,17,312],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[78],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[65,70,81],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[313],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[207,208,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[314,315,196,316,317,318],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,319,320,321,322,0,16,17,24,25,26,27,29,30,31,32,33,34,37,38,41,42,43,44,45,46,47,48,49,50,52,53,56,57,58,59,60,61,1,62,63,64,65,66,67,68,69,70,71,73,74,75,15,76,77,78,79,80,81,82,83,85,86,87,88,89,91,92,93,94,95,323,97,99,100,103,104,105,106,107,108,109,110,111,112,113,114,324,116,325,117,118,121,122,124,125,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,151,326,327,328,329,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,178,179,180,181,182,183,185,186,189,195,197,200,201,202,204,205,330,211,212,214,215,216,217,218,331,219,220,221,222,223,224,225,226,227,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,332,265,266,267,268,274,275,276,277,278,279,281,291,293,294,333,334,335,336,337,295,296,297,298,299,300,301,302,303,304,13,14,305,306,307,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[314,315,196,316,317,318],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[53,62,63,66,67,68,69,75,76,77,79,80,86,87,88,112,178,179,185,186,189,197,231,274,275,276,277,278],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[0,16,24,25,27,28,31,32,33,34,36,37,42,44,47,50,53,55,56,58,59,60,61,1,62,63,64,65,66,67,68,69,70,71,73,74,75,15,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,124,126,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,148,178,179,180,181,182,183,185,186,189,197,199,200,203,205,206,207,208,209,210,211,213,219,220,221,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,274,275,276,277,278,279,280,281,283,284,287,291,292,293,294,295,297,299,303,305,307,308,310],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[24,26,34,64,65,67,69,70,72,81,86],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[22,23,25,31,32,37,49,62,76,79,88,99,100,122,151,152,158,164,168,170,339,233,239,245,249,251,340,271,273,281,294,311],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[341,18,19,20,21,22,342,23,319,320,321,322,0,16,17,343,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,344,345,346,347,348,44,349,350,351,352,353,354,45,46,47,48,49,355,356,357,358,359,50,360,361,362,363,364,365,51,52,53,54,55,56,57,366,367,368,58,369,370,59,371,372,373,374,375,376,377,378,379,60,380,381,382,383,384,61,385,386,1,2,387,388,389,390,391,62,63,64,65,392,66,67,68,69,70,71,72,73,74,75,15,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,393,394,95,3,395,323,96,97,98,396,397,99,100,101,102,103,104,105,106,107,108,109,110,111,112,398,399,113,114,324,4,115,400,5,401,116,325,117,6,118,7,402,119,9,403,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,326,327,328,329,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,404,176,177,405,406,178,179,180,181,182,183,407,184,408,409,410,411,412,413,414,415,416,339,417,418,419,420,421,422,423,424,425,426,427,428,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,429,330,430,431,432,433,434,435,436,211,212,213,437,214,215,216,217,218,438,439,331,440,441,442,219,220,443,221,444,445,446,222,223,224,225,226,227,447,448,449,338,450,451,452,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,453,256,257,258,259,260,261,262,263,264,332,265,266,267,268,454,269,270,455,456,457,458,459,460,461,462,463,464,465,466,340,467,468,469,271,470,471,472,473,474,272,475,273,274,275,276,277,278,476,477,279,478,280,281,318,282,283,284,285,286,287,288,479,289,290,480,291,481,292,293,294,333,334,335,336,337,482,483,484,485,486,487,295,296,297,298,299,300,301,302,303,304,13,13,14,14,305,306,307,308,309,310,488,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,489,490,366,367,368,58,369,370,59,371,372,373,374,375,376,377,378,379,60,380,381,382,383,384,61,385,386,1,2,106,110,491,4,5,6,7,8,9,13,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[61,401],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,16,17,312],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[18,19,20,21,53,55,56,122,123,129,130,492,196,197,199,200,281,282,285,286,295,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,2,6,7,493,494,495,496,497],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[341,22,342,23,319,320,321,322,0,16,17,343,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,344,345,346,347,348,44,349,350,351,352,353,354,45,46,47,48,49,355,356,357,358,359,50,360,361,362,363,364,365,51,52,53,54,55,56,57,366,58,370,59,372,373,376,377,378,379,60,381,384,61,385,386,1,2,388,389,390,391,62,63,64,65,392,66,67,68,69,70,71,72,73,74,75,15,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,393,95,3,395,323,96,97,98,396,99,100,101,102,103,106,107,108,109,111,112,113,114,115,401,116,325,117,7,402,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,140,142,143,144,145,146,147,148,149,150,151,326,327,328,329,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,404,176,177,405,406,178,179,180,181,182,183,407,184,408,409,410,411,412,413,414,415,416,339,417,418,419,421,422,423,424,425,426,428,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,429,330,430,431,432,433,434,435,436,211,212,213,437,214,215,216,217,218,438,439,331,440,441,442,219,220,443,221,444,445,446,222,223,224,225,226,227,448,338,451,452,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,453,256,257,258,259,260,261,262,263,264,332,265,266,267,268,454,269,270,455,456,457,458,459,460,461,462,463,464,465,466,340,467,468,469,271,470,471,472,473,474,272,475,273,274,275,276,277,278,476,477,279,478,280,281,318,282,283,284,285,286,287,288,479,289,290,480,291,481,292,293,294,333,334,335,336,337,482,483,484,485,486,487,295,296,297,298,299,300,301,302,303,304,13,13,14,14,305,306,307,308,309,310,488,311],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[25,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[55,498,199,296,297],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[436,437],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,16,17,343,24,25,26,27,29,30,31,32,33,34,37,38,41,44,47,50,52,54,57,58,59,60,61,1,65,70,71,73,74,15,78,81,82,83,84,85,89,90,91,92,93,94,95,97,102,103,104,105,106,107,108,109,110,113,114,116,117,118,120,121,123,124,125,129,130,132,133,134,135,136,137,138,139,141,142,143,144,145,147,149,154,155,157,162,167,172,413,188,195,196,198,201,203,204,205,206,207,208,209,210,211,212,439,219,220,221,235,236,238,243,248,253,254,255,256,257,259,260,261,262,263,267,268,269,270,279,282,285,286,287,288,289,290,291,292,293,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"bridgeMethod","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:305","failures":[438,439,271],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[22,23,319,320,321,322,0,16,17,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,1,62,63,64,65,66,67,68,69,70,71,73,74,75,15,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,393,95,323,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,324,115,116,325,117,118,402,119,403,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,151,326,327,328,329,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,178,179,180,182,183,185,186,187,188,189,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,499,499,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,454,269,270,273,274,275,276,277,278,279,280,281,318,282,283,284,285,286,287,288,289,290,481,292,293,294,333,334,335,336,337,295,296,297,298,299,300,301,302,303,304,13,14,305,306,307,308,309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[0,368,369,374,379,385,386,1,2,90,3,323,98,106,110,7,13,13,14,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,16,17,312],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":65,"org.easymock.tests2.UsageTest.argumentsOrdered":130,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":465,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":125,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":302,"org.easymock.tests2.DelegateToTest.testReturnException":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":223,"org.easymock.tests.MockingTest.testPartialClassMocking":219,"org.easymock.tests.MockClassControlTest.testToString":430,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":341,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":152,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":59,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":492,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageTest.wrongArguments":123,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":328,"org.easymock.samples.ExampleTest.answerVsDelegate":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":338,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":445,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":92,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests2.CaptureTest.testPrimitive":27,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":171,"org.easymock.tests.UsageTest.moreThanOneArgument":281,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":404,"org.easymock.tests.UsageTest.argumentsOrdered":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":364,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":44,"org.easymock.tests.ReplayStateInvalidUsageTest.times":339,"org.easymock.tests2.DependencyTest.testClassMocking":398,"org.easymock.tests2.AnswerTest.answer":38,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":470,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":406,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":167,"org.easymock.tests.LimitationsTest.mockFinalMethod":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":337,"org.easymock.tests2.DependencyTest.testClassMockingSupport":399,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":438,"org.easymock.tests2.CaptureTest.testCapture1_2446744":28,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":411,"org.easymock.tests.UsageThrowableTest.throwError":203,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":449,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":218,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":10,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":386,"org.easymock.samples.PartialClassMockTest.testGetArea":303,"org.easymock.tests.MockingTest.testInterfaceMocking":443,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":174,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":153,"org.easymock.tests2.UsageTest.niceToStrict":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":116,"org.easymock.tests2.MockBuilderTest.testCreateMock":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":161,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":314,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":230,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":326,"org.easymock.tests.UsageOverloadedMethodTest.overloading":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":76,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":244,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":292,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":15,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":33,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":453,"org.easymock.tests.MockClassControlTest.testEquals":434,"org.easymock.tests2.EasyMockSupportClassTest.testAll":58,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":169,"org.easymock.tests2.CaptureTest.testCaptureAll":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":335,"org.easymock.tests.MockNameTest.defaultName":452,"org.easymock.tests2.UsageConstraintsTest.testMatches":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":217,"org.easymock.samples.ExampleTest.voteForRemovals":310,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":295,"org.easymock.samples.BasicClassMockTest.testPrintContent":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":336,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":209,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":51,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":361,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":427,"org.easymock.tests2.UsageConstraintsTest.greaterThan":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":181,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":98,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":428,"org.easymock.samples.ExampleTest.voteForRemoval":307,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":396,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":100,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":393,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":172,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":222,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":146,"org.easymock.tests2.CaptureTest.testCaptureFirst":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":240,"org.easymock.tests2.UsageTest.moreThanOneArgument":122,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":102,"org.easymock.tests2.CaptureTest.testCapture2_2446744":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":471,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":262,"org.easymock.tests.GenericTest.testBridgedEquals":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":269,"org.easymock.tests.UsageExpectAndReturnTest.longType":236,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":170,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":190,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":84,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":214,"org.easymock.tests.UsageCallCountTest.tooManyCalls":270,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":208,"org.easymock.tests.MockingTest.testNiceClassMocking":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":105,"org.easymock.tests.MockingTest.testClassMocking":441,"org.easymock.tests2.UsageConstraintsTest.testContains":75,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":332,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":294,"org.easymock.tests.MockTypeTest.fromEasyMockClass":448,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":23,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests.UsageExpectAndReturnTest.object":243,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":257,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":176,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":249,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":289,"org.easymock.tests.MockClassControlTest.testHashCode":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":356,"org.easymock.tests2.EasyMockSupportTest.testVerify":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":377,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":229,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":343,"org.easymock.tests.UsageVarargTest.varargCharAccepted":256,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":420,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":475,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests.DefaultClassInstantiatorTest.object":421,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":228,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":483,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":378,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":355,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":432,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":158,"org.easymock.tests.CapturesMatcherTest.test":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":191,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":61,"org.easymock.tests2.UsageTest.resumeIfFailure":131,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":225,"org.easymock.tests2.StubTest.stubWithReturnValue":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":242,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":271,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":12,"org.easymock.samples.SupportTest.voteForRemovals":299,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":315,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":164,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":312,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":272,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":39,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":408,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":82,"org.easymock.tests2.DelegateToTest.testWrongClass":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":179,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":199,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":390,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":418,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":175,"org.easymock.tests2.CaptureTest.testCaptureNone":32,"org.easymock.tests.UsageUnorderedTest.message":273,"org.easymock.tests.UsageVerifyTest.twoReturns":297,"org.easymock.tests.UsageVarargTest.varargByteAccepted":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":380,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":268,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":188,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":416,"org.easymock.tests2.StubTest.stub":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":224,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":425,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":415,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":50,"org.easymock.tests.LimitationsTest.mockNativeMethod":279,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":346,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.tests2.NameTest.nameForMocksControl":21,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":313,"org.easymock.tests2.MockedExceptionTest.testMockedException":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":370,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":221,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":342,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":220,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":94,"org.easymock.tests2.CaptureTest.testCaptureLast":31,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":439,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":110,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":83,"org.easymock.tests.MockingTest.testTwoMocks":442,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":129,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":87,"org.easymock.samples.ExampleTest.removeNonExistingDocument":488,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":357,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":423,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":101,"org.easymock.tests2.MockBuilderTest.testCreateMockString":403,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":429,"org.easymock.tests.UsageExpectAndThrowTest.floatType":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":387,"org.easymock.tests.UsageVerifyTest.twoThrows":296,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":60,"org.easymock.samples.ExampleTest.voteAgainstRemoval":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":173,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests.LimitationsTest.privateConstructor":477,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":490,"org.easymock.tests2.UsageConstraintsTest.testNotNull":86,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":210,"org.easymock.tests2.UsageTest.defaultResetToNice":128,"org.easymock.samples.ExampleTest.voteAgainstRemovals":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":340,"org.easymock.tests.UsageVarargTest.differentLength":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":345,"org.easymock.tests2.CallbackTest.callback":49,"org.easymock.tests2.UsageConstraintsTest.equals":392,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":187,"org.easymock.tests.UsageCallCountTest.tooFewCalls":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":329,"org.easymock.tests.UsageThrowableTest.throwCheckedException":207,"org.easymock.tests.MockingTest.testStrictClassMocking":440,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":317,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":108,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":43,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":103,"org.easymock.tests2.NameTest.nameForNiceMock":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.DelegateToTest.testStubDelegate":148,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests.UsageVarargTest.varargLongAccepted":260,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.floatType":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":1,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":80,"org.easymock.tests.UsageThrowableTest.noUpperLimit":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":63,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":388,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":29,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":422,"org.easymock.tests2.UsageConstraintsTest.testSame":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":234,"org.easymock.samples.SupportTest.addDocument":298,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":372,"org.easymock.tests.GenericTest.testPackageScope":211,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":362,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":444,"org.easymock.tests2.NameTest.nameForMock":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":9,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":183,"org.easymock.tests2.MockedExceptionTest.testRealException":48,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":391,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":186,"org.easymock.tests2.NameTest.nameForStrictMock":19,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":389,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":424,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":115,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":376,"org.easymock.tests2.UsageConstraintsTest.testOr":69,"org.easymock.tests.UsageRangeTest.combination":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":90,"org.easymock.tests.UsageTest.wrongArguments":282,"org.easymock.tests2.MockBuilderTest.testWithConstructor":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":373,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":246,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":426,"org.easymock.tests.UsageVarargTest.varargShortAccepted":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":454,"org.easymock.tests2.UsageConstraintsTest.cmpTo":74,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":410,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":400,"org.easymock.tests.UsageTest.unexpectedCallWithArray":318,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":196,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":267,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":247,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.samples.ExampleTest.addAndChangeDocument":311,"org.easymock.tests.UsageStrictMockTest.testVerify":202,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":304,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":334,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests.LimitationsTest.abstractClass":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":254}}]
