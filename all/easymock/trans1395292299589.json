[{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[52,488,489,65,70,71,165,168,173,490,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[116,122,134],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[491,79,81,82,83,84,85,86,88,492,89,90,92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[18,96,102,103,254,293,296,493,442,443,450,451,454,455],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[16,17,49,55,57,58,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,155,158,254,255,293,294,336,337,338,339,340,410,411,420,421,422,423,424,425,436,472,473,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[62,93,100,193,194,195,196,268,269,276,277,338,339,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,382,384,385,386,387,388,389,411,442,447,448,453,477,482,483,484,485,486,487],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[494,141],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[163,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:94","failures":[79,80,81,82,89,90,115,116,118,119,120,121,122,123,124,125,134,135,139,140],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[8,16,19,93,95,96,99,100,102,103,105,111,119,120,125,126,139,140,143,144,145,146,226,254,293,294,297,306,308,311,384,425,436,437,441,442,443,447,448,449,451,452,453,454,455,456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[492,495],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[16,49,55,57,79,80,81,82,83,84,85,86,87,88,89,90,91,92,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,155,254,293,294,336,337,338,339,340,410,411,420,421,422,423,424,436,472,473,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[247,251],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"position":"org.easymock.internal.MocksControl:136","failures":[4,5,51,52,58,60,63,64,65,66,69,70,72,73,74,76,147,148,150,151,152,153,155,156,157,158,159,160,161,162,163,164,166,167,169,170,171,172,174,176,177,178,180,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,233,233,234,234,238,246,247,248,249,250,251,253,278,279,280,281,282,283,284,285,286,287,288,289,290,366,367,368,369,372,373,374,375,376,378,381,464,469,481],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[163,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,1,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,26,27,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,59,61,62,68,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,149,186,187,193,194,195,196,222,225,226,227,228,229,230,232,235,236,237,240,241,243,254,255,267,268,269,270,271,272,273,274,275,276,277,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,328,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,371,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,415,416,417,418,419,420,421,422,423,424,425,426,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,467,468,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,486,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[153,163,164,171],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[98,131,151],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[494,496,497,498,499],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[48,162],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[500,501,131,502,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[107,109,110,111,226,314,476],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[500,504,501,505,95,96,102,103,293,506,502,507,449,450,451,454,455],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[0,1,2,3,6,7,8,11,12,13,14,15,16,17,18,19,20,26,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,111,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,150,151,152,153,155,158,159,160,161,164,166,170,171,172,174,177,178,180,186,193,194,195,196,200,203,213,219,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,254,270,271,272,273,274,279,280,291,292,293,294,295,296,297,298,305,306,307,308,309,310,311,336,337,338,339,340,495,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,375,376,378,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,415,416,417,418,419,420,421,422,423,424,425,426,427,429,430,431,432,433,434,435,436,437,439,440,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,472,473,474,476,477,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[508],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[58,59,60,509],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[498,123,129,141],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[40,101],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[490],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:324","failures":[386,387,442],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":116,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":448,"org.easymock.tests2.UsageTest.argumentsOrdered":103,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":43,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":322,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":98,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":237,"org.easymock.tests2.DelegateToTest.testReturnException":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":483,"org.easymock.tests.MockingTest.testPartialClassMocking":375,"org.easymock.tests.MockClassControlTest.testToString":285,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":142,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":413,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":207,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":123,"org.easymock.tests2.UsageTest.wrongArguments":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":336,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":459,"org.easymock.samples.ExampleTest.answerVsDelegate":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":469,"org.easymock.tests2.UsageConstraintsTest.testNull":119,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":150,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":42,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":290,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":340,"org.easymock.tests.UsageTest.moreThanOneArgument":449,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":365,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":272,"org.easymock.tests.UsageTest.argumentsOrdered":455,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":341,"org.easymock.tests.UsageVarargTest.varargIntAccepted":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":420,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":74,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":424,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":26,"org.easymock.tests.ReplayStateInvalidUsageTest.times":263,"org.easymock.tests2.DependencyTest.testClassMocking":4,"org.easymock.tests2.AnswerTest.answer":8,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":3,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":466,"org.easymock.tests2.CaptureTest.testAnd":79,"org.easymock.tests2.UsageTest.strictResetToDefault":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":37,"org.easymock.tests2.DelegateToTest.testDelegate":111,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":361,"org.easymock.tests.LimitationsTest.mockFinalMethod":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":419,"org.easymock.tests2.DependencyTest.testClassMockingSupport":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":461,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":1,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":257,"org.easymock.tests.UsageThrowableTest.throwError":382,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":468,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":192,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":274,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":221,"org.easymock.samples.PartialClassMockTest.testGetArea":238,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":258,"org.easymock.tests.MockingTest.testInterfaceMocking":377,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":421,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests2.UsageTest.niceToStrict":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":208,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":170,"org.easymock.tests2.MockBuilderTest.testCreateMock":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":29,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":355,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":38,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":465,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":457,"org.easymock.tests.UsageOverloadedMethodTest.overloading":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":218,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":129,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":401,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":128,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":428,"org.easymock.tests2.EasyMockSupportClassTest.testAll":200,"org.easymock.tests.MockClassControlTest.testEquals":289,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":280,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":363,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":417,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":2,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests.MockNameTest.defaultName":371,"org.easymock.tests2.UsageConstraintsTest.testMatches":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":273,"org.easymock.samples.ExampleTest.voteForRemovals":230,"org.easymock.tests.UsageVarargTest.allKinds":436,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":441,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":418,"org.easymock.samples.BasicClassMockTest.testPrintContent":224,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":388,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":188,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":110,"org.easymock.tests2.UsageConstraintsTest.greaterThan":132,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":438,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":161,"org.easymock.samples.ExampleTest.voteForRemoval":227,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":253,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":162,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":47,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":481,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":35,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":482,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":106,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":36,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":397,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":49,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests2.UsageTest.moreThanOneArgument":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":435,"org.easymock.tests.GenericTest.testBridgedEquals":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":310,"org.easymock.tests.UsageExpectAndReturnTest.longType":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":415,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":364,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":444,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":137,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":276,"org.easymock.tests.UsageCallCountTest.tooManyCalls":311,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testNiceClassMocking":381,"org.easymock.tests.MockingTest.testClassMocking":373,"org.easymock.tests2.UsageConstraintsTest.testContains":127,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":195,"org.easymock.tests2.UsageConstraintsTest.testFind":118,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":447,"org.easymock.tests.MockTypeTest.fromEasyMockClass":467,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":57,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests.UsageExpectAndReturnTest.object":400,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":41,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":430,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":242,"org.easymock.tests.UsageTest.exactCallCountByLastCall":456,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":342,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":507,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":425,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":406,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":182,"org.easymock.tests.MockClassControlTest.testHashCode":288,"org.easymock.tests2.EasyMockSupportTest.testVerify":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":210,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":474,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":0,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":112,"org.easymock.tests.UsageVarargTest.varargCharAccepted":429,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":245,"org.easymock.tests2.CaptureTest.testCaptureMultiple":491,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastCall":99,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":44,"org.easymock.tests.DefaultClassInstantiatorTest.object":246,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":267,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":240,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":211,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":24,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":181,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":159,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":352,"org.easymock.tests.CapturesMatcherTest.test":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":407,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":219,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":286,"org.easymock.tests2.UsageTest.resumeIfFailure":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":485,"org.easymock.tests2.StubTest.stubWithReturnValue":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":138,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":328,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":501,"org.easymock.samples.SupportTest.voteForRemovals":236,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":358,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":509,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":334,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":9,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":414,"org.easymock.tests.UsageExpectAndThrowTest.object":356,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":135,"org.easymock.tests2.DelegateToTest.testWrongClass":109,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":472,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":473,"org.easymock.samples.ConstructorCalledMockTest.testTax":233,"org.easymock.tests.UsageStrictMockTest.range":296,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":77,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":357,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":197,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":458,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests.UsageUnorderedTest.message":254,"org.easymock.tests.UsageVerifyTest.twoReturns":443,"org.easymock.tests.UsageVarargTest.varargByteAccepted":434,"org.easymock.tests2.ThreadingTest.testThreadSafe":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":214,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":308,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":223,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":505,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":339,"org.easymock.tests2.UsageConstraintsTest.any":125,"org.easymock.tests2.StubTest.stub":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndThrowTest.longType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":261,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":17,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":409,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":281,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":23,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":20,"org.easymock.tests2.NameTest.nameForMocksControl":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":25,"org.easymock.tests2.MockedExceptionTest.testMockedException":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":202,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":453,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":350,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":378,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":174,"org.easymock.tests.MockingTest.testNicePartialClassMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":152,"org.easymock.tests2.CompareToTest.testCompareEqual":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":21,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":136,"org.easymock.tests.MockingTest.testTwoMocks":374,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":354,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":140,"org.easymock.samples.ExampleTest.removeNonExistingDocument":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":28,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":259,"org.easymock.tests.UsageStrictMockTest.differentMethods":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":183,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":248,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":48,"org.easymock.tests2.MockBuilderTest.testCreateMockString":180,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":204,"org.easymock.tests.UsageExpectAndThrowTest.floatType":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":11,"org.easymock.tests.UsageVerifyTest.twoThrows":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":53,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":213,"org.easymock.samples.ExampleTest.voteAgainstRemoval":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":160,"org.easymock.tests.LimitationsTest.privateConstructor":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":489,"org.easymock.tests2.UsageConstraintsTest.testNotNull":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":389,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":193,"org.easymock.tests2.UsageTest.defaultResetToNice":101,"org.easymock.samples.ExampleTest.voteAgainstRemovals":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":324,"org.easymock.tests.UsageVarargTest.differentLength":431,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":22,"org.easymock.tests2.CallbackTest.callback":54,"org.easymock.tests2.UsageConstraintsTest.equals":117,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":503,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":156,"org.easymock.tests.UsageTest.openCallCountByLastCall":452,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":338,"org.easymock.tests.UsageCallCountTest.tooFewCalls":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":460,"org.easymock.tests.UsageThrowableTest.throwCheckedException":386,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":411,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":68,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":13,"org.easymock.tests2.CompareToTest.testGreateOrEqual":498,"org.easymock.tests.ObjectMethodsTest.testHashCode":241,"org.easymock.tests2.NameTest.nameForNiceMock":145,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":50,"org.easymock.tests2.DependencyTest.testInterfaceMocking":6,"org.easymock.samples.ExampleTest.addDocument":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":215,"org.easymock.tests2.DelegateToTest.testStubDelegate":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":220,"org.easymock.tests2.AnswerTest.stubAnswer":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":294,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":175,"org.easymock.tests.UsageVarargTest.varargLongAccepted":433,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":408,"org.easymock.tests.UsageExpectAndReturnTest.floatType":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":234,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":190,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":133,"org.easymock.tests.UsageThrowableTest.noUpperLimit":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":114,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":72,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":391,"org.easymock.tests2.UsageConstraintsTest.testSame":120,"org.easymock.samples.SupportTest.addDocument":235,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":67,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":205,"org.easymock.tests.GenericTest.testPackageScope":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":189,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":379,"org.easymock.tests2.NameTest.nameForMock":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":402,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":179,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":394,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":360,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":440,"org.easymock.tests2.MockedExceptionTest.testRealException":196,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":325,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":337,"org.easymock.tests2.NameTest.nameForStrictMock":144,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":169,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":151,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":76,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":134,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":249,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":166,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":185,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":320,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":209,"org.easymock.tests2.UsageConstraintsTest.testOr":121,"org.easymock.tests.UsageRangeTest.combination":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":148,"org.easymock.tests.UsageTest.wrongArguments":451,"org.easymock.tests2.MockBuilderTest.testWithConstructor":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":206,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":313,"org.easymock.tests.UsageVarargTest.varargShortAccepted":432,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":309,"org.easymock.tests2.UsageConstraintsTest.cmpTo":126,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":10,"org.easymock.tests2.CompareToTest.testLessThan":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":256,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":167,"org.easymock.tests.UsageTest.unexpectedCallWithArray":450,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":307,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":404,"org.easymock.tests2.CaptureTest.testCapture":492,"org.easymock.tests2.UsageConstraintsTest.constraints":115,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":232,"org.easymock.tests.UsageStrictMockTest.testVerify":299,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":222,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":292,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":416,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":396,"org.easymock.tests.LimitationsTest.abstractClass":366,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":423,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":39}}]
