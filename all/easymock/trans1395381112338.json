[{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[296,477,478],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[479],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2124","failures":[0,3,4,58,59,60,222],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[8,11,12,169,272,275,276,323,344,345,346,422,437],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[8,10,11,169,170,176,177,480,481,482,483,484,485,486,272,274,275,344,345,346,400,422,424,427,428,435,436],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[487,479],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[97,107,205,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,67,68,72,73,74,75,81,83,84,86,87,93,94,95,121,216,216,217,217,231,232,233,234,235,272,284,339,340,343,347,348,349,350,351,438,439,448],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[153,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[78],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[15,33,36,38,40,41,44,47,50,51,54,150,151,159,160,182,185,193,194,196,197,198,201,203,204,207,208,209,229,230,283,292,293,294,295,296,297,298,314,315,316,317,358,359,361,450,451,452,459,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,488,97,98,489,99,100,101,102,490,103,105,106,107,491,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,492,182,183,184,185,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,216,217,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,493,292,293,294,295,296,297,494,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[8,11,12,169,272,275,276,323,344,345,346,422,437],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[65,204,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[293,297],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[245,249,250,259,264,284,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[495,86],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[496],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":70,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":421,"org.easymock.tests2.UsageTest.argumentsOrdered":177,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":255,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":172,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":215,"org.easymock.tests2.DelegateToTest.testReturnException":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":453,"org.easymock.tests.MockClassControlTest.testToString":471,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":62,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":326,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":401,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests2.UsageTest.wrongArguments":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":339,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":280,"org.easymock.samples.ExampleTest.answerVsDelegate":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":333,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":458,"org.easymock.tests2.UsageConstraintsTest.testNull":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":196,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":476,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":145,"org.easymock.tests2.CaptureTest.testPrimitive":113,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":343,"org.easymock.tests.UsageTest.moreThanOneArgument":422,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":420,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":349,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":430,"org.easymock.tests.UsageTest.argumentsOrdered":428,"org.easymock.tests.UsageVarargTest.varargIntAccepted":364,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":231,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":134,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":235,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":482,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests.ReplayStateInvalidUsageTest.times":307,"org.easymock.tests2.DependencyTest.testClassMocking":210,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":166,"org.easymock.tests2.CaptureTest.testAnd":110,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":330,"org.easymock.tests2.UsageTest.strictResetToDefault":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":140,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":287,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":434,"org.easymock.tests2.DelegateToTest.testDelegate":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":416,"org.easymock.tests.LimitationsTest.mockFinalMethod":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":356,"org.easymock.tests2.DependencyTest.testClassMockingSupport":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":435,"org.easymock.tests2.CaptureTest.testCapture1_2446744":114,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":164,"org.easymock.tests.UsageThrowableTest.throwError":440,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":301,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":332,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":57,"org.easymock.samples.PartialClassMockTest.testGetArea":214,"org.easymock.tests.MockingTest.testInterfaceMocking":455,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":402,"org.easymock.tests2.UsageTest.niceToStrict":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":44,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":100,"org.easymock.tests2.MockBuilderTest.testCreateMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":410,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":141,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":278,"org.easymock.tests.UsageOverloadedMethodTest.overloading":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":83,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":391,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":242,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":477,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":82,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":119,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":365,"org.easymock.tests.MockClassControlTest.testEquals":475,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":165,"org.easymock.tests2.CaptureTest.testCaptureAll":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":354,"org.easymock.tests.MockNameTest.defaultName":282,"org.easymock.tests2.UsageConstraintsTest.testMatches":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":350,"org.easymock.samples.ExampleTest.voteForRemovals":226,"org.easymock.tests.UsageVarargTest.allKinds":373,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":344,"org.easymock.samples.BasicClassMockTest.testPrintContent":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":355,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":446,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":6,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":494,"org.easymock.tests2.UsageConstraintsTest.greaterThan":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":207,"org.easymock.samples.ExampleTest.voteForRemoval":223,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":298,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":29,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":208,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":496,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":199,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":138,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":153,"org.easymock.tests2.CaptureTest.testCaptureFirst":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":139,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":387,"org.easymock.tests2.UsageTest.moreThanOneArgument":169,"org.easymock.tests2.CaptureTest.testCapture2_2446744":122,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":31,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":263,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":372,"org.easymock.tests.GenericTest.testBridgedEquals":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":467,"org.easymock.tests.UsageExpectAndReturnTest.longType":383,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":352,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":419,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":91,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":417,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":347,"org.easymock.tests.UsageCallCountTest.tooManyCalls":468,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":406,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":445,"org.easymock.tests.MockingTest.testNiceClassMocking":459,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":183,"org.easymock.tests.MockingTest.testClassMocking":451,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":461,"org.easymock.tests2.UsageConstraintsTest.testContains":81,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":72,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":244,"org.easymock.tests.MockTypeTest.fromEasyMockClass":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":60,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndReturnTest.object":390,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":144,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":367,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":429,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":431,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":325,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":396,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":362,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":320,"org.easymock.tests.MockClassControlTest.testHashCode":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":125,"org.easymock.tests2.EasyMockSupportTest.testVerify":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":46,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":432,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":163,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":109,"org.easymock.tests.UsageVarargTest.varargCharAccepted":366,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":493,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":268,"org.easymock.tests2.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":147,"org.easymock.tests.DefaultClassInstantiatorTest.object":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":289,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":375,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":443,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":124,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":473,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":407,"org.easymock.tests.CapturesMatcherTest.test":479,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":311,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":55,"org.easymock.tests2.UsageTest.resumeIfFailure":178,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.StubTest.stubWithReturnValue":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":389,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":92,"org.easymock.tests2.SerializationTest.testAllMockedMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":261,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":484,"org.easymock.samples.SupportTest.voteForRemovals":219,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":413,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":267,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.UsageExpectAndThrowTest.object":411,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":327,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":89,"org.easymock.tests2.DelegateToTest.testWrongClass":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":438,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":439,"org.easymock.samples.ConstructorCalledMockTest.testTax":216,"org.easymock.tests.UsageStrictMockTest.range":274,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":161,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":412,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":102,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":279,"org.easymock.tests2.CaptureTest.testCaptureNone":118,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":338,"org.easymock.tests.UsageUnorderedTest.message":400,"org.easymock.tests.UsageVerifyTest.twoReturns":346,"org.easymock.tests.UsageVarargTest.varargByteAccepted":371,"org.easymock.tests2.ThreadingTest.testThreadSafe":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":50,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":465,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":229,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":378,"org.easymock.tests2.CaptureTest.testCapture_2617107":112,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":486,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":342,"org.easymock.tests2.UsageConstraintsTest.any":79,"org.easymock.tests2.StubTest.stub":191,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":306,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.UsageExpectAndThrowTest.longType":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":296,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":305,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests.LimitationsTest.mockNativeMethod":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":399,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":18,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":12,"org.easymock.tests2.NameTest.nameForMocksControl":66,"org.easymock.tests2.MockedExceptionTest.testMockedException":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":38,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":426,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":456,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":405,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":59,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":103,"org.easymock.tests.MockingTest.testNicePartialClassMocking":454,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":198,"org.easymock.tests2.CaptureTest.testCaptureLast":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":436,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":90,"org.easymock.tests.MockingTest.testTwoMocks":452,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":409,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":176,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":94,"org.easymock.samples.ExampleTest.removeNonExistingDocument":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":23,"org.easymock.tests.UsageStrictMockTest.differentMethods":275,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":126,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":294,"org.easymock.tests2.ConstraintsToStringTest.andToString":483,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":30,"org.easymock.tests2.MockBuilderTest.testCreateMockString":108,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":469,"org.easymock.tests.UsageExpectAndThrowTest.floatType":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":40,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":345,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":49,"org.easymock.samples.ExampleTest.voteAgainstRemoval":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":256,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests.LimitationsTest.privateConstructor":315,"org.easymock.tests2.UsageConstraintsTest.testNotNull":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":447,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":149,"org.easymock.tests2.UsageTest.defaultResetToNice":175,"org.easymock.samples.ExampleTest.voteAgainstRemovals":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":17,"org.easymock.tests.UsageVarargTest.differentLength":368,"org.easymock.tests2.CallbackTest.callback":61,"org.easymock.tests2.UsageConstraintsTest.equals":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":202,"org.easymock.tests.UsageTest.openCallCountByLastCall":425,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":341,"org.easymock.tests.UsageCallCountTest.tooFewCalls":463,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":281,"org.easymock.tests.UsageThrowableTest.throwCheckedException":444,"org.easymock.tests.MockingTest.testStrictClassMocking":450,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":449,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":188,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":22,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":187,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests.ObjectMethodsTest.testHashCode":376,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":32,"org.easymock.tests2.NameTest.nameForNiceMock":65,"org.easymock.tests2.DependencyTest.testInterfaceMocking":212,"org.easymock.samples.ExampleTest.addDocument":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":51,"org.easymock.tests2.DelegateToTest.testStubDelegate":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":56,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":272,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":104,"org.easymock.tests.UsageVarargTest.varargLongAccepted":370,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":398,"org.easymock.tests.UsageExpectAndReturnTest.floatType":382,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.tests2.ConstraintsToStringTest.orToString":480,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":217,"org.easymock.tests.UsageThrowableTest.noUpperLimit":441,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":133,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":87,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":68,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":115,"org.easymock.tests2.SerializationTest.test":14,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":478,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":293,"org.easymock.tests2.UsageConstraintsTest.testSame":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":381,"org.easymock.samples.SupportTest.addDocument":218,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":186,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":41,"org.easymock.tests.GenericTest.testPackageScope":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":132,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":457,"org.easymock.tests2.NameTest.nameForMock":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":392,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":415,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":288,"org.easymock.tests2.MockedExceptionTest.testRealException":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":335,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":258,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":340,"org.easymock.tests2.NameTest.nameForStrictMock":64,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":160,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":295,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":97,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":128,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":253,"org.easymock.tests2.CaptureTest.testCaptureRightOne":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":45,"org.easymock.tests2.UsageConstraintsTest.testOr":75,"org.easymock.tests.UsageRangeTest.combination":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":194,"org.easymock.tests.UsageTest.wrongArguments":424,"org.easymock.tests2.MockBuilderTest.testWithConstructor":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":42,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":246,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":297,"org.easymock.tests.UsageVarargTest.varargShortAccepted":369,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":466,"org.easymock.tests2.UsageConstraintsTest.cmpTo":80,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":248,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests2.CaptureTest.testCaptureFromStub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":300,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":98,"org.easymock.tests.UsageTest.unexpectedCallWithArray":423,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":394,"org.easymock.tests2.CaptureTest.testCapture":487,"org.easymock.tests2.UsageConstraintsTest.constraints":69,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":228,"org.easymock.tests2.ConstraintsToStringTest.notToString":481,"org.easymock.tests.UsageStrictMockTest.testVerify":277,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests2.CompareToTest.testGreateThan":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":353,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":386,"org.easymock.tests.LimitationsTest.abstractClass":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":234,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":142,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":363}}]
