[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[1,3,89,4,5,90,91,33,92,34,35,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,41,137,138,139,140,141,142,42,143,144,145,146,147,148,149,12,13,14,15,16,17,18,19,21,150,151,152,153,154,155,156,157,22,23,158,159,160,24,25,161,6,7,162,163,164,165,166,167,168,169,170,171,172,26,27,28,29,173,174,175,176,177,178,30,31,179,180,181,182,183,184,185,186,187,188,189,190,191,192,43,44,45,46,193,47,194,195,196,197,198,198,199,199,200,37,201,202,203,204,8,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,48,223,224,225,226,227,228,229,230,231,232,233,234,235,9,236,237,49,238,239,240,241,242,243,244,245,246,247,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,248,71,72,73,74,75,76,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,77,295,296,297,298,78,299,300,301,302,303,304,305,306,307,308,79,80,309,310,81,82,83,84,85,86,311,312,313,314,315,316,317,318,319,320,321,322,323,324,87,325,88,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[340,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[21,222],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[1,3,89,4,5,90,91,33,92,34,35,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,41,137,138,139,140,141,142,42,143,144,145,146,147,148,149,12,13,14,15,16,17,18,19,21,150,151,152,153,154,155,156,157,22,23,158,159,160,24,25,161,6,7,162,163,164,165,166,167,168,169,170,171,172,26,27,28,29,173,174,175,176,177,178,30,31,179,180,181,182,183,184,185,186,187,188,189,190,191,192,43,44,45,46,193,47,198,199,200,37,201,202,203,204,8,205,206,207,208,210,211,212,215,216,217,218,219,220,221,222,48,223,224,225,226,227,9,237,49,239,240,241,242,243,244,245,246,247,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,248,71,72,73,74,75,76,249,250,251,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,77,295,296,297,298,78,299,300,301,302,303,305,306,307,308,79,80,309,310,81,82,83,84,85,86,314,315,316,317,318,319,320,321,322,323,324,87,325,88,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"invocation"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[341,342,343,344,345,346,347,109,124,348],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[1,349,2,3,89,4,5,91,33,34,35,94,96,97,98,99,100,101,102,103,104,105,106,107,109,110,112,113,114,115,116,117,119,121,122,123,124,125,350,126,127,128,351,129,132,134,135,41,137,138,140,142,42,143,146,147,148,149,12,13,14,15,16,17,18,19,21,150,151,152,153,154,155,156,157,22,23,158,160,24,25,161,6,7,162,163,164,165,166,167,168,169,170,171,172,26,27,29,173,176,177,178,30,31,179,180,185,186,187,188,189,190,191,192,43,44,45,46,193,47,198,198,199,199,37,203,204,8,205,206,208,210,215,222,48,223,224,225,226,227,9,237,49,238,240,241,242,243,244,245,246,352,353,354,355,356,357,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,248,71,72,73,74,75,76,249,250,251,264,268,270,271,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,358,359,360,77,295,298,78,301,302,303,304,305,306,307,308,79,80,309,310,361,362,363,364,365,81,82,83,84,85,86,366,367,368,369,323,324,87,325,88,326,327,328,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,132,41,142,42,147,268,77,298,78,301,325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[134,139,144,145,267,270,296,297,299,300,302,370,88,326],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[26,27,28,29,173,174,175,176,178,30,31,179,180,371],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[96,372,137,162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[1,349,2,3,89,4,5,90,91,373,374,33,92,34,35,347,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,375,119,376,372,120,121,122,123,377,378,124,348,379,380,381,382,383,125,384,385,386,387,388,389,350,126,127,128,351,129,130,131,132,133,134,135,136,390,391,392,393,41,137,138,139,140,141,142,42,143,144,145,146,147,148,149,12,13,394,14,15,16,17,18,19,20,21,150,151,152,153,154,155,156,157,22,23,158,159,160,24,25,161,6,395,7,396,397,398,162,399,400,163,401,402,403,404,405,406,407,408,409,164,410,411,412,413,414,165,415,416,417,418,166,167,168,169,170,171,172,26,27,28,29,173,174,175,176,177,178,30,31,179,180,181,182,183,184,419,420,421,422,423,185,424,425,426,427,428,429,186,187,188,189,190,191,192,43,44,45,46,193,47,430,194,195,196,197,198,198,199,199,200,37,201,202,203,204,8,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,48,223,224,225,226,227,228,229,230,231,232,233,234,235,9,236,237,49,431,238,239,240,241,242,243,244,245,432,246,247,352,433,434,435,436,437,438,439,440,441,442,443,444,445,446,10,447,0,353,448,449,450,451,452,354,453,355,356,357,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,248,71,72,73,74,75,76,454,455,456,249,250,457,251,458,459,460,252,253,254,255,256,257,258,259,260,261,262,263,461,264,462,265,266,267,268,269,270,271,272,273,274,463,464,465,466,467,468,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,469,358,359,360,77,295,296,297,298,78,299,300,301,302,303,304,305,306,307,308,79,80,309,470,471,310,472,361,362,363,364,365,81,82,83,84,85,86,366,367,368,473,311,312,313,474,475,476,369,477,314,315,316,317,318,319,320,321,322,323,324,87,325,88,326,327,328,11,329,330,331,478,332,333,334,335,336,337,338,339,479,480,481,482,483,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[119,132,485,148,149,12,13,14,15,16,17,18,19,20,21,150,151,152,153,154,155,156,157,22,23,158,159,160,24,25,161,6,7,26,27,28,29,173,174,175,176,177,178,30,31,179,180,222,48,240,241,242,243,244,267,268,302,307,308,79,80,309,85,327,328,339],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[119,376,372,120,121,122,123,377,378,124,348,390,486,391,396,397,398,162,399,400,163,401,402,403,404,405,406,407,408,409,164,410,411,412,413,414,165,415,416,186,187,188,189,191,192,43,44,45,198,198,199,199,37,211,212,228,229,230,231,232,233,234,235,245,432,246,247,352,433,454,455,456,249,250,251,460,274,463,464,465,466,467,468,470,471,310,472,479,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,3,89,4,5,90,33,92,34,35,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,119,120,122,124,125,126,127,129,131,132,135,136,137,138,140,141,143,146,148,149,12,13,14,15,16,17,18,19,21,150,151,152,153,154,155,156,157,22,23,158,160,24,25,161,6,7,162,163,164,165,166,167,168,169,172,26,27,28,29,174,175,176,177,178,30,180,181,182,183,184,185,186,187,188,189,190,191,192,43,44,45,46,193,47,194,195,196,197,198,199,200,37,201,202,203,204,8,205,206,207,208,210,211,212,213,214,215,216,217,218,222,223,224,225,226,227,229,238,240,241,242,243,244,245,246,247,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,248,71,249,250,251,462,266,268,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,303,304,305,306,307,308,309,310,81,82,83,84,85,86,314,315,316,317,318,319,320,321,322,324,87,325,88,326,327,328,329,330,331,332,333,335,336,337,338,339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[109,110,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[90,91,373,33,92,34,35,93,94,95,109,111,112,113,115,116,117,118,119,120,121,122,123,378,124,162,163,164,165,186,187,188,189,191,192,45,198,198,199,199,37,211,212,228,229,230,231,232,233,245,246,247,352,456,249,250,251,310,475,479,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[487,488,489,490,491],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[90,373,34,35,94,95,99,102,104,113,120,123,378,125,384,132,134,135,138,139,144,145,185,424,187,188,191,192,194,195,196,197,230,231,232,461,264,267,268,270,271,469,295,296,297,299,300,302,311,474,475,325,88,326,479,480,481,482,483,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[143],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[384,424,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[146,448,304,305,306],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests2.UsageTest.argumentsOrdered":145,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":444,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":141,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":200,"org.easymock.tests2.DelegateToTest.testReturnException":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":82,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests.MockClassControlTest.testToString":230,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":430,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":50,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":341,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":19,"org.easymock.tests2.UsageTest.wrongArguments":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":307,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":316,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":482,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":459,"org.easymock.tests2.UsageConstraintsTest.testNull":15,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":235,"org.easymock.tests2.CaptureTest.testPrimitive":29,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":69,"org.easymock.tests.UsageTest.moreThanOneArgument":295,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.UsageTest.argumentsOrdered":300,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":361,"org.easymock.tests.UsageVarargTest.varargIntAccepted":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":388,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":244,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":260,"org.easymock.tests2.DependencyTest.testClassMocking":417,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":184,"org.easymock.tests2.CaptureTest.testAnd":26,"org.easymock.tests2.UsageTest.strictResetToDefault":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":305,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":65,"org.easymock.tests.LimitationsTest.mockFinalMethod":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":322,"org.easymock.tests2.DependencyTest.testClassMockingSupport":418,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":461,"org.easymock.tests2.CaptureTest.testCapture1_2446744":173,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":182,"org.easymock.tests.UsageThrowableTest.throwError":70,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":254,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":481,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":416,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.MockingTest.testInterfaceMocking":457,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":255,"org.easymock.tests2.CompareToTest.testLessOrEqual":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":359,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":405,"org.easymock.tests2.UsageTest.niceToStrict":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":40,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":33,"org.easymock.tests2.MockBuilderTest.testCreateMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":412,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":426,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":59,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":357,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":314,"org.easymock.tests.UsageOverloadedMethodTest.overloading":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":153,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":286,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":323,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":178,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":478,"org.easymock.tests2.EasyMockSupportClassTest.testAll":162,"org.easymock.tests.MockClassControlTest.testEquals":234,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":183,"org.easymock.tests2.CaptureTest.testCaptureAll":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":320,"org.easymock.tests.MockNameTest.defaultName":469,"org.easymock.tests2.UsageConstraintsTest.testMatches":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":252,"org.easymock.samples.ExampleTest.voteForRemovals":208,"org.easymock.tests.UsageVarargTest.allKinds":339,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":325,"org.easymock.samples.BasicClassMockTest.testPrintContent":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":321,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":75,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":86,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests2.UsageConstraintsTest.greaterThan":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":304,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":123,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":468,"org.easymock.samples.ExampleTest.voteForRemoval":205,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":377,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":118,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":245,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":81,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":147,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests2.CaptureTest.testCapture2_2446744":179,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.UsageTest.moreThanOneArgument":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":94,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":338,"org.easymock.tests.GenericTest.testBridgedEquals":433,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":220,"org.easymock.tests.UsageExpectAndReturnTest.longType":278,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":318,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":68,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":159,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":367,"org.easymock.tests.UsageCallCountTest.tooManyCalls":221,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":74,"org.easymock.tests.MockingTest.testNiceClassMocking":460,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":187,"org.easymock.tests.MockingTest.testClassMocking":455,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":214,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":340,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":45,"org.easymock.tests2.UsageConstraintsTest.testFind":14,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":87,"org.easymock.tests.MockTypeTest.fromEasyMockClass":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":7,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests.UsageExpectAndReturnTest.object":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":333,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":342,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":313,"org.easymock.tests.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":348,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":291,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":237,"org.easymock.tests.MockClassControlTest.testHashCode":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":407,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":9,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":485,"org.easymock.tests.UsageVarargTest.varargCharAccepted":332,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":38,"org.easymock.tests.DefaultClassInstantiatorTest.object":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":355,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":311,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":408,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":121,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":56,"org.easymock.tests.CapturesMatcherTest.test":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":165,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":231,"org.easymock.tests2.UsageTest.resumeIfFailure":146,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":84,"org.easymock.tests2.StubTest.stubWithReturnValue":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":346,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.tests2.SerializationTest.testAllMockedMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":353,"org.easymock.samples.SupportTest.voteForRemovals":203,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":62,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":354,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":349,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":477,"org.easymock.tests.UsageExpectAndThrowTest.object":60,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":23,"org.easymock.tests2.DelegateToTest.testWrongClass":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":328,"org.easymock.samples.ConstructorCalledMockTest.testTax":198,"org.easymock.tests.UsageStrictMockTest.range":270,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":392,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":396,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":262,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":315,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":360,"org.easymock.tests.UsageUnorderedTest.message":302,"org.easymock.tests.UsageVerifyTest.twoReturns":326,"org.easymock.tests.UsageVarargTest.varargByteAccepted":337,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":410,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":218,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":474,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":211,"org.easymock.tests2.CaptureTest.testCapture_2617107":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":80,"org.easymock.tests2.UsageConstraintsTest.any":21,"org.easymock.tests2.StubTest.stub":193,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndThrowTest.longType":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":83,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":466,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":258,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.SerializationTest.testClass":109,"org.easymock.tests.LimitationsTest.mockNativeMethod":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":294,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests2.NameTest.nameForMocksControl":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests2.MockedExceptionTest.testMockedException":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":400,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":395,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":54,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CompareToTest.testNotComparable":32,"org.easymock.tests2.CompareToTest.testCompareEqual":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests2.CaptureTest.testCaptureLast":176,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":264,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":192,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":158,"org.easymock.tests.MockingTest.testTwoMocks":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":58,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":25,"org.easymock.samples.ExampleTest.removeNonExistingDocument":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":425,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":256,"org.easymock.tests.UsageStrictMockTest.differentMethods":271,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":464,"org.easymock.tests2.ConstraintsToStringTest.andToString":492,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":95,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":401,"org.easymock.tests.UsageExpectAndThrowTest.floatType":52,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests.UsageVerifyTest.twoThrows":88,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":164,"org.easymock.samples.ExampleTest.voteAgainstRemoval":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":122,"org.easymock.tests.LimitationsTest.privateConstructor":471,"org.easymock.tests2.UsageConstraintsTest.testNotNull":24,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":76,"org.easymock.tests2.UsageTest.defaultResetToNice":143,"org.easymock.samples.ExampleTest.voteAgainstRemovals":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":290,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.UsageVarargTest.differentLength":334,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.UsageConstraintsTest.equals":394,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":376,"org.easymock.tests.UsageTest.openCallCountByLastCall":298,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":79,"org.easymock.tests.UsageCallCountTest.tooFewCalls":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":317,"org.easymock.tests.UsageThrowableTest.throwCheckedException":73,"org.easymock.tests.MockingTest.testStrictClassMocking":454,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":424,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":188,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":190,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":4,"org.easymock.tests2.CompareToTest.testGreateOrEqual":490,"org.easymock.tests.ObjectMethodsTest.testHashCode":312,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":196,"org.easymock.tests2.DependencyTest.testInterfaceMocking":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":343,"org.easymock.samples.ExampleTest.addDocument":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.DelegateToTest.testStubDelegate":127,"org.easymock.tests2.AnswerTest.stubAnswer":89,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":268,"org.easymock.tests.UsageVarargTest.varargLongAccepted":336,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.floatType":277,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":124,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":199,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":387,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests.UsageThrowableTest.noUpperLimit":248,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":390,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":174,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":463,"org.easymock.tests2.UsageConstraintsTest.testSame":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":276,"org.easymock.samples.SupportTest.addDocument":202,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":402,"org.easymock.tests.GenericTest.testPackageScope":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":458,"org.easymock.tests2.NameTest.nameForMock":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":287,"org.easymock.tests2.UsageStrictMockTest.differentMethods":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":64,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":306,"org.easymock.tests2.MockedExceptionTest.testRealException":46,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":393,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":308,"org.easymock.tests2.NameTest.nameForStrictMock":195,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":39,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":391,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":465,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":91,"org.easymock.tests2.UsageStrictMockTest.range":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":406,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageTest.wrongArguments":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":403,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":288,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":467,"org.easymock.tests.UsageVarargTest.varargShortAccepted":335,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":219,"org.easymock.tests2.UsageConstraintsTest.cmpTo":150,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":2,"org.easymock.tests2.CompareToTest.testLessThan":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.CaptureTest.testCaptureFromStub":31,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":253,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":373,"org.easymock.tests.UsageTest.unexpectedCallWithArray":296,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":289,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":210,"org.easymock.tests.UsageStrictMockTest.testVerify":273,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":201,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":266,"org.easymock.tests2.CompareToTest.testGreateThan":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":319,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":242,"org.easymock.tests.LimitationsTest.abstractClass":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":281,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":330}}]
