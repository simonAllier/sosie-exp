[{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,4,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"this","delegateTo":"value","this":"lastResult"}},{"position":"org.easymock.internal.RecordState:305","failures":[165,166,167],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[168],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[169,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"t"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[171,168],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[172,173,174,175,176,177],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[48,49,54,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,130,131,132,133,134,135,136,170,203,142,145,204,158],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[73,205],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[206,207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[209,210,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,212,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[214,215,216,217,218,219],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[220,221,222,223,224,225,226,227,228,229,230,231,232,233,5,209,234,235,236,237,238,6,7,8,9,10,11,239,240,12,172,241,242,243,13,244,245,246,14,15,16,17,18,19,20,247,21,22,23,24,248,25,249,0,250,26,251,27,28,29,30,31,252,253,254,169,255,256,32,33,34,35,257,36,37,258,259,38,39,40,41,260,42,43,261,173,262,263,264,265,44,266,45,267,46,268,269,270,271,175,272,273,274,275,276,277,47,210,278,279,280,281,282,283,48,49,50,51,284,52,212,53,54,285,286,287,55,56,57,58,59,60,288,61,62,63,64,4,65,289,66,67,68,69,70,71,72,73,74,75,76,77,290,78,79,80,81,291,82,83,84,85,292,86,87,88,293,294,295,89,296,90,91,297,298,299,300,301,302,303,304,305,306,307,308,309,310,92,311,312,93,313,314,315,316,317,318,319,320,321,94,322,323,324,325,326,95,327,328,96,97,329,98,330,331,332,333,334,99,335,336,337,165,166,338,339,340,341,178,342,343,344,345,346,347,348,349,350,1,351,352,167,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,374,375,376,120,377,171,121,378,379,168,122,123,124,125,126,380,381,382,383,211,384,385,386,387,206,388,389,390,391,392,393,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,394,395,396,397,398,399,400,401,402,403,404,405,127,406,407,408,409,410,411,412,413,414,415,416,128,202,129,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,130,434,131,132,133,134,135,136,435,137,436,138,139,207,437,438,439,170,440,441,442,443,444,445,446,203,447,140,141,448,449,450,451,452,453,454,455,456,142,143,218,457,144,145,458,459,146,460,461,462,147,148,463,149,464,465,466,467,468,469,219,150,470,151,152,471,472,473,474,475,476,208,477,153,154,478,204,155,479,480,2,481,482,483,3,484,485,156,157,158,159,486,160,161,487,162,488,489,490,491,176,177,163,492,493,164,494],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[49,54,202,131,142,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[45,384],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[221,222,223,224,225,226,227,228,5,6,8,9,10,11,12,242,13,14,15,16,17,18,19,20,247,21,22,23,24,248,25,250,26,251,27,28,31,252,253,254,169,32,33,34,35,257,36,258,259,38,39,40,41,43,261,44,266,45,46,47,283,48,50,51,52,212,285,55,57,58,59,60,61,62,63,64,4,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,295,89,91,297,298,300,92,93,94,95,96,97,329,98,332,334,99,337,338,361,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,378,122,123,124,125,126,390,391,392,393,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,394,395,396,398,399,401,402,403,404,405,127,407,408,409,410,411,128,202,129,417,418,419,420,421,434,131,137,436,138,139,441,443,444,445,446,203,447,140,141,448,449,450,451,452,453,143,147,148,149,467,469,150,152,471,472,153,154,155,157,158,159,486,160,161,487,162,489,490,491,176,177,163,492,493,164,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[37,42,354,101,107,113,117,119,389,183,189,195,199,201,414,142],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[19,52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[6,8,9,11,30,262,44,45,46,271,82,83,84,85,86,87,88,92,93,94,95,98,99,120,123,147,148,149,163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[239,261,496,262,263,44,266,45,46,270,271,497,272,498,96,379,380,384,163],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[34,257,41,59,60,64,4,289,75],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[499,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":60,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.UsageTest.argumentsOrdered":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":348,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":212,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":494,"org.easymock.tests2.DelegateToTest.testReturnException":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":444,"org.easymock.tests.MockingTest.testPartialClassMocking":147,"org.easymock.tests.MockClassControlTest.testToString":362,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":220,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":93,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.tests2.UsageTest.wrongArguments":284,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":392,"org.easymock.samples.ExampleTest.answerVsDelegate":486,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":384,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":465,"org.easymock.tests2.UsageConstraintsTest.testNull":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":22,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":367,"org.easymock.tests2.CaptureTest.testPrimitive":36,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":155,"org.easymock.tests.UsageTest.moreThanOneArgument":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":409,"org.easymock.tests.UsageTest.argumentsOrdered":459,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":412,"org.easymock.tests.UsageVarargTest.varargIntAccepted":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":122,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":303,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":126,"org.easymock.tests.ReplayStateInvalidUsageTest.times":430,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":495,"org.easymock.tests2.DependencyTest.testClassMocking":255,"org.easymock.tests2.AnswerTest.answer":25,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":228,"org.easymock.tests2.CaptureTest.testAnd":34,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":382,"org.easymock.tests2.UsageTest.strictResetToDefault":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":242,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":18,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":416,"org.easymock.tests2.DelegateToTest.testDelegate":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":197,"org.easymock.tests.LimitationsTest.mockFinalMethod":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":421,"org.easymock.tests2.DependencyTest.testClassMockingSupport":256,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":165,"org.easymock.tests2.CaptureTest.testCapture1_2446744":37,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":226,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":424,"org.easymock.tests.UsageThrowableTest.throwError":130,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":211,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":435,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":328,"org.easymock.samples.PartialClassMockTest.testGetArea":163,"org.easymock.tests.MockingTest.testInterfaceMocking":463,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":123,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":183,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":317,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":373,"org.easymock.tests2.ThreadingTest.testChangeDefault":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":279,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":191,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":214,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":19,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":181,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":448,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":390,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":326,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":111,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":40,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":397,"org.easymock.tests2.EasyMockSupportClassTest.testAll":92,"org.easymock.tests.MockClassControlTest.testEquals":366,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":419,"org.easymock.tests2.CaptureTest.testCaptureAll":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":227,"org.easymock.tests.MockNameTest.defaultName":374,"org.easymock.tests2.UsageConstraintsTest.testMatches":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":410,"org.easymock.samples.ExampleTest.voteForRemovals":162,"org.easymock.tests.UsageVarargTest.allKinds":405,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":128,"org.easymock.samples.BasicClassMockTest.testPrintContent":491,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":420,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":135,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":336,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":484,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":244,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":485,"org.easymock.samples.ExampleTest.voteForRemoval":160,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":28,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":245,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":239,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":467,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":16,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":443,"org.easymock.tests2.CaptureTest.testCaptureFirst":43,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":17,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":42,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":30,"org.easymock.tests2.UsageTest.moreThanOneArgument":51,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":354,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":404,"org.easymock.tests.GenericTest.testBridgedEquals":168,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":455,"org.easymock.tests.UsageExpectAndReturnTest.longType":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":417,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":14,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":207,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":474,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":407,"org.easymock.tests.UsageCallCountTest.tooManyCalls":456,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":134,"org.easymock.tests.MockingTest.testNiceClassMocking":466,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testClassMocking":461,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":496,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":449,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":254,"org.easymock.tests2.UsageConstraintsTest.testFind":61,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":158,"org.easymock.tests.MockTypeTest.fromEasyMockClass":383,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":468,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":300,"org.easymock.tests.UsageExpectAndReturnTest.object":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":21,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":399,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":371,"org.easymock.tests.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":413,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":330,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":394,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":116,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":230,"org.easymock.tests.MockClassControlTest.testHashCode":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":319,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":291,"org.easymock.tests.UsageVarargTest.varargCharAccepted":398,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":479,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":359,"org.easymock.tests2.UsageTest.openCallCountByLastCall":53,"org.easymock.tests.DefaultClassInstantiatorTest.object":480,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":24,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":179,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":229,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":243,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":117,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":95,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":363,"org.easymock.tests2.UsageTest.resumeIfFailure":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":380,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":446,"org.easymock.tests2.StubTest.stubWithReturnValue":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":267,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":329,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":167,"org.easymock.samples.SupportTest.voteForRemovals":164,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":215,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":358,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":249,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":477,"org.easymock.tests.UsageExpectAndThrowTest.object":192,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":335,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":140,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":141,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.UsageStrictMockTest.range":151,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":306,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":458,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":391,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":388,"org.easymock.tests2.CaptureTest.testCaptureNone":39,"org.easymock.tests.UsageUnorderedTest.message":389,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":403,"org.easymock.tests2.ThreadingTest.testThreadSafe":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":322,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":453,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":490,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":372,"org.easymock.tests2.CaptureTest.testCapture_2617107":257,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageConstraintsTest.any":66,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":429,"org.easymock.tests2.StubTest.stub":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":445,"org.easymock.tests.UsageExpectAndThrowTest.longType":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":357,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":483,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":428,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.SerializationTest.testClass":96,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":5,"org.easymock.tests.LimitationsTest.mockNativeMethod":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":119,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":275,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.NameTest.nameForMocksControl":224,"org.easymock.tests2.MockedExceptionTest.testMockedException":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":312,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":186,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":149,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":299,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":6,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":148,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":11,"org.easymock.tests2.CaptureTest.testCaptureLast":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":462,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":286,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":80,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":500,"org.easymock.samples.ExampleTest.removeNonExistingDocument":488,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":426,"org.easymock.tests.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":231,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":481,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":29,"org.easymock.tests2.MockBuilderTest.testCreateMockString":272,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":360,"org.easymock.tests.UsageExpectAndThrowTest.floatType":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":250,"org.easymock.tests.UsageVerifyTest.twoThrows":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":331,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":161,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":13,"org.easymock.tests.LimitationsTest.privateConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":136,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":252,"org.easymock.tests2.UsageTest.defaultResetToNice":285,"org.easymock.samples.ExampleTest.voteAgainstRemovals":159,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":350,"org.easymock.tests.UsageVarargTest.differentLength":400,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":274,"org.easymock.tests2.CallbackTest.callback":332,"org.easymock.tests2.UsageConstraintsTest.equals":288,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":172,"org.easymock.tests.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":478,"org.easymock.tests.UsageCallCountTest.tooFewCalls":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":393,"org.easymock.tests.UsageThrowableTest.throwCheckedException":133,"org.easymock.tests.MockingTest.testStrictClassMocking":460,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":217,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":406,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":210,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":431,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":86,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":251,"org.easymock.tests.ObjectMethodsTest.testHashCode":370,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":31,"org.easymock.tests2.NameTest.nameForNiceMock":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":32,"org.easymock.samples.ExampleTest.addDocument":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":323,"org.easymock.tests2.DelegateToTest.testStubDelegate":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.AnswerTest.stubAnswer":26,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":150,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":268,"org.easymock.tests.UsageVarargTest.varargLongAccepted":402,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":118,"org.easymock.tests.UsageExpectAndReturnTest.floatType":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests.UsageThrowableTest.noUpperLimit":434,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":301,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":258,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":101,"org.easymock.tests2.UsageConstraintsTest.testSame":63,"org.easymock.samples.SupportTest.addDocument":493,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":292,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":314,"org.easymock.tests.GenericTest.testPackageScope":121,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":464,"org.easymock.tests2.NameTest.nameForMock":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":175,"org.easymock.tests2.UsageStrictMockTest.differentMethods":91,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":386,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":1,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":89,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests2.NameTest.nameForStrictMock":222,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":265,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":305,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":482,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":262,"org.easymock.tests2.UsageStrictMockTest.range":90,"org.easymock.tests2.UsageConstraintsTest.lessThan":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":233,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":346,"org.easymock.tests2.CaptureTest.testCaptureRightOne":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":318,"org.easymock.tests2.UsageConstraintsTest.testOr":64,"org.easymock.tests.UsageRangeTest.combination":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":7,"org.easymock.tests.UsageTest.wrongArguments":457,"org.easymock.tests2.MockBuilderTest.testWithConstructor":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":361,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":340,"org.easymock.tests.UsageVarargTest.varargShortAccepted":401,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":3,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":454,"org.easymock.tests2.UsageConstraintsTest.cmpTo":67,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":178,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests2.CaptureTest.testCaptureFromStub":260,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":423,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":263,"org.easymock.tests.UsageTest.unexpectedCallWithArray":218,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":219,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":452,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":114,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":470,"org.easymock.tests2.UsageConstraintsTest.constraints":59,"org.easymock.samples.ExampleTest.addAndChangeDocument":489,"org.easymock.tests.UsageStrictMockTest.testVerify":472,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":492,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":418,"org.easymock.tests2.CompareToTest.testGreateThan":205,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":259,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":106,"org.easymock.tests.LimitationsTest.abstractClass":375,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":125,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":20}}]
