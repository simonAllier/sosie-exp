[{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[52,53,54,55,56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[57,58,59,60,61,62,63,64],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:147","sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[65,66,67,68,69,70,71,72,73],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,35,36,87,88,89,90,37,38,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,65,53,66,111,112,113,114,115,116,117,67,118,54,55,119,120,121,122,123,124,125,126,127,68,69,128,129,130,70,71,131,132,133,134,135,136,137,138,139,140,73,141,142,143,144,145,146,147,1,2,3,4,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,33,167,168,169,170,171,172,173,34,174,175,176,5,177,178,179,180,181,6,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,43,45,206,207,46,47,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,12,13,14,15,16,17,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,51,287,288,289,290,291,292,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[295,296,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[162,220,298,299,272,273,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[36,37,38,162,44,45,46,47,220,272,273,300,301,51,289],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[302,303,304,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[74,306,75,76,77,78,79,80,81,82,83,84,85,86,35,36,87,88,89,90,37,38,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,307,308,107,108,309,310,57,109,311,312,313,0,314,315,316,317,318,65,53,66,111,112,113,114,115,116,117,67,118,54,55,119,121,122,123,124,125,319,126,127,68,69,128,129,130,70,71,131,132,133,134,135,136,137,138,139,140,73,141,142,144,145,146,147,3,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,165,166,33,167,168,169,170,171,172,173,34,320,321,322,174,175,176,5,178,179,180,181,6,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,43,44,45,206,207,46,47,208,209,211,212,215,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,12,13,14,15,16,17,255,256,257,258,259,261,262,263,264,265,266,267,271,272,273,274,275,276,277,278,282,285,286,51,287,288,289,290,323,324,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[74,306,75,76,77,78,81,82,85,86,36,87,88,37,38,92,93,94,95,96,97,98,99,100,101,102,103,104,106,307,308,107,108,309,310,57,109,311,312,313,314,315,316,327,65,53,66,111,113,114,115,116,117,67,55,119,120,121,122,123,124,125,319,69,71,131,132,133,135,138,73,141,142,143,144,3,148,149,151,156,157,159,161,164,165,166,33,167,168,169,170,171,172,34,322,174,175,177,178,182,186,187,189,194,199,204,45,46,47,208,211,212,213,214,328,222,225,226,228,233,238,329,243,244,245,246,247,248,249,250,255,256,257,258,259,261,262,263,264,265,266,267,272,273,279,280,281,330,286,51,288,291,323,324,325],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[306,75,76,331],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[83,84,327,65,53,66,111,112,113,114,115,116,117,67,118,54,55,125,126,127,68,69,128,129,130,70,71,131,72,132,133,134,135,136,137,138,139,140,73,141,142,143,144,145,146,147,156,160,176,5,180,181,6,182,183,215,216,217,218,219,220,251,252,16,265,51,287],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[306,76,106,307,308,107,309,310,57,109,311,312,313,332,333,334,335,314,336,315,316,337,317,338,318,339,340,341,119,120,122,123,124,342,125,296,343,319,344,3,320,320,321,321,322,174,175,345,346,204,222,266,267,347,348,349,323,324,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.EasyMock:557","failures":[74,306,75,77,350,351,78,79,80,81,82,83,84,85,86,35,87,89,90,352,91,92,93,94,95,96,97,98,99,353,100,101,102,103,105,106,307,308,107,108,309,310,57,109,311,312,313,110,0,334,314,315,316,317,65,53,111,112,115,116,117,67,118,54,55,119,120,121,122,123,124,125,343,319,344,126,127,68,69,128,129,130,70,71,131,132,133,134,135,136,137,138,139,140,73,141,142,144,145,146,147,1,2,3,4,148,354,149,150,151,355,152,153,154,155,156,157,160,162,163,166,167,168,169,170,172,173,320,320,321,321,322,302,303,304,176,5,177,178,179,356,180,181,6,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,43,206,207,208,7,8,9,209,215,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,329,243,244,245,246,247,248,249,250,251,252,357,358,305,12,13,14,15,16,17,266,347,271,272,273,274,275,276,277,278,279,280,281,330,359,360,361,282,362,283,284,287,289,290,323,324,325,363,293,294,364,365],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[367,368,369,370,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.Range:36","failures":[23,24,25,371,372,74,373,374,26,375,376,27,306,75,76,377,378,379,380,77,350,351,78,79,80,381,382,81,82,83,383,84,85,86,35,36,87,88,89,90,352,37,38,91,92,384,385,386,387,388,389,390,93,94,95,96,97,98,99,353,100,101,102,103,104,105,106,307,308,107,391,108,309,310,392,57,393,394,395,396,397,109,398,399,311,400,401,402,403,404,405,406,407,408,312,409,410,411,412,413,313,414,415,416,417,418,295,419,110,0,332,420,334,335,421,422,314,336,315,423,316,424,425,337,317,368,318,327,65,53,66,111,112,113,114,115,116,117,67,118,54,55,119,120,121,122,123,124,342,326,125,370,426,296,343,319,344,427,297,126,127,68,69,428,128,129,130,70,71,131,72,132,133,134,135,136,137,138,139,140,73,141,142,143,144,145,146,147,1,2,3,4,28,29,30,429,430,148,431,432,31,433,434,32,354,149,150,151,355,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,33,167,168,169,170,171,172,435,173,34,320,321,322,174,175,302,303,304,176,5,177,178,179,436,437,438,439,356,180,181,6,182,183,345,440,441,442,443,346,444,445,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,43,44,45,206,207,46,47,208,7,8,9,446,447,209,210,211,212,448,213,214,215,216,217,218,219,220,449,221,450,451,452,453,454,455,456,457,458,459,460,461,328,462,463,464,465,466,10,467,468,469,222,470,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,471,329,472,243,244,245,246,247,248,249,250,251,252,473,474,475,476,477,478,479,11,480,18,481,19,482,483,484,485,357,486,487,488,20,21,358,22,489,305,490,253,491,492,254,493,494,12,13,14,15,16,17,255,256,257,495,258,259,260,261,262,263,264,265,496,266,267,347,268,497,348,498,499,500,501,269,270,271,272,273,274,275,276,277,278,279,502,280,281,503,330,300,359,360,361,504,505,506,507,508,509,282,362,283,284,285,286,51,287,288,289,290,291,292,510,511,349,323,324,512,325,513,514,515,363,293,294,364,365],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[306,76,106,307,308,107,309,310,57,109,311,312,313,332,333,334,335,314,336,315,316,337,317,338,318,339,340,341,119,120,122,123,124,342,125,296,343,319,344,3,320,320,321,321,322,174,175,345,346,204,222,266,267,347,348,349,323,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[516,147],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[39,41,44,48,49,51],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[135],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[36,37,38,162,44,45,46,47,220,272,273,300,517,301,51,289],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[65,66,67,68,69,129,70,71,72,73,145],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[306,57,393,423,425,59,60,61,518,64],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":69,"org.easymock.tests2.UsageTest.argumentsOrdered":38,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":481,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":88,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":33,"org.easymock.tests2.DelegateToTest.testReturnException":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":13,"org.easymock.tests.MockingTest.testPartialClassMocking":323,"org.easymock.tests.MockClassControlTest.testToString":498,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":416,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":223,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":311,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageTest.wrongArguments":36,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":438,"org.easymock.samples.ExampleTest.answerVsDelegate":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":346,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":514,"org.easymock.tests2.UsageConstraintsTest.testNull":129,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":122,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":101,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":270,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":183,"org.easymock.tests.UsageTest.moreThanOneArgument":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":276,"org.easymock.tests.UsageTest.argumentsOrdered":47,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":363,"org.easymock.tests.UsageVarargTest.varargIntAccepted":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":485,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":219,"org.easymock.tests.ReplayStateInvalidUsageTest.times":465,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":74,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":366,"org.easymock.tests2.DependencyTest.testClassMocking":381,"org.easymock.tests2.AnswerTest.answer":77,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":486,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":380,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":441,"org.easymock.tests2.CaptureTest.testAnd":65,"org.easymock.tests2.UsageTest.strictResetToDefault":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":283,"org.easymock.tests2.DelegateToTest.testDelegate":152,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":238,"org.easymock.tests.LimitationsTest.mockFinalMethod":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":509,"org.easymock.tests2.DependencyTest.testClassMockingSupport":382,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":471,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":378,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":460,"org.easymock.tests.UsageThrowableTest.throwError":243,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":443,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":504,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":278,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":415,"org.easymock.samples.PartialClassMockTest.testGetArea":322,"org.easymock.tests.MockingTest.testInterfaceMocking":512,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":303,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":404,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":314,"org.easymock.tests2.MockBuilderTest.testCreateMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":232,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":440,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":446,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":436,"org.easymock.tests.UsageOverloadedMethodTest.overloading":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":136,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":281,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":195,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":135,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":117,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":495,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.MockClassControlTest.testEquals":269,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":267,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":240,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":507,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":379,"org.easymock.tests.MockNameTest.defaultName":457,"org.easymock.tests2.UsageConstraintsTest.testMatches":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":277,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":265,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":508,"org.easymock.samples.BasicClassMockTest.testPrintContent":175,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":249,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":17,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":355,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":455,"org.easymock.tests2.UsageConstraintsTest.greaterThan":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":362,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":344,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":456,"org.easymock.samples.ExampleTest.voteForRemoval":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":427,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":154,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":342,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":204,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":95,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":12,"org.easymock.tests2.CaptureTest.testCaptureFirst":55,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":96,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":191,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.CaptureTest.testCapture2_2446744":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":487,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":317,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":264,"org.easymock.tests.GenericTest.testBridgedEquals":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":213,"org.easymock.tests.UsageExpectAndReturnTest.longType":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":505,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":241,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":338,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":143,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":274,"org.easymock.tests.UsageCallCountTest.tooManyCalls":214,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":248,"org.easymock.tests.MockingTest.testNiceClassMocking":515,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":307,"org.easymock.tests.MockingTest.testClassMocking":511,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":447,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":333,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":128,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":179,"org.easymock.tests.MockTypeTest.fromEasyMockClass":442,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":84,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":285,"org.easymock.tests.UsageExpectAndReturnTest.object":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":60,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":259,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":254,"org.easymock.tests.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":489,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":293,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":393,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":200,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":280,"org.easymock.tests.MockClassControlTest.testHashCode":501,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":29,"org.easymock.tests2.EasyMockSupportTest.testVerify":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":406,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":294,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":517,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":377,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":327,"org.easymock.tests.UsageVarargTest.varargCharAccepted":258,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":449,"org.easymock.tests2.CaptureTest.testCaptureMultiple":52,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":22,"org.easymock.tests2.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":103,"org.easymock.tests.DefaultClassInstantiatorTest.object":221,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":359,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":491,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":28,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":500,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":229,"org.easymock.tests.CapturesMatcherTest.test":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":7,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":313,"org.easymock.tests2.UsageTest.resumeIfFailure":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":15,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":423,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":193,"org.easymock.tests2.SerializationTest.testAllMockedMethod":76,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":357,"org.easymock.samples.SupportTest.voteForRemovals":166,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":41,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":235,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":331,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":358,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":350,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":490,"org.easymock.tests.UsageExpectAndThrowTest.object":233,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":141,"org.easymock.tests2.DelegateToTest.testWrongClass":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":251,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":252,"org.easymock.tests.UsageStrictMockTest.range":289,"org.easymock.samples.ConstructorCalledMockTest.testTax":320,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":389,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":234,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":437,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":48,"org.easymock.tests2.CaptureTest.testCaptureNone":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":304,"org.easymock.tests.UsageUnorderedTest.message":220,"org.easymock.tests.UsageVerifyTest.twoReturns":273,"org.easymock.tests.UsageVarargTest.varargByteAccepted":263,"org.easymock.tests2.ThreadingTest.testThreadSafe":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":409,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":212,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":493,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":174,"org.easymock.tests2.CaptureTest.testCapture_2617107":66,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":472,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":20,"org.easymock.tests2.UsageConstraintsTest.any":132,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":464,"org.easymock.tests2.StubTest.stub":110,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":21,"org.easymock.tests.UsageExpectAndThrowTest.longType":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":453,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":463,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":148,"org.easymock.tests2.SerializationTest.testClass":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":203,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":341,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests2.NameTest.nameForMocksControl":419,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":399,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":227,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":325,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":316,"org.easymock.tests.MockingTest.testNicePartialClassMocking":324,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":124,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":329,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":71,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":310,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":142,"org.easymock.tests.MockingTest.testTwoMocks":349,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":231,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":146,"org.easymock.samples.ExampleTest.removeNonExistingDocument":435,"org.easymock.tests.UsageStrictMockTest.differentMethods":290,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":328,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":30,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":451,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":155,"org.easymock.tests2.MockBuilderTest.testCreateMockString":318,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":400,"org.easymock.tests.UsageExpectAndThrowTest.floatType":225,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":394,"org.easymock.tests.UsageVerifyTest.twoThrows":272,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":312,"org.easymock.samples.ExampleTest.voteAgainstRemoval":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":19,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":319,"org.easymock.tests.LimitationsTest.privateConstructor":469,"org.easymock.tests2.UsageConstraintsTest.testNotNull":145,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":250,"org.easymock.tests2.UsageTest.defaultResetToNice":352,"org.easymock.samples.ExampleTest.voteAgainstRemovals":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests.UsageVarargTest.differentLength":260,"org.easymock.tests2.CallbackTest.callback":105,"org.easymock.tests2.UsageConstraintsTest.equals":428,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":206,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":6,"org.easymock.tests.UsageCallCountTest.tooFewCalls":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":439,"org.easymock.tests.UsageThrowableTest.throwCheckedException":247,"org.easymock.tests.MockingTest.testStrictClassMocking":510,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":309,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":466,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":108,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":80,"org.easymock.tests.ObjectMethodsTest.testHashCode":492,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":62,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":157,"org.easymock.tests2.NameTest.nameForNiceMock":295,"org.easymock.tests2.DependencyTest.testInterfaceMocking":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":61,"org.easymock.samples.ExampleTest.addDocument":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.DelegateToTest.testStubDelegate":150,"org.easymock.tests2.AnswerTest.stubAnswer":79,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":287,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":424,"org.easymock.tests.UsageVarargTest.varargLongAccepted":262,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":18,"org.easymock.tests.UsageExpectAndReturnTest.floatType":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":321,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":140,"org.easymock.tests.UsageThrowableTest.noUpperLimit":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":127,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":384,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests2.SerializationTest.test":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":185,"org.easymock.tests2.UsageConstraintsTest.testSame":130,"org.easymock.samples.SupportTest.addDocument":165,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":391,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":401,"org.easymock.tests.GenericTest.testPackageScope":266,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":31,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":513,"org.easymock.tests2.NameTest.nameForMock":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":196,"org.easymock.tests2.UsageStrictMockTest.differentMethods":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":188,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":237,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":284,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":483,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":160,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests2.NameTest.nameForStrictMock":418,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":422,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":123,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":388,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":452,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":73,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":298,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":334,"org.easymock.tests2.UsageStrictMockTest.range":162,"org.easymock.tests2.UsageConstraintsTest.lessThan":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":405,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.UsageConstraintsTest.testOr":70,"org.easymock.tests.UsageRangeTest.combination":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":120,"org.easymock.tests.UsageTest.wrongArguments":45,"org.easymock.tests2.MockBuilderTest.testWithConstructor":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":402,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":197,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":454,"org.easymock.tests.UsageVarargTest.varargShortAccepted":261,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":448,"org.easymock.tests2.UsageConstraintsTest.cmpTo":133,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":351,"org.easymock.tests2.CompareToTest.testLessThan":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":476,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":459,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":335,"org.easymock.tests.UsageTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":211,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":198,"org.easymock.tests2.UsageConstraintsTest.constraints":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":173,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":34,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":506,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":217,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":340,"org.easymock.tests.LimitationsTest.abstractClass":468,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":99,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":256,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":299}}]
