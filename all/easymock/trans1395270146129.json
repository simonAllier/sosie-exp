[{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"lastControl"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[253,174,175,254],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[255],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,64,72,74,75,76,77,78,79,82,83,86,88,91,93,94,95,96,97,98,101,114,164,165,166,167,207,212,222],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"value"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[289,290,291,292,293,294,295],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[296,297,298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[0,1,2,3,4,5,6,7,8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,299,66,67,300,301,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[85,104,105,217,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[303,38,59,304,305,306,85,86,87,307,308,309,88,89,310,311,312,313,92,314,315,102,316,317,318,103,319,104,105,320,321,111,322,323,324,325,326,327,328,329,330,132,134,142,163,177,181,185,188,191,194,202,204,331,207,209,332,210,333,334,335,214,215,336,216,337,217,218,338,223,226,240],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[0,8,9,141,160,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[339,340,310,318,341,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[253,174,175,254],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[85,87,88,90,91,92,103,168,207,211,212,215,216],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[343],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[0,8,8,9,9,344,345,36,346,37,68,347,348,308,349,106,107,108,131,133,134,136,137,138,350,139,351,140,141,142,159,160,161,162,166,174,254,352,353,189,190,191,192,194,195,354,355,202,356,203,357,204,205,331,206,358,359,252],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[360,241],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[361,169,172,173],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,362,5,363,6,364,7,365,8,9,344,345,366,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,367,36,346,37,368,303,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,299,66,67,300,301,68,369,370,371,372,296,373,374,375,376,377,378,379,380,381,382,383,69,70,71,384,347,304,305,306,385,386,387,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,348,388,389,307,390,308,391,309,88,89,310,311,90,91,312,313,92,93,94,95,96,97,98,99,314,100,101,315,102,316,317,392,318,103,319,104,105,320,393,394,395,349,106,107,396,108,397,398,399,400,401,402,403,404,405,361,406,407,408,409,410,411,412,413,414,109,415,416,417,418,419,110,420,321,421,111,322,422,423,323,324,325,112,113,114,115,116,117,118,119,424,326,425,426,327,328,256,257,258,259,260,120,261,262,263,264,265,266,121,122,123,124,125,126,127,128,427,428,429,430,431,432,329,433,434,435,436,437,129,130,438,439,131,440,330,132,441,133,134,135,136,137,138,350,255,139,442,443,351,140,141,142,444,445,143,144,446,145,146,447,448,147,148,149,150,151,152,153,154,155,156,157,158,449,450,451,159,452,453,160,454,455,456,457,458,459,460,461,462,161,463,464,465,466,467,162,468,469,163,164,165,166,167,168,169,170,171,172,173,174,175,254,176,177,178,179,180,181,182,183,184,185,186,187,470,471,472,473,474,475,188,476,477,478,479,480,481,189,190,191,192,482,193,194,195,483,484,485,486,487,488,196,197,198,199,200,201,354,202,356,489,203,357,204,205,490,491,331,206,359,492,493,494,495,207,208,209,332,210,333,211,212,213,334,335,214,215,336,496,216,337,217,218,338,497,498,499,500,501,502,219,220,221,222,503,504,505,506,507,223,508,509,510,511,512,513,224,225,226,227,514,228,229,230,231,232,233,515,234,235,236,237,238,239,240,241,242,243,244,245,516,246,247,248,249,517,250,518,251,252,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[237],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[143,446,150,226,227,229,231,232,515,243,247],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[0,1,2,3,4,362,5,6,364,7,365,8,8,9,9,344,345,366,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,346,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,311,90,91,312,313,92,93,94,95,96,97,98,99,100,101,102,317,392,318,103,319,104,105,320,393,106,107,108,109,110,321,111,322,422,423,324,325,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,427,428,429,431,432,329,433,434,435,436,437,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,446,145,146,447,448,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,254,176,177,178,179,180,181,182,183,184,185,186,187,470,188,189,190,191,192,193,194,195,485,486,487,488,196,197,198,199,200,201,202,203,204,205,206,207,208,209,332,210,333,211,212,213,334,335,214,215,336,496,216,337,217,218,338,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,515,234,235,236,237,238,239,240,241,242,243,244,245,516,246,247,248,249,250,251,252],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[0,8,8,9,9,344,345,367,36,346,37,368,68,369,370,371,372,296,373,374,384,347,304,305,306,385,386,387,348,308,394,395,349,106,107,108,399,328,438,439,131,440,133,134,136,137,138,350,139,442,443,351,140,141,142,444,445,449,450,451,159,452,453,160,454,455,456,457,458,459,460,461,462,161,463,464,465,466,467,162,468,469,164,165,166,174,254,519,353,189,190,191,192,194,195,354,355,202,356,489,203,357,204,205,491,331,206,358,359,492,493,252,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"m":"result","methodName":"name"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[368,387,133,136,137,138,139,189,192],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[296,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[137,333,240],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[38,59,72,73,75,76,77,78,79,86,313,317,104,105,113,134,141,150,163,177,179,181,182,185,186,187,206,210,333,335,336,217,218,227,232,233,234,237,243,244,245,246],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[198],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[361],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":227,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests2.UsageTest.argumentsOrdered":335,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":409,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":333,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":366,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":94,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.tests.MockClassControlTest.testToString":304,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":484,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":34,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":457,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":10,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":220,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":289,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":80,"org.easymock.tests2.UsageTest.wrongArguments":332,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":377,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":308,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":398,"org.easymock.tests2.UsageConstraintsTest.testNull":229,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":136,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":185,"org.easymock.tests2.CaptureTest.testPrimitive":145,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":29,"org.easymock.tests.UsageTest.moreThanOneArgument":89,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":299,"org.easymock.tests.UsageTest.argumentsOrdered":313,"org.easymock.tests.UsageVarargTest.varargIntAccepted":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":293,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":512,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":125,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":272,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests.ReplayStateInvalidUsageTest.times":263,"org.easymock.tests2.DependencyTest.testClassMocking":501,"org.easymock.tests2.AnswerTest.answer":168,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":500,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":389,"org.easymock.tests2.CaptureTest.testAnd":143,"org.easymock.tests2.UsageTest.strictResetToDefault":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":180,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":61,"org.easymock.tests2.DelegateToTest.testDelegate":201,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":25,"org.easymock.tests.LimitationsTest.mockFinalMethod":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":383,"org.easymock.tests2.DependencyTest.testClassMockingSupport":502,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":330,"org.easymock.tests2.CaptureTest.testCapture1_2446744":146,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":498,"org.easymock.tests.UsageThrowableTest.throwError":72,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":258,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":390,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":513,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":275,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":396,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":458,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":11,"org.easymock.tests2.UsageTest.niceToStrict":210,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":203,"org.easymock.tests2.MockBuilderTest.testCreateMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":465,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":478,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":19,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":341,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":181,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":388,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":128,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":375,"org.easymock.tests.UsageOverloadedMethodTest.overloading":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":101,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":238,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":50,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":237,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":297,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":149,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests.MockClassControlTest.testEquals":386,"org.easymock.tests2.EasyMockSupportClassTest.testAll":159,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":27,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":499,"org.easymock.tests2.CaptureTest.testCaptureAll":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":381,"org.easymock.tests.MockNameTest.defaultName":303,"org.easymock.tests2.UsageConstraintsTest.testMatches":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":118,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":256,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":437,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":85,"org.easymock.samples.BasicClassMockTest.testPrintContent":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":382,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":78,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":509,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":98,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":200,"org.easymock.tests2.UsageConstraintsTest.greaterThan":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":452,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":60,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":142,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":276,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":444,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":155,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":350,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":268,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":68,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":178,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":93,"org.easymock.tests2.CaptureTest.testCaptureFirst":153,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":179,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":46,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":157,"org.easymock.tests2.CaptureTest.testCapture2_2446744":152,"org.easymock.tests2.UsageTest.moreThanOneArgument":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":206,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":436,"org.easymock.tests.GenericTest.testBridgedEquals":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":324,"org.easymock.tests.UsageExpectAndReturnTest.longType":42,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":379,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":28,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":358,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":516,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":70,"org.easymock.tests.UsageCallCountTest.tooManyCalls":325,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":77,"org.easymock.tests.MockingTest.testNiceClassMocking":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testClassMocking":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":421,"org.easymock.tests2.UsageConstraintsTest.testContains":236,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":355,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":166,"org.easymock.tests2.UsageConstraintsTest.testFind":228,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":114,"org.easymock.tests.MockTypeTest.fromEasyMockClass":307,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":251,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests.UsageExpectAndReturnTest.object":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":479,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":184,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":432,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":290,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":426,"org.easymock.tests.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":33,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":295,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":427,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":55,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":504,"org.easymock.tests.MockClassControlTest.testHashCode":385,"org.easymock.tests2.EasyMockSupportTest.testVerify":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":460,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":497,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":517,"org.easymock.tests.UsageVarargTest.varargCharAccepted":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":187,"org.easymock.tests.DefaultClassInstantiatorTest.object":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":126,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":461,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":503,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":140,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":274,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":56,"org.easymock.tests.ReplayStateInvalidCallsTest.times":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":69,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":162,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":305,"org.easymock.tests2.UsageTest.resumeIfFailure":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":96,"org.easymock.tests2.StubTest.stubWithReturnValue":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":246,"org.easymock.tests2.SerializationTest.testAllMockedMethod":254,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":109,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":342,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":506,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":22,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":253,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":110,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":169,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":35,"org.easymock.tests.UsageExpectAndThrowTest.object":20,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":244,"org.easymock.tests2.DelegateToTest.testWrongClass":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":129,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":130,"org.easymock.tests.UsageStrictMockTest.range":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":494,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":449,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":265,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":376,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":339,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":270,"org.easymock.tests2.CaptureTest.testCaptureNone":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":32,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":87,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":343,"org.easymock.tests.UsageVarargTest.varargByteAccepted":435,"org.easymock.tests2.ThreadingTest.testThreadSafe":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":463,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":423,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":327,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":446,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":83,"org.easymock.tests2.UsageConstraintsTest.any":234,"org.easymock.tests2.StubTest.stub":221,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndThrowTest.longType":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":95,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":296,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":261,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":337,"org.easymock.tests2.SerializationTest.testClass":174,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.LimitationsTest.mockNativeMethod":131,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":286,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests2.NameTest.nameForMocksControl":488,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests2.MockedExceptionTest.testMockedException":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":453,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":518,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":14,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":133,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":205,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests2.CaptureTest.testCaptureLast":147,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":195,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":232,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":285,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":245,"org.easymock.tests.MockingTest.testTwoMocks":349,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":282,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":18,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":334,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":248,"org.easymock.samples.ExampleTest.removeNonExistingDocument":363,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":477,"org.easymock.tests.UsageStrictMockTest.differentMethods":105,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":505,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":371,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":156,"org.easymock.tests2.MockBuilderTest.testCreateMockString":359,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":454,"org.easymock.tests.UsageExpectAndThrowTest.floatType":12,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":171,"org.easymock.tests.UsageVerifyTest.twoThrows":86,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":161,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":30,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":141,"org.easymock.tests.LimitationsTest.privateConstructor":439,"org.easymock.tests2.UsageConstraintsTest.testNotNull":247,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":79,"org.easymock.tests2.UsageTest.defaultResetToNice":213,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.UsageVarargTest.differentLength":329,"org.easymock.tests2.CallbackTest.callback":163,"org.easymock.tests2.UsageConstraintsTest.equals":514,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":442,"org.easymock.tests.UsageTest.openCallCountByLastCall":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":82,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":378,"org.easymock.tests.UsageThrowableTest.throwCheckedException":76,"org.easymock.tests.MockingTest.testStrictClassMocking":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":340,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":476,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":193,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":173,"org.easymock.tests.ObjectMethodsTest.testHashCode":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":292,"org.easymock.tests2.NameTest.nameForNiceMock":487,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":158,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":284,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":291,"org.easymock.samples.ExampleTest.addDocument":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests2.AnswerTest.stubAnswer":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":103,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":434,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.floatType":41,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":252,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":511,"org.easymock.tests.UsageThrowableTest.noUpperLimit":73,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":242,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":225,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":492,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":447,"org.easymock.tests2.SerializationTest.test":175,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":298,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":40,"org.easymock.tests2.UsageConstraintsTest.testSame":230,"org.easymock.samples.SupportTest.addDocument":364,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":482,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":269,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":455,"org.easymock.tests.GenericTest.testPackageScope":36,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":510,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":397,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":267,"org.easymock.tests2.NameTest.nameForMock":485,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":51,"org.easymock.tests2.UsageStrictMockTest.differentMethods":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":443,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":24,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":62,"org.easymock.tests2.MockedExceptionTest.testRealException":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":309,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":81,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":266,"org.easymock.tests2.NameTest.nameForStrictMock":486,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":137,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":493,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":243,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":202,"org.easymock.tests2.UsageStrictMockTest.range":217,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":273,"org.easymock.tests2.UsageConstraintsTest.lessThan":249,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":519,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":459,"org.easymock.tests2.CaptureTest.testCaptureRightOne":150,"org.easymock.tests2.UsageConstraintsTest.testOr":231,"org.easymock.tests.UsageRangeTest.combination":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":134,"org.easymock.tests.UsageTest.wrongArguments":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":456,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":52,"org.easymock.tests.UsageVarargTest.varargShortAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":373,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":323,"org.easymock.tests2.UsageConstraintsTest.cmpTo":235,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":287,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":170,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests2.CaptureTest.testCaptureFromStub":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":257,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":356,"org.easymock.tests.UsageTest.unexpectedCallWithArray":310,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":283,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":53,"org.easymock.tests2.UsageConstraintsTest.constraints":226,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":319,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageStrictMockTest.testVerify":393,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":365,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":392,"org.easymock.tests2.CompareToTest.testGreateThan":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":380,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":123,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":353,"org.easymock.tests.LimitationsTest.abstractClass":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":124,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":182}}]
