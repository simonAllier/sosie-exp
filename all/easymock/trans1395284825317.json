[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[10,11,12,13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[28,29,30],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[21,55,56,57,58,59,60,61,62,63,64,65,66,67,68,22,22,23,23,10,69,11,70,71,72,73,74,75,76,12,77,78,79,31,80,81,82,83,84,85,86,87,88,89,32,33,90,91,13,14,92,93,15,94,16,17,95,18,96,97,98,99,100,101,102,103,104,19,105,106,107,108,20,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,24,146,147,148,149,150,151,152,153,154,25,155,156,157,158,159,160,161,162,163,164,165,41,166,167,168,169,170,42,43,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,6,188,189,190,191,192,193,194,195,196,197,198,44,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,26,27,40,250,251,252,253,254,255,256,257,258,0,259,260,261,262,263,1,264,265,266,267,268,269,2,3,270,271,272,273,274,275,276,277,278,279,45,280,281,282,283,284,285,286,287,288,289,28,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,4,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,47,48,352,353,49,50,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,5,382,383,384,385,386,387,388,389,390,391,51,392,393,52,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,53,54,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[276,277,53],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2000","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[256,257,263,269,324,475],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[21,66,67,22,22,23,23,31,81,32,115,116,117,118,120,121,143,24,25,160,174,175,177,178,179,180,182,185,186,187,6,484,242,244,485,245,246,248,249,26,27,250,251,486,252,280,283,294,315,362,363,364,366,398,399,400,402],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:519","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[21,65,22,23,24,25,160,204,208,215,216],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[56,58,59,61,65,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[102],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[10,69,11,70,71,72,73,74,75,76,12,77,78,79,90,91,13,14,93,15,94,16,17,95,18,96,97,98,99,100,101,102,103,104,19,105,106,107,108,20,109,110,173,182,193,197,253,255,45,307,312,378,379,380,381,5,388,389,51,392,449,450,451,452,453,474,475],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:102","sourceCode":"return org.easymock.internal.MockInvocationHandler","type":"CtReturnImpl"},"failures":[56,57,58,59,60,61,62,63,10,69,11,70,71,72,73,74,75,76,12,77,78,79,31,80,81,83,84,85,87,88,89,32,90,91,13,14,93,15,94,16,17,95,96,97,98,99,100,101,102,103,104,19,105,106,107,108,20,109,110,112,114,116,117,120,121,122,125,126,127,163,164,165,41,166,167,168,169,170,42,43,171,172,173,174,175,176,177,178,179,180,182,184,185,186,187,6,188,190,191,192,193,194,195,196,197,198,44,199,200,203,219,220,221,222,223,224,225,226,227,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,0,259,260,261,262,263,1,264,265,266,267,268,269,2,3,270,271,272,273,274,275,276,277,278,279,45,280,281,282,283,284,285,286,294,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,4,323,324,325,350,351,47,48,352,353,49,50,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,5,388,389,390,391,51,392,393,52,394,395,396,398,399,402,403,404,405,411,412,413,414,415,416,417,418,419,420,53,54,421,422,423,424,426,427,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,478,479,480],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[89,240,241,242,243,308,309,310,311,312,313,389,451],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[165,41,42,43,197,44,199,219,220,221,222,487,351,48,49,50,51,392,52,394,420,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[287,290],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[57,122,125,126,127,223,253,255,421],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[89,308,309,310,311,312,313,333,382,383,384,447],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[489,490,491],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[29],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[69,74,75,79,14,15,16,17,19,20,307],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[31,40,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[104],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[31,80,81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[21,55,56,57,58,59,60,61,62,63,64,65,66,67,68,22,23,10,69,11,70,71,72,73,74,75,76,12,77,78,79,31,80,81,82,83,84,85,86,87,88,89,32,33,492,90,91,13,14,92,93,15,94,16,17,95,18,96,97,98,99,100,101,102,103,104,19,105,106,107,108,20,109,110,111,493,494,495,112,113,114,115,116,117,118,496,119,120,121,497,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,24,146,147,148,149,150,151,152,153,154,25,155,156,157,158,159,160,161,162,163,164,165,41,166,167,168,169,170,42,43,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,6,188,189,190,191,192,193,194,195,196,197,198,44,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,498,245,246,499,247,248,249,26,39,27,500,40,250,251,501,252,253,254,255,256,257,258,0,259,260,261,262,263,1,264,265,266,267,268,269,2,3,270,271,272,273,274,275,276,277,278,279,45,280,502,503,281,282,283,284,285,504,286,287,288,289,28,290,505,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,4,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,47,48,352,353,49,50,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,5,382,383,384,506,385,386,387,388,389,390,391,51,392,393,52,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,53,54,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[327,334,338,343,344],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[123,126,127,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[21,56,58,59,61,65,84,32,115,116,117,118,119,120,121,143,24,25,160,174,175,176,177,178,179,182,186,187,6,193,197,44,199,203,204,245,248,26,27,251,256,257,258,0,259,260,263,1,265,266,267,269,2,3,270,271,294,322,4,323,324,363,364,366,370,371,372,373,378,379,380,381,5,392,52,394,449,474,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":14,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":350,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":215,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":336,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":167,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":55,"org.easymock.tests2.DelegateToTest.testReturnException":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":309,"org.easymock.tests.MockingTest.testPartialClassMocking":363,"org.easymock.tests.MockClassControlTest.testToString":316,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":218,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":454,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":487,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":449,"org.easymock.tests2.UsageTest.wrongArguments":41,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":376,"org.easymock.samples.ExampleTest.answerVsDelegate":57,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":283,"org.easymock.tests2.UsageConstraintsTest.testNull":15,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":214,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":321,"org.easymock.tests2.CaptureTest.testPrimitive":70,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":453,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":473,"org.easymock.tests.UsageTest.moreThanOneArgument":351,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":323,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":406,"org.easymock.tests.UsageTest.argumentsOrdered":50,"org.easymock.tests.UsageVarargTest.varargIntAccepted":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":378,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":238,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":5,"org.easymock.tests.ReplayStateInvalidUsageTest.times":445,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.DependencyTest.testClassMocking":201,"org.easymock.tests2.AnswerTest.answer":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":227,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":503,"org.easymock.tests2.CaptureTest.testAnd":10,"org.easymock.tests2.UsageTest.strictResetToDefault":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":410,"org.easymock.tests2.DelegateToTest.testDelegate":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":469,"org.easymock.tests.LimitationsTest.mockFinalMethod":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.DependencyTest.testClassMockingSupport":202,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":434,"org.easymock.tests2.CaptureTest.testCapture1_2446744":71,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":225,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":439,"org.easymock.tests.UsageThrowableTest.throwError":272,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":282,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":506,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":162,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":440,"org.easymock.tests.MockingTest.testInterfaceMocking":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":379,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":429,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":482,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":455,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":150,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":248,"org.easymock.tests2.MockBuilderTest.testCreateMock":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":136,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":463,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":210,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":502,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":433,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":411,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageOverloadedMethodTest.overloading":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":154,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":424,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":29,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":76,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":299,"org.easymock.tests2.EasyMockSupportClassTest.testAll":143,"org.easymock.tests.MockClassControlTest.testEquals":320,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":399,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":471,"org.easymock.tests2.CaptureTest.testCaptureAll":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests.MockNameTest.defaultName":483,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":324,"org.easymock.samples.ExampleTest.voteForRemovals":61,"org.easymock.tests.UsageVarargTest.allKinds":307,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":420,"org.easymock.samples.BasicClassMockTest.testPrintContent":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":313,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":505,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":144,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":6,"org.easymock.samples.ExampleTest.voteForRemoval":58,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":291,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":191,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":180,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":402,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":207,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":308,"org.easymock.tests2.CaptureTest.testCaptureFirst":79,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":208,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":262,"org.easymock.tests2.UsageTest.moreThanOneArgument":165,"org.easymock.tests2.CaptureTest.testCapture2_2446744":78,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":193,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":344,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":306,"org.easymock.tests.GenericTest.testBridgedEquals":401,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":418,"org.easymock.tests.UsageExpectAndReturnTest.longType":0,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":486,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":472,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":476,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":470,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":383,"org.easymock.tests.UsageCallCountTest.tooManyCalls":419,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":459,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":277,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":116,"org.easymock.tests.MockingTest.testNiceClassMocking":369,"org.easymock.tests.MockingTest.testClassMocking":361,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":485,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":412,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":242,"org.easymock.tests2.UsageConstraintsTest.testFind":93,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":405,"org.easymock.tests.MockTypeTest.fromEasyMockClass":281,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":255,"org.easymock.tests.UsageExpectAndReturnTest.object":264,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":35,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":301,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":480,"org.easymock.tests.UsageTest.exactCallCountByLastCall":354,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":407,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":2,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":229,"org.easymock.tests.MockClassControlTest.testHashCode":319,"org.easymock.tests2.EasyMockSupportTest.testVerify":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":152,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":489,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":408,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":432,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":224,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":173,"org.easymock.tests.UsageVarargTest.varargCharAccepted":300,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":504,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":349,"org.easymock.tests2.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":7,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":216,"org.easymock.tests.DefaultClassInstantiatorTest.object":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":431,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":478,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":186,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":460,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":3,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":382,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":317,"org.easymock.tests2.UsageTest.resumeIfFailure":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":311,"org.easymock.tests2.StubTest.stubWithReturnValue":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":1,"org.easymock.tests2.SerializationTest.testAllMockedMethod":81,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":342,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":488,"org.easymock.samples.SupportTest.voteForRemovals":65,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":466,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":348,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":123,"org.easymock.tests.UsageExpectAndThrowTest.object":464,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":387,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":474,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":475,"org.easymock.samples.ConstructorCalledMockTest.testTax":22,"org.easymock.tests.UsageStrictMockTest.range":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":113,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":465,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":140,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":375,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":430,"org.easymock.tests2.CaptureTest.testCaptureNone":75,"org.easymock.tests.UsageUnorderedTest.message":45,"org.easymock.tests.UsageVerifyTest.twoReturns":54,"org.easymock.tests.UsageVarargTest.varargByteAccepted":305,"org.easymock.tests2.ThreadingTest.testThreadSafe":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":155,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":416,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":481,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":66,"org.easymock.tests2.CaptureTest.testCapture_2617107":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":444,"org.easymock.tests2.StubTest.stub":88,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":384,"org.easymock.tests.UsageExpectAndThrowTest.longType":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":28,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":443,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests.LimitationsTest.mockNativeMethod":294,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":400,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":130,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.NameTest.nameForMocksControl":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":132,"org.easymock.tests2.MockedExceptionTest.testMockedException":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":145,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":458,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":254,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":366,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":174,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":364,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":179,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":128,"org.easymock.tests2.CaptureTest.testCaptureLast":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":435,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":121,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":362,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":462,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":109,"org.easymock.samples.ExampleTest.removeNonExistingDocument":62,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":441,"org.easymock.tests.UsageStrictMockTest.differentMethods":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":135,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":230,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":288,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":192,"org.easymock.tests2.MockBuilderTest.testCreateMockString":252,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests.UsageExpectAndThrowTest.floatType":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":146,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":142,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":53,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.ExampleTest.voteAgainstRemoval":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":187,"org.easymock.tests.LimitationsTest.privateConstructor":293,"org.easymock.tests2.UsageConstraintsTest.testNotNull":20,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":170,"org.easymock.samples.ExampleTest.voteAgainstRemovals":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":129,"org.easymock.tests.UsageVarargTest.differentLength":302,"org.easymock.tests2.CallbackTest.callback":223,"org.easymock.tests2.UsageConstraintsTest.equals":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":183,"org.easymock.tests.UsageTest.openCallCountByLastCall":352,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":451,"org.easymock.tests.UsageCallCountTest.tooFewCalls":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":377,"org.easymock.tests.UsageThrowableTest.throwCheckedException":276,"org.easymock.tests.MockingTest.testStrictClassMocking":360,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":389,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":117,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":119,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":127,"org.easymock.tests.ObjectMethodsTest.testHashCode":479,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":194,"org.easymock.tests2.NameTest.nameForNiceMock":221,"org.easymock.tests2.DependencyTest.testInterfaceMocking":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":36,"org.easymock.samples.ExampleTest.addDocument":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests2.DelegateToTest.testStubDelegate":84,"org.easymock.tests2.AnswerTest.stubAnswer":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":392,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":500,"org.easymock.tests.UsageVarargTest.varargLongAccepted":304,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":335,"org.easymock.tests.UsageExpectAndReturnTest.floatType":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":23,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":237,"org.easymock.tests.UsageThrowableTest.noUpperLimit":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":111,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":72,"org.easymock.tests2.SerializationTest.test":80,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":30,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":287,"org.easymock.tests2.UsageConstraintsTest.testSame":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":257,"org.easymock.samples.SupportTest.addDocument":64,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":496,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":147,"org.easymock.tests.GenericTest.testPackageScope":398,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":236,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":367,"org.easymock.tests2.NameTest.nameForMock":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":501,"org.easymock.tests2.UsageStrictMockTest.differentMethods":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":259,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":468,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":373,"org.easymock.tests2.MockedExceptionTest.testRealException":243,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":450,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":448,"org.easymock.tests2.NameTest.nameForStrictMock":220,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":8,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":253,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":112,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":289,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":245,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":37,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":151,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":175,"org.easymock.tests.UsageTest.wrongArguments":48,"org.easymock.tests2.MockBuilderTest.testWithConstructor":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":148,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":327,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":290,"org.easymock.tests.UsageVarargTest.varargShortAccepted":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":417,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":438,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":246,"org.easymock.tests.UsageTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":415,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":268,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":393,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.samples.ExampleTest.addAndChangeDocument":63,"org.easymock.tests.UsageStrictMockTest.testVerify":396,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":68,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":73,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":261,"org.easymock.tests.LimitationsTest.abstractClass":292,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":211,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":297}}]
