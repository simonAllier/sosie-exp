[{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[14,15,16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,57],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[58,58,59,59,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[61,62,63,22,64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[68,42,69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[86,58,59,87,88,19,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,43,113,114,115,116,117,118,119,120,121,122,123,124,44,125,126,127,128,129,45,130,131,132,133,134,46,135,136,137,47,138,48,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,62,63,186,187,188,189,49,190,191,192,193,194,50,195,196,197,198,199,51,200,201,202,52,203,53,204,204,205,206,207,54,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,68,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,60,266,267,268,269,270,23,271,272,273,274,275,276,24,26,28,29,30,31,32,33,35,277,278,77,279,280,281,78,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,42,303,304,305,306,307,308,309,310,311,312,313,314,315,316,69,317,36,318,319,320,321,322,323,0,324,1,2,3,4,5,6,325,7,9,326,57,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[338,339,340,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[342,38,343,113,114,115,118,119,141,246,247,252,253,40,344,41,345],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[346,347,348],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[204,349,324,326,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[25,34],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[6,7,8],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[350,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[110,112,43,113,116,117,120,124,44,127,129,45,130,131,133,134,46,135,137,47,138,48,142,144,145,150,153,351,188,352,353,354,355,356,210,221,357,222,223,227,244,246,249,250,254,255,258,260,261,264,60,33,282,283,284,287,288,289,291,292,293,294,297,299,301,302,42,303,304,310,311,312,324,3,6,325,57,327,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[288],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[86,58,59,87,88,19,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,43,113,114,115,116,117,118,119,120,121,122,123,124,44,125,126,127,128,129,45,130,131,132,133,134,46,135,136,137,47,138,48,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,62,63,186,187,188,189,49,190,191,192,193,194,50,195,196,197,198,199,51,200,201,202,52,203,53,204,204,205,206,207,54,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,68,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,60,266,267,268,269,270,23,271,272,273,274,275,276,24,26,28,29,30,31,32,33,35,277,278,77,279,280,281,78,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,42,303,304,305,306,307,308,309,310,311,312,313,314,315,316,69,317,36,318,319,320,321,322,323,0,324,1,2,3,4,5,6,325,7,9,326,57,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[64],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[263,70,23,74,358,359,360,361,362,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":290,"org.easymock.tests2.UsageTest.argumentsOrdered":253,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":350,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":68,"org.easymock.tests2.StubTest.stubWithReturnValue":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":309,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":272,"org.easymock.tests2.DelegateToTest.testReturnException":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":164,"org.easymock.tests.MockingTest.testPartialClassMocking":121,"org.easymock.samples.SupportTest.voteForRemovals":88,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":41,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":18,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":189,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":306,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":359,"org.easymock.tests2.DelegateToTest.testWrongClass":331,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":207,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":296,"org.easymock.tests2.UsageTest.wrongArguments":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests.UsageStrictMockTest.range":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":156,"org.easymock.samples.ExampleTest.answerVsDelegate":91,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":21,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":82,"org.easymock.tests2.UsageConstraintsTest.testNull":292,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":30,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":53,"org.easymock.tests.UsageTest.moreThanOneArgument":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":155,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":218,"org.easymock.tests2.CaptureTest.testCaptureNone":325,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.UsageVerifyTest.twoReturns":112,"org.easymock.tests.UsageVarargTest.varargByteAccepted":107,"org.easymock.tests2.ThreadingTest.testThreadSafe":282,"org.easymock.tests.UsageTest.argumentsOrdered":119,"org.easymock.tests.UsageVarargTest.varargIntAccepted":101,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":182,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":97,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":152,"org.easymock.tests2.UsageConstraintsTest.any":297,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":29,"org.easymock.tests2.StubTest.stub":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":191,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":323,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":328,"org.easymock.tests.LimitationsTest.mockNativeMethod":205,"org.easymock.tests2.AnswerTest.answer":264,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":48,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":270,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":319,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":73,"org.easymock.tests2.MockedExceptionTest.testMockedException":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":222,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":337,"org.easymock.tests2.DelegateToTest.testDelegate":332,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":192,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":123,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":313,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":31,"org.easymock.tests.MockingTest.testNicePartialClassMocking":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":201,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":295,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":178,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":79,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":311,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":348,"org.easymock.tests.UsageThrowableTest.throwError":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":13,"org.easymock.tests.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":284,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":220,"org.easymock.tests.UsageExpectAndThrowTest.floatType":190,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":265,"org.easymock.tests.ResultTest.createReturnResultToString":66,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":275,"org.easymock.samples.PartialClassMockTest.testGetArea":19,"org.easymock.tests.ResultTest.createDelegateResultToString":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.samples.ExampleTest.voteAgainstRemoval":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":321,"org.easymock.tests2.UsageTest.niceToStrict":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":49,"org.easymock.tests2.ThreadingTest.testChangeDefault":346,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":81,"org.easymock.tests2.UsageConstraintsTest.testNotNull":310,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.UsageTest.defaultResetToNice":251,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.samples.ExampleTest.voteAgainstRemovals":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":136,"org.easymock.tests.UsageVarargTest.differentLength":104,"org.easymock.tests2.CallbackTest.callback":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":39,"org.easymock.tests.UsageTest.openCallCountByLastCall":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":40,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":154,"org.easymock.tests.UsageCallCountTest.tooFewCalls":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":83,"org.easymock.tests.UsageOverloadedMethodTest.overloading":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":301,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":186,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":300,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":157,"org.easymock.tests.UsageThrowableTest.throwCheckedException":212,"org.easymock.tests2.EasyMockSupportClassTest.testAll":273,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":63,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":52,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":38,"org.easymock.tests2.CaptureTest.testCaptureAll":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":281,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests2.UsageConstraintsTest.testMatches":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":280,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":219,"org.easymock.samples.ExampleTest.voteForRemovals":95,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":286,"org.easymock.tests.UsageVarargTest.allKinds":109,"org.easymock.tests2.DependencyTest.testInterfaceMocking":241,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":361,"org.easymock.samples.BasicClassMockTest.testPrintContent":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":177,"org.easymock.samples.ExampleTest.addDocument":94,"org.easymock.tests2.DelegateToTest.testStubDelegate":330,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":214,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests2.AnswerTest.stubAnswer":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":168,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":363,"org.easymock.tests2.UsageConstraintsTest.greaterThan":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":357,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":322,"org.easymock.tests.UsageVarargTest.varargLongAccepted":106,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":352,"org.easymock.samples.ExampleTest.voteForRemoval":92,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests.UsageExpectAndReturnTest.floatType":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":304,"org.easymock.tests.UsageThrowableTest.noUpperLimit":209,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":288,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":162,"org.easymock.tests2.SerializationTest.test":271,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":230,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":210,"org.easymock.tests2.UsageConstraintsTest.testSame":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":44,"org.easymock.samples.SupportTest.addDocument":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":163,"org.easymock.tests2.CaptureTest.testCaptureFirst":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":231,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":255,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":45,"org.easymock.tests.GenericTest.testPackageScope":62,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":285,"org.easymock.tests2.UsageTest.moreThanOneArgument":246,"org.easymock.tests2.CaptureTest.testCapture2_2446744":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":108,"org.easymock.tests.GenericTest.testBridgedEquals":64,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":184,"org.easymock.tests.UsageExpectAndReturnTest.longType":126,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":203,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":308,"org.easymock.tests2.UsageStrictMockTest.differentMethods":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":127,"org.easymock.tests.UsageCallCountTest.tooManyCalls":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":223,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":179,"org.easymock.tests2.MockedExceptionTest.testRealException":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":17,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":278,"org.easymock.tests2.UsageConstraintsTest.testContains":299,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":25,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":335,"org.easymock.tests2.UsageConstraintsTest.testFind":291,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":69,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":225,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":139,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":305,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.UsageStrictMockTest.range":260,"org.easymock.tests2.UsageConstraintsTest.lessThan":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":360,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":85,"org.easymock.tests.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":362,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":229,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":343,"org.easymock.tests2.UsageConstraintsTest.testOr":294,"org.easymock.tests.UsageRangeTest.combination":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":314,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":137,"org.easymock.tests.UsageTest.wrongArguments":115,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":159,"org.easymock.tests2.MockBuilderTest.testWithConstructor":72,"org.easymock.tests.ResultTest.createThrowResultToString":67,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":46,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.UsageVarargTest.varargShortAccepted":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":267,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":183,"org.easymock.tests2.UsageConstraintsTest.cmpTo":298,"org.easymock.tests.UsageVarargTest.varargCharAccepted":102,"org.easymock.tests2.CaptureTest.testCaptureMultiple":349,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageTest.openCallCountByLastCall":249,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":250,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests2.CaptureTest.testCaptureFromStub":326,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":27,"org.easymock.tests.UsageTest.unexpectedCallWithArray":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":211,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":141,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":181,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":75,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":135,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":320,"org.easymock.tests2.UsageConstraintsTest.constraints":289,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":194,"org.easymock.samples.ExampleTest.addAndChangeDocument":96,"org.easymock.tests.CapturesMatcherTest.test":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":47,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":175,"org.easymock.tests2.UsageTest.resumeIfFailure":254,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":234,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":100}}]
