[{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[0,1],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[20,21,22,23,5,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:65","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[java.lang.String[].int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[39],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,0,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,34,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[104,105,106,107,90,108],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[110,24,111],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[2,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,40,174,175,26,41,42,43,44,176,45,46,47,48,49,50,51,52,53,54,55,56,57,58,0,59,60,61,62,63,64,65,66,67,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,68,193,69,27,194,28,195,196,29,197,198,70,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,71,3,229,230,231,232,233,234,235,236,237,4,5,238,239,240,241,242,243,109,244,245,9,246,247,248,249,250,251,252,110,253,24,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,72,73,74,75,76,77,78,79,80,81,82,83,84,85,275,276,277,278,279,15,16,280,30,281,282,283,284,285,286,287,288,289,290,291,292,293,294,33,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,86,87,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,17,352,353,88,34,31,354,355,356,357,358,359,360,361,362,363,89,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,39,387,388,389,390,391,392,393,90,91,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,111,413,414,32,415,416,417,418,419,420,421,422,423,424,35,36,425,426,427,428,429,430,37,431,432,433,434,435,436,38,437,438,439,440,441,442,443,444,445,446,447,448,108,449,450,451,452,453,454,455,456,457,458,92,93,94,95,96,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,97,98,99,100,101,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,102,516,517,518,519,520,521,522,523,524,525,526,103],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[200,211,217,218,527,341,342,359,90,395,108,449,452,453,102],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[2,112,113,121,122,126,127,166,167,168,169,170,172,174,26,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,0,59,60,61,62,64,65,66,67,191,68,69,27,195,196,29,198,70,201,202,204,205,206,207,209,210,212,213,216,219,221,223,224,225,226,71,230,232,236,237,4,238,242,243,249,250,251,252,253,24,256,72,73,74,75,77,78,79,80,81,82,85,280,30,281,282,283,284,286,292,293,294,33,295,322,331,86,333,334,335,336,340,341,342,343,344,345,346,347,88,34,358,360,361,362,363,89,364,380,381,383,387,388,393,91,396,397,398,399,400,401,402,35,36,425,426,427,428,429,430,37,431,432,433,434,435,436,38,437,438,439,440,448,458,92,93,94,95,96,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,97,98,101,489,490,497,498,499,500,501,502,503,504,516,517,518,520,521,523,524,525,526,103],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[124,26,197,200,201,212,230,247,258,262,263,266,378,380,381,382,385,386,392,395,396,399],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[2,528,20,21,22,529,530,23,4,5,8,9,13],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[176,217,452],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[26,41,42,43,44,45,47,48,49,50,52,54,55,56,57,58,0,59,60,61,62,64,66,67,196,197,70,200,201,211,212,213,217,218,237,247,258,259,260,261,262,263,265,266,267,268,72,73,74,75,76,77,78,79,81,82,83,84,85,86,341,392,90,91,395,396,399,449,452,453,97,100,488,489,491,492,493,494,495,497],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[531,532,533],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[39,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[121,122,126,127,159,160,182,183,204,205,206,207,222,230,233,235,238,240,109,244,247,248,260,263,265,323,324,325,446,460,463,464,508,511,512,513,514,515],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[70,201,202,204,205,206,207,210,340,341,342,91,396,397,448,499,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[49,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[412,413,421,422,424,456,465,466,467],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[200,211,217,218,527,341,342,359,90,395,108,449,452,453,102],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":44,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":447,"org.easymock.tests2.UsageTest.argumentsOrdered":218,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":111,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":287,"org.easymock.tests2.DelegateToTest.testReturnException":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":361,"org.easymock.tests.MockingTest.testPartialClassMocking":380,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":203,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":468,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":135,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":192,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":97,"org.easymock.tests2.UsageTest.wrongArguments":211,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":335,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":513,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":385,"org.easymock.tests2.UsageConstraintsTest.testNull":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":224,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":266,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":487,"org.easymock.tests.UsageTest.moreThanOneArgument":448,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":294,"org.easymock.tests.UsageTest.argumentsOrdered":453,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":441,"org.easymock.tests.UsageVarargTest.varargIntAccepted":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":92,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":164,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":116,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":96,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":301,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests.ReplayStateInvalidUsageTest.times":373,"org.easymock.tests2.DependencyTest.testClassMocking":189,"org.easymock.tests2.AnswerTest.answer":27,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":169,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":510,"org.easymock.tests2.CaptureTest.testAnd":72,"org.easymock.tests2.UsageTest.strictResetToDefault":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":261,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":445,"org.easymock.tests2.DelegateToTest.testDelegate":256,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":483,"org.easymock.tests.LimitationsTest.mockFinalMethod":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":347,"org.easymock.tests2.DependencyTest.testClassMockingSupport":190,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":337,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":481,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":167,"org.easymock.tests.UsageThrowableTest.throwError":488,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":367,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":512,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":295,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":153,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":304,"org.easymock.samples.PartialClassMockTest.testGetArea":288,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":368,"org.easymock.tests.MockingTest.testInterfaceMocking":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":466,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":469,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":140,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests2.ThreadingTest.testChangeDefault":171,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":242,"org.easymock.tests2.MockBuilderTest.testCreateMock":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":477,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":104,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":509,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":499,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":333,"org.easymock.tests.UsageOverloadedMethodTest.overloading":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":144,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":356,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":496,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":433,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":18,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":519,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":388,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":485,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":168,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":345,"org.easymock.tests.MockNameTest.defaultName":446,"org.easymock.tests2.UsageConstraintsTest.testMatches":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":365,"org.easymock.samples.ExampleTest.voteForRemovals":284,"org.easymock.tests.UsageVarargTest.allKinds":103,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":340,"org.easymock.samples.BasicClassMockTest.testPrintContent":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":346,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":494,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":161,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":364,"org.easymock.tests2.UsageConstraintsTest.greaterThan":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":133,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":400,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":233,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":305,"org.easymock.samples.ExampleTest.voteForRemoval":281,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":353,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":234,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":25,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":514,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":227,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":297,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":458,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":259,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":360,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":110,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":260,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":430,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":40,"org.easymock.tests2.CaptureTest.testCapture2_2446744":84,"org.easymock.tests2.UsageTest.moreThanOneArgument":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":247,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":526,"org.easymock.tests.GenericTest.testBridgedEquals":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":506,"org.easymock.tests.UsageExpectAndReturnTest.longType":426,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":343,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":486,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":391,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":484,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":507,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":473,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":493,"org.easymock.tests.MockingTest.testNiceClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":121,"org.easymock.tests.MockingTest.testClassMocking":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":500,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":251,"org.easymock.tests2.UsageConstraintsTest.testFind":45,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":498,"org.easymock.tests.MockTypeTest.fromEasyMockClass":511,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":69,"org.easymock.tests.UsageExpectAndReturnTest.object":432,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":265,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":521,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":21,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":462,"org.easymock.tests.UsageTest.exactCallCountByLastCall":454,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":437,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":155,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":142,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":443,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":31,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":175,"org.easymock.tests.UsageVarargTest.varargCharAccepted":520,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":532,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":268,"org.easymock.tests.DefaultClassInstantiatorTest.object":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":289,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":460,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":527,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":491,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":180,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":231,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":303,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":474,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":438,"org.easymock.tests.ReplayStateInvalidCallsTest.times":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":151,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":508,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":363,"org.easymock.tests2.StubTest.stubWithReturnValue":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":431,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":64,"org.easymock.tests2.SerializationTest.testAllMockedMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":417,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":14,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":105,"org.easymock.samples.SupportTest.voteForRemovals":279,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":480,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":423,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":194,"org.easymock.tests.UsageExpectAndThrowTest.object":478,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":457,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":61,"org.easymock.tests2.DelegateToTest.testWrongClass":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":88,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":307,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":34,"org.easymock.tests.UsageStrictMockTest.range":395,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":118,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":479,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":129,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":334,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":106,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":299,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":467,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":271,"org.easymock.tests.UsageUnorderedTest.message":102,"org.easymock.tests.UsageVerifyTest.twoReturns":342,"org.easymock.tests.UsageVarargTest.varargByteAccepted":525,"org.easymock.tests2.ThreadingTest.testThreadSafe":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":146,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":504,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":463,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":275,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":100,"org.easymock.tests2.UsageConstraintsTest.any":52,"org.easymock.tests2.StubTest.stub":236,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageExpectAndThrowTest.longType":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":17,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":199,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":440,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":179,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":315,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests2.NameTest.nameForMocksControl":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":181,"org.easymock.tests2.MockedExceptionTest.testMockedException":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":134,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":451,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":472,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":193,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":221,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":244,"org.easymock.tests.MockingTest.testNicePartialClassMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":226,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":528,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":177,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":338,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":127,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":49,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":314,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":62,"org.easymock.tests.MockingTest.testTwoMocks":379,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":311,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":476,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":66,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":274,"org.easymock.samples.ExampleTest.removeNonExistingDocument":285,"org.easymock.tests.UsageStrictMockTest.differentMethods":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":184,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":156,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":273,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":350,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":248,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.floatType":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":136,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":195,"org.easymock.tests.UsageVerifyTest.twoThrows":341,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":145,"org.easymock.samples.ExampleTest.voteAgainstRemoval":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":232,"org.easymock.tests.LimitationsTest.privateConstructor":330,"org.easymock.tests2.UsageConstraintsTest.testNotNull":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":495,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":249,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.samples.ExampleTest.voteAgainstRemovals":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":38,"org.easymock.tests.UsageVarargTest.differentLength":522,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":178,"org.easymock.tests2.CallbackTest.callback":26,"org.easymock.tests2.UsageConstraintsTest.equals":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":450,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":99,"org.easymock.tests.UsageCallCountTest.tooFewCalls":502,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":336,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":272,"org.easymock.tests.UsageThrowableTest.throwCheckedException":492,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":107,"org.easymock.tests.MockingTest.testStrictClassMocking":377,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":126,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":122,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":125,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":29,"org.easymock.tests.ObjectMethodsTest.testHashCode":461,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":530,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":174,"org.easymock.tests2.NameTest.nameForNiceMock":206,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":313,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":308,"org.easymock.tests2.DependencyTest.testInterfaceMocking":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":22,"org.easymock.samples.ExampleTest.addDocument":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":152,"org.easymock.tests2.DelegateToTest.testStubDelegate":24,"org.easymock.tests2.AnswerTest.stubAnswer":196,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":91,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":245,"org.easymock.tests.UsageVarargTest.varargLongAccepted":524,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":439,"org.easymock.tests.UsageExpectAndReturnTest.floatType":425,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.UsageThrowableTest.noUpperLimit":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":163,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":114,"org.easymock.tests2.SerializationTest.test":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":349,"org.easymock.tests2.UsageConstraintsTest.testSame":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":36,"org.easymock.samples.SupportTest.addDocument":278,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":124,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":298,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":137,"org.easymock.tests.GenericTest.testPackageScope":387,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":162,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":384,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":296,"org.easymock.tests2.NameTest.nameForMock":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":434,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":11,"org.easymock.tests2.UsageStrictMockTest.differentMethods":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":427,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":482,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":402,"org.easymock.tests2.MockedExceptionTest.testRealException":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":32,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":376,"org.easymock.tests2.NameTest.nameForStrictMock":205,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":533,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":117,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":351,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":239,"org.easymock.tests2.UsageStrictMockTest.range":200,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":302,"org.easymock.tests2.UsageConstraintsTest.lessThan":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":141,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":270,"org.easymock.tests2.UsageConstraintsTest.testOr":48,"org.easymock.tests.UsageRangeTest.combination":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":222,"org.easymock.tests.UsageTest.wrongArguments":449,"org.easymock.tests2.MockBuilderTest.testWithConstructor":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":138,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":404,"org.easymock.tests.UsageVarargTest.varargShortAccepted":523,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":352,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":505,"org.easymock.tests2.UsageConstraintsTest.cmpTo":53,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":316,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":28,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":406,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":83,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":240,"org.easymock.tests.UsageTest.unexpectedCallWithArray":108,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":312,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":503,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":436,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":394,"org.easymock.tests2.UsageConstraintsTest.constraints":43,"org.easymock.samples.ExampleTest.addAndChangeDocument":286,"org.easymock.tests.UsageStrictMockTest.testVerify":398,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":277,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":393,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":344,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":429,"org.easymock.tests.LimitationsTest.abstractClass":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":95,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":517,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":263}}]
