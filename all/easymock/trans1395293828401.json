[{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:56","sourceCode":"final org.easymock.internal.matchers.Equals org.easymock.internal.matchers.Equals = ((org.easymock.internal.matchers.Equals)(java.lang.Object))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[14,15,16,17,18,19,20,21,22,0,23],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,3,52,53,25,26,54,55,56,57,58,59,15,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,33,34,91,92,93,94,95,96,97,98,99,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[100,14,15,101,102,60,61,62,103,104,16,105,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[106,107,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[109,110],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,3,52,53,25,26,54,55,56,57,58,59,15,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,33,34,91,92,93,94,95,96,97,98,99,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[1,111],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[112],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:126","failures":[113,114,115,116,117],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[118,119,120,121,122,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[123,123,124,124,125,24,105,126,127,128,19,129,20,130,131,132,133,134,23,135,136,137,138,139,140,141,142,143,144,32,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[159,160,161,24,53,25,26,54,118,27,55,162,56,57,58,163,164,17,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,67,186,187,188,68,189,190,191,192,193,194,195,196,74,75,197,198,199,200,201,202,89,32,90,33,34,91,203,204,205,206,207,208,121,35,209,92,93,94,210,211,212,95,213,98,99,36,214,215,216,217,37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[166,218,219,220,192],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[40,113,41,42,43,44,45,46,47,221,48,49,50,51,114,222,115,116,1,2,3,223,224,159,225,125,226,227,161,52,24,53,25,26,54,118,228,27,55,162,56,229,119,57,58,163,164,14,59,15,101,102,60,61,62,63,103,16,230,64,126,127,17,18,128,19,129,20,21,231,232,233,130,234,131,132,165,133,134,0,235,236,65,237,23,135,136,238,239,240,241,167,66,169,170,172,174,242,243,180,181,244,245,182,183,246,247,248,249,250,184,251,252,253,254,255,256,185,257,67,258,186,187,188,68,69,70,71,259,189,260,261,262,263,264,265,266,191,267,117,268,137,138,72,269,139,270,73,120,271,272,273,274,275,76,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,77,78,79,80,81,198,82,83,84,85,86,297,298,299,87,202,88,89,32,90,33,34,91,300,121,35,92,301,122,93,94,210,212,95,96,97,98,99,36,214,302,303,304,217,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,151,152,153,154,155,327,37,38,39,156,328,329,330,331,157,158],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[113,226,332,227,246,247,248],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[333],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[25,55,57,58,334,89,33,209,92,93,94,36,38,39],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[1,6,7,8,335,336,11,111,250,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"position":"org.easymock.internal.MocksControl:105","failures":[40,113,41,42,43,44,337,45,46,47,221,48,49,50,123,123,124,124,51,338,114,222,115,339,116,1,2,3,340,341,223,224,342,343,344,345,346,159,160,347,348,349,350,351,352,353,354,355,225,125,226,332,227,356,357,358,359,161,52,24,53,25,26,54,118,228,27,55,162,56,229,119,360,57,58,163,164,14,59,15,101,102,60,61,62,63,103,16,105,230,64,126,127,17,18,361,128,19,129,20,21,231,22,232,233,130,234,131,132,165,133,134,0,235,236,65,237,23,135,136,362,363,364,238,365,366,239,367,368,369,370,371,372,373,374,375,240,376,377,378,379,380,241,381,382,383,166,167,168,384,66,218,169,170,111,171,172,173,385,386,387,388,389,174,175,390,391,392,393,394,219,395,242,396,397,176,177,178,179,243,180,181,244,245,182,183,246,398,399,247,248,249,250,12,184,251,252,253,254,255,256,185,257,67,258,186,187,400,188,68,69,70,71,259,189,260,261,262,263,220,401,264,402,403,190,265,266,191,404,192,267,193,117,268,194,195,196,405,406,407,137,138,72,269,139,408,409,410,411,270,73,120,271,272,273,274,275,412,413,414,74,75,415,112,416,417,140,141,142,143,144,76,418,419,420,421,276,422,197,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,77,78,79,423,80,81,198,82,83,84,85,86,424,297,298,425,5,426,427,199,200,201,428,429,430,431,109,432,433,434,110,435,436,299,87,437,438,202,88,89,32,90,33,34,91,300,439,440,441,442,443,444,445,446,447,448,449,450,145,203,204,205,206,207,208,121,35,209,92,301,122,93,94,210,211,451,212,95,96,97,213,98,99,36,452,214,453,454,215,216,302,303,304,146,455,456,457,147,148,458,459,460,461,462,463,464,465,149,466,467,468,469,150,470,471,472,473,217,474,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,151,152,153,154,155,475,476,327,477,37,38,39,478,479,480,481,482,156,328,483,484,485,329,330,486,331,487,488,489,157,158,490,491,492],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":18,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":462,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":56,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":51,"org.easymock.tests2.DelegateToTest.testReturnException":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":419,"org.easymock.tests.MockingTest.testPartialClassMocking":329,"org.easymock.tests.MockClassControlTest.testToString":199,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":397,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":277,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":28,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":137,"org.easymock.tests2.UsageTest.wrongArguments":55,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":410,"org.easymock.samples.ExampleTest.answerVsDelegate":113,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":206,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":488,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":261,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests2.CaptureTest.testPrimitive":101,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests.UsageTest.moreThanOneArgument":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":296,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":424,"org.easymock.tests.UsageTest.argumentsOrdered":94,"org.easymock.tests.UsageVarargTest.varargIntAccepted":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":151,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":155,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":107,"org.easymock.tests.ReplayStateInvalidUsageTest.times":447,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests2.DependencyTest.testClassMocking":340,"org.easymock.tests2.AnswerTest.answer":246,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":468,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests2.UsageTest.strictResetToDefault":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":305,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":5,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":292,"org.easymock.tests.LimitationsTest.mockFinalMethod":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":482,"org.easymock.tests2.DependencyTest.testClassMockingSupport":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":74,"org.easymock.tests2.CaptureTest.testCapture1_2446744":102,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":401,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":441,"org.easymock.tests.UsageThrowableTest.throwError":270,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":205,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":144,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":382,"org.easymock.samples.PartialClassMockTest.testGetArea":221,"org.easymock.tests.MockingTest.testInterfaceMocking":486,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":416,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":146,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.MockBuilderTest.testCreateMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":286,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":414,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":408,"org.easymock.tests.UsageOverloadedMethodTest.overloading":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":131,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":268,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":318,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":234,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":103,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":423,"org.easymock.tests.MockClassControlTest.testEquals":429,"org.easymock.tests2.EasyMockSupportClassTest.testAll":238,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":480,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests.MockNameTest.defaultName":197,"org.easymock.tests2.UsageConstraintsTest.testMatches":132,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":143,"org.easymock.samples.ExampleTest.voteForRemovals":44,"org.easymock.tests.UsageVarargTest.allKinds":86,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":481,"org.easymock.samples.BasicClassMockTest.testPrintContent":47,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":274,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":390,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":339,"org.easymock.tests2.UsageConstraintsTest.greaterThan":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":474,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":191,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":435,"org.easymock.samples.ExampleTest.voteForRemoval":41,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":404,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":220,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":257,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":64,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":67,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":314,"org.easymock.tests2.UsageTest.moreThanOneArgument":27,"org.easymock.tests2.CaptureTest.testCapture2_2446744":230,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":469,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":172,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":85,"org.easymock.tests.GenericTest.testBridgedEquals":438,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":98,"org.easymock.tests.UsageExpectAndReturnTest.longType":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":478,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":295,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":145,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":140,"org.easymock.tests.UsageCallCountTest.tooManyCalls":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":108,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":273,"org.easymock.tests.MockingTest.testNiceClassMocking":489,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":180,"org.easymock.tests.MockingTest.testClassMocking":484,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":451,"org.easymock.tests2.UsageConstraintsTest.testContains":130,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":242,"org.easymock.tests2.UsageConstraintsTest.testFind":128,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":304,"org.easymock.tests.MockTypeTest.fromEasyMockClass":204,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":227,"org.easymock.tests.UsageExpectAndReturnTest.object":317,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":7,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":81,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":454,"org.easymock.tests.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":148,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":117,"org.easymock.tests.MockClassControlTest.testHashCode":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":386,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":373,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":106,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":413,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":356,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":383,"org.easymock.tests.UsageVarargTest.varargCharAccepted":80,"org.easymock.tests2.CaptureTest.testCaptureMultiple":100,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastCall":229,"org.easymock.tests.DefaultClassInstantiatorTest.object":431,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":412,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":214,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":385,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":283,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":405,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":241,"org.easymock.tests2.UsageTest.resumeIfFailure":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":421,"org.easymock.tests2.StubTest.stubWithReturnValue":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":237,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":316,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":467,"org.easymock.samples.SupportTest.voteForRemovals":49,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":289,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":472,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":398,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":492,"org.easymock.tests.UsageExpectAndThrowTest.object":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":235,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":158,"org.easymock.samples.ConstructorCalledMockTest.testTax":123,"org.easymock.tests.UsageStrictMockTest.range":33,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":354,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":288,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":169,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":449,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":409,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":417,"org.easymock.tests2.CaptureTest.testCaptureNone":63,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":84,"org.easymock.tests2.ThreadingTest.testThreadSafe":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":376,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":97,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":46,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":215,"org.easymock.tests2.CaptureTest.testCapture_2617107":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":269,"org.easymock.tests2.UsageConstraintsTest.any":232,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":446,"org.easymock.tests2.StubTest.stub":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":420,"org.easymock.tests.UsageExpectAndThrowTest.longType":280,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":434,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":445,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":53,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":327,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":326,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":344,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":54,"org.easymock.tests2.NameTest.nameForMocksControl":179,"org.easymock.tests2.MockedExceptionTest.testMockedException":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":366,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":281,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":331,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":332,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":170,"org.easymock.tests.MockingTest.testNicePartialClassMocking":330,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":263,"org.easymock.tests2.CaptureTest.testCaptureLast":62,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":342,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":75,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":183,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":236,"org.easymock.tests.MockingTest.testTwoMocks":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":285,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":135,"org.easymock.samples.ExampleTest.removeNonExistingDocument":337,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":443,"org.easymock.tests.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":387,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":432,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":253,"org.easymock.tests2.MockBuilderTest.testCreateMockString":173,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":247,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":240,"org.easymock.samples.ExampleTest.voteAgainstRemoval":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":266,"org.easymock.tests.LimitationsTest.privateConstructor":476,"org.easymock.tests2.UsageConstraintsTest.testNotNull":23,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":275,"org.easymock.tests2.UsageTest.defaultResetToNice":360,"org.easymock.samples.ExampleTest.voteAgainstRemovals":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":322,"org.easymock.tests.UsageVarargTest.differentLength":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":343,"org.easymock.tests2.CallbackTest.callback":184,"org.easymock.tests2.UsageConstraintsTest.equals":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":402,"org.easymock.tests.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":72,"org.easymock.tests.UsageCallCountTest.tooFewCalls":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":411,"org.easymock.tests.UsageThrowableTest.throwCheckedException":272,"org.easymock.tests.MockingTest.testStrictClassMocking":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":328,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":160,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":448,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":245,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":249,"org.easymock.tests.ObjectMethodsTest.testHashCode":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":9,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":333,"org.easymock.tests2.NameTest.nameForNiceMock":178,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":255,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":8,"org.easymock.samples.ExampleTest.addDocument":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":377,"org.easymock.tests2.DelegateToTest.testStubDelegate":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.stubAnswer":248,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":32,"org.easymock.tests.UsageVarargTest.varargLongAccepted":83,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.floatType":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":325,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":250,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":392,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests.UsageThrowableTest.noUpperLimit":73,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":127,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":352,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":109,"org.easymock.tests2.UsageConstraintsTest.testSame":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":308,"org.easymock.samples.SupportTest.addDocument":48,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":368,"org.easymock.tests.GenericTest.testPackageScope":299,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":147,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":391,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":487,"org.easymock.tests2.NameTest.nameForMock":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":319,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":403,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":291,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":452,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":306,"org.easymock.tests2.MockedExceptionTest.testRealException":396,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":465,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":138,"org.easymock.tests2.NameTest.nameForStrictMock":177,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":353,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":433,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":29,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.ErrorMessageTest.testGetters":30,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":167,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":372,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests.UsageRangeTest.combination":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":189,"org.easymock.tests.UsageTest.wrongArguments":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":369,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":320,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":110,"org.easymock.tests.UsageVarargTest.varargShortAccepted":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":213,"org.easymock.tests2.UsageConstraintsTest.cmpTo":233,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.CaptureTest.testCaptureFromStub":105,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":440,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":168,"org.easymock.tests.UsageTest.unexpectedCallWithArray":209,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":96,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":321,"org.easymock.tests2.CaptureTest.testCapture":104,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.samples.ExampleTest.addAndChangeDocument":45,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":479,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":153,"org.easymock.tests.LimitationsTest.abstractClass":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":154,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":31,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":78}}]
