[{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[11,12,13,14,15,16],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[18,19,20],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[42,43,44,45,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,23,77,78,25,79,80,81,28,82,30,31,83,84,85,86,87,88,89,90,91,92,93,94,95,96,33,97,34,35,98,36,99,100,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,3,6,10,126,127,128,129,130,19,131,132,133,134],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[74,26,135,31,32,136,137,138,139,140],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[52,141,142],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[0,143,144,145],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[146],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[148,149,150,151,14,152,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[165,166,167],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[8,9,168,169,170,171,172,173,174,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[45,45,46,46,175,176,177,178,11,179,180,181,182,183,184,185,115,186,187,188,189,16,118,190,191,192,193,194,195,196,197,2,198,3,199,144,200,201,202,6,7,203,145,204,131,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[205,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[206,207,208,114,209,186,187,117,210,160,161,211,82,212,128,213,19,20,131,133,214,163,164],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[215],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[216,217],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.UsageTest.argumentsOrdered":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":215,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":128,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":152,"org.easymock.tests2.SerializationTest.testAllMockedMethod":75,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.tests.MockClassControlTest.testToString":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":96,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":100,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":136,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":16,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":115,"org.easymock.tests2.UsageTest.wrongArguments":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":45,"org.easymock.tests.UsageStrictMockTest.range":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":33,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":158,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":67,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.CaptureTest.testPrimitive":168,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":187,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":178,"org.easymock.tests.UsageUnorderedTest.message":206,"org.easymock.tests.UsageVerifyTest.twoReturns":209,"org.easymock.tests.UsageTest.argumentsOrdered":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":148,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":116,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":79,"org.easymock.tests2.StubTest.stub":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":218,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":167,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.tests2.SerializationTest.testClass":74,"org.easymock.tests.LimitationsTest.mockNativeMethod":50,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":49,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":91,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":24,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":121,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":150,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":155,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":81,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":87,"org.easymock.tests2.CaptureTest.testCaptureLast":172,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":36,"org.easymock.tests.MockingTest.testTwoMocks":55,"org.easymock.tests2.CaptureTest.testCapture1_2446744":169,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":156,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":129,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":203,"org.easymock.tests.UsageThrowableTest.throwError":107,"org.easymock.tests.UsageStrictMockTest.differentMethods":161,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":217,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":179,"org.easymock.tests.UsageVerifyTest.twoThrows":114,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":101,"org.easymock.samples.PartialClassMockTest.testGetArea":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":182,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":93,"org.easymock.tests2.UsageTest.niceToStrict":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":40,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":190,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":25,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":15,"org.easymock.tests2.CallbackTest.callback":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":157,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":195,"org.easymock.tests.UsageOverloadedMethodTest.overloading":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":35,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":153,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":110,"org.easymock.tests.MockClassControlTest.testEquals":66,"org.easymock.tests2.EasyMockSupportClassTest.testAll":99,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":48,"org.easymock.tests.MockingTest.testStrictClassMocking":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":98,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.testMatches":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":11,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":138,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests2.DelegateToTest.testStubDelegate":211,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":112,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":133,"org.easymock.tests2.AnswerTest.stubAnswer":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":118,"org.easymock.tests2.UsageConstraintsTest.greaterThan":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":140,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":94,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":46,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":202,"org.easymock.tests.UsageThrowableTest.noUpperLimit":108,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":196,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":51,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":170,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":135,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":120,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":141,"org.easymock.tests2.UsageConstraintsTest.testSame":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":13,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.GenericTest.testPackageScope":47,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.NameTest.nameForMock":41,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":29,"org.easymock.tests2.UsageStrictMockTest.differentMethods":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":176,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":193,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":186,"org.easymock.tests.MockingTest.testNiceClassMocking":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testClassMocking":54,"org.easymock.tests2.UsageConstraintsTest.testContains":199,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":197,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":86,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":70,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":23,"org.easymock.tests2.UsageStrictMockTest.range":163,"org.easymock.tests2.UsageConstraintsTest.lessThan":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":137,"org.easymock.tests.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":162,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":216,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageTest.wrongArguments":104,"org.easymock.tests2.MockBuilderTest.testWithConstructor":22,"org.easymock.tests.MockClassControlTest.testHashCode":65,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":61,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":166,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":142,"org.easymock.tests2.CaptureTest.testCaptureMultiple":17,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":18,"org.easymock.tests.DefaultClassInstantiatorTest.object":52,"org.easymock.tests2.CaptureTest.testCaptureFromStub":204,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":109,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":27,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":154,"org.easymock.tests2.CaptureTest.testCapture":174,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":92,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":64,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":102,"org.easymock.tests2.CompareToTest.testGreateThan":146,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":123}}]
