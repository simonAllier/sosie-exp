[{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,163,164,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,0,1,245,2,246,3,4,247,248,249,250,251,252,253,254,255,256,6,257,258,259,7,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,8,287,9,288,289,290,291,292,293,294,10,295,296,297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[34,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[90,95,96,128,174,203,221,223,227,228,231,235,239,240],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","i":"i"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[259],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,302,303,304,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,305,306,307,32,308,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,309,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,310,90,91,92,93,94,95,96,97,98,99,100,311,312,313,314,102,315,103,104,316,105,317,318,106,319,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,320,145,321,322,323,324,325,326,146,147,148,149,150,327,151,152,153,154,155,156,157,158,328,159,160,161,162,163,164,165,166,167,168,169,329,170,171,172,173,330,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,331,218,219,332,220,299,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,0,1,245,2,246,3,4,247,248,249,250,251,252,253,254,255,256,6,257,258,333,259,7,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,8,287,9,288,289,290,291,292,293,294,10,295,296,297],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[334,335,336,337,338,93,99,100,314,132,133,134,135,136,339,140,141,144,146,147,148,149,150,192,237,243,252,255,256,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[306,154,283,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"this","value":"delegateTo","this":"lastResult"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[308,55,63,64,67,68,92,95,301,138,139,202,208,209,239],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[340,24,26,27,28,29,30,31,307,41,61,341,342,343,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,138,143,152,192,199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methodArgs":"methodArgs","this":"this","methodTypes":"methodTypes","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[23,37,38,39,40,41,42,142,268,269,270,271],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[251],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[341,342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[1,2,4,5,7,8,10],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":209,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":204,"org.easymock.tests2.StubTest.stubWithReturnValue":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":117,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":165,"org.easymock.tests2.SerializationTest.testAllMockedMethod":275,"org.easymock.tests2.DelegateToTest.testReturnException":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.MockingTest.testPartialClassMocking":33,"org.easymock.samples.SupportTest.voteForRemovals":162,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":298,"org.easymock.tests.MockClassControlTest.testToString":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":70,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":186,"org.easymock.tests.UsageExpectAndThrowTest.object":80,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":257,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":198,"org.easymock.tests2.DelegateToTest.testWrongClass":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":100,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":247,"org.easymock.tests2.UsageTest.wrongArguments":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":140,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":19,"org.easymock.samples.ExampleTest.answerVsDelegate":154,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":276,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":326,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":231,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests2.CaptureTest.testPrimitive":288,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":144,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":319,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":89,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":148,"org.easymock.tests2.CaptureTest.testCaptureNone":293,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVerifyTest.twoReturns":139,"org.easymock.tests.UsageVarargTest.varargByteAccepted":50,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.UsageVarargTest.varargIntAccepted":45,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":16,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":167,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":132,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":143,"org.easymock.tests2.UsageConstraintsTest.any":248,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":171,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":317,"org.easymock.tests2.StubTest.stub":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":136,"org.easymock.tests.UsageExpectAndThrowTest.longType":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":105,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":238,"org.easymock.tests2.SerializationTest.testClass":273,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests.ReplayStateInvalidUsageTest.times":318,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":263,"org.easymock.tests.LimitationsTest.mockNativeMethod":36,"org.easymock.tests2.AnswerTest.answer":264,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":127,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":184,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":200,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":219,"org.easymock.tests2.NameTest.nameForMocksControl":196,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":130,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.DelegateToTest.testDelegate":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":74,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":35,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":85,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":217,"org.easymock.tests2.CaptureTest.testCaptureLast":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":282,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":60,"org.easymock.tests2.CaptureTest.testCapture1_2446744":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":208,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":260,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.UsageThrowableTest.throwError":24,"org.easymock.samples.ExampleTest.removeNonExistingDocument":328,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":104,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":178,"org.easymock.tests2.MockBuilderTest.testCreateMockString":175,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":320,"org.easymock.tests.UsageExpectAndThrowTest.floatType":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":150,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":254,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":265,"org.easymock.tests.UsageVerifyTest.twoThrows":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":187,"org.easymock.samples.PartialClassMockTest.testGetArea":166,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":133,"org.easymock.samples.ExampleTest.voteAgainstRemoval":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":220,"org.easymock.tests2.UsageTest.niceToStrict":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":71,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":170,"org.easymock.tests2.MockBuilderTest.testCreateMock":330,"org.easymock.tests2.UsageTest.defaultResetToNice":207,"org.easymock.samples.ExampleTest.voteAgainstRemovals":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":123,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.CallbackTest.callback":221,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":79,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":227,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":142,"org.easymock.tests.UsageCallCountTest.tooFewCalls":14,"org.easymock.tests.UsageOverloadedMethodTest.overloading":151,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":307,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":252,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":119,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":251,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":20,"org.easymock.tests.UsageThrowableTest.throwCheckedException":28,"org.easymock.tests.MockClassControlTest.testEquals":325,"org.easymock.tests2.EasyMockSupportClassTest.testAll":185,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":87,"org.easymock.tests2.CaptureTest.testCaptureAll":287,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":281,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":23,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":278,"org.easymock.tests2.UsageConstraintsTest.testMatches":253,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":280,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":267,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":149,"org.easymock.tests.ObjectMethodsTest.testHashCode":312,"org.easymock.samples.ExampleTest.voteForRemovals":158,"org.easymock.tests2.NameTest.nameForNiceMock":195,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests.UsageVarargTest.allKinds":52,"org.easymock.tests2.DependencyTest.testInterfaceMocking":197,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":59,"org.easymock.samples.BasicClassMockTest.testPrintContent":168,"org.easymock.samples.ExampleTest.addDocument":157,"org.easymock.tests2.DelegateToTest.testStubDelegate":284,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":30,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests2.AnswerTest.stubAnswer":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":93,"org.easymock.tests2.UsageConstraintsTest.greaterThan":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":49,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.samples.ExampleTest.voteForRemoval":155,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests.UsageExpectAndReturnTest.floatType":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":262,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":164,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":256,"org.easymock.tests.UsageThrowableTest.noUpperLimit":25,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":244,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":21,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":290,"org.easymock.tests2.SerializationTest.test":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":224,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":26,"org.easymock.tests2.UsageConstraintsTest.testSame":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":109,"org.easymock.samples.SupportTest.addDocument":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":300,"org.easymock.tests2.CaptureTest.testCaptureFirst":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":225,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":316,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":115,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests2.CaptureTest.testCapture2_2446744":296,"org.easymock.tests2.UsageTest.moreThanOneArgument":201,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests2.NameTest.nameForMock":193,"org.easymock.tests.UsageExpectAndReturnTest.longType":111,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":120,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":333,"org.easymock.tests2.UsageStrictMockTest.differentMethods":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":112,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":131,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":13,"org.easymock.tests2.MockedExceptionTest.testRealException":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":277,"org.easymock.tests2.UsageConstraintsTest.testContains":250,"org.easymock.tests2.NameTest.nameForStrictMock":194,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":12,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":270,"org.easymock.tests2.UsageConstraintsTest.testFind":245,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":152,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":216,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":190,"org.easymock.tests.UsageExpectAndReturnTest.object":118,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":218,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":239,"org.easymock.tests2.UsageConstraintsTest.lessThan":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":230,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":47,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":313,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":344,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":223,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":213,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":306,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests.MockClassControlTest.testHashCode":324,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":145,"org.easymock.tests2.EasyMockSupportTest.testVerify":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":342,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":305,"org.easymock.tests.UsageVarargTest.varargShortAccepted":48,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageConstraintsTest.cmpTo":249,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":242,"org.easymock.tests.UsageVarargTest.varargCharAccepted":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":340,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests2.UsageTest.openCallCountByLastCall":205,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":206,"org.easymock.tests.DefaultClassInstantiatorTest.object":310,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":233,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":341,"org.easymock.tests2.CaptureTest.testCaptureFromStub":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":102,"org.easymock.tests.UsageTest.unexpectedCallWithArray":63,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":311,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":77,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":332,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":323,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":76,"org.easymock.samples.ExampleTest.addAndChangeDocument":159,"org.easymock.tests.UsageStrictMockTest.testVerify":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":125,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":160,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":57,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":291,"org.easymock.tests2.UsageTest.resumeIfFailure":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":134,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":114,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":228,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":44}}]
