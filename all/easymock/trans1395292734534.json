[{"position":"org.easymock.internal.matchers.Compare:52","failures":[0],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[1],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.LastControl.NO_MATCHERS_FOUND"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.LastControl:124","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,20,50,51,52,53,54,55,56,57,58,59,60,3,4,5,61,62,63,64,6,7,65,8,66,67,9,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,21,22,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,10,11,140,12,141,13,14,142,143,144,145,146,147,148,0,149,150,2,151,152,153,154,15,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,16,17,18,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,19,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[143,16,177,271,274,275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[296],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[118,119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[40],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[297,298,299,300,301,302],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[45,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[304],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[48,49,305,101],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[58,173,306,307,241,243,244],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[30,129,131,308,132,162,309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[310,311,312,313,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[23,23,24,24,25,27,28,39,40,42,43,44,45,46,47,48,49,20,315,52,99,100,316,101,102,103,104,105,106,107,108,109,110,111,112,114,115,118,120,122,123,124,125,317,165,166,167,318,319,320,321,322,323,324,325,326,327,328,263,264,265,329,330,273],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[331,332,170,214,333,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,335,35,39,40,41,42,43,44,45,46,47,48,49,20,50,51,52,53,54,55,56,57,58,59,60,336,337,338,339,3,4,5,61,62,63,64,6,7,65,8,66,67,9,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,99,100,101,102,105,106,107,108,110,111,114,115,116,117,21,22,118,119,120,126,127,128,129,130,131,132,133,134,135,136,137,138,139,10,11,140,12,141,13,14,142,143,144,145,146,147,148,0,149,150,2,151,152,153,154,15,155,156,157,159,160,161,340,162,163,341,164,165,166,167,168,169,170,171,172,173,174,175,342,176,16,17,18,177,178,179,343,344,345,346,347,348,349,350,351,352,310,353,354,355,180,181,182,183,184,185,186,356,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,320,321,322,323,324,325,326,327,225,357,226,227,228,229,230,358,359,360,297,231,232,233,234,235,236,237,238,239,240,19,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[361,362,363,364,365,366,367,108,368,118],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"matched"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[57,58,73,85,126,0,172,173,185,186,212,220,225,306,307,241,243,244],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,20,50,51,52,53,54,55,56,57,58,59,60,3,4,5,61,62,63,64,6,7,65,8,66,67,9,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,21,22,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,10,11,140,12,141,13,14,142,143,144,145,146,147,148,0,149,150,2,151,152,153,154,15,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,16,17,18,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,19,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests2.UsageTest.argumentsOrdered":83,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":78,"org.easymock.tests2.StubTest.stubWithReturnValue":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":361,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":285,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":26,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":154,"org.easymock.tests2.SerializationTest.testAllMockedMethod":120,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":165,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":332,"org.easymock.samples.SupportTest.voteForRemovals":37,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":296,"org.easymock.tests.MockClassControlTest.testToString":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":192,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests.UsageExpectAndThrowTest.object":202,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":151,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":363,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":179,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":142,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests.UsageStrictMockTest.range":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":223,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":93,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":42,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":327,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests2.CaptureTest.testPrimitive":61,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":310,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":218,"org.easymock.tests.UsageTest.moreThanOneArgument":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":222,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":41,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests2.CaptureTest.testCaptureNone":7,"org.easymock.tests.UsageUnorderedTest.message":241,"org.easymock.tests.UsageVerifyTest.twoReturns":244,"org.easymock.tests.UsageVarargTest.varargByteAccepted":239,"org.easymock.tests2.ThreadingTest.testThreadSafe":133,"org.easymock.tests.UsageTest.argumentsOrdered":219,"org.easymock.tests.UsageVarargTest.varargIntAccepted":233,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":183,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":258,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":18,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":102,"org.easymock.tests2.UsageConstraintsTest.any":143,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":309,"org.easymock.tests2.StubTest.stub":127,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.UsageExpectAndThrowTest.longType":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":57,"org.easymock.tests2.SerializationTest.testClass":118,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests.LimitationsTest.mockNativeMethod":273,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":295,"org.easymock.tests2.AnswerTest.answer":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":72,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":47,"org.easymock.tests2.NameTest.nameForMocksControl":339,"org.easymock.tests2.MockedExceptionTest.testMockedException":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":90,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":196,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":207,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":44,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":356,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":115,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":191,"org.easymock.tests.MockingTest.testTwoMocks":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":70,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":155,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.samples.ExampleTest.removeNonExistingDocument":335,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests.UsageStrictMockTest.differentMethods":174,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":299,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":135,"org.easymock.tests2.MockBuilderTest.testCreateMockString":107,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests.UsageExpectAndThrowTest.floatType":194,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":117,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":259,"org.easymock.samples.ExampleTest.voteAgainstRemoval":32,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":49,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":193,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests2.UsageConstraintsTest.testNotNull":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":252,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":50,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.UsageTest.defaultResetToNice":81,"org.easymock.tests2.MockBuilderTest.testCreateMock":105,"org.easymock.samples.ExampleTest.voteAgainstRemovals":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":291,"org.easymock.tests.UsageVarargTest.differentLength":236,"org.easymock.tests2.CallbackTest.callback":126,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":201,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":91,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":138,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":17,"org.easymock.tests.UsageCallCountTest.tooFewCalls":181,"org.easymock.tests.UsageOverloadedMethodTest.overloading":229,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":112,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":146,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":224,"org.easymock.tests.UsageThrowableTest.throwCheckedException":249,"org.easymock.tests.MockClassControlTest.testEquals":326,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":265,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":71,"org.easymock.tests2.CaptureTest.testCaptureAll":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":275,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":111,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.UsageConstraintsTest.testMatches":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":113,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":22,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.tests.ObjectMethodsTest.testHashCode":359,"org.easymock.samples.ExampleTest.voteForRemovals":34,"org.easymock.tests2.NameTest.nameForNiceMock":338,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":137,"org.easymock.tests.UsageVarargTest.allKinds":19,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":242,"org.easymock.tests2.DependencyTest.testInterfaceMocking":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":365,"org.easymock.samples.BasicClassMockTest.testPrintContent":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":190,"org.easymock.samples.ExampleTest.addDocument":33,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":251,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests2.AnswerTest.stubAnswer":21,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":272,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":357,"org.easymock.tests.UsageVarargTest.varargLongAccepted":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":20,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":302,"org.easymock.samples.ExampleTest.voteForRemoval":31,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":294,"org.easymock.tests.UsageExpectAndReturnTest.floatType":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":108,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":139,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":63,"org.easymock.tests2.SerializationTest.test":119,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":311,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":88,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":277,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.samples.SupportTest.addDocument":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.CaptureTest.testCaptureFirst":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":89,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests.GenericTest.testPackageScope":264,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":136,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":106,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":240,"org.easymock.tests.GenericTest.testBridgedEquals":330,"org.easymock.tests2.NameTest.nameForMock":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":185,"org.easymock.tests.UsageExpectAndReturnTest.longType":279,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":210,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":208,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":186,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":206,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":180,"org.easymock.tests2.MockedExceptionTest.testRealException":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":197,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":56,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":355,"org.easymock.tests2.NameTest.nameForStrictMock":337,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":305,"org.easymock.tests2.UsageConstraintsTest.testContains":145,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":52,"org.easymock.tests2.UsageConstraintsTest.testFind":140,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":160,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":306,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":300,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":100,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":364,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":235,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":360,"org.easymock.tests.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":366,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":87,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":368,"org.easymock.tests.UsageRangeTest.combination":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":292,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.UsageTest.wrongArguments":215,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":162,"org.easymock.tests.MockClassControlTest.testHashCode":325,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests2.EasyMockSupportTest.testVerify":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":301,"org.easymock.tests.UsageVarargTest.varargShortAccepted":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":69,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":184,"org.easymock.tests2.UsageConstraintsTest.cmpTo":144,"org.easymock.tests.UsageVarargTest.varargCharAccepted":234,"org.easymock.tests2.CaptureTest.testCaptureMultiple":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests.DefaultClassInstantiatorTest.object":297,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":97,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":316,"org.easymock.tests.UsageTest.unexpectedCallWithArray":214,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":358,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":248,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":324,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":48,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":198,"org.easymock.samples.ExampleTest.addAndChangeDocument":35,"org.easymock.tests.CapturesMatcherTest.test":266,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":38,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":188,"org.easymock.tests2.UsageTest.resumeIfFailure":84,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":260,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":261,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":307,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":92}}]
