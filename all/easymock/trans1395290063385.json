[{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:79","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[22,23],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[24,21,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[49,50,51,29,52,53,30,54,31,32,55,56,57,58,59,33,34,35,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,36,37,38,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,39,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,22,187,47,48,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,9,40,41,42,43,210,211,212,11,14,15,213,214,215,216,21,25,26,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,44,45,46,233,234],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[235,236,194,196,237,238,239,240,241,242,243,4,244,245,246,247,248,249,250,251,252,5,253,254,255,256,257,6,258,259,260,261,262,263,264,265,266,267,21,220,268],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[269,270,49,50,51,0,1,52,271,57,272,273,274,275,105,129,130,2,276,277,3,235,235,236,236,278,193,194,279,195,196,241,4,5,6,203,280,205,206,207,7,208,209,8,9,281,10,11,12,13,14,15,16,17,18,19,20,215,21,26,220],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[282,283,284,285,34,35,286,287,288,289,290,291,292,293,294],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[295,296,297,298,299,269,300,301,270,302,303,304,305,306,29,282,283,307,308,284,285,309,310,311,312,0,313,314,1,315,316,52,53,317,30,54,31,32,55,56,318,319,320,321,322,323,324,271,57,272,273,274,275,325,326,327,328,329,330,331,332,333,334,335,336,58,59,337,338,339,340,341,33,34,35,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,342,343,344,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,345,346,347,348,349,350,351,352,100,101,102,103,104,353,354,105,355,106,107,108,109,110,111,356,112,113,114,115,116,117,118,119,120,121,122,123,357,358,359,360,361,124,287,362,125,126,288,363,127,289,36,364,290,37,38,128,27,129,130,2,28,131,132,133,365,134,135,366,136,137,138,139,140,141,142,143,144,145,146,367,368,147,148,149,150,151,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,276,277,408,409,152,153,154,155,156,157,410,158,3,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,159,426,160,161,427,428,162,163,164,429,165,39,291,166,167,430,431,168,292,293,169,432,170,171,172,173,433,174,175,176,177,178,179,434,180,181,182,183,184,185,186,22,187,47,48,188,435,189,190,191,192,278,193,279,436,237,238,239,241,243,4,244,245,248,251,5,253,254,255,256,257,6,197,198,199,200,437,438,439,440,441,442,443,444,445,446,447,448,201,202,203,280,204,205,206,207,7,449,208,450,209,8,9,281,451,10,452,40,41,42,43,453,454,455,456,457,458,459,460,461,462,463,464,465,210,211,466,467,212,11,12,13,468,14,15,16,17,18,19,20,213,214,215,216,25,26,217,218,469,470,219,471,221,222,223,224,472,225,226,227,228,229,230,473,474,231,475,232,44,476,294,45,46,477,478,233,479,234,480,481,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[29,33,34,35,344,124,36,37,38,39,44,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[306,308,317,336,59,337,338,339,340,341,34,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,106,107,108,109,110,111,113,360,367,368,429,431,202,213,214,215,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[485,486,487],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[282,283,284,285,34,35,286,287,288,289,290,291,292,293,294],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[368,384,391,395,201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[27,28],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[27],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[24,21,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[434,180],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[24,21,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[489,490,289,491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[493,221,223,224,472,225,226,227,229,494,230,473,231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[282,283,284,285,34,35,286,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[29,282,283,284,285,33,34,35,489,485,490,495,496,497,286,342,343,358,361,124,287,288,289,36,290,37,39,291,292,293,186,498,491,499,486,487,500,501,502,492,503,504,44,294,45],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[295,296,297,298,299,269,300,301,270,49,50,302,51,303,304,305,306,29,282,283,307,308,284,285,309,310,311,312,0,505,506,313,314,1,315,316,52,53,317,30,54,31,32,55,56,318,319,320,321,322,323,324,271,57,272,273,274,275,325,326,327,328,329,330,331,332,333,334,335,336,58,59,337,338,339,340,341,33,34,35,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,507,342,343,344,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,345,346,347,348,349,350,351,352,100,101,102,103,104,353,354,105,355,106,107,108,109,110,111,356,112,113,114,115,116,117,118,119,120,121,122,123,357,358,359,360,361,124,287,362,125,126,288,363,127,289,36,364,290,37,38,128,27,129,130,2,28,131,132,133,365,134,135,366,136,137,138,139,140,141,142,143,144,145,146,367,368,147,148,149,150,151,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,276,277,408,409,152,153,154,155,156,157,410,158,3,411,235,236,412,413,414,415,416,417,418,419,420,421,422,423,424,425,159,426,160,161,427,428,162,163,164,429,165,39,291,166,167,430,431,168,292,293,169,432,170,171,172,173,433,174,175,176,177,178,179,434,180,181,182,183,184,185,186,22,187,47,48,188,435,189,190,191,192,278,193,194,279,508,436,195,196,237,238,239,240,241,242,243,4,244,245,246,247,248,249,250,251,252,5,253,254,255,256,257,6,258,259,197,198,199,200,437,438,439,440,441,442,443,444,445,446,447,448,201,202,203,280,204,205,206,207,7,449,208,509,450,209,8,9,281,451,10,452,40,41,42,43,453,454,455,456,457,458,459,460,461,462,463,464,465,210,211,466,467,212,11,262,12,13,263,468,14,15,16,264,17,510,265,18,19,267,20,213,214,215,216,21,25,26,217,218,469,470,219,471,220,268,511,221,222,223,224,472,225,226,227,228,229,230,473,474,231,475,232,44,476,294,45,46,477,478,233,479,234,480,512,513,514,481,482,483],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[515,516,517,518,519,264,268],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:159","failures":[235,236,509,262,266,267],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[221,223,472,225,226,229,230,473,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[24,21,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[27,129,130,2,28],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[282,283,284,285,34,35,286,287,288,289,290,291,292,293,294],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":173,"org.easymock.tests2.UsageTest.argumentsOrdered":293,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":306,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":379,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":167,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":412,"org.easymock.tests2.DelegateToTest.testReturnException":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":107,"org.easymock.tests.MockingTest.testPartialClassMocking":49,"org.easymock.tests.MockClassControlTest.testToString":272,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":452,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":247,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":60,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":479,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":145,"org.easymock.tests2.UsageTest.wrongArguments":291,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":143,"org.easymock.samples.ExampleTest.answerVsDelegate":153,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.UsageConstraintsTest.testNull":175,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":205,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":422,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":326,"org.easymock.tests2.CaptureTest.testPrimitive":224,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":147,"org.easymock.tests.UsageTest.moreThanOneArgument":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":79,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":121,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":348,"org.easymock.tests.UsageVarargTest.varargIntAccepted":133,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":519,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":513,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":104,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":487,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":458,"org.easymock.tests.ReplayStateInvalidUsageTest.times":401,"org.easymock.tests2.DependencyTest.testClassMocking":477,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":200,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":506,"org.easymock.tests2.CaptureTest.testAnd":221,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":150,"org.easymock.tests2.DelegateToTest.testDelegate":212,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":75,"org.easymock.tests.LimitationsTest.mockFinalMethod":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":118,"org.easymock.tests2.DependencyTest.testClassMockingSupport":478,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":472,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":198,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":395,"org.easymock.tests.UsageThrowableTest.throwError":336,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":314,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":507,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":123,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":259,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":396,"org.easymock.tests.MockingTest.testInterfaceMocking":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":101,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":346,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":248,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":14,"org.easymock.tests2.MockBuilderTest.testCreateMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":69,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":418,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":505,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":407,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":141,"org.easymock.tests.UsageOverloadedMethodTest.overloading":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":184,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":91,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":356,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":183,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":229,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":365,"org.easymock.tests2.EasyMockSupportClassTest.testAll":241,"org.easymock.tests.MockClassControlTest.testEquals":325,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":130,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":199,"org.easymock.tests2.CaptureTest.testCaptureAll":222,"org.easymock.tests.MockNameTest.defaultName":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":185,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":122,"org.easymock.samples.ExampleTest.voteForRemovals":157,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":488,"org.easymock.tests.UsageVarargTest.allKinds":140,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":117,"org.easymock.samples.BasicClassMockTest.testPrintContent":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":340,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":475,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":111,"org.easymock.tests2.UsageConstraintsTest.greaterThan":22,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":149,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":281,"org.easymock.samples.ExampleTest.voteForRemoval":154,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":514,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":7,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":429,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":415,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":106,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":465,"org.easymock.tests2.CaptureTest.testCaptureFirst":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":416,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":432,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":87,"org.easymock.tests2.CaptureTest.testCapture2_2446744":474,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":470,"org.easymock.tests2.UsageTest.moreThanOneArgument":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":387,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":19,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":139,"org.easymock.tests.GenericTest.testBridgedEquals":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":319,"org.easymock.tests.UsageExpectAndReturnTest.longType":83,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":78,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":435,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":311,"org.easymock.tests.UsageCallCountTest.tooManyCalls":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":485,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":339,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":193,"org.easymock.tests.MockingTest.testNiceClassMocking":305,"org.easymock.tests.MockingTest.testClassMocking":301,"org.easymock.tests2.UsageConstraintsTest.testContains":182,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":215,"org.easymock.tests2.UsageConstraintsTest.testFind":174,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":113,"org.easymock.tests.MockTypeTest.fromEasyMockClass":313,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":160,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":363,"org.easymock.tests.UsageExpectAndReturnTest.object":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":516,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":135,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":298,"org.easymock.tests.UsageTest.exactCallCountByLastCall":309,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":322,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":497,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":268,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":438,"org.easymock.tests.MockClassControlTest.testHashCode":275,"org.easymock.tests2.EasyMockSupportTest.testVerify":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":250,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":486,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":406,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":197,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":471,"org.easymock.tests.UsageVarargTest.varargCharAccepted":134,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":327,"org.easymock.tests2.CaptureTest.testCaptureMultiple":493,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":392,"org.easymock.tests2.UsageTest.openCallCountByLastCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":424,"org.easymock.tests.DefaultClassInstantiatorTest.object":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":405,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":296,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":8,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":310,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":6,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":273,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":512,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":109,"org.easymock.tests2.StubTest.stubWithReturnValue":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":264,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":89,"org.easymock.tests2.SerializationTest.testAllMockedMethod":26,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":385,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":492,"org.easymock.samples.SupportTest.voteForRemovals":409,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":72,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":391,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":427,"org.easymock.tests.UsageExpectAndThrowTest.object":70,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":324,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":48,"org.easymock.tests2.DelegateToTest.testWrongClass":466,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":235,"org.easymock.tests.UsageStrictMockTest.range":290,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":482,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":16,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":238,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":142,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":489,"org.easymock.tests2.CaptureTest.testCaptureNone":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":347,"org.easymock.tests.UsageUnorderedTest.message":288,"org.easymock.tests.UsageVerifyTest.twoReturns":35,"org.easymock.tests.UsageVarargTest.varargByteAccepted":138,"org.easymock.tests2.ThreadingTest.testThreadSafe":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":253,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":56,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":276,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":299,"org.easymock.tests2.CaptureTest.testCapture_2617107":223,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":504,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":368,"org.easymock.tests2.UsageConstraintsTest.any":180,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":400,"org.easymock.tests2.StubTest.stub":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":108,"org.easymock.tests.UsageExpectAndThrowTest.longType":63,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":399,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":476,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":442,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests.LimitationsTest.mockNativeMethod":105,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":2,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests2.NameTest.nameForMocksControl":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockedExceptionTest.testMockedException":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":243,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":426,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":64,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":203,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":50,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":188,"org.easymock.tests.MockingTest.testTwoMocks":270,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":68,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":292,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":191,"org.easymock.samples.ExampleTest.removeNonExistingDocument":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":397,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":439,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":330,"org.easymock.tests2.ConstraintsToStringTest.andToString":502,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":469,"org.easymock.tests2.MockBuilderTest.testCreateMockString":20,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":271,"org.easymock.tests.UsageExpectAndThrowTest.floatType":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":244,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":240,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":511,"org.easymock.tests.UsageVerifyTest.twoThrows":34,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":5,"org.easymock.samples.ExampleTest.voteAgainstRemoval":155,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":9,"org.easymock.tests.LimitationsTest.privateConstructor":354,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":261,"org.easymock.tests2.UsageConstraintsTest.testNotNull":190,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":341,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":152,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":366,"org.easymock.tests2.CallbackTest.callback":234,"org.easymock.tests2.UsageConstraintsTest.equals":433,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":509,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":495,"org.easymock.tests.UsageTest.openCallCountByLastCall":307,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":367,"org.easymock.tests.UsageCallCountTest.tooFewCalls":32,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":144,"org.easymock.tests.UsageThrowableTest.throwCheckedException":338,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":490,"org.easymock.tests.MockingTest.testStrictClassMocking":300,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":195,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":194,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":436,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests.ObjectMethodsTest.testHashCode":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":518,"org.easymock.tests2.NameTest.nameForNiceMock":42,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":219,"org.easymock.tests2.DependencyTest.testInterfaceMocking":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":517,"org.easymock.samples.ExampleTest.addDocument":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":254,"org.easymock.tests2.DelegateToTest.testStubDelegate":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":258,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":36,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":510,"org.easymock.tests.UsageVarargTest.varargLongAccepted":137,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":220,"org.easymock.tests2.ConstraintsToStringTest.orToString":498,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":446,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":187,"org.easymock.tests.UsageThrowableTest.noUpperLimit":58,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":480,"org.easymock.tests2.SerializationTest.test":25,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":329,"org.easymock.tests2.UsageConstraintsTest.testSame":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":81,"org.easymock.samples.SupportTest.addDocument":408,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":508,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":245,"org.easymock.tests.GenericTest.testPackageScope":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":445,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":303,"org.easymock.tests2.NameTest.nameForMock":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":267,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":74,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":151,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":496,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":382,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":146,"org.easymock.tests2.NameTest.nameForStrictMock":41,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":468,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":206,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":481,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":331,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":294,"org.easymock.tests2.UsageConstraintsTest.lessThan":192,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":377,"org.easymock.tests2.CaptureTest.testCaptureRightOne":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":249,"org.easymock.tests2.UsageConstraintsTest.testOr":177,"org.easymock.tests.UsageRangeTest.combination":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":280,"org.easymock.tests.UsageTest.wrongArguments":283,"org.easymock.tests2.MockBuilderTest.testWithConstructor":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":246,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":370,"org.easymock.tests.UsageVarargTest.varargShortAccepted":136,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":333,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":318,"org.easymock.tests2.UsageConstraintsTest.cmpTo":181,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":372,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":431,"org.easymock.tests2.CaptureTest.testCaptureFromStub":473,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":394,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":13,"org.easymock.tests.UsageTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":55,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":94,"org.easymock.tests2.CaptureTest.testCapture":494,"org.easymock.tests2.UsageConstraintsTest.constraints":172,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":364,"org.easymock.samples.ExampleTest.addAndChangeDocument":158,"org.easymock.tests2.ConstraintsToStringTest.notToString":499,"org.easymock.tests.UsageStrictMockTest.testVerify":128,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":411,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":115,"org.easymock.tests2.CompareToTest.testGreateThan":23,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":86,"org.easymock.tests.LimitationsTest.abstractClass":353,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":132}}]
