[{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"bridgeMethod","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[38,39,40,41,42,43,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[5,60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,18,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[76,46,47,48,77,78,79,80,52,81,54,55,56,57,82,83,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[85,86,49,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:190","failures":[63,100,101,102,103,104,45,105,106,107,76,108,109,110,111,112,113,114,115,116,117,118,119,120,4,5,121,6,122,7,8,123,124,125,126,127,128,129,130,131,132,133,134,135,136,9,137,138,10,11,139,85,13,14,140,15,141,86,16,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,40,158,159,160,161,162,163,164,165,166,167,168,169,51,170,53,171,88,81,172,173,174,175,176,17,177,178,179,180,90,181,182,183,91,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[154,155,199,200],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[201,202,203,204,156,205,206,207],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[4,8,10,12,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[208,209,210,211,212,213,214,154,157,215,216,217,218,219,161,220,3,221],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[222,11,86,16,223],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[224],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[225,226,157,160,161],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests2.UsageTest.argumentsOrdered":48,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":69,"org.easymock.tests2.StubTest.stubWithReturnValue":114,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":136,"org.easymock.tests2.SerializationTest.testAllMockedMethod":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":67,"org.easymock.tests.MockingTest.testPartialClassMocking":42,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":79,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":3,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":220,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":200,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":213,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":134,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":123,"org.easymock.tests2.UsageTest.wrongArguments":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":209,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":29,"org.easymock.samples.ExampleTest.answerVsDelegate":201,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":149,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":151,"org.easymock.tests2.CaptureTest.testPrimitive":139,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":197,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":82,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":195,"org.easymock.tests2.CaptureTest.testCaptureNone":14,"org.easymock.tests.UsageUnorderedTest.message":49,"org.easymock.tests.UsageVerifyTest.twoReturns":51,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests.UsageTest.argumentsOrdered":57,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":19,"org.easymock.tests2.UsageConstraintsTest.any":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":68,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests2.SerializationTest.testClass":154,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":93,"org.easymock.tests2.AnswerTest.answer":156,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":60,"org.easymock.tests2.CaptureTest.testAnd":10,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests2.UsageTest.strictResetToDefault":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests2.MockedExceptionTest.testMockedException":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":167,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":23,"org.easymock.tests2.CaptureTest.testCaptureLast":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":70,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":224,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":96,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":137,"org.easymock.tests.UsageThrowableTest.throwError":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":27,"org.easymock.tests.UsageStrictMockTest.differentMethods":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":32,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":117,"org.easymock.tests2.MockBuilderTest.testCreateMockString":218,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":198,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":130,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":205,"org.easymock.tests.UsageVerifyTest.twoThrows":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":214,"org.easymock.samples.PartialClassMockTest.testGetArea":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":194,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":94,"org.easymock.tests2.UsageTest.niceToStrict":108,"org.easymock.tests2.UsageConstraintsTest.testNotNull":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":192,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":37,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.MockBuilderTest.testCreateMock":217,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":172,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":77,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageOverloadedMethodTest.overloading":163,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":182,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":127,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":140,"org.easymock.tests.UsageThrowableTest.throwCheckedException":189,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":83,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":97,"org.easymock.tests2.CaptureTest.testCaptureAll":11,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":38,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":99,"org.easymock.tests2.UsageConstraintsTest.testMatches":129,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":206,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":118,"org.easymock.tests.UsageVarargTest.allKinds":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":169,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":34,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":170,"org.easymock.tests2.UsageConstraintsTest.greaterThan":131,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":166,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":162,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":211,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":210,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":132,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":120,"org.easymock.tests2.SerializationTest.test":155,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":144,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":89,"org.easymock.tests2.UsageConstraintsTest.testSame":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":66,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":145,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":90,"org.easymock.tests2.CaptureTest.testCapture2_2446744":86,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":87,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":35,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":183,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":193,"org.easymock.tests2.UsageStrictMockTest.differentMethods":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":74,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":2,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":168,"org.easymock.tests2.MockedExceptionTest.testRealException":64,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":190,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":226,"org.easymock.tests2.UsageConstraintsTest.testContains":126,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":121,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":204,"org.easymock.tests.UsageExpectAndReturnTest.object":181,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":159,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":33,"org.easymock.tests.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":225,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":185,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":143,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":84,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":212,"org.easymock.tests.UsageRangeTest.combination":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.UsageTest.wrongArguments":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":31,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":91,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":0,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":207,"org.easymock.tests2.UsageConstraintsTest.cmpTo":125,"org.easymock.tests2.CaptureTest.testCaptureMultiple":222,"org.easymock.tests2.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":153,"org.easymock.tests2.CaptureTest.testCaptureFromStub":141,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":95,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":188,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":184,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":160,"org.easymock.tests.CapturesMatcherTest.test":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":92,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":73,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":22,"org.easymock.tests2.UsageTest.resumeIfFailure":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":148}}]
