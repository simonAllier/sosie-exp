[{"position":"org.easymock.internal.RecordState:126","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,0,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,1,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,2,424,3,425,4,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:53","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[503],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[504,505,506,507,508,352,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[510,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,12,42,44,46,47,48,49,50,51,52,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,111,112,113,114,115,116,117,118,119,136,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,0,160,162,175,176,177,178,185,189,190,192,196,197,198,199,200,201,203,204,215,216,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,267,268,269,270,271,272,1,273,274,276,278,279,279,280,280,281,287,293,302,303,304,306,307,308,309,310,311,312,319,320,321,322,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,354,359,362,364,365,369,370,374,377,387,393,396,397,398,399,400,401,404,407,408,409,410,413,414,415,416,417,418,419,421,423,2,424,3,425,4,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,459,466,467,468,470,471,472,473,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[5,6,12,13,14,15,16,17,18,42,43,46,47,48,49,50,51,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,147,148,149,150,151,152,153,154,155,156,157,158,0,160,163,164,165,166,168,169,170,171,172,173,174,175,189,190,192,196,197,198,199,200,201,215,216,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,267,268,269,270,271,272,1,273,274,275,276,278,279,280,281,282,283,284,285,286,287,293,302,303,304,305,306,307,308,309,310,311,312,319,320,321,322,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,358,359,362,363,364,365,368,369,370,374,377,387,393,396,397,398,399,400,401,402,404,407,408,409,410,413,416,417,418,419,421,2,424,3,4,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,459,466,467,468,469,470,471,472,473,475,476,477,478,479,480,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"invocation"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[365],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[332,445],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[513,504,505,506,507,508,514,352,509,499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,0,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,1,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,515,516,517,518,422,519,423,2,424,3,425,4,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[5,46,47,50,71,148,149,150,151,152,215,216,267,268,269,270,271,279,279,280,280,306,437,470,471,475,476,477,478,484,486,487,489,490,496,497,498],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[426,428,436,472,473,476,478,479,481,491,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[133,413,419,421,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,12,13,14,15,17,18,42,43,44,46,47,48,49,50,51,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,111,112,114,115,116,117,118,119,136,142,144,145,146,147,148,149,150,151,152,158,159,0,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,185,189,190,192,196,197,198,199,200,201,203,204,215,216,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,267,268,269,270,271,272,1,273,274,275,276,278,279,279,280,280,281,282,283,284,285,286,287,293,302,303,304,305,306,307,308,309,310,311,312,319,320,321,322,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,354,355,356,357,359,362,364,365,369,374,377,387,393,396,397,398,399,400,401,404,408,409,410,413,414,415,416,417,418,419,421,423,2,424,3,425,4,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,459,470,471,472,473,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[71,74,75,107,112,162,233,237,238,240,243,253,254,255,306,309,310,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[81,82,254],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[414,415],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[5,6,10,11,12,13,14,15,16,17,18,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,111,112,113,114,115,116,117,118,119,147,148,149,150,151,152,153,154,155,156,157,158,159,0,160,162,163,164,165,166,168,169,170,171,172,173,174,175,180,181,182,189,190,192,196,197,198,199,200,201,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,267,268,269,270,271,272,1,273,274,275,276,277,278,279,279,280,280,281,282,283,284,285,286,287,293,302,303,304,305,306,307,308,309,310,311,312,319,320,321,322,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,354,355,356,357,358,359,362,363,364,365,368,369,370,374,377,387,393,396,397,398,399,400,401,402,404,407,408,409,410,413,416,417,418,419,421,2,424,3,4,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,459,466,467,468,469,470,471,472,473,475,476,477,478,479,480,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[77,79,80,81,82,83,84,111,116,160,200,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,254,312,328,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[109,129,131,140,141,143,176,177,178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[332],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,41,42,43,44,45,520,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,0,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,521,260,261,262,263,264,265,522,266,267,268,269,270,271,272,1,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,523,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,524,353,354,355,356,357,358,525,359,360,526,361,362,363,364,509,365,366,367,368,369,527,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,2,424,3,425,4,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[158,0,413,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[504,505,506,507,508,352,509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[51,70,71,73,74,112,114,117,118,528,529,530,253,254,255,306,308,309,330,331,337,338,354,355,356,357],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[346,403,519],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[485],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[510,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[5,46,47,50,71,148,149,150,151,152,215,216,267,268,269,270,271,279,280,306,312,437,470,471,475,476,477,478,484,486,487,489,490,496,497,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[5,6,12,13,14,15,16,17,18,42,43,46,47,48,49,50,51,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,147,148,149,150,151,152,153,154,155,156,157,158,0,160,163,164,165,166,168,169,170,171,172,173,174,175,189,190,192,196,197,198,199,200,201,215,216,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,267,268,269,270,271,272,1,273,274,275,276,278,279,280,281,282,283,284,285,286,287,293,302,303,304,305,306,307,308,309,310,311,312,319,320,321,322,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,358,359,362,363,364,365,368,369,370,374,377,387,393,396,397,398,399,400,401,402,404,407,408,409,410,413,416,417,418,419,421,2,424,3,4,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,459,466,467,468,469,470,471,472,473,475,476,477,478,479,480,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[279,280,351,352,525,526,509,367,531,527,532,533,534,405,499],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[359,369,377,408,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[513,507,508,533,534],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":473,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.UsageTest.argumentsOrdered":338,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":130,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":333,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":282,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":197,"org.easymock.tests.MockingTest.testPartialClassMocking":189,"org.easymock.tests.MockClassControlTest.testToString":220,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":377,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":528,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":303,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":504,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":480,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":46,"org.easymock.tests2.UsageTest.wrongArguments":331,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":258,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":212,"org.easymock.tests2.UsageConstraintsTest.testNull":476,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":399,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":449,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":225,"org.easymock.tests2.CaptureTest.testPrimitive":429,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":50,"org.easymock.tests.UsageTest.moreThanOneArgument":112,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":269,"org.easymock.tests.UsageTest.argumentsOrdered":118,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":202,"org.easymock.tests.UsageVarargTest.varargIntAccepted":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":508,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":152,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":24,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":459,"org.easymock.tests.ReplayStateInvalidUsageTest.times":60,"org.easymock.tests2.DependencyTest.testClassMocking":300,"org.easymock.tests2.AnswerTest.answer":413,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":469,"org.easymock.tests2.CaptureTest.testAnd":426,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":209,"org.easymock.tests2.UsageTest.strictResetToDefault":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":526,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":444,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":206,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests.LimitationsTest.mockFinalMethod":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":157,"org.easymock.tests2.DependencyTest.testClassMockingSupport":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":105,"org.easymock.tests2.CaptureTest.testCapture1_2446744":430,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":467,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":54,"org.easymock.tests.UsageThrowableTest.throwError":77,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":211,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":520,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":271,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":532,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":395,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":27,"org.easymock.samples.PartialClassMockTest.testGetArea":281,"org.easymock.tests.MockingTest.testInterfaceMocking":191,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":177,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.UsageTest.niceToStrict":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":382,"org.easymock.tests2.ThreadingTest.testChangeDefault":346,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":120,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":362,"org.easymock.tests2.MockBuilderTest.testCreateMock":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":445,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":208,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":486,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":96,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":226,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":485,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":435,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":167,"org.easymock.tests.MockClassControlTest.testEquals":224,"org.easymock.tests2.EasyMockSupportClassTest.testAll":374,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":468,"org.easymock.tests2.CaptureTest.testCaptureAll":427,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":155,"org.easymock.tests.MockNameTest.defaultName":217,"org.easymock.tests2.UsageConstraintsTest.testMatches":487,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":270,"org.easymock.samples.ExampleTest.voteForRemovals":276,"org.easymock.tests.UsageVarargTest.allKinds":175,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":83,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":295,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":522,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":514,"org.easymock.tests2.UsageConstraintsTest.greaterThan":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":410,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":266,"org.easymock.samples.ExampleTest.voteForRemoval":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":411,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":213,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":523,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":402,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":20,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":147,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":328,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":442,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":196,"org.easymock.tests2.CaptureTest.testCaptureFirst":439,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":443,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":340,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":92,"org.easymock.tests2.CaptureTest.testCapture2_2446744":438,"org.easymock.tests2.UsageTest.moreThanOneArgument":330,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":138,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":369,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":174,"org.easymock.tests.GenericTest.testBridgedEquals":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":17,"org.easymock.tests.UsageExpectAndReturnTest.longType":88,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":494,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":267,"org.easymock.tests.UsageCallCountTest.tooManyCalls":18,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":82,"org.easymock.tests.MockingTest.testNiceClassMocking":195,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":320,"org.easymock.tests.MockingTest.testClassMocking":187,"org.easymock.tests2.UsageConstraintsTest.testContains":484,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":11,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":343,"org.easymock.tests2.UsageConstraintsTest.testFind":475,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":228,"org.easymock.tests.MockTypeTest.fromEasyMockClass":210,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":421,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":68,"org.easymock.tests.UsageExpectAndReturnTest.object":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":503,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":505,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":169,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":182,"org.easymock.tests.UsageTest.exactCallCountByLastCall":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":108,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":352,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":101,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":0,"org.easymock.tests.MockClassControlTest.testHashCode":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":289,"org.easymock.tests2.EasyMockSupportTest.testVerify":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":384,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":466,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":453,"org.easymock.tests.UsageVarargTest.varargCharAccepted":168,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":521,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":143,"org.easymock.tests2.UsageTest.openCallCountByLastCall":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":510,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":451,"org.easymock.tests.DefaultClassInstantiatorTest.object":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":7,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":288,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":408,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":26,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":102,"org.easymock.tests.ReplayStateInvalidCallsTest.times":32,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":144,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":393,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":221,"org.easymock.tests2.UsageTest.resumeIfFailure":339,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":199,"org.easymock.tests2.StubTest.stubWithReturnValue":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":509,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":94,"org.easymock.tests2.SerializationTest.testAllMockedMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":136,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":534,"org.easymock.samples.SupportTest.voteForRemovals":287,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":142,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":414,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":110,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":492,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":30,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":216,"org.easymock.tests.UsageStrictMockTest.range":73,"org.easymock.samples.ConstructorCalledMockTest.testTax":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":317,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":447,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":364,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":257,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":22,"org.easymock.tests2.CaptureTest.testCaptureNone":434,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":178,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":516,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":255,"org.easymock.tests.UsageVarargTest.varargByteAccepted":173,"org.easymock.tests2.ThreadingTest.testThreadSafe":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":388,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":15,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":183,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":428,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":49,"org.easymock.tests2.UsageConstraintsTest.any":482,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":59,"org.easymock.tests2.StubTest.stub":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":264,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":58,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests2.SerializationTest.testClass":499,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":104,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":38,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":517,"org.easymock.tests2.NameTest.nameForMocksControl":357,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests2.MockedExceptionTest.testMockedException":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":376,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":116,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":420,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":396,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":365,"org.easymock.tests.MockingTest.testNicePartialClassMocking":190,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":401,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":513,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests2.CaptureTest.testCaptureLast":433,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":106,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":479,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":326,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":493,"org.easymock.tests.MockingTest.testTwoMocks":188,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":34,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":337,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":497,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":519,"org.easymock.samples.ExampleTest.removeNonExistingDocument":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":56,"org.easymock.tests.UsageStrictMockTest.differentMethods":74,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":290,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":422,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":262,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":348,"org.easymock.tests2.MockBuilderTest.testCreateMockString":370,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":218,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":524,"org.easymock.tests.UsageVerifyTest.twoThrows":254,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":387,"org.easymock.samples.ExampleTest.voteAgainstRemoval":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":131,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":409,"org.easymock.tests.LimitationsTest.privateConstructor":65,"org.easymock.tests2.UsageConstraintsTest.testNotNull":496,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":84,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":341,"org.easymock.tests2.UsageTest.defaultResetToNice":336,"org.easymock.samples.ExampleTest.voteAgainstRemovals":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.UsageVarargTest.differentLength":170,"org.easymock.tests2.CallbackTest.callback":502,"org.easymock.tests2.UsageConstraintsTest.equals":474,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":405,"org.easymock.tests.UsageTest.openCallCountByLastCall":115,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":48,"org.easymock.tests.UsageCallCountTest.tooFewCalls":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":259,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":518,"org.easymock.tests.UsageThrowableTest.throwCheckedException":81,"org.easymock.tests.MockingTest.testStrictClassMocking":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":324,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":418,"org.easymock.tests.ObjectMethodsTest.testHashCode":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":507,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":36,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":350,"org.easymock.tests2.NameTest.nameForNiceMock":356,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":31,"org.easymock.tests2.DependencyTest.testInterfaceMocking":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":506,"org.easymock.samples.ExampleTest.addDocument":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":389,"org.easymock.tests2.DelegateToTest.testStubDelegate":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.AnswerTest.stubAnswer":417,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":71,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":366,"org.easymock.tests.UsageVarargTest.varargLongAccepted":172,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":103,"org.easymock.tests.UsageExpectAndReturnTest.floatType":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":351,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":280,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":490,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageThrowableTest.noUpperLimit":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":297,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":471,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":313,"org.easymock.tests2.SerializationTest.test":500,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":431,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":261,"org.easymock.tests2.UsageConstraintsTest.testSame":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":86,"org.easymock.samples.SupportTest.addDocument":286,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":323,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":21,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":379,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":124,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":296,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":193,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":19,"org.easymock.tests2.NameTest.nameForMock":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":527,"org.easymock.tests2.UsageStrictMockTest.differentMethods":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests2.MockedExceptionTest.testRealException":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":533,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":133,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":47,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":63,"org.easymock.tests2.NameTest.nameForStrictMock":355,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":511,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":419,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":316,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":529,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":491,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":263,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":359,"org.easymock.tests2.UsageStrictMockTest.range":308,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":292,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":128,"org.easymock.tests2.CaptureTest.testCaptureRightOne":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":383,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":515,"org.easymock.tests2.UsageConstraintsTest.testOr":478,"org.easymock.tests.UsageRangeTest.combination":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":397,"org.easymock.tests.UsageTest.wrongArguments":114,"org.easymock.tests2.MockBuilderTest.testWithConstructor":525,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":380,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":98,"org.easymock.tests.UsageVarargTest.varargShortAccepted":171,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":265,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":16,"org.easymock.tests2.UsageConstraintsTest.cmpTo":483,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":39,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":415,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":123,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":335,"org.easymock.tests2.CaptureTest.testCaptureFromStub":437,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":53,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":360,"org.easymock.tests.UsageTest.unexpectedCallWithArray":113,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":35,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":70,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":14,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":531,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":99,"org.easymock.tests2.UsageConstraintsTest.constraints":472,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":72,"org.easymock.samples.ExampleTest.addAndChangeDocument":278,"org.easymock.tests.UsageStrictMockTest.testVerify":76,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":283,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":154,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":150,"org.easymock.tests.LimitationsTest.abstractClass":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":91,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":151,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":530,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":446,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":165}}]
