[{"position":"org.easymock.internal.RecordState:233","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[60,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[3,38,47,48,53,54,67,68,77,88,90,91,94,95,97,98,100,118,120,121,138,139,140,141,177,183,185,195,196,231,232,233,234,235,236,237,238,259,260,262,263,272,273,274,277,279,281,282,283,284],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[16,18,26,44,45,47,49,50,52,62,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[324,325,326],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[60,323],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[327,328,329,330,331,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[332,333,334,335],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[0,14,15,85,86,150,151],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[114,336,337,338],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:315","failures":[40,88,95,144,145,146,147,177,181,182,196,197,198,199,200,201,231,235,256,272,287,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[16,18,26,44,45,47,49,50,52,62,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[224,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[223,340,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[91,97,98,120,183,342,331,233,236,237,259,262,283,284,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[157,159,173,174,202,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:115","sourceCode":"final java.util.Stack<org.easymock.internal.Invocation> java.util.Stack<org.easymock.internal.Invocation> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[39,43,44,46,48,49,55,58,59,61,68,90,91,92,93,97,98,99,116,118,120,122,126,130,131,134,142,152,159,163,164,166,169,176,232,233,236,237,242,243,244,245,257,260,262,264,272,276,282,283,284,288,304,308,309,311,314],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[208,215,219,224,225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,344,107,345,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,346,347,348,349,143,144,145,146,147,350,148,149,351,150,151,352,152,353,153,354,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,231,232,331,233,234,235,236,237,238,355,356,357,358,359,239,240,241,242,244,245,360,361,362,363,246,247,248,249,250,255,256,257,258,259,260,261,262,263,264,266,267,269,270,271,272,276,277,278,279,364,280,281,282,283,284,285,286,287,343,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[14,15,365,366,367],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,11,12,14,14,15,15,30,32,41,368,369,370,70,71,72,73,75,76,371,372,373,84,374,375,85,376,377,378,379,380,381,382,383,384,86,385,386,387,388,389,87,390,391,101,102,104,105,106,344,107,365,392,345,108,109,110,393,394,395,144,145,146,350,396,148,397,398,149,351,150,151,399,352,152,400,353,401,402,403,404,405,406,407,408,409,410,411,184,412,413,414,415,416,417,418,419,420,421,422,423,239,240,241,424,425,266,267,268,426,269,427],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[428,17,27,28,429],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[30,31,32,430],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[17,23,24,29,45,47,49,50,62,67,195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[59,90,91,97,98,431,327,432,433,434,435,436,437,328,438,439,118,120,121,183,329,440,330,441,442,443,342,232,331,233,236,237,259,260,262,263,282,283,284,444,445,288,343,340,341],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[91,97,98,120,183,442,342,331,233,236,237,259,262,283,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[80,142,153,154,220],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[426],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[110],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,34,36,37,38,209,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[30,31,32,430],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,11,12,14,14,15,15,30,32,41,70,71,72,73,75,76,84,85,86,87,101,102,104,105,106,344,107,345,108,109,110,446,395,447,146,350,396,148,397,149,351,150,151,352,152,400,353,401,402,184,414,423,239,240,241,266,267,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[327,328,329,330,331,259],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[448],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[345],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,14,14,15,15,30,41,368,449,85,86,365,109,394,366,450,149,451,452,399,352,367,353,425,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[214],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":45,"org.easymock.tests2.UsageTest.argumentsOrdered":98,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":231,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":217,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":93,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":197,"org.easymock.tests.MockingTest.testPartialClassMocking":239,"org.easymock.tests.MockClassControlTest.testToString":415,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":300,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":51,"org.easymock.tests2.UsageTest.wrongArguments":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":362,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":402,"org.easymock.tests2.UsageConstraintsTest.testNull":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":134,"org.easymock.tests2.CaptureTest.testPrimitive":19,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":299,"org.easymock.tests.UsageTest.moreThanOneArgument":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":204,"org.easymock.tests.UsageTest.argumentsOrdered":237,"org.easymock.tests.UsageVarargTest.varargIntAccepted":187,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":250,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":434,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":83,"org.easymock.tests2.AnswerTest.answer":77,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":349,"org.easymock.tests2.CaptureTest.testAnd":16,"org.easymock.tests2.UsageTest.strictResetToDefault":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests2.DelegateToTest.testDelegate":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":315,"org.easymock.tests.LimitationsTest.mockFinalMethod":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":340,"org.easymock.tests2.CaptureTest.testCapture1_2446744":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":347,"org.easymock.tests.UsageThrowableTest.throwError":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":391,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":290,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":427,"org.easymock.tests2.UsageTest.niceToStrict":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":326,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.MockBuilderTest.testCreateMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":387,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":309,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":327,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":360,"org.easymock.tests.UsageOverloadedMethodTest.overloading":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":57,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":166,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":270,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":56,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":25,"org.easymock.tests.MockClassControlTest.testEquals":419,"org.easymock.tests2.EasyMockSupportClassTest.testAll":84,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":267,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":436,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":317,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":446,"org.easymock.tests2.CaptureTest.testCaptureAll":17,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":348,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":205,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":195,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":282,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":181,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":116,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":201,"org.easymock.tests2.UsageConstraintsTest.greaterThan":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":110,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":409,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":393,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":344,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":269,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":196,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":33,"org.easymock.tests2.CaptureTest.testCaptureFirst":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":162,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":114,"org.easymock.tests2.CaptureTest.testCapture2_2446744":28,"org.easymock.tests2.UsageTest.moreThanOneArgument":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":194,"org.easymock.tests.GenericTest.testBridgedEquals":426,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":280,"org.easymock.tests.UsageExpectAndReturnTest.longType":158,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":318,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":65,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageCallCountTest.tooManyCalls":281,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":440,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":180,"org.easymock.tests.MockingTest.testNiceClassMocking":424,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":71,"org.easymock.tests.MockingTest.testClassMocking":422,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":396,"org.easymock.tests2.UsageConstraintsTest.testContains":55,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":146,"org.easymock.tests2.UsageConstraintsTest.testFind":46,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":272,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":154,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":133,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":189,"org.easymock.tests.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":273,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":336,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":443,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":368,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":171,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests.MockClassControlTest.testHashCode":418,"org.easymock.tests2.EasyMockSupportTest.testVerify":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":382,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":433,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":346,"org.easymock.tests.UsageVarargTest.varargCharAccepted":188,"org.easymock.tests2.CaptureTest.testCaptureMultiple":428,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":230,"org.easymock.tests2.UsageTest.openCallCountByLastCall":94,"org.easymock.tests.DefaultClassInstantiatorTest.object":403,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":292,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":383,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":178,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":417,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":306,"org.easymock.tests.CapturesMatcherTest.test":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":435,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":87,"org.easymock.tests2.UsageTest.resumeIfFailure":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":199,"org.easymock.tests2.StubTest.stubWithReturnValue":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":66,"org.easymock.tests2.SerializationTest.testAllMockedMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":223,"org.easymock.samples.SupportTest.voteForRemovals":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":328,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":312,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":430,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":229,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":78,"org.easymock.tests.UsageExpectAndThrowTest.object":310,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":337,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":63,"org.easymock.tests2.DelegateToTest.testWrongClass":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":320,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":321,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":262,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":311,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":150,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":361,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":329,"org.easymock.tests2.CaptureTest.testCaptureNone":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":291,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":333,"org.easymock.tests.UsageUnorderedTest.message":183,"org.easymock.tests.UsageVerifyTest.twoReturns":284,"org.easymock.tests.UsageVarargTest.varargByteAccepted":193,"org.easymock.tests2.ThreadingTest.testThreadSafe":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":385,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":279,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests2.CaptureTest.testCapture_2617107":18,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":298,"org.easymock.tests2.UsageConstraintsTest.any":53,"org.easymock.tests2.StubTest.stub":39,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":228,"org.easymock.tests.UsageExpectAndThrowTest.longType":303,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":268,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":447,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":122,"org.easymock.tests2.NameTest.nameForMocksControl":141,"org.easymock.tests2.MockedExceptionTest.testMockedException":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":375,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":304,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":354,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":151,"org.easymock.tests.MockingTest.testNicePartialClassMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.CaptureTest.testCaptureLast":23,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":341,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":76,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":64,"org.easymock.tests.MockingTest.testTwoMocks":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":308,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":68,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":335,"org.easymock.tests.UsageStrictMockTest.differentMethods":263,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":405,"org.easymock.tests2.ConstraintsToStringTest.andToString":437,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":113,"org.easymock.tests2.MockBuilderTest.testCreateMockString":353,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":413,"org.easymock.tests.UsageExpectAndThrowTest.floatType":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":449,"org.easymock.tests.UsageVerifyTest.twoThrows":283,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests.LimitationsTest.privateConstructor":411,"org.easymock.tests2.UsageConstraintsTest.testNotNull":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":182,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":144,"org.easymock.tests2.UsageTest.defaultResetToNice":96,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":219,"org.easymock.tests.UsageVarargTest.differentLength":190,"org.easymock.tests2.CallbackTest.callback":142,"org.easymock.tests2.UsageConstraintsTest.equals":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":441,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":365,"org.easymock.tests.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":297,"org.easymock.tests.UsageCallCountTest.tooFewCalls":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":363,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":334,"org.easymock.tests.UsageThrowableTest.throwCheckedException":179,"org.easymock.tests.MockingTest.testStrictClassMocking":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":330,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":75,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":74,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":82,"org.easymock.tests2.NameTest.nameForNiceMock":140,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":115,"org.easymock.tests2.DependencyTest.testInterfaceMocking":123,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.DelegateToTest.testStubDelegate":35,"org.easymock.tests2.AnswerTest.stubAnswer":81,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":260,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":452,"org.easymock.tests.UsageVarargTest.varargLongAccepted":192,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.tests2.ConstraintsToStringTest.orToString":431,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests.UsageThrowableTest.noUpperLimit":176,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":61,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":43,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":369,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":156,"org.easymock.tests2.UsageConstraintsTest.testSame":48,"org.easymock.samples.SupportTest.addDocument":9,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":377,"org.easymock.tests.GenericTest.testPackageScope":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.NameTest.nameForMock":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":167,"org.easymock.tests2.UsageStrictMockTest.differentMethods":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":392,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests2.MockedExceptionTest.testRealException":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":442,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":296,"org.easymock.tests2.NameTest.nameForStrictMock":139,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":153,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":325,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":406,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":148,"org.easymock.tests2.UsageStrictMockTest.range":120,"org.easymock.tests2.UsageConstraintsTest.lessThan":69,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":215,"org.easymock.tests2.CaptureTest.testCaptureRightOne":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":381,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":332,"org.easymock.tests2.UsageConstraintsTest.testOr":49,"org.easymock.tests.UsageRangeTest.combination":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":233,"org.easymock.tests2.MockBuilderTest.testWithConstructor":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":378,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":208,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":408,"org.easymock.tests.UsageVarargTest.varargShortAccepted":191,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":364,"org.easymock.tests2.UsageConstraintsTest.cmpTo":54,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":210,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.CaptureTest.testCaptureFromStub":27,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":397,"org.easymock.tests.UsageTest.unexpectedCallWithArray":331,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.constraints":44,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests2.ConstraintsToStringTest.notToString":432,"org.easymock.tests.UsageStrictMockTest.testVerify":265,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests2.CompareToTest.testGreateThan":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":22,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":248,"org.easymock.tests.LimitationsTest.abstractClass":410,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":249,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131}}]
