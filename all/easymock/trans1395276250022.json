[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,4,5,6,1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,37,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[129,130,131,132,133],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[134,135,136,137,138,139,140,141,142,3,143],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[144],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"message"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[145,146,147,148,149,150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ZERO_OR_MORE"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[0,6,20,21,37,37,38,38,39,51,54,55,56,58,59,60,61,63,64,151,65,67,69,76,86,92,100,102,105,106,109,110],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[152,153,154,155,156,157,158,159,160,161,162,163,164,165,0,4,5,6,1,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,7,8,9,10,184,185,112,186,187,129,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,116,117,118,226,227,119,120,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,145,246,247,248,249,250,251,252,253,254,11,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,12,292,13,14,15,16,17,293,18,294,295,19,296,297,298,299,300,301,302,303,304,305,306,20,307,308,21,309,310,311,312,313,22,23,24,25,26,27,28,29,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,146,147,148,338,131,132,339,340,341,342,30,31,32,33,34,35,36,343,344,345,346,347,348,349,350,351,352,353,354,355,37,37,38,38,39,356,357,40,41,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,133,380,381,149,382,43,44,383,384,45,46,47,48,385,49,50,386,387,121,122,388,389,390,391,392,123,124,150,393,51,52,53,394,395,396,397,398,399,54,55,400,401,402,403,404,56,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,405,97,98,99,100,406,101,102,103,104,105,106,107,108,109,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,134,422,135,423,424,425,426,427,428,429,136,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,137,138,465,466,139,467,140,141,468,142,469,470,471,472,473,474,475,476,477,3,478,479,480,481,143,482,483,110,484,111,485],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[152,153,159,160,161,162,164,165,4,5,1,166,167,168,169,170,171,172,9,184,185,112,186,187,129,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,116,118,226,227,119,120,228,11,255,256,257,258,259,265,267,268,272,273,274,276,277,278,279,280,281,282,283,287,290,296,297,298,299,300,301,303,304,311,312,28,29,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,147,148,338,131,132,343,344,345,346,347,348,349,350,351,352,353,355,356,357,40,41,358,359,365,374,375,376,377,378,379,133,380,381,149,382,45,48,385,386,387,121,122,388,389,390,391,123,124,150,393,51,52,53,394,395,396,397,398,399,54,73,95,96,405,97,98,99,101,107,407,410,411,412,413,415,417,418,419,421,134,422,135,423,424,425,426,427,428,429,136,430,431,432,433,434,435,436,437,438,439,441,442,443,444,445,452,463,464,137,138,466,139,467,140,141,468,469,470,471,472,473,474,475,476,477,3,478,479,480,481,143,482,483,484,111,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[486,487],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[488,489,490,491,492,55,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[239,416],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[408,409],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[494,463,476,481],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","properties":"properties","key":"key"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[152,166,169,184,112,186,129,188,191,192,194,195,196,197,198,118,119,120,315,337,131,376,378,133,380,382,122,388,389,123,124,67,411,134,422,135,423,424,425,426,427,429,136,430,431,432,434,435,436,437,438,439,441,442,443,444,463,464,137,138,466,467,140,141,468,469,471,472,473,474,475,476,477,3,478,479,481,482,483,485],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[392],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[157,159,160,163,164,165,171,184,112,186,187,129,188,189,219,220,225,116,117,118,119,120,228,266,269,270,271,278,288,291,12,20,307,308,21,309,310,313,24,25,26,337,338,131,132,365,366,376,378,379,133,380,381,46,47,49,50,386,121,122,388,389,123,124,150,393,401,402,403,404,56,58,59,63,64,66,67,69,96,104,107,109,434,436,438,439,441,442,452,453,137,475,485],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"position":"org.easymock.internal.RecordState:108","failures":[169,191,193,194,195,196,197,198,225,227,268,300,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,131,382,386,391],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[0,4,5,6,1],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests2.UsageTest.argumentsOrdered":124,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":225,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":239,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":389,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":356,"org.easymock.tests2.DelegateToTest.testReturnException":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":297,"org.easymock.tests.MockingTest.testPartialClassMocking":16,"org.easymock.tests.MockClassControlTest.testToString":24,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":400,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":375,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageTest.wrongArguments":122,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":341,"org.easymock.samples.ExampleTest.answerVsDelegate":349,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":21,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":295,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":97,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":442,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":29,"org.easymock.tests2.CaptureTest.testPrimitive":423,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageTest.moreThanOneArgument":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":336,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":345,"org.easymock.tests.UsageTest.argumentsOrdered":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":302,"org.easymock.tests.UsageVarargTest.varargIntAccepted":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":492,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":259,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":452,"org.easymock.tests.ReplayStateInvalidUsageTest.times":180,"org.easymock.tests2.DependencyTest.testClassMocking":372,"org.easymock.tests2.AnswerTest.answer":407,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":462,"org.easymock.tests2.CaptureTest.testAnd":134,"org.easymock.tests2.UsageTest.strictResetToDefault":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":147,"org.easymock.tests2.DelegateToTest.testDelegate":421,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":332,"org.easymock.tests.LimitationsTest.mockFinalMethod":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":300,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":264,"org.easymock.tests2.DependencyTest.testClassMockingSupport":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":219,"org.easymock.tests2.CaptureTest.testCapture1_2446744":424,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":460,"org.easymock.tests.UsageThrowableTest.throwError":191,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":174,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":308,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":94,"org.easymock.samples.PartialClassMockTest.testGetArea":39,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":175,"org.easymock.tests.MockingTest.testInterfaceMocking":293,"org.easymock.tests2.CompareToTest.testLessOrEqual":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":256,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":285,"org.easymock.tests2.UsageTest.niceToStrict":388,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":61,"org.easymock.tests2.MockBuilderTest.testCreateMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":125,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":326,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":438,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":339,"org.easymock.tests.UsageOverloadedMethodTest.overloading":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":91,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":473,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":472,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":429,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":275,"org.easymock.tests.MockClassControlTest.testEquals":28,"org.easymock.tests2.EasyMockSupportClassTest.testAll":73,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":5,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":461,"org.easymock.tests2.CaptureTest.testCaptureAll":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":262,"org.easymock.tests.MockNameTest.defaultName":313,"org.easymock.tests2.UsageConstraintsTest.testMatches":474,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":346,"org.easymock.samples.ExampleTest.voteForRemovals":353,"org.easymock.tests.UsageVarargTest.allKinds":283,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":338,"org.easymock.samples.BasicClassMockTest.testPrintContent":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":197,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":376,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":146,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":107,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":36,"org.easymock.samples.ExampleTest.voteForRemoval":350,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":396,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":108,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":100,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":386,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":11,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":435,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":296,"org.easymock.tests2.CaptureTest.testCaptureFirst":432,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":436,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":393,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests2.CaptureTest.testCapture2_2446744":431,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":398,"org.easymock.tests2.UsageTest.moreThanOneArgument":121,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":246,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":164,"org.easymock.tests.UsageExpectAndReturnTest.longType":202,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":260,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":335,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":480,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":343,"org.easymock.tests.UsageCallCountTest.tooManyCalls":165,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":196,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testNiceClassMocking":19,"org.easymock.tests.MockingTest.testClassMocking":14,"org.easymock.tests2.UsageConstraintsTest.testContains":471,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":158,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":57,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":466,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":316,"org.easymock.tests.MockTypeTest.fromEasyMockClass":307,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":415,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests.UsageExpectAndReturnTest.object":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":441,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":489,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":277,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":290,"org.easymock.tests.UsageTest.exactCallCountByLastCall":228,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":234,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":222,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":115,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":55,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":215,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":267,"org.easymock.tests.MockClassControlTest.testHashCode":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":83,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":459,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":446,"org.easymock.tests.UsageVarargTest.varargCharAccepted":276,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":251,"org.easymock.tests2.UsageTest.openCallCountByLastCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":444,"org.easymock.tests.DefaultClassInstantiatorTest.object":30,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":154,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":105,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":323,"org.easymock.tests.CapturesMatcherTest.test":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":252,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":92,"org.easymock.tests2.UsageTest.resumeIfFailure":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":299,"org.easymock.tests2.StubTest.stubWithReturnValue":382,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":493,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":481,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.tests2.SerializationTest.testAllMockedMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":245,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":127,"org.easymock.samples.SupportTest.voteForRemovals":359,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":329,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":250,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":408,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":224,"org.easymock.tests.UsageExpectAndThrowTest.object":327,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":478,"org.easymock.tests2.DelegateToTest.testWrongClass":419,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":312,"org.easymock.tests.UsageStrictMockTest.range":129,"org.easymock.samples.ConstructorCalledMockTest.testTax":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":383,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":328,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":63,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":182,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":340,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":113,"org.easymock.tests2.CaptureTest.testCaptureNone":428,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":286,"org.easymock.tests.UsageUnorderedTest.message":171,"org.easymock.tests.UsageVerifyTest.twoReturns":132,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":87,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":162,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":40,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":128,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":248,"org.easymock.tests2.UsageConstraintsTest.any":469,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":179,"org.easymock.tests2.StubTest.stub":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":298,"org.easymock.tests.UsageExpectAndThrowTest.longType":320,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":34,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":178,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":379,"org.easymock.tests2.SerializationTest.testClass":110,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":365,"org.easymock.tests.LimitationsTest.mockNativeMethod":9,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":449,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":381,"org.easymock.tests2.NameTest.nameForMocksControl":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":451,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":75,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":227,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":414,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":321,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":64,"org.easymock.tests.MockingTest.testNicePartialClassMocking":17,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":447,"org.easymock.tests2.CaptureTest.testCaptureLast":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":220,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":479,"org.easymock.tests.MockingTest.testTwoMocks":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":325,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":482,"org.easymock.samples.ExampleTest.removeNonExistingDocument":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":176,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":32,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":397,"org.easymock.tests2.MockBuilderTest.testCreateMockString":69,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":77,"org.easymock.tests.UsageExpectAndThrowTest.floatType":319,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":410,"org.easymock.tests.UsageVerifyTest.twoThrows":131,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":284,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":106,"org.easymock.tests.LimitationsTest.privateConstructor":8,"org.easymock.tests2.UsageConstraintsTest.testNotNull":143,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":198,"org.easymock.tests2.UsageTest.defaultResetToNice":392,"org.easymock.samples.ExampleTest.voteAgainstRemovals":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":241,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":448,"org.easymock.tests.UsageVarargTest.differentLength":278,"org.easymock.tests2.CallbackTest.callback":485,"org.easymock.tests2.UsageConstraintsTest.equals":465,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":102,"org.easymock.tests.UsageTest.openCallCountByLastCall":226,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":168,"org.easymock.tests.UsageCallCountTest.tooFewCalls":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":342,"org.easymock.tests.UsageThrowableTest.throwCheckedException":195,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":114,"org.easymock.tests.MockingTest.testStrictClassMocking":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":385,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":412,"org.easymock.tests.ObjectMethodsTest.testHashCode":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":491,"org.easymock.tests2.NameTest.nameForNiceMock":403,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":399,"org.easymock.tests2.DependencyTest.testInterfaceMocking":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":490,"org.easymock.samples.ExampleTest.addDocument":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":88,"org.easymock.tests2.DelegateToTest.testStubDelegate":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.AnswerTest.stubAnswer":411,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":186,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":151,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":238,"org.easymock.tests.UsageExpectAndReturnTest.floatType":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":38,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":477,"org.easymock.tests.UsageThrowableTest.noUpperLimit":192,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":464,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":43,"org.easymock.tests2.SerializationTest.test":484,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":425,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":31,"org.easymock.tests2.UsageConstraintsTest.testSame":467,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.samples.SupportTest.addDocument":358,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":78,"org.easymock.tests.GenericTest.testPackageScope":4,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":294,"org.easymock.tests2.NameTest.nameForMock":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests2.UsageStrictMockTest.differentMethods":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":331,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":148,"org.easymock.tests2.MockedExceptionTest.testRealException":394,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":242,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":378,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":167,"org.easymock.tests2.NameTest.nameForStrictMock":402,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":60,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":413,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":98,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":44,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":33,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":58,"org.easymock.tests2.UsageStrictMockTest.range":133,"org.easymock.tests2.UsageConstraintsTest.lessThan":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":237,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":82,"org.easymock.tests2.UsageConstraintsTest.testOr":140,"org.easymock.tests.UsageRangeTest.combination":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":79,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":230,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":35,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":163,"org.easymock.tests2.UsageConstraintsTest.cmpTo":470,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":232,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":391,"org.easymock.tests2.CaptureTest.testCaptureFromStub":430,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":173,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":59,"org.easymock.tests.UsageTest.unexpectedCallWithArray":117,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests2.CaptureTest.testCapture":487,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":187,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.samples.ExampleTest.addAndChangeDocument":355,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":357,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":261,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":426,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":257,"org.easymock.tests.LimitationsTest.abstractClass":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":258,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":439,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":130,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":273}}]
