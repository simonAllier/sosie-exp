[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[0,67,1,2,4,5,68,68,69,69,70,9,71,72,73,74,75,14,15,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,18,104,105,22,23,106,107,108,109,24,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,25,135,136,137,138,139,26,27,28,140,30,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,40,41,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,44,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,63,251,252,64,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,65,277,66,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[296,297,298,299,300,301,302,303,304,160,164,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[68,68,69,69,70,10,11,116,117,119,120,121,306,122,307,123,124,125,308,126,309,140,310,30,311,141,142,312,143,313,155,158,159,160,161,163,164,165,35,167,168,169,170,180,36,181,314,315,226,227,228,316,317,318,235,319,320,321,322,323,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[296,299,325,326,327,328],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[68,68,69,69,70,10,11,116,117,119,120,121,306,122,307,123,124,125,126,309,329,140,310,30,311,141,142,312,143,330,313,155,158,159,160,161,163,164,165,35,167,168,169,170,331,332,333,180,36,181,315,226,227,228,317,318,235,319,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[68,68,69,69,70,10,11,116,117,119,120,121,306,122,307,123,124,125,126,309,140,30,311,141,142,312,143,313,155,158,159,160,161,163,164,165,35,167,168,169,170,180,36,181,314,315,226,227,228,235,319,323,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[73,74,75,77,78,79,80,81,82,83,84,85,86,334,87,88,89,90,91,92,93,94,95,96,97,98,17,99,100,101,102,103,18,19,104,105,20,21,22,23,106,107,108,109,24,335,122,130,38,187,212,222,223,62,245,246,247,248,249,251,252,64,253,254,255,256,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[337,338,38,339,340,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:116","sourceCode":"try {\n    java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[125,308,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:33","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,67,1,2,3,4,5,68,69,6,70,7,8,9,10,11,71,72,73,74,343,12,75,13,14,15,16,344,345,346,347,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,17,99,100,101,102,103,18,19,104,105,20,21,22,23,106,107,108,109,24,110,113,114,115,116,117,118,119,120,121,306,122,307,123,124,125,126,127,128,129,130,131,132,133,134,25,135,136,137,138,139,26,27,28,29,309,140,30,311,141,142,312,143,313,144,145,146,31,147,32,148,149,150,33,34,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,35,167,168,169,170,172,173,174,176,177,178,179,348,349,350,351,180,36,182,183,184,185,186,352,37,38,187,39,40,41,42,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,219,220,221,222,223,226,227,228,353,353,232,233,234,235,236,45,46,47,354,48,49,240,241,341,50,242,243,51,52,244,53,54,55,56,57,355,58,59,60,61,62,245,246,247,248,249,63,251,252,64,253,254,255,256,356,357,358,359,360,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,65,277,66,278,279,280,281,282,283,292,293,294,361],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[144,149,220,240,243,253,278],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[75,14,15,146,362,337,363,364,365,366,187,40,41,219,220,221,43,44,340,367,368,241,65,369,370,295,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[371],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[372],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[224],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":80,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests2.UsageTest.argumentsOrdered":34,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":211,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":32,"org.easymock.tests2.StubTest.stubWithReturnValue":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":299,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":197,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":99,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests2.DelegateToTest.testReturnException":172,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":209,"org.easymock.tests.MockingTest.testPartialClassMocking":226,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":338,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.MockClassControlTest.testToString":320,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":257,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":225,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":168,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":111,"org.easymock.tests.UsageExpectAndThrowTest.object":267,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":72,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":325,"org.easymock.tests2.DelegateToTest.testWrongClass":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":256,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":251,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":68,"org.easymock.tests.UsageStrictMockTest.range":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":350,"org.easymock.samples.ExampleTest.answerVsDelegate":67,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":158,"org.easymock.tests2.UsageConstraintsTest.testNull":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":268,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":119,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":141,"org.easymock.tests2.CaptureTest.testPrimitive":104,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":276,"org.easymock.tests.UsageTest.moreThanOneArgument":241,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":349,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":231,"org.easymock.tests2.CaptureTest.testCaptureNone":23,"org.easymock.tests.UsageUnorderedTest.message":65,"org.easymock.tests.UsageVerifyTest.twoReturns":221,"org.easymock.tests.UsageVarargTest.varargByteAccepted":60,"org.easymock.tests2.ThreadingTest.testThreadSafe":127,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":284,"org.easymock.tests.UsageTest.argumentsOrdered":52,"org.easymock.tests.UsageVarargTest.varargIntAccepted":55,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":47,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.CaptureTest.testCapture_2617107":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":253,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":311,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests2.StubTest.stub":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageExpectAndThrowTest.longType":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":210,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests2.SerializationTest.testClass":165,"org.easymock.tests.LimitationsTest.mockNativeMethod":235,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":207,"org.easymock.tests2.AnswerTest.answer":110,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":347,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":333,"org.easymock.tests2.CaptureTest.testAnd":103,"org.easymock.tests2.UsageTest.strictResetToDefault":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":307,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":298,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests2.MockedExceptionTest.testMockedException":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":135,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":243,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":288,"org.easymock.tests2.DelegateToTest.testDelegate":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":261,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":228,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":272,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":121,"org.easymock.tests2.CaptureTest.testCaptureLast":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":44,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":85,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":360,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":98,"org.easymock.tests.MockingTest.testTwoMocks":315,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":43,"org.easymock.tests2.CaptureTest.testCapture1_2446744":105,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":265,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":101,"org.easymock.tests.UsageThrowableTest.throwError":277,"org.easymock.tests.UsageStrictMockTest.differentMethods":41,"org.easymock.tests2.ConstraintsToStringTest.andToString":365,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":129,"org.easymock.tests2.MockBuilderTest.testCreateMockString":313,"org.easymock.tests.UsageExpectAndThrowTest.floatType":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":186,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":113,"org.easymock.tests.UsageVerifyTest.twoThrows":220,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":169,"org.easymock.samples.PartialClassMockTest.testGetArea":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.samples.ExampleTest.voteAgainstRemoval":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":230,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":229,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":124,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":258,"org.easymock.tests2.UsageTest.niceToStrict":147,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":303,"org.easymock.tests2.UsageConstraintsTest.testNotNull":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":283,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":153,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":30,"org.easymock.tests2.MockBuilderTest.testCreateMock":312,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":203,"org.easymock.tests.UsageVarargTest.differentLength":355,"org.easymock.tests2.CallbackTest.callback":177,"org.easymock.tests.UsageTest.openCallCountByLastCall":242,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":266,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":77,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.UsageCallCountTest.tooFewCalls":45,"org.easymock.tests.UsageOverloadedMethodTest.overloading":233,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":294,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":91,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":90,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":351,"org.easymock.tests.UsageThrowableTest.throwCheckedException":280,"org.easymock.tests2.EasyMockSupportClassTest.testAll":167,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":36,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":274,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":346,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":336,"org.easymock.tests2.CaptureTest.testCaptureAll":18,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":223,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.testMatches":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":162,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":185,"org.easymock.samples.ExampleTest.voteForRemovals":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":131,"org.easymock.tests.UsageVarargTest.allKinds":62,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":219,"org.easymock.tests2.DependencyTest.testInterfaceMocking":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":359,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.samples.ExampleTest.addDocument":3,"org.easymock.tests2.DelegateToTest.testStubDelegate":173,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":282,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":343,"org.easymock.tests2.AnswerTest.stubAnswer":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":213,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":175,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":328,"org.easymock.tests2.UsageConstraintsTest.greaterThan":94,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":215,"org.easymock.tests.UsageVarargTest.varargLongAccepted":59,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":125,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":42,"org.easymock.samples.ExampleTest.voteForRemoval":1,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":206,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":126,"org.easymock.tests2.ConstraintsToStringTest.orToString":362,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":69,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":95,"org.easymock.tests.UsageThrowableTest.noUpperLimit":66,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":78,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":20,"org.easymock.tests2.SerializationTest.test":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":278,"org.easymock.tests2.UsageConstraintsTest.testSame":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":189,"org.easymock.samples.SupportTest.addDocument":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":208,"org.easymock.tests2.CaptureTest.testCaptureFirst":24,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":25,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":195,"org.easymock.tests.GenericTest.testPackageScope":180,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":146,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":287,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":143,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":61,"org.easymock.tests.GenericTest.testBridgedEquals":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":48,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":356,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":200,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":250,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":273,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":192,"org.easymock.tests.UsageCallCountTest.tooManyCalls":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":217,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":236,"org.easymock.tests2.MockedExceptionTest.testRealException":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":196,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":262,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":252,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":159,"org.easymock.tests2.NameTest.nameForStrictMock":342,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":329,"org.easymock.tests2.UsageConstraintsTest.testContains":89,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":155,"org.easymock.tests2.UsageConstraintsTest.testFind":81,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":120,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":352,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":74,"org.easymock.tests.UsageExpectAndReturnTest.object":198,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":122,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":140,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":326,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":57,"org.easymock.tests.UsageTest.exactCallCountByLastCall":244,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":372,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":133,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":285,"org.easymock.tests2.UsageConstraintsTest.testOr":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":296,"org.easymock.tests.UsageRangeTest.combination":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":204,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":117,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":293,"org.easymock.tests.UsageTest.wrongArguments":50,"org.easymock.tests2.MockBuilderTest.testWithConstructor":297,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":193,"org.easymock.tests2.EasyMockSupportTest.testVerify":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":201,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageVarargTest.varargShortAccepted":58,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":344,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":335,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests.UsageVarargTest.varargCharAccepted":56,"org.easymock.tests2.CaptureTest.testCaptureMultiple":324,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":112,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":12,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":289,"org.easymock.tests2.CaptureTest.testCaptureFromStub":108,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":310,"org.easymock.tests.UsageTest.unexpectedCallWithArray":341,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":279,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":46,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":202,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":322,"org.easymock.tests2.UsageConstraintsTest.constraints":79,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":39,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":263,"org.easymock.samples.ExampleTest.addAndChangeDocument":5,"org.easymock.tests2.ConstraintsToStringTest.notToString":363,"org.easymock.tests.CapturesMatcherTest.test":353,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":237,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":6,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":364,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":321,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":357,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":21,"org.easymock.tests2.UsageTest.resumeIfFailure":151,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":194,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":137}}]
