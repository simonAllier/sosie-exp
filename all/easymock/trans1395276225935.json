[{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[37,38,39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[41,42,43],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[44,45,46,47,48,49,50,51,51,52,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[80,81,82],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[83,79,84,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[86,87,88,89,90,91,92,93,79],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[45,94,95,53,61,62,63,64,65,66,67,69,71,72,73,75,76,77,96,79],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[97,98,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[101,102,103,97,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,44,136,45,137,138,139,140,0,141,142,143,144,41,145,146,147,37,148,149,150,151,152,153,154,46,155,156,157,158,159,160,161,162,163,164,1,165,2,3,4,5,6,7,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,8,192,193,194,195,9,196,197,198,199,200,201,202,203,204,205,206,207,208,80,209,210,211,212,42,213,214,215,216,217,218,43,219,220,99,100,47,221,222,223,224,225,226,227,228,229,230,231,232,233,10,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,48,49,262,50,263,264,265,266,267,268,269,11,270,271,272,273,274,275,94,276,277,278,279,95,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,295,296,297,298,299,33,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,51,52,53,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,34,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,35,370,371,372,373,38,374,36,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,59,91,390,391,392,393,394,61,62,63,395,64,396,65,66,397,93,398,67,69,399,400,401,70,402,403,71,404,405,406,407,408,409,410,411,412,72,413,414,415,416,417,73,418,419,420,74,421,422,39,423,75,424,425,426,427,428,76,77,78,429,96,430,431,432,433,434,435,436,437,438,439,81,440,82,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,40,506,507,508,509,510,511,512,513,514,515,79,84,85,516],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[517,488,506,509],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[101,104,105,106,107,108,109,44,136,138,139,141,46,157,159,162,163,164,165,2,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,192,47,221,222,223,224,225,226,227,228,229,230,235,237,238,239,241,242,244,245,246,247,248,48,49,50,266,267,268,269,11,270,282,283,286,294,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,295,296,297,298,299,33,300,301,302,303,304,312,313,314,315,316,317,318,319,320,321,322,324,51,52,53,325,326,327,328,329,330,336,345,346,348,349,352,353,354,34,361,362,363,364,366,367,368,370,371,373,38,375,378,380,381,382,383,384,386,389,59,391,392,393,394,61,64,396,65,66,70,71,72,73,420,421,422,39,423,425,428,77,430,433,434,435,436,438,440,82,443,444,445,446,447,449,450,451,452,453,454,457,458,459,460,461,462,463,464,465,466,467,468,469,470,477,484,485,486,487,488,489,490,491,493,494,495,496,497,498,500,501,502,503,504,505,40,506,507,508,509,510,512,513,514,515,79,84,85,516],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[518,498,504,515],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[254,285,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.RecordState:183","failures":[101,106,107,108,109,111,112,136,138,139,140,0,141,142,46,157,159,160,161,162,163,1,165,2,3,4,5,6,7,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,8,192,195,9,198,47,221,222,223,224,225,237,238,239,241,242,244,245,246,247,248,48,49,50,282,283,294,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,295,297,298,299,33,300,317,318,319,320,321,322,324,53,325,326,327,328,329,330,336,345,346,348,349,350,351,352,353,354,34,361,362,363,364,366,367,368,35,370,371,373,38,374,36,379,382,384,387,388,389,59,64,65,66,71,72,73,420,421,422,423,430,433,434,435,436,438,440,82,441,443,444,445,446,447,449,450,451,452,453,454,457,458,460,461,462,463,466,467,468,469,470,477,488,489,490,491,493,494,495,496,497,498,500,501,502,503,504,505,40,506,507,508,509,510,511,512,513,514,515,79,84,85,516],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[444,446,447,448,449,450,451,453,519,454],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[86,87,88,520,89,90,521,91,92,522],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[523,86,87,88,520,89,521,59,91,92,93,522,79],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[101,102,138,139,140,0,141,142,159,221,222,223,224,225,11,282,283,349,445,451,452,457,496,500],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[86,87,88,520,521,59,91,92,93,79],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[524],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[158,525,526,193,527,528],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[101,44,45,138,139,141,46,159,161,162,1,2,3,4,5,6,7,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,190,8,192,195,9,198,221,222,223,224,225,235,250,251,48,49,50,282,283,293,294,12,295,296,297,298,299,300,317,319,320,322,53,330,336,345,346,349,351,352,34,361,362,363,364,366,367,368,35,370,371,373,374,36,375,378,379,382,384,386,387,388,389,59,62,64,65,66,67,70,71,72,73,420,74,421,422,39,423,425,76,77,78,434,82,444,445,447,448,451,452,453,454,456,457,458,459,460,461,462,463,464,465,466,467,468,469,477,488,489,490,491,493,494,495,496,497,498,500,501,502,503,504,505,40,506,507,508,509,510,512,513,514,515,79,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[233,318,440,441,443],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"equalsMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":491,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.UsageTest.argumentsOrdered":377,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":80,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":38,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":325,"org.easymock.tests2.DelegateToTest.testReturnException":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":267,"org.easymock.tests.MockingTest.testPartialClassMocking":48,"org.easymock.tests.MockClassControlTest.testToString":287,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":407,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":13,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":71,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":346,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":498,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":138,"org.easymock.tests2.UsageTest.wrongArguments":372,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":483,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":303,"org.easymock.samples.ExampleTest.answerVsDelegate":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":95,"org.easymock.tests2.UsageConstraintsTest.testNull":494,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":422,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":467,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":292,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":54,"org.easymock.tests2.CaptureTest.testPrimitive":447,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests.UsageTest.moreThanOneArgument":192,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":314,"org.easymock.tests.UsageTest.argumentsOrdered":197,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":271,"org.easymock.tests.UsageVarargTest.varargIntAccepted":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":357,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":118,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":477,"org.easymock.tests.ReplayStateInvalidUsageTest.times":149,"org.easymock.tests2.DependencyTest.testClassMocking":343,"org.easymock.tests2.AnswerTest.answer":430,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":487,"org.easymock.tests2.CaptureTest.testAnd":444,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":277,"org.easymock.tests2.UsageTest.strictResetToDefault":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":297,"org.easymock.tests2.DelegateToTest.testDelegate":443,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":275,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests.LimitationsTest.mockFinalMethod":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":230,"org.easymock.tests2.DependencyTest.testClassMockingSupport":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":186,"org.easymock.tests2.CaptureTest.testCapture1_2446744":448,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":485,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":41,"org.easymock.tests.UsageThrowableTest.throwError":1,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":279,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":419,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":121,"org.easymock.samples.PartialClassMockTest.testGetArea":53,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":145,"org.easymock.tests.MockingTest.testInterfaceMocking":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":14,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":257,"org.easymock.tests2.UsageTest.niceToStrict":373,"org.easymock.tests2.ThreadingTest.testChangeDefault":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":199,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":64,"org.easymock.tests2.MockBuilderTest.testCreateMock":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":415,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":480,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":527,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":463,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":98,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":301,"org.easymock.tests.UsageOverloadedMethodTest.overloading":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":504,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":177,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":503,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":453,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":240,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.MockClassControlTest.testEquals":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":136,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":486,"org.easymock.tests2.CaptureTest.testCaptureAll":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":228,"org.easymock.tests.MockNameTest.defaultName":284,"org.easymock.tests2.UsageConstraintsTest.testMatches":505,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":315,"org.easymock.samples.ExampleTest.voteForRemovals":322,"org.easymock.tests.UsageVarargTest.allKinds":248,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":229,"org.easymock.samples.BasicClassMockTest.testPrintContent":328,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":6,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":347,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":521,"org.easymock.tests2.UsageConstraintsTest.greaterThan":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":296,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":78,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":122,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":311,"org.easymock.samples.ExampleTest.voteForRemoval":319,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":429,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":386,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":68,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":75,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":47,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":460,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":266,"org.easymock.tests2.CaptureTest.testCaptureFirst":457,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":461,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":379,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":173,"org.easymock.tests2.CaptureTest.testCapture2_2446744":456,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":388,"org.easymock.tests2.UsageTest.moreThanOneArgument":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":215,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":247,"org.easymock.tests.GenericTest.testBridgedEquals":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":111,"org.easymock.tests.UsageExpectAndReturnTest.longType":169,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":458,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":511,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":312,"org.easymock.tests.UsageCallCountTest.tooManyCalls":112,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":416,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":5,"org.easymock.tests.MockingTest.testNiceClassMocking":265,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":362,"org.easymock.tests.MockingTest.testClassMocking":260,"org.easymock.tests2.UsageConstraintsTest.testContains":502,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":105,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":382,"org.easymock.tests2.UsageConstraintsTest.testFind":493,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":12,"org.easymock.tests.MockTypeTest.fromEasyMockClass":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":438,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":156,"org.easymock.tests.UsageExpectAndReturnTest.object":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":425,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":87,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":242,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":255,"org.easymock.tests.UsageTest.exactCallCountByLastCall":198,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":204,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":189,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":182,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":233,"org.easymock.tests.MockClassControlTest.testHashCode":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":332,"org.easymock.tests2.EasyMockSupportTest.testVerify":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":410,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":97,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":484,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":471,"org.easymock.tests.UsageVarargTest.varargCharAccepted":241,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":219,"org.easymock.tests2.UsageTest.openCallCountByLastCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":469,"org.easymock.tests.DefaultClassInstantiatorTest.object":305,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":103,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":411,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":3,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":331,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":76,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":183,"org.easymock.tests.ReplayStateInvalidCallsTest.times":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":220,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":73,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":288,"org.easymock.tests2.UsageTest.resumeIfFailure":378,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":269,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":92,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":175,"org.easymock.tests2.SerializationTest.testAllMockedMethod":85,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":213,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":528,"org.easymock.samples.SupportTest.voteForRemovals":330,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":83,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":43,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":431,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":191,"org.easymock.tests.UsageExpectAndThrowTest.object":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":509,"org.easymock.tests2.DelegateToTest.testWrongClass":441,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":282,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":283,"org.easymock.tests.UsageStrictMockTest.range":161,"org.easymock.samples.ConstructorCalledMockTest.testTax":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":359,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":465,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":399,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":151,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":302,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":525,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":116,"org.easymock.tests2.CaptureTest.testCaptureNone":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":251,"org.easymock.tests.UsageUnorderedTest.message":142,"org.easymock.tests.UsageVerifyTest.twoReturns":300,"org.easymock.tests.UsageVarargTest.varargByteAccepted":246,"org.easymock.tests2.ThreadingTest.testThreadSafe":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":413,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":109,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":256,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":327,"org.easymock.tests2.CaptureTest.testCapture_2617107":446,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":217,"org.easymock.tests2.UsageConstraintsTest.any":500,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":148,"org.easymock.tests2.StubTest.stub":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":100,"org.easymock.tests.UsageExpectAndThrowTest.longType":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":268,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":309,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":37,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":350,"org.easymock.tests2.SerializationTest.testClass":79,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":336,"org.easymock.tests.LimitationsTest.mockNativeMethod":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":185,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":45,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":474,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":57,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":132,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":353,"org.easymock.tests2.NameTest.nameForMocksControl":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":476,"org.easymock.tests2.MockedExceptionTest.testMockedException":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":403,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":437,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":17,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":420,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":66,"org.easymock.tests.MockingTest.testNicePartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":423,"org.easymock.tests2.CompareToTest.testCompareEqual":524,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":523,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":472,"org.easymock.tests2.CaptureTest.testCaptureLast":451,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":187,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":368,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":510,"org.easymock.tests.MockingTest.testTwoMocks":261,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":128,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":21,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":376,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":514,"org.easymock.samples.ExampleTest.removeNonExistingDocument":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":479,"org.easymock.tests.UsageStrictMockTest.differentMethods":162,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":146,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":333,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":439,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":307,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":387,"org.easymock.tests2.MockBuilderTest.testCreateMockString":69,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":404,"org.easymock.tests.UsageExpectAndThrowTest.floatType":15,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":433,"org.easymock.tests.UsageVerifyTest.twoThrows":33,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":72,"org.easymock.samples.ExampleTest.voteAgainstRemoval":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":77,"org.easymock.tests.LimitationsTest.privateConstructor":154,"org.easymock.tests2.UsageConstraintsTest.testNotNull":513,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":380,"org.easymock.tests2.UsageTest.defaultResetToNice":375,"org.easymock.samples.ExampleTest.voteAgainstRemovals":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":473,"org.easymock.tests.UsageVarargTest.differentLength":243,"org.easymock.tests2.CallbackTest.callback":516,"org.easymock.tests2.UsageConstraintsTest.equals":492,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":426,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":140,"org.easymock.tests.UsageCallCountTest.tooFewCalls":107,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":304,"org.easymock.tests.UsageThrowableTest.throwCheckedException":4,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":526,"org.easymock.tests.MockingTest.testStrictClassMocking":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":478,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":363,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":366,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":435,"org.easymock.tests2.CompareToTest.testGreateOrEqual":518,"org.easymock.tests.ObjectMethodsTest.testHashCode":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":89,"org.easymock.tests2.NameTest.nameForNiceMock":393,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":389,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":130,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":125,"org.easymock.tests2.DependencyTest.testInterfaceMocking":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":88,"org.easymock.samples.ExampleTest.addDocument":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.DelegateToTest.testStubDelegate":82,"org.easymock.tests2.AnswerTest.stubAnswer":434,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":159,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":397,"org.easymock.tests.UsageVarargTest.varargLongAccepted":245,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.floatType":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":52,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":507,"org.easymock.tests.UsageThrowableTest.noUpperLimit":165,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":489,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":355,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":449,"org.easymock.tests2.SerializationTest.test":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testSame":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":167,"org.easymock.samples.SupportTest.addDocument":329,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":365,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":115,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":405,"org.easymock.tests.GenericTest.testPackageScope":44,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":339,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":113,"org.easymock.tests2.NameTest.nameForMock":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":178,"org.easymock.tests2.UsageStrictMockTest.differentMethods":352,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":298,"org.easymock.tests2.MockedExceptionTest.testRealException":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":360,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":211,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":349,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":139,"org.easymock.tests2.NameTest.nameForStrictMock":392,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":436,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":358,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":508,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":308,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":62,"org.easymock.tests2.UsageStrictMockTest.range":351,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":119,"org.easymock.tests2.UsageConstraintsTest.lessThan":515,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":335,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":520,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":207,"org.easymock.tests2.CaptureTest.testCaptureRightOne":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":409,"org.easymock.tests2.UsageConstraintsTest.testOr":496,"org.easymock.tests.UsageRangeTest.combination":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":406,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":200,"org.easymock.tests.UsageVarargTest.varargShortAccepted":244,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":310,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":110,"org.easymock.tests2.UsageConstraintsTest.cmpTo":501,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":133,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":432,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":202,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests2.CaptureTest.testCaptureFromStub":455,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":144,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":63,"org.easymock.tests.UsageTest.unexpectedCallWithArray":193,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":129,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":180,"org.easymock.tests2.CaptureTest.testCapture":519,"org.easymock.tests2.UsageConstraintsTest.constraints":490,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.samples.ExampleTest.addAndChangeDocument":324,"org.easymock.tests.UsageStrictMockTest.testVerify":164,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":326,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":157,"org.easymock.tests2.CompareToTest.testGreateThan":517,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":227,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":450,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":172,"org.easymock.tests.LimitationsTest.abstractClass":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":464,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":238}}]
