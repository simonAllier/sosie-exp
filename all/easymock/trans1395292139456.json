[{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:84","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[7,8,9,4,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,7,8,9,4,90,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,91,92,93,94,95,96,97,98,99,100,101,102,0,1,2,103,104,105,106,107,108,109,110,34,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,35,36,37,38,39,40,41,42,43,44,45,46,47,48,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,50,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,51,224,52,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,53,54,55,56,57,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,58,276,277,278,279,280,281,282,283,284,59,60,61,62,63,64,65,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,66,67,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,68,385,386,387,388,389,390,391,69,70,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,71,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[207,208],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[423,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[476,99,0,477,478,479,480,481,148,149],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[78,82,83,86,9,23,92,100,101,102,104,114,116,125,150,152,153,154,193,196,197,198,202,203,204,205,225,271,281,325,326,327,68,390,69,392,393,394,398,400,401,404,405,406,450,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,7,8,9,4,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,91,92,95,96,97,98,100,101,102,0,1,2,103,104,105,106,107,108,109,34,113,114,115,116,119,120,121,122,123,124,125,126,127,129,130,131,133,35,36,37,38,39,40,41,42,43,44,45,46,47,48,140,141,142,143,144,145,146,147,148,150,151,50,152,153,154,155,159,162,172,178,186,193,194,195,196,197,198,199,200,201,202,203,204,205,206,209,210,211,217,51,52,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,53,54,55,56,57,262,263,264,265,266,267,269,270,271,272,273,274,275,58,277,278,281,283,284,59,60,61,62,63,64,65,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,321,322,323,324,325,326,327,66,67,353,68,385,386,387,388,389,390,391,69,70,392,393,394,395,397,398,399,400,401,402,403,404,405,406,410,411,412,413,71,414,415,416,417,418,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,449,450,451,452,453,454,455,456,461,462,464,468,470,471,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[482],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,7,8,9,4,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,91,92,95,96,97,98,100,101,102,0,1,2,103,104,105,106,107,108,109,34,113,114,115,116,119,120,121,122,123,124,125,126,127,129,130,131,133,35,36,37,38,39,40,41,42,43,44,45,46,47,48,140,141,142,143,144,145,146,147,148,150,151,50,152,153,154,155,159,162,172,178,186,193,194,195,196,197,198,199,200,201,202,203,204,205,206,209,210,211,217,51,52,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,53,54,55,56,57,6,6,262,263,264,265,266,267,269,270,271,272,273,274,275,58,277,278,281,283,284,59,60,61,62,63,64,65,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,321,322,323,324,325,326,327,66,67,353,68,385,386,387,388,389,390,391,69,70,392,393,394,395,397,398,399,400,401,402,403,404,405,406,410,411,412,413,71,414,415,416,417,418,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,449,450,451,452,453,454,455,456,461,462,464,468,470,471,474],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[448],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[153,196,202,203,483,68,69,393,400,401,404,405,450,451,474],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[7,24,27,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[485,486,487,488,69,400],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[153,196,202,203,483,68,69,393,400,401,404,405,450,451],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[276],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[224],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[485,486,487,488,69,400],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,7,8,9,4,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,91,92,95,96,97,98,100,101,102,0,1,2,103,104,105,106,107,108,109,34,113,114,115,116,119,120,121,122,123,124,125,126,127,129,130,131,133,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,140,141,142,143,144,145,146,147,148,150,151,50,152,153,154,155,159,162,172,178,186,193,194,195,196,197,198,199,200,201,202,203,204,205,206,209,210,211,217,51,52,225,226,227,228,229,230,231,232,233,234,235,235,236,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,53,54,55,56,57,262,263,264,265,266,267,269,270,271,272,273,274,275,58,277,278,281,282,283,284,59,60,61,62,63,64,65,286,287,288,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,66,67,339,340,341,342,343,344,345,346,347,348,349,350,353,68,385,386,387,388,389,390,391,69,70,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,410,411,412,413,71,414,415,416,417,418,419,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,449,450,451,452,453,454,455,456,461,462,464,468,470,471,473,474],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[489,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":398,"org.easymock.tests2.UsageTest.argumentsOrdered":203,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":368,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":198,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":237,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":411,"org.easymock.tests.MockingTest.testPartialClassMocking":461,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":72,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":166,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":291,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":61,"org.easymock.tests2.UsageTest.wrongArguments":196,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":417,"org.easymock.samples.ExampleTest.answerVsDelegate":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":331,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":466,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":86,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":318,"org.easymock.tests2.CaptureTest.testPrimitive":38,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":65,"org.easymock.tests.UsageTest.moreThanOneArgument":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":310,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":454,"org.easymock.tests.UsageTest.argumentsOrdered":405,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":334,"org.easymock.tests.UsageVarargTest.varargIntAccepted":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":53,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":57,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":490,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests.ReplayStateInvalidUsageTest.times":347,"org.easymock.tests2.DependencyTest.testClassMocking":138,"org.easymock.tests2.AnswerTest.answer":206,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":122,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests2.UsageTest.strictResetToDefault":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":283,"org.easymock.tests2.DelegateToTest.testDelegate":133,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":306,"org.easymock.tests.LimitationsTest.mockFinalMethod":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":389,"org.easymock.tests2.DependencyTest.testClassMockingSupport":139,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":446,"org.easymock.tests2.CaptureTest.testCapture1_2446744":39,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":120,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":341,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":330,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":180,"org.easymock.samples.PartialClassMockTest.testGetArea":238,"org.easymock.tests.MockingTest.testInterfaceMocking":463,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":54,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":167,"org.easymock.tests2.UsageTest.niceToStrict":197,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.MockBuilderTest.testCreateMock":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":175,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":189,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":300,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":82,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":384,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":415,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":171,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":471,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":437,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":20,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":268,"org.easymock.tests2.EasyMockSupportClassTest.testAll":159,"org.easymock.tests.MockClassControlTest.testEquals":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":121,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests.MockNameTest.defaultName":457,"org.easymock.tests2.UsageConstraintsTest.testMatches":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":455,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":339,"org.easymock.samples.ExampleTest.voteForRemovals":247,"org.easymock.tests.UsageVarargTest.allKinds":58,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":449,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":388,"org.easymock.samples.BasicClassMockTest.testPrintContent":234,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":256,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":414,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":481,"org.easymock.tests2.UsageConstraintsTest.greaterThan":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":116,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":425,"org.easymock.samples.ExampleTest.voteForRemoval":244,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":109,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":397,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":79,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":410,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":128,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":80,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":433,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.UsageTest.moreThanOneArgument":195,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":275,"org.easymock.tests.GenericTest.testBridgedEquals":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":326,"org.easymock.tests.UsageExpectAndReturnTest.longType":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":385,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":309,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":29,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":452,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":408,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":491,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":255,"org.easymock.tests.MockingTest.testNiceClassMocking":467,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":227,"org.easymock.tests.MockingTest.testClassMocking":459,"org.easymock.tests2.UsageConstraintsTest.testContains":19,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":320,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":146,"org.easymock.tests2.UsageConstraintsTest.testFind":10,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":329,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":52,"org.easymock.tests.UsageExpectAndReturnTest.object":436,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":478,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":270,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":288,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":482,"org.easymock.tests.UsageTest.exactCallCountByLastCall":406,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":258,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":442,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":470,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":213,"org.easymock.tests.MockClassControlTest.testHashCode":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":169,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":489,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":468,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":49,"org.easymock.tests.UsageVarargTest.varargCharAccepted":269,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageTest.openCallCountByLastCall":199,"org.easymock.tests.DefaultClassInstantiatorTest.object":419,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":88,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":382,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":286,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":184,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":212,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":114,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":297,"org.easymock.tests.CapturesMatcherTest.test":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":443,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":178,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests2.UsageTest.resumeIfFailure":204,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":413,"org.easymock.tests2.StubTest.stubWithReturnValue":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":435,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":30,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":374,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":486,"org.easymock.samples.SupportTest.voteForRemovals":241,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":303,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":380,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":207,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":260,"org.easymock.tests.UsageExpectAndThrowTest.object":301,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":27,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":66,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":67,"org.easymock.tests.UsageStrictMockTest.range":393,"org.easymock.samples.ConstructorCalledMockTest.testTax":235,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":136,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":416,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":487,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":357,"org.easymock.tests.UsageUnorderedTest.message":68,"org.easymock.tests.UsageVerifyTest.twoReturns":451,"org.easymock.tests.UsageVarargTest.varargByteAccepted":274,"org.easymock.tests2.ThreadingTest.testThreadSafe":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":173,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":324,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":233,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":448,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageConstraintsTest.any":17,"org.easymock.tests2.StubTest.stub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":412,"org.easymock.tests.UsageExpectAndThrowTest.longType":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":379,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":423,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests.LimitationsTest.mockNativeMethod":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":445,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":183,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":155,"org.easymock.tests2.NameTest.nameForMocksControl":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":185,"org.easymock.tests2.MockedExceptionTest.testMockedException":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":403,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":464,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":295,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":462,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":181,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":232,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":28,"org.easymock.tests.MockingTest.testTwoMocks":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":426,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":299,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":202,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":32,"org.easymock.samples.ExampleTest.removeNonExistingDocument":248,"org.easymock.tests.UsageStrictMockTest.differentMethods":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":188,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":214,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":421,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":125,"org.easymock.tests2.MockBuilderTest.testCreateMockString":102,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":163,"org.easymock.tests.UsageExpectAndThrowTest.floatType":293,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":158,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":209,"org.easymock.tests.UsageVerifyTest.twoThrows":450,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":172,"org.easymock.samples.ExampleTest.voteAgainstRemoval":245,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":369,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests.LimitationsTest.privateConstructor":352,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":257,"org.easymock.tests2.UsageTest.defaultResetToNice":201,"org.easymock.samples.ExampleTest.voteAgainstRemovals":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":182,"org.easymock.tests.UsageVarargTest.differentLength":271,"org.easymock.tests2.CallbackTest.callback":225,"org.easymock.tests2.UsageConstraintsTest.equals":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":111,"org.easymock.tests.UsageTest.openCallCountByLastCall":402,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":63,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":418,"org.easymock.tests.UsageThrowableTest.throwCheckedException":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":488,"org.easymock.tests.MockingTest.testStrictClassMocking":458,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":230,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":211,"org.easymock.tests.ObjectMethodsTest.testHashCode":287,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":127,"org.easymock.tests2.NameTest.nameForNiceMock":75,"org.easymock.tests2.DependencyTest.testInterfaceMocking":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":479,"org.easymock.samples.ExampleTest.addDocument":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":179,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests2.AnswerTest.stubAnswer":210,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":70,"org.easymock.tests.UsageVarargTest.varargLongAccepted":273,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":367,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":148,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":236,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":221,"org.easymock.tests.UsageThrowableTest.noUpperLimit":251,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":134,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":40,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":475,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":427,"org.easymock.tests2.UsageConstraintsTest.testSame":12,"org.easymock.samples.SupportTest.addDocument":240,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":164,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":220,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":465,"org.easymock.tests2.NameTest.nameForMock":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":438,"org.easymock.tests2.UsageStrictMockTest.differentMethods":154,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":430,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":305,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":284,"org.easymock.tests2.MockedExceptionTest.testRealException":147,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":371,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests2.NameTest.nameForStrictMock":74,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":94,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":135,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":422,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":26,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":92,"org.easymock.tests2.UsageStrictMockTest.range":153,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":168,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests.UsageRangeTest.combination":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":165,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":359,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":424,"org.easymock.tests.UsageVarargTest.varargShortAccepted":272,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":325,"org.easymock.tests2.UsageConstraintsTest.cmpTo":18,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":361,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":340,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":93,"org.easymock.tests.UsageTest.unexpectedCallWithArray":400,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":323,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":440,"org.easymock.tests2.CaptureTest.testCapture":5,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":392,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.samples.ExampleTest.addAndChangeDocument":249,"org.easymock.tests.UsageStrictMockTest.testVerify":396,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":239,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":391,"org.easymock.tests2.CompareToTest.testGreateThan":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":386,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":55,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":432,"org.easymock.tests.LimitationsTest.abstractClass":351,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":83,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":266}}]
