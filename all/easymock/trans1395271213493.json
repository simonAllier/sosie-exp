[{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[6,7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[10,11],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,5,76,77,78,79,80,1,81,82,83,84,2,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[120],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:327","failures":[121,122,123,124],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[125,126,127,128,129,130,131,132,133,134,135,12,13,14,15,16,136,17,18,137,138,139,140,141,142,3,143,144,145,146,147,148,149,150,151,152,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,153,154,155,156,47,157,48,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,6,183,184,185,186,7,187,188,189,190,191,192,4,193,194,8,195,196,197,198,9,199,10,200,201,202,203,204,205,206,207,208,209,0,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,49,50,51,52,248,249,53,54,250,55,251,56,57,252,58,59,60,61,253,62,254,63,64,65,255,66,67,68,256,257,69,70,71,258,72,259,260,73,74,261,75,5,76,77,262,78,79,80,1,81,82,83,84,2,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,85,86,87,88,89,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,90,91,92,93,94,310,95,311,312,96,313,314,97,98,99,100,101,315,316,317,318,319,320,321,322,323,119,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,102,409,410,411,412,103,413,414,415,121,122,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,104,105,106,107,108,109,445,110,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,123,124,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,111,112,113,114,115,116,117,118,489],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[14,15,16,25,35,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[105,109],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[138,143,144,149,202,211,295,299,300,303,428,441,443],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[177,193,198,490],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[125,126,127,128,129,130,132,133,134,135,136,138,139,140,141,142,3,143,144,145,146,147,148,149,151,152,44,45,46,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,6,183,184,185,186,7,187,188,189,190,191,192,4,193,194,8,195,196,197,198,9,199,10,200,201,202,203,204,205,206,208,209,0,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,241,249,256,257,261,268,275,276,277,278,279,85,280,281,282,283,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,92,313,314,315,316,333,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,415,121,122,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,123,124,462,463,464,465,466,467,468,469,470,471,472,473,475,476,477,478,479,480,481,482,484],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[209,83,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[97],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[213,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[491,59,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[125,126,127,128,129,130,131,132,133,134,135,12,13,14,15,15,16,16,136,17,18,138,139,140,141,142,3,143,144,145,146,147,148,149,150,151,152,19,22,24,25,27,28,31,32,33,34,35,37,40,41,42,43,44,45,46,153,154,155,156,47,157,48,158,159,160,162,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,6,183,184,185,186,7,187,188,189,190,191,192,4,193,194,8,195,196,197,198,9,199,10,200,201,202,203,204,205,206,207,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,51,52,249,53,56,58,59,60,61,63,64,256,257,69,72,259,260,73,74,261,75,5,76,77,78,79,80,1,81,82,83,84,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,85,86,87,88,89,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,90,91,92,93,94,310,95,311,312,96,313,314,97,98,99,100,101,315,316,317,318,319,320,321,322,323,119,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,411,103,414,415,121,122,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,104,105,106,107,108,109,110,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,123,124,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,111,112,113,114,115,116,117,118],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[126,172,174,175,176,436],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[276,277],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[179,185,217,219,227],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[125,127,128,129,130,132,133,134,135,12,13,136,141,3,146,147,48,161,167,168,169,170,197,201,203,204,205,206,218,219,222,223,224,225,230,59,85,298,301,302,306,309,99,315,316,374,419,420,421,423,424,426,427,429,430,431,432,471,472,473,475,476,478,479,480,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[125,126,127,128,129,130,132,133,134,135,12,13,14,15,16,136,17,138,139,140,141,142,3,143,144,145,146,147,148,149,151,152,22,25,35,41,44,45,46,153,154,156,47,157,48,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,176,177,178,179,180,182,6,183,184,185,186,187,188,189,190,191,192,4,193,194,8,195,196,197,198,9,199,10,200,201,202,203,204,205,206,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,241,49,50,51,52,249,53,54,55,56,59,60,61,62,64,65,66,256,257,73,74,261,75,5,76,77,78,1,81,82,83,268,275,276,277,278,279,85,88,280,281,282,283,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,93,94,95,313,314,98,99,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,436,437,440,441,442,443,446,447,448,449,450,451,452,453,454,455,456,457,459,460,471,472,473,475,476,477,478,479,480,481,482,494,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[44,45,46,153,306,387,446,447,448,449,450,451],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[181],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[141,146,147,204,297,298,301,302,309,495,427,430,440,442,443],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[315,316,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":180,"org.easymock.tests2.UsageTest.argumentsOrdered":147,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":295,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":327,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":3,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":135,"org.easymock.tests2.DelegateToTest.testReturnException":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":447,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.tests.MockClassControlTest.testToString":113,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":207,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":389,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":25,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":186,"org.easymock.tests2.UsageTest.wrongArguments":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":304,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":282,"org.easymock.samples.ExampleTest.answerVsDelegate":126,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":103,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":75,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":118,"org.easymock.tests2.CaptureTest.testPrimitive":220,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":408,"org.easymock.tests.UsageTest.moreThanOneArgument":296,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":383,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":466,"org.easymock.tests.UsageTest.argumentsOrdered":302,"org.easymock.tests.UsageVarargTest.varargIntAccepted":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":452,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":456,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.DependencyTest.testClassMocking":67,"org.easymock.tests2.AnswerTest.answer":211,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":234,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":410,"org.easymock.tests2.CaptureTest.testAnd":217,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":162,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":470,"org.easymock.tests2.DelegateToTest.testDelegate":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":404,"org.easymock.tests.LimitationsTest.mockFinalMethod":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":291,"org.easymock.tests2.DependencyTest.testClassMockingSupport":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":221,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":402,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":232,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.UsageThrowableTest.throwError":373,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":412,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":489,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":43,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":310,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests2.CompareToTest.testLessOrEqual":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":453,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":463,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":488,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":390,"org.easymock.tests2.UsageTest.niceToStrict":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":59,"org.easymock.tests2.MockBuilderTest.testCreateMock":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":271,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":398,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":163,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":409,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":122,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":280,"org.easymock.tests.UsageOverloadedMethodTest.overloading":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":437,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":191,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":352,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":190,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":120,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":474,"org.easymock.tests.MockClassControlTest.testEquals":117,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":406,"org.easymock.tests2.CaptureTest.testCaptureAll":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":289,"org.easymock.tests.MockNameTest.defaultName":388,"org.easymock.tests2.UsageConstraintsTest.testMatches":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":384,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":361,"org.easymock.samples.ExampleTest.voteForRemovals":130,"org.easymock.tests.UsageVarargTest.allKinds":482,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":441,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":379,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":451,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":243,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":445,"org.easymock.tests2.UsageConstraintsTest.greaterThan":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":458,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":83,"org.easymock.samples.ExampleTest.voteForRemoval":127,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":110,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":84,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":276,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":77,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":85,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":160,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":446,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":171,"org.easymock.tests2.CaptureTest.testCaptureFirst":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":161,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":348,"org.easymock.tests2.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.CaptureTest.testCapture2_2446744":229,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":278,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":335,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":481,"org.easymock.tests.GenericTest.testBridgedEquals":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":423,"org.easymock.tests.UsageExpectAndReturnTest.longType":344,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":407,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":465,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":405,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":381,"org.easymock.tests.UsageCallCountTest.tooManyCalls":424,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":394,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":378,"org.easymock.tests.MockingTest.testNiceClassMocking":96,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testClassMocking":91,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":491,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":417,"org.easymock.tests2.UsageConstraintsTest.testContains":189,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":182,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":294,"org.easymock.tests.MockTypeTest.fromEasyMockClass":411,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":425,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":156,"org.easymock.tests.UsageExpectAndReturnTest.object":351,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":476,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":486,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":493,"org.easymock.tests.UsageTest.exactCallCountByLastCall":303,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":467,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":436,"org.easymock.tests.MockClassControlTest.testHashCode":116,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":237,"org.easymock.tests2.EasyMockSupportTest.testVerify":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":32,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":468,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":434,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":231,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":150,"org.easymock.tests.UsageVarargTest.varargCharAccepted":475,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":444,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":340,"org.easymock.tests2.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests.DefaultClassInstantiatorTest.object":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":415,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":484,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":236,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":395,"org.easymock.tests.CapturesMatcherTest.test":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":461,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests2.UsageTest.resumeIfFailure":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":449,"org.easymock.tests2.StubTest.stubWithReturnValue":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":350,"org.easymock.tests2.SerializationTest.testAllMockedMethod":48,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":333,"org.easymock.samples.SupportTest.voteForRemovals":134,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":401,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":339,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":212,"org.easymock.tests.UsageExpectAndThrowTest.object":399,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":286,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":195,"org.easymock.tests2.DelegateToTest.testWrongClass":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":313,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":314,"org.easymock.tests.UsageStrictMockTest.range":430,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":259,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":400,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":19,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":301,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":281,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":464,"org.easymock.tests2.CaptureTest.testCaptureNone":225,"org.easymock.tests.UsageUnorderedTest.message":309,"org.easymock.tests.UsageVerifyTest.twoReturns":443,"org.easymock.tests.UsageVarargTest.varargByteAccepted":480,"org.easymock.tests2.ThreadingTest.testThreadSafe":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":36,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":421,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":487,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageConstraintsTest.any":187,"org.easymock.tests2.StubTest.stub":151,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":448,"org.easymock.tests.UsageExpectAndThrowTest.longType":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":108,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":241,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":265,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":206,"org.easymock.tests2.NameTest.nameForMocksControl":210,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":24,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":300,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":393,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":155,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":62,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":76,"org.easymock.tests2.CaptureTest.testCaptureLast":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":263,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":316,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests.MockingTest.testTwoMocks":92,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":397,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":199,"org.easymock.samples.ExampleTest.removeNonExistingDocument":131,"org.easymock.tests.UsageStrictMockTest.differentMethods":431,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":270,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":238,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":106,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":277,"org.easymock.tests2.MockBuilderTest.testCreateMockString":66,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":111,"org.easymock.tests.UsageExpectAndThrowTest.floatType":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":26,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":214,"org.easymock.tests.UsageVerifyTest.twoThrows":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":137,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":82,"org.easymock.tests.LimitationsTest.privateConstructor":87,"org.easymock.tests2.UsageConstraintsTest.testNotNull":9,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":380,"org.easymock.tests2.UsageTest.defaultResetToNice":145,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":356,"org.easymock.tests.UsageVarargTest.differentLength":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":264,"org.easymock.tests2.CallbackTest.callback":235,"org.easymock.tests2.UsageConstraintsTest.equals":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":79,"org.easymock.tests.UsageTest.openCallCountByLastCall":299,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":306,"org.easymock.tests.UsageCallCountTest.tooFewCalls":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":283,"org.easymock.tests.UsageThrowableTest.throwCheckedException":377,"org.easymock.tests.MockingTest.testStrictClassMocking":90,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":387,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":269,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":249,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":216,"org.easymock.tests.ObjectMethodsTest.testHashCode":485,"org.easymock.tests2.NameTest.nameForNiceMock":0,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":256,"org.easymock.samples.ExampleTest.addDocument":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":37,"org.easymock.tests2.DelegateToTest.testStubDelegate":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.AnswerTest.stubAnswer":215,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":428,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":254,"org.easymock.tests.UsageVarargTest.varargLongAccepted":479,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndReturnTest.floatType":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":438,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":245,"org.easymock.tests.UsageThrowableTest.noUpperLimit":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":178,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":69,"org.easymock.tests2.SerializationTest.test":157,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":222,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":105,"org.easymock.tests2.UsageConstraintsTest.testSame":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":342,"org.easymock.samples.SupportTest.addDocument":133,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":248,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":27,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":244,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":311,"org.easymock.tests2.NameTest.nameForMock":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":353,"org.easymock.tests2.UsageStrictMockTest.differentMethods":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":403,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":460,"org.easymock.tests2.MockedExceptionTest.testRealException":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":305,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":372,"org.easymock.tests2.NameTest.nameForStrictMock":209,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":56,"org.easymock.tests2.UsageStrictMockTest.range":204,"org.easymock.tests2.UsageConstraintsTest.lessThan":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":31,"org.easymock.tests2.CaptureTest.testCaptureRightOne":227,"org.easymock.tests2.UsageConstraintsTest.testOr":184,"org.easymock.tests.UsageRangeTest.combination":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":298,"org.easymock.tests2.MockBuilderTest.testWithConstructor":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":28,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":354,"org.easymock.tests.UsageVarargTest.varargShortAccepted":478,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":109,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":422,"org.easymock.tests2.UsageConstraintsTest.cmpTo":188,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":213,"org.easymock.tests2.CompareToTest.testLessThan":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":321,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.CaptureTest.testCaptureFromStub":228,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":362,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":57,"org.easymock.tests.UsageTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":427,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":420,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":355,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":429,"org.easymock.tests2.UsageConstraintsTest.constraints":179,"org.easymock.samples.ExampleTest.addAndChangeDocument":132,"org.easymock.tests.UsageStrictMockTest.testVerify":433,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":136,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":288,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":454,"org.easymock.tests.LimitationsTest.abstractClass":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":455,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":164}}]
