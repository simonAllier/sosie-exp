[{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[25,43,44,45,46,47,48,49,50,31,51,52,53,36,54,55,56,57,58,59,60,61,62,63,64,65,41,42,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,10,87,88,89,11,12,90,13,91,92,14,93,94,95,96,97,98,99,100,101,102,103,104,105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[106,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[108,109,110,5,111,112,113,114,115,116,117,118,119,19,120,121,122],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[25,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,74,75,138,76,113,114,139,140,77,1,141,78,2,142,143,79,80,6,7,8,144,145,146,147,148,149,150,151,152,153,154,155,81,156,157,115,16,158,159,17,18,160,161,162,163,164,165,166,167,168,169,170,171,172,173,24,174,175,176,3,177,178,179,180,181,182,183,184,185,186,187,188,67,189,190,191,192,193,194,195,196,0,23,50,31,53,103,197,198,199,200,104,121,122,201,202,203,204,205,39,206,105,207,208,209,20,210,211,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[212],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return this.java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[212,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[24,214,188,195],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[215],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + (org.easymock.internal.Range.toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[216,217,132,218,134,135,75,5,112,113,114,139,6,7,8,219,154,156,115,16,158,159,17,18,162,165,166,167,220,178,50,53,103,19,120,198,199,121,122,201,205,206,207,221,222,223,224,208,20,210,211,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":170,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests2.UsageTest.argumentsOrdered":122,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":71,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":199,"org.easymock.tests2.StubTest.stubWithReturnValue":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":69,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":118,"org.easymock.samples.SupportTest.voteForRemovals":123,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":83,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.UsageExpectAndThrowTest.object":90,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":182,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":159,"org.easymock.samples.ExampleTest.answerVsDelegate":125,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":58,"org.easymock.tests2.UsageConstraintsTest.testNull":172,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests2.CaptureTest.testPrimitive":67,"org.easymock.tests.UsageTest.moreThanOneArgument":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":97,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":113,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":55,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":108,"org.easymock.tests2.CaptureTest.testCaptureNone":193,"org.easymock.tests.UsageUnorderedTest.message":135,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":151,"org.easymock.tests.UsageTest.argumentsOrdered":114,"org.easymock.tests.UsageVarargTest.varargIntAccepted":146,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":133,"org.easymock.tests2.CaptureTest.testCapture_2617107":188,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":82,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":70,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests.LimitationsTest.mockNativeMethod":43,"org.easymock.tests2.AnswerTest.answer":202,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":29,"org.easymock.tests2.CaptureTest.testAnd":214,"org.easymock.tests2.UsageTest.strictResetToDefault":197,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":22,"org.easymock.tests2.NameTest.nameForMocksControl":224,"org.easymock.tests2.MockedExceptionTest.testMockedException":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.DelegateToTest.testDelegate":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":10,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":93,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.CaptureTest.testCaptureLast":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":64,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":24,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":183,"org.easymock.tests2.CaptureTest.testCapture1_2446744":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":11,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests.UsageThrowableTest.throwError":1,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":107,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.UsageExpectAndThrowTest.floatType":85,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":178,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":47,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests2.UsageTest.niceToStrict":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":84,"org.easymock.tests2.UsageConstraintsTest.testNotNull":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":80,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":99,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.MockBuilderTest.testCreateMock":34,"org.easymock.samples.ExampleTest.voteAgainstRemovals":124,"org.easymock.tests.UsageVarargTest.differentLength":219,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":38,"org.easymock.tests.UsageTest.openCallCountByLastCall":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":12,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":116,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":81,"org.easymock.tests.UsageCallCountTest.tooFewCalls":132,"org.easymock.tests.UsageOverloadedMethodTest.overloading":137,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":98,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":61,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":3,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":194,"org.easymock.tests.UsageThrowableTest.throwCheckedException":142,"org.easymock.tests2.EasyMockSupportClassTest.testAll":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":95,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":109,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":117,"org.easymock.tests2.CaptureTest.testCaptureAll":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":60,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":136,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests2.NameTest.nameForNiceMock":223,"org.easymock.tests.UsageVarargTest.allKinds":153,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.tests2.DelegateToTest.testStubDelegate":49,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":79,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":73,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":32,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":206,"org.easymock.tests.UsageVarargTest.varargLongAccepted":150,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":141,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":163,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":78,"org.easymock.tests2.UsageConstraintsTest.testSame":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":68,"org.easymock.tests2.CaptureTest.testCaptureFirst":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":164,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests2.CaptureTest.testCapture2_2446744":196,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":48,"org.easymock.tests2.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":152,"org.easymock.tests2.NameTest.nameForMock":221,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":96,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":184,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":94,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":14,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.MockedExceptionTest.testRealException":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":87,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":59,"org.easymock.tests2.NameTest.nameForStrictMock":222,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":101,"org.easymock.tests2.UsageConstraintsTest.testFind":171,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":204,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":156,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":181,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":50,"org.easymock.tests2.UsageStrictMockTest.range":211,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":148,"org.easymock.tests.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":162,"org.easymock.tests2.CaptureTest.testCaptureRightOne":195,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":130,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":37,"org.easymock.tests.UsageRangeTest.combination":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":203,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":144,"org.easymock.tests.UsageTest.wrongArguments":112,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":131,"org.easymock.tests.UsageVarargTest.varargShortAccepted":149,"org.easymock.tests2.UsageConstraintsTest.cmpTo":176,"org.easymock.tests.UsageVarargTest.varargCharAccepted":147,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests2.UsageTest.openCallCountByLastCall":200,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests.UsageTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":115,"org.easymock.tests2.CaptureTest.testCapture":213,"org.easymock.tests2.UsageConstraintsTest.constraints":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":205,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":88,"org.easymock.samples.ExampleTest.addAndChangeDocument":129,"org.easymock.tests2.ConstraintsToStringTest.notToString":4,"org.easymock.tests.CapturesMatcherTest.test":212,"org.easymock.tests.UsageStrictMockTest.testVerify":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":66,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":157,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166}}]
