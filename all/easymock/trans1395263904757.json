[{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,6,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[66,17,67,68,69,18,19,70,20,71,72,73,74,75,21,76,77,78,79,80,81,82,16,83,84,85,86,87,22,88,89,90,91,92,93,94,95,96,97,98,99,100,27,101,102,103,104,105,106,107,65,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,30,136,137,31,32,33,138,139,140,34,141,142,35,36,37,143,144,38,39,40,41,0,2,145,3,146,4,5,6,147,148,149,150,151,152,153,154,155,156,7,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,42,183,184,185,186,187,188,189,190,45,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,49,50,228,10,229,230,231,51,232,52,233,53,234,54,55,56,235,236,237,57,238,59,239,240,60,61,62,241,242,243,244,245,246,11,12,247,248,249,250,251,252,13,253,254,255,256,257,258,14,259,260,261,262,263,63,64,264,265,266,15,267,9,268,269],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod","finalizeMethod":"method"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[270,271,272],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"args":"args","mockClass":"mockClass","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[110,112,113,7,273,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"answer"}},{"position":"org.easymock.internal.LastControl:92","failures":[274],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[275,190],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[276],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[277,38,60],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[22,103,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[278,98,99,279],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[280,281,282,283,284,66,17,67,68,69,18,19,285,70,20,71,72,73,74,75,21,76,277,77,78,79,80,81,82,274,16,83,84,85,86,87,22,88,89,90,91,92,93,94,95,96,97,286,23,287,288,289,290,291,292,24,25,26,98,99,100,27,101,102,103,104,293,294,105,295,296,28,297,29,298,299,300,301,302,303,106,107,65,108,109,304,110,111,112,305,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,306,307,308,309,310,311,312,128,129,130,131,132,133,134,135,30,136,137,31,32,33,138,313,314,139,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,140,333,334,335,336,337,338,34,141,142,35,36,37,143,144,339,38,39,40,41,0,340,1,2,145,3,341,342,343,344,345,146,346,347,348,349,350,351,4,352,5,6,147,353,148,149,354,150,151,152,355,153,154,155,156,7,157,158,159,160,356,161,162,163,164,165,166,167,168,169,170,171,172,173,174,357,358,359,360,175,176,177,178,179,180,361,181,182,42,183,184,185,186,187,275,188,189,362,190,45,363,191,192,193,194,195,196,197,198,199,200,364,365,201,366,367,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,368,369,370,371,372,373,222,223,374,375,224,225,226,227,48,49,50,376,377,378,379,380,381,228,10,382,229,230,383,384,385,386,387,388,389,390,276,391,392,393,394,395,396,397,231,398,399,400,401,402,403,273,404,405,406,407,408,409,410,411,412,413,8,414,415,416,417,418,419,420,421,422,423,424,425,426,51,232,427,428,429,430,52,233,53,234,54,55,56,235,236,237,57,238,58,59,239,240,60,61,62,431,432,433,241,242,243,244,245,246,434,435,436,437,438,439,440,441,442,443,444,445,446,11,12,247,248,249,250,251,252,13,253,254,255,256,257,258,14,259,260,261,262,447,448,449,263,63,64,264,265,266,15,267,450,451,452,453,454,455,456,457,9,458,268,269,459,460,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[462,463,464,465,466,467,468,137,32,33,142,35,38,39,51,234,55,56,238,59,60,61,447,448,263,63,64,458,459,460],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[278,98,99,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[66,17,67,68,69,18,19,285,70,20,71,72,73,74,75,21,76,77,78,79,80,81,82,16,83,84,85,86,87,22,88,89,90,91,92,93,94,95,96,97,286,23,289,290,291,292,24,25,26,278,98,99,100,27,101,102,103,104,293,105,296,28,297,29,300,301,302,303,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,469,30,136,137,31,32,33,138,139,316,321,327,140,34,141,142,35,36,37,143,144,339,38,39,40,41,0,2,145,3,146,4,5,6,147,353,470,148,149,471,472,150,151,473,474,152,355,153,154,155,156,7,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,42,183,184,185,186,187,188,189,45,191,192,193,194,195,196,197,198,199,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,225,226,227,48,49,50,228,10,231,51,232,427,428,429,430,52,233,53,234,54,55,56,235,237,57,238,58,59,239,240,60,61,62,241,242,243,244,245,246,434,435,436,437,11,12,247,248,249,250,251,252,13,253,254,255,256,257,258,14,259,260,261,262,263,63,64,264,265,266,15,267,475,476,477,9,268,269,461],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[82,86,97,478],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[479,480,481,482,483,484,485],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[280,66,17,67,69,18,285,20,71,72,73,74,75,21,76,277,77,78,79,80,81,82,274,16,83,84,85,86,87,22,88,89,90,91,92,93,94,95,96,97,23,288,289,290,291,486,24,278,98,99,100,27,101,102,103,104,293,105,487,295,296,28,297,29,298,300,301,302,303,106,107,65,108,109,304,110,111,112,305,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,306,307,308,309,310,128,129,130,131,132,133,134,135,469,485,30,136,137,31,32,33,138,313,139,315,316,318,488,489,490,320,491,321,323,326,327,492,493,328,329,330,331,332,140,333,334,335,336,337,338,34,141,142,35,36,37,143,144,339,38,39,40,41,0,340,1,2,145,3,341,342,343,344,345,146,346,347,348,349,350,351,4,352,5,6,470,148,149,471,150,151,473,473,474,474,152,355,153,154,155,156,7,157,158,159,160,356,161,162,163,164,165,166,167,168,169,170,171,172,173,174,357,358,359,360,175,176,177,178,179,180,361,181,182,42,183,184,185,186,187,275,188,189,362,190,45,363,191,192,193,194,195,196,197,198,199,200,364,365,201,366,367,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,368,369,370,371,372,373,222,223,374,375,224,225,226,227,48,49,50,377,379,381,228,10,382,229,230,383,384,385,386,387,388,389,390,276,391,392,393,394,395,396,397,231,398,399,400,401,402,403,273,404,405,406,407,408,409,410,411,412,413,8,414,415,416,417,418,419,420,421,422,423,424,425,426,51,232,427,428,429,430,52,233,53,234,54,55,56,235,236,237,57,238,58,59,239,240,60,61,62,431,432,433,241,242,243,244,245,246,434,435,436,437,439,440,441,442,443,444,446,11,12,247,248,249,250,251,252,13,253,254,255,256,257,258,14,259,260,261,262,447,448,449,263,63,64,264,265,266,15,267,450,451,452,453,475,476,454,477,455,456,457,9,458,268,269,459,460,461],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"args":"args","mockClass":"mockClass","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[32,35,38,39,47,51,53,55,58,59,60,61,63,64,461],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[85,187,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests2.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":411,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":152,"org.easymock.tests2.DelegateToTest.testReturnException":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":242,"org.easymock.tests.MockingTest.testPartialClassMocking":475,"org.easymock.tests.MockClassControlTest.testToString":370,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":280,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":202,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":316,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":82,"org.easymock.tests2.UsageTest.wrongArguments":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":195,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":436,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":379,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":456,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":20,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":223,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":221,"org.easymock.tests.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":266,"org.easymock.tests.UsageTest.argumentsOrdered":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":484,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":174,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":464,"org.easymock.tests.ReplayStateInvalidUsageTest.times":392,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.DependencyTest.testClassMocking":311,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":417,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":303,"org.easymock.tests2.CaptureTest.testAnd":114,"org.easymock.tests2.UsageTest.strictResetToDefault":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":69,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":384,"org.easymock.tests2.DelegateToTest.testDelegate":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":217,"org.easymock.tests.LimitationsTest.mockFinalMethod":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":430,"org.easymock.tests2.DependencyTest.testClassMockingSupport":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":447,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":301,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":387,"org.easymock.tests.UsageThrowableTest.throwError":162,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":378,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":44,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":493,"org.easymock.samples.PartialClassMockTest.testGetArea":355,"org.easymock.tests.MockingTest.testInterfaceMocking":454,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":400,"org.easymock.tests2.UsageTest.niceToStrict":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":319,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":270,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":289,"org.easymock.tests2.MockBuilderTest.testCreateMock":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":211,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":18,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":426,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":434,"org.easymock.tests.UsageOverloadedMethodTest.overloading":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":269,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":255,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":361,"org.easymock.tests2.EasyMockSupportClassTest.testAll":139,"org.easymock.tests.MockClassControlTest.testEquals":222,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":428,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":302,"org.easymock.tests.MockNameTest.defaultName":450,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":15,"org.easymock.samples.ExampleTest.voteForRemovals":160,"org.easymock.tests.UsageVarargTest.allKinds":187,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":429,"org.easymock.samples.BasicClassMockTest.testPrintContent":151,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":168,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":246,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":445,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":363,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":29,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":446,"org.easymock.samples.ExampleTest.voteForRemoval":157,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":293,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":237,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":67,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":241,"org.easymock.tests2.CaptureTest.testCaptureFirst":127,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":68,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":41,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.UsageTest.moreThanOneArgument":142,"org.easymock.tests2.CaptureTest.testCapture2_2446744":126,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":418,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":186,"org.easymock.tests.GenericTest.testBridgedEquals":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":49,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":220,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":264,"org.easymock.tests.UsageCallCountTest.tooManyCalls":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":207,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":167,"org.easymock.tests.MockingTest.testNiceClassMocking":457,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":353,"org.easymock.tests.MockingTest.testClassMocking":452,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":134,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":177,"org.easymock.tests.MockTypeTest.fromEasyMockClass":377,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":5,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests.UsageExpectAndReturnTest.object":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":481,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":182,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":201,"org.easymock.tests.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":229,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":485,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":268,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests.MockClassControlTest.testHashCode":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":490,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":425,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":9,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":300,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":310,"org.easymock.tests.UsageVarargTest.varargCharAccepted":181,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":438,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastCall":143,"org.easymock.tests.DefaultClassInstantiatorTest.object":439,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":424,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":364,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":327,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":371,"org.easymock.tests2.UsageTest.resumeIfFailure":40,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":244,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":479,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":253,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":416,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":466,"org.easymock.samples.SupportTest.voteForRemovals":155,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":275,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":214,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":279,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":422,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":340,"org.easymock.tests.UsageExpectAndThrowTest.object":212,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":359,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":473,"org.easymock.tests.UsageStrictMockTest.range":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":308,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":213,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":291,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":435,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":401,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":43,"org.easymock.tests.UsageVerifyTest.twoReturns":64,"org.easymock.tests.UsageVarargTest.varargByteAccepted":185,"org.easymock.tests2.ThreadingTest.testThreadSafe":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":322,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":150,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":366,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":468,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":198,"org.easymock.tests2.UsageConstraintsTest.any":16,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":391,"org.easymock.tests2.StubTest.stub":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndThrowTest.longType":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":443,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":276,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests2.SerializationTest.testClass":278,"org.easymock.tests.LimitationsTest.mockNativeMethod":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":262,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests2.NameTest.nameForMocksControl":284,"org.easymock.tests2.MockedExceptionTest.testMockedException":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":315,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":477,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":206,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":352,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":292,"org.easymock.tests.MockingTest.testNicePartialClassMocking":476,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.CaptureTest.testCaptureLast":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":448,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":472,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.MockingTest.testTwoMocks":453,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":210,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":356,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":389,"org.easymock.tests.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":441,"org.easymock.tests2.ConstraintsToStringTest.andToString":465,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":65,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":368,"org.easymock.tests.UsageExpectAndThrowTest.floatType":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":317,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":2,"org.easymock.tests.UsageVerifyTest.twoThrows":63,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":321,"org.easymock.samples.ExampleTest.voteAgainstRemoval":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":399,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":297,"org.easymock.tests.LimitationsTest.privateConstructor":397,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":169,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":132,"org.easymock.tests2.UsageTest.defaultResetToNice":339,"org.easymock.samples.ExampleTest.voteAgainstRemovals":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":14,"org.easymock.tests.UsageVarargTest.differentLength":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.UsageConstraintsTest.equals":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":487,"org.easymock.tests.UsageTest.openCallCountByLastCall":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":197,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":437,"org.easymock.tests.UsageThrowableTest.throwCheckedException":166,"org.easymock.tests.MockingTest.testStrictClassMocking":451,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":471,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":194,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests2.CompareToTest.testGreateOrEqual":478,"org.easymock.tests.ObjectMethodsTest.testHashCode":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":109,"org.easymock.tests2.NameTest.nameForNiceMock":283,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":482,"org.easymock.samples.ExampleTest.addDocument":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.DelegateToTest.testStubDelegate":111,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":234,"org.easymock.tests.UsageVarargTest.varargLongAccepted":184,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":469,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":474,"org.easymock.tests2.ConstraintsToStringTest.orToString":462,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests.UsageThrowableTest.noUpperLimit":163,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":75,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":306,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":119,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":12,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.samples.SupportTest.addDocument":154,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":318,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":455,"org.easymock.tests2.NameTest.nameForMock":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":256,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":216,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":192,"org.easymock.tests2.MockedExceptionTest.testRealException":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":309,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":8,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":196,"org.easymock.tests2.NameTest.nameForStrictMock":282,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":288,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":4,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":307,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":23,"org.easymock.tests2.UsageStrictMockTest.range":32,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":489,"org.easymock.tests2.CaptureTest.testCaptureRightOne":124,"org.easymock.tests2.UsageConstraintsTest.testOr":80,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":488,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":444,"org.easymock.tests.UsageVarargTest.varargShortAccepted":183,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":48,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.CaptureTest.testCaptureFromStub":125,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":386,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":287,"org.easymock.tests.UsageTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":258,"org.easymock.tests2.UsageConstraintsTest.constraints":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.samples.ExampleTest.addAndChangeDocument":161,"org.easymock.tests2.ConstraintsToStringTest.notToString":463,"org.easymock.tests.UsageStrictMockTest.testVerify":236,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":153,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":427,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":172,"org.easymock.tests.LimitationsTest.abstractClass":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":173,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":19}}]
