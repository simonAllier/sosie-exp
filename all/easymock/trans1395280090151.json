[{"position":"org.easymock.internal.RecordState:233","failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[101,102,103,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,324,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,325,326,327,328,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,329,83,330,84,85,86,331,87,88,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,332,333,334,335,336,337,178,338,179,180,181,182,339,340,341,342,343,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,344,209,210,211,212,213,214,345,346,347,348,349,216,217,218,219,245,246,247,248,249,250,251,253,254,255,256,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,288,289,290,291,292,293,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[350,351,164,344,352,353],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[0,0,1,1,2,4,5,16,17,19,20,21,354,22,324,23,24,25,28,329,355,82,356,83,330,84,85,357,86,358,331,359,360,361,362,87,88,89,90,91,93,94,101,103,105,106,107,108,363,159,160,161,364,365,349,283,284,285,286,294],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,366,12,13,14,15,16,17,18,19,20,21,354,367,22,368,369,324,23,24,25,370,371,26,27,28,29,30,31,32,33,34,35,36,372,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,373,374,375,376,377,55,378,379,380,381,382,383,325,326,327,328,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,329,384,82,356,385,386,83,330,84,387,85,388,389,357,86,390,331,87,391,392,88,89,90,91,393,92,93,94,394,395,396,397,398,399,400,401,95,96,97,98,99,100,402,101,102,103,403,404,405,406,407,104,408,409,410,411,412,413,414,415,416,105,417,418,106,419,420,421,422,423,424,425,426,427,107,428,429,430,431,432,108,433,434,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,435,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,436,437,151,152,153,438,154,155,439,156,157,440,158,441,442,443,363,159,160,444,161,445,446,447,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,448,332,449,333,334,450,335,451,452,336,453,337,178,338,179,180,181,182,454,183,184,455,185,186,456,457,458,459,460,339,340,341,342,343,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,344,209,210,211,212,213,214,364,461,462,463,464,365,465,466,215,345,346,347,348,467,349,468,469,470,471,472,473,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,247,248,249,490,250,251,252,253,254,255,256,257,258,259,260,491,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,492,284,285,286,493,494,287,495,288,289,290,291,292,293,496,497,294,498,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[499,141],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[492],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1976","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[387,500,501,502,503,504,391],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[101,102,103,323],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[176,273,305,307,321,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[17,324,25,90,394],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[101,102,103,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[334,459],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[23,371,82,86],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[0,1,2,4,5,16,17,19,20,21,354,22,369,324,23,24,25,370,371,26,27,28,88,89,90,91,93,94,395,399,103,414,105,418,419,420,423,426,428,429,432,442,443,363,159,160,161,447,467,349,468,469,470,471,472,473,481,482,483,484,485,486,488,283,492,284,285,493,496,497,294,498],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,366,12,13,14,15,16,17,18,19,20,21,354,367,22,368,369,324,23,24,25,370,371,26,27,28,29,30,31,32,33,34,35,36,372,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,373,374,375,376,377,55,378,379,380,381,382,383,325,326,327,328,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,329,384,82,356,385,386,83,330,84,387,85,388,389,357,86,390,331,87,391,392,88,89,90,91,393,92,93,94,394,395,396,397,398,399,400,401,95,96,97,98,99,100,402,101,102,103,403,404,405,406,407,104,408,409,410,411,412,413,414,415,416,105,417,418,106,419,420,421,422,423,424,425,426,427,107,428,429,430,431,432,108,433,434,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,435,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,436,437,151,152,153,438,154,155,439,156,157,440,158,441,442,443,363,159,160,444,161,445,446,447,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,448,332,449,333,334,450,335,451,452,336,453,337,178,338,179,180,181,182,454,183,184,455,185,186,456,457,458,459,460,339,340,341,342,343,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,344,209,210,211,212,213,214,364,461,462,463,464,365,465,466,215,345,346,347,348,467,349,468,469,470,471,472,473,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,247,248,249,490,250,251,252,253,254,255,256,257,258,259,260,491,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,492,284,285,286,493,494,287,495,288,289,290,291,292,293,496,497,294,498,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[101,102,103,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[113,115,116,117,156,222],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[324,160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[101,102,103,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[22,324,32,33,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,402,101,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,164,165,171,172,173,174,175,176,177,257,258,261,262,278,279,280,281,282,292,293,301,302,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[505,132,138,150],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[23,24,506,355,83],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,95,97,98,100,109,153,154,155,233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[376,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[41,43,51,125,126,128,130,131,133,143,148],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":126,"org.easymock.tests2.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":230,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":61,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.DelegateToTest.testReturnException":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":289,"org.easymock.tests.MockingTest.testPartialClassMocking":159,"org.easymock.tests.MockClassControlTest.testToString":468,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":372,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":106,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":171,"org.easymock.tests2.UsageTest.wrongArguments":59,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":347,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":365,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":446,"org.easymock.tests2.UsageConstraintsTest.testNull":128,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":473,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests2.CaptureTest.testPrimitive":44,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests.UsageTest.moreThanOneArgument":208,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":455,"org.easymock.tests.UsageTest.argumentsOrdered":213,"org.easymock.tests.UsageVarargTest.varargIntAccepted":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":282,"org.easymock.tests.ReplayStateInvalidUsageTest.times":452,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests2.DependencyTest.testClassMocking":436,"org.easymock.tests2.AnswerTest.answer":95,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":328,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":462,"org.easymock.tests2.CaptureTest.testAnd":41,"org.easymock.tests2.UsageTest.strictResetToDefault":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":457,"org.easymock.tests2.DelegateToTest.testDelegate":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.LimitationsTest.mockFinalMethod":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":343,"org.easymock.tests2.DependencyTest.testClassMockingSupport":437,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":458,"org.easymock.tests2.CaptureTest.testCapture1_2446744":45,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":326,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":449,"org.easymock.tests.UsageThrowableTest.throwError":265,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":464,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":434,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":444,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":296,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":423,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests2.UsageTest.niceToStrict":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":83,"org.easymock.tests2.MockBuilderTest.testCreateMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":350,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":74,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":461,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":345,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":157,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":138,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":137,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":50,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":490,"org.easymock.tests.MockClassControlTest.testEquals":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":105,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":359,"org.easymock.tests2.CaptureTest.testCaptureAll":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":341,"org.easymock.tests.MockNameTest.defaultName":489,"org.easymock.tests2.UsageConstraintsTest.testMatches":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":257,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":262,"org.easymock.samples.BasicClassMockTest.testPrintContent":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":342,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":271,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":293,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":488,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":119,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":354,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":71,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":288,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":112,"org.easymock.tests2.CaptureTest.testCaptureFirst":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":72,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":310,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":53,"org.easymock.tests2.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":238,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":256,"org.easymock.tests.GenericTest.testBridgedEquals":493,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":183,"org.easymock.tests.UsageExpectAndReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":339,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":358,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":146,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":299,"org.easymock.tests.UsageCallCountTest.tooManyCalls":184,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":270,"org.easymock.tests.MockingTest.testNiceClassMocking":447,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":89,"org.easymock.tests.MockingTest.testClassMocking":443,"org.easymock.tests2.UsageConstraintsTest.testContains":136,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":338,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":355,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":28,"org.easymock.tests2.UsageConstraintsTest.testFind":127,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":246,"org.easymock.tests.MockTypeTest.fromEasyMockClass":463,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":154,"org.easymock.tests.UsageExpectAndReturnTest.object":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":251,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":477,"org.easymock.tests.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":494,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":185,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":391,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":156,"org.easymock.tests.MockClassControlTest.testHashCode":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests2.EasyMockSupportTest.testVerify":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":425,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":325,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":402,"org.easymock.tests.UsageVarargTest.varargCharAccepted":250,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":480,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":243,"org.easymock.tests2.UsageTest.openCallCountByLastCall":62,"org.easymock.tests.DefaultClassInstantiatorTest.object":481,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":258,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":426,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":268,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":470,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":298,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":108,"org.easymock.tests2.UsageTest.resumeIfFailure":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":291,"org.easymock.tests2.StubTest.stubWithReturnValue":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":387,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":312,"org.easymock.tests2.SerializationTest.testAllMockedMethod":103,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":236,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":351,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":323,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":242,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":96,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":495,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":144,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":176,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":177,"org.easymock.tests.UsageStrictMockTest.range":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":400,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":414,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":346,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":352,"org.easymock.tests2.CaptureTest.testCaptureNone":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":297,"org.easymock.tests.UsageUnorderedTest.message":261,"org.easymock.tests.UsageVerifyTest.twoReturns":264,"org.easymock.tests.UsageVarargTest.varargByteAccepted":255,"org.easymock.tests2.ThreadingTest.testThreadSafe":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":428,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":182,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":4,"org.easymock.tests2.CaptureTest.testCapture_2617107":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":460,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":240,"org.easymock.tests2.UsageConstraintsTest.any":134,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":451,"org.easymock.tests2.StubTest.stub":110,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":300,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":290,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":485,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":33,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests2.SerializationTest.testClass":101,"org.easymock.tests.LimitationsTest.mockNativeMethod":294,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":322,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":361,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":36,"org.easymock.tests2.NameTest.nameForMocksControl":40,"org.easymock.tests2.MockedExceptionTest.testMockedException":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":418,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":438,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":161,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":16,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":85,"org.easymock.tests.MockingTest.testNicePartialClassMocking":160,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.CaptureTest.testCaptureLast":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":459,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":94,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":145,"org.easymock.tests.MockingTest.testTwoMocks":363,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":149,"org.easymock.samples.ExampleTest.removeNonExistingDocument":366,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":483,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":120,"org.easymock.tests2.MockBuilderTest.testCreateMockString":331,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":419,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":392,"org.easymock.tests.UsageVerifyTest.twoThrows":263,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":107,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests.LimitationsTest.privateConstructor":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":148,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":272,"org.easymock.tests2.UsageTest.defaultResetToNice":64,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":232,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":318,"org.easymock.tests.UsageVarargTest.differentLength":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.UsageConstraintsTest.equals":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":368,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":173,"org.easymock.tests.UsageCallCountTest.tooFewCalls":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":91,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":348,"org.easymock.tests.UsageThrowableTest.throwCheckedException":269,"org.easymock.tests.MockingTest.testStrictClassMocking":442,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":353,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":302,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":92,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":100,"org.easymock.tests2.CompareToTest.testGreateOrEqual":505,"org.easymock.tests.ObjectMethodsTest.testHashCode":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":122,"org.easymock.tests2.NameTest.nameForNiceMock":39,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":502,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.AnswerTest.stubAnswer":99,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":165,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":388,"org.easymock.tests.UsageVarargTest.varargLongAccepted":254,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":229,"org.easymock.tests.UsageExpectAndReturnTest.floatType":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":87,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":142,"org.easymock.tests.UsageThrowableTest.noUpperLimit":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":124,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":395,"org.easymock.tests2.SerializationTest.test":102,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":46,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":482,"org.easymock.tests2.UsageConstraintsTest.testSame":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":304,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":393,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":420,"org.easymock.tests.GenericTest.testPackageScope":284,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":445,"org.easymock.tests2.NameTest.nameForMock":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":390,"org.easymock.tests2.UsageStrictMockTest.differentMethods":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests2.MockedExceptionTest.testRealException":29,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":234,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":172,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":337,"org.easymock.tests2.NameTest.nameForStrictMock":38,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":399,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":484,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":143,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":82,"org.easymock.tests2.UsageStrictMockTest.range":34,"org.easymock.tests2.UsageConstraintsTest.lessThan":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":506,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":424,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests2.UsageConstraintsTest.testOr":130,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":17,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests2.MockBuilderTest.testWithConstructor":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":421,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":316,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":486,"org.easymock.tests.UsageVarargTest.varargShortAccepted":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":454,"org.easymock.tests2.UsageConstraintsTest.cmpTo":135,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":223,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CaptureTest.testCaptureFromStub":52,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":332,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":356,"org.easymock.tests.UsageTest.unexpectedCallWithArray":344,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":317,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.UsageConstraintsTest.constraints":125,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageStrictMockTest.testVerify":170,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests2.CompareToTest.testGreateThan":499,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":340,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":280,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":360,"org.easymock.tests.LimitationsTest.abstractClass":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":309,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":75,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":248}}]
