[{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[5,6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[9,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[14,15],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[21,0,1,2],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[19,20],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[22,23,24,25],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[30],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,22,60,61,23,62,63,16,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,26,27,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,18,228,229,230,231,232,233,234,28,29,235,236,237,238,239,240,5,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,0,1,2,312,313,314,315,3,316,317,318,319,320,321,322,323,324,325,326,327,328,24,329,330,331,332,333,334,25,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,11,385,386,17,387,388,389,390,391,392,15,393,394,395,396,397,398,399,400,12,401,402,4,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,13,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,6,479,480,7,8,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[21,0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[34,37,38,80,82,83,134,213,214,215,290,293,294,398,474,475,476,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[495,385],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[224,225,228],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[21,0,1,2],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[34,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,66,68,73,75,76,78,82,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,26,27,126,133,134,137,138,141,156,157,158,159,160,169,170,171,172,173,176,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,231,232,233,234,28,29,250,256,261,262,264,268,269,270,272,273,274,275,277,279,280,280,281,281,286,287,290,292,293,295,296,297,298,299,300,301,302,304,305,306,0,1,314,315,3,316,317,318,319,320,321,322,323,324,325,326,327,328,24,329,330,331,332,333,334,25,335,336,343,350,351,352,354,360,367,368,369,370,372,373,374,375,376,377,379,380,381,382,383,384,11,385,386,17,387,388,390,391,392,15,393,396,397,398,400,401,402,4,405,406,411,414,424,430,433,434,435,436,13,437,440,444,445,446,451,455,457,459,463,478,6,479,480,7,8,481,482,484,485,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[21,0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[152,344,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,65,69,70,71,72,73,75,76,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,133,134,135,136,137,138,139,140,141,9,9,142,143,144,145,146,156,157,169,170,172,173,176,178,179,180,182,183,184,185,186,187,188,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,221,222,261,262,264,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,308,309,310,311,0,1,2,314,315,3,316,317,318,319,321,322,323,325,326,327,328,24,329,330,331,332,333,334,25,335,336,337,343,350,351,352,354,360,367,368,369,370,372,373,374,375,376,377,379,380,381,382,383,384,11,385,386,17,387,388,389,390,391,392,15,393,396,397,398,399,400,12,401,402,4,403,404,405,406,411,414,424,430,433,434,435,436,13,437,438,440,443,444,445,446,449,451,455,456,457,459,462,463,465,478,480,7,8,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:122","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":370,"org.easymock.tests2.UsageTest.argumentsOrdered":404,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":244,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":12,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":271,"org.easymock.tests2.DelegateToTest.testReturnException":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":104,"org.easymock.tests.MockingTest.testPartialClassMocking":261,"org.easymock.tests.MockClassControlTest.testToString":163,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":473,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":414,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":315,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":377,"org.easymock.tests2.UsageTest.wrongArguments":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":110,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":71,"org.easymock.samples.ExampleTest.answerVsDelegate":273,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":153,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":266,"org.easymock.tests2.UsageConstraintsTest.testNull":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":436,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":168,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":25,"org.easymock.tests2.CaptureTest.testPrimitive":484,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":114,"org.easymock.tests.UsageTest.moreThanOneArgument":134,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":212,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":117,"org.easymock.tests.UsageTest.argumentsOrdered":140,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":216,"org.easymock.tests.UsageVarargTest.varargIntAccepted":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":98,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":102,"org.easymock.tests.ReplayStateInvalidUsageTest.times":129,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":360,"org.easymock.tests2.DependencyTest.testClassMocking":312,"org.easymock.tests2.AnswerTest.answer":478,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":311,"org.easymock.tests2.CaptureTest.testAnd":481,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":150,"org.easymock.tests2.UsageTest.strictResetToDefault":397,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":330,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":220,"org.easymock.tests2.DelegateToTest.testDelegate":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":208,"org.easymock.tests.LimitationsTest.mockFinalMethod":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":146,"org.easymock.tests2.DependencyTest.testClassMockingSupport":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":190,"org.easymock.tests2.CaptureTest.testCapture1_2446744":485,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":309,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":123,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":152,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":97,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":432,"org.easymock.samples.PartialClassMockTest.testGetArea":287,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":124,"org.easymock.tests.MockingTest.testInterfaceMocking":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":419,"org.easymock.tests2.UsageTest.niceToStrict":400,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":455,"org.easymock.tests2.MockBuilderTest.testCreateMock":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":427,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":202,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":331,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":149,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":69,"org.easymock.tests.UsageOverloadedMethodTest.overloading":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":51,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":268,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":19,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":382,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":490,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":181,"org.easymock.tests2.EasyMockSupportClassTest.testAll":411,"org.easymock.tests.MockClassControlTest.testEquals":167,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":210,"org.easymock.tests2.CaptureTest.testCaptureAll":482,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":310,"org.easymock.tests.MockNameTest.defaultName":147,"org.easymock.tests2.UsageConstraintsTest.testMatches":384,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":118,"org.easymock.samples.ExampleTest.voteForRemovals":277,"org.easymock.tests.UsageVarargTest.allKinds":189,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":283,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":108,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.UsageConstraintsTest.greaterThan":385,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":171,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":446,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":230,"org.easymock.samples.ExampleTest.voteForRemoval":274,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":447,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":438,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":396,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":169,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":24,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":103,"org.easymock.tests2.CaptureTest.testCaptureFirst":494,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":329,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":406,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":47,"org.easymock.tests2.CaptureTest.testCapture2_2446744":493,"org.easymock.tests2.UsageTest.moreThanOneArgument":398,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":252,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":188,"org.easymock.tests.GenericTest.testBridgedEquals":67,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":142,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":211,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":389,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":28,"org.easymock.tests.UsageCallCountTest.tooManyCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests.MockingTest.testNiceClassMocking":267,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":300,"org.easymock.tests.MockingTest.testClassMocking":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":81,"org.easymock.tests2.UsageConstraintsTest.testContains":381,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":297,"org.easymock.tests2.UsageConstraintsTest.testFind":372,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":270,"org.easymock.tests.MockTypeTest.fromEasyMockClass":151,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":354,"org.easymock.tests.UsageExpectAndReturnTest.object":50,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":334,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":183,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":23,"org.easymock.tests.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":240,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":217,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":394,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":56,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":75,"org.easymock.tests.MockClassControlTest.testHashCode":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":421,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":26,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":308,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":407,"org.easymock.tests.UsageVarargTest.varargCharAccepted":182,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":223,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":257,"org.easymock.tests2.UsageTest.openCallCountByLastCall":401,"org.easymock.tests.DefaultClassInstantiatorTest.object":224,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":120,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":422,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":444,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":199,"org.easymock.tests.CapturesMatcherTest.test":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":430,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":164,"org.easymock.tests2.UsageTest.resumeIfFailure":405,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":106,"org.easymock.tests2.StubTest.stubWithReturnValue":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":458,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":49,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":250,"org.easymock.samples.SupportTest.voteForRemovals":286,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":205,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":256,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":6,"org.easymock.tests.UsageExpectAndThrowTest.object":203,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":233,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":387,"org.easymock.tests2.DelegateToTest.testWrongClass":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":157,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.samples.ConstructorCalledMockTest.testTax":280,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":471,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":408,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":70,"org.easymock.tests2.CaptureTest.testCaptureNone":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":160,"org.easymock.tests.UsageUnorderedTest.message":109,"org.easymock.tests.UsageVerifyTest.twoReturns":215,"org.easymock.tests.UsageVarargTest.varargByteAccepted":187,"org.easymock.tests2.ThreadingTest.testThreadSafe":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":425,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":85,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":62,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":254,"org.easymock.tests2.UsageConstraintsTest.any":379,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":128,"org.easymock.tests2.StubTest.stub":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":105,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":255,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":18,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":127,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests.LimitationsTest.mockNativeMethod":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":59,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":66,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":357,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":294,"org.easymock.tests2.NameTest.nameForMocksControl":477,"org.easymock.tests2.MockedExceptionTest.testMockedException":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":413,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":197,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":264,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":353,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":433,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":459,"org.easymock.tests.MockingTest.testNicePartialClassMocking":262,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":437,"org.easymock.tests2.CaptureTest.testCaptureLast":488,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":355,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":306,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":376,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":388,"org.easymock.tests.MockingTest.testTwoMocks":260,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":201,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":403,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":392,"org.easymock.samples.ExampleTest.removeNonExistingDocument":278,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":125,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":226,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":317,"org.easymock.tests2.MockBuilderTest.testCreateMockString":465,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":415,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":410,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":480,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":395,"org.easymock.tests.UsageVerifyTest.twoThrows":214,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":424,"org.easymock.samples.ExampleTest.voteAgainstRemoval":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":445,"org.easymock.tests.LimitationsTest.privateConstructor":175,"org.easymock.tests2.UsageConstraintsTest.testNotNull":391,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":295,"org.easymock.tests2.UsageTest.defaultResetToNice":4,"org.easymock.samples.ExampleTest.voteAgainstRemovals":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":246,"org.easymock.tests.UsageVarargTest.differentLength":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":356,"org.easymock.tests2.CallbackTest.callback":326,"org.easymock.tests2.UsageConstraintsTest.equals":371,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":441,"org.easymock.tests.UsageTest.openCallCountByLastCall":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":367,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":112,"org.easymock.tests.UsageCallCountTest.tooFewCalls":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":72,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests.MockingTest.testStrictClassMocking":258,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":304,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":8,"org.easymock.tests.ObjectMethodsTest.testHashCode":61,"org.easymock.tests2.NameTest.nameForNiceMock":476,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":319,"org.easymock.tests2.DependencyTest.testInterfaceMocking":314,"org.easymock.samples.ExampleTest.addDocument":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":431,"org.easymock.tests2.DelegateToTest.testStubDelegate":322,"org.easymock.tests2.AnswerTest.stubAnswer":7,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":460,"org.easymock.tests.UsageVarargTest.varargLongAccepted":186,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":243,"org.easymock.tests.UsageExpectAndReturnTest.floatType":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":393,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":281,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":386,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests.UsageThrowableTest.noUpperLimit":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":368,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":466,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":486,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":20,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":41,"org.easymock.tests2.UsageConstraintsTest.testSame":374,"org.easymock.samples.SupportTest.addDocument":285,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":303,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":416,"org.easymock.tests.GenericTest.testPackageScope":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":265,"org.easymock.tests2.NameTest.nameForMock":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":464,"org.easymock.tests2.UsageStrictMockTest.differentMethods":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":442,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":207,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":173,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":247,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":290,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":111,"org.easymock.tests2.NameTest.nameForStrictMock":475,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":454,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":13,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":470,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":17,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":227,"org.easymock.tests.ErrorMessageTest.testGetters":496,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":451,"org.easymock.tests2.UsageStrictMockTest.range":292,"org.easymock.tests2.UsageConstraintsTest.lessThan":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":242,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":328,"org.easymock.tests2.CaptureTest.testCaptureRightOne":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":420,"org.easymock.tests2.UsageConstraintsTest.testOr":375,"org.easymock.tests.UsageRangeTest.combination":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":434,"org.easymock.tests.UsageTest.wrongArguments":136,"org.easymock.tests2.MockBuilderTest.testWithConstructor":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":417,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":236,"org.easymock.tests.UsageVarargTest.varargShortAccepted":185,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":228,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":86,"org.easymock.tests2.UsageConstraintsTest.cmpTo":380,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":479,"org.easymock.tests2.CompareToTest.testLessThan":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":238,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":402,"org.easymock.tests2.CaptureTest.testCaptureFromStub":492,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":122,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":452,"org.easymock.tests.UsageTest.unexpectedCallWithArray":135,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":54,"org.easymock.tests2.CaptureTest.testCapture":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.UsageConstraintsTest.constraints":369,"org.easymock.samples.ExampleTest.addAndChangeDocument":279,"org.easymock.tests.UsageStrictMockTest.testVerify":39,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":32,"org.easymock.tests2.CompareToTest.testGreateThan":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":143,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":100,"org.easymock.tests.LimitationsTest.abstractClass":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":101,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":332}}]
