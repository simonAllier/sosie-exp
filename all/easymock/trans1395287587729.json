[{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[67,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[72,73,74,75],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[76,77,78,79,80,81,82,83,84,85,86,87],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[88,89,90,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[92,93,72,94,95,73,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[109,110,111,112,113,114,115,116,117,118],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[119,120,121,122],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[123,124,125,126,127,128],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[76,77,79,80,81,83,85,86,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[130,131,97,132,133,134,135,136,137,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[109,110,111,114,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[67,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[109,110,111,112,114,115,117,118],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[140],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[141],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[109,110,111,112,114,115,117,118],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[142,143],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[144,145,146,147,148,149,109,110,150,111,151,152,88,89,153,154,155,156,157,90,91,142,143,69,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,41,42,43,44,45,46,47,48,49,50,51,52,0,173,174,175,176,177,178,1,179,180,181,182,183,184,185,130,186,187,188,131,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,53,54,55,56,57,58,59,60,61,62,63,64,112,228,113,114,229,115,230,231,232,233,234,92,235,236,93,237,94,95,238,138,73,96,97,239,98,240,241,99,100,242,103,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,104,261,71,262,263,264,74,75,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,132,285,286,287,288,289,290,291,2,76,292,77,78,79,80,81,82,140,83,85,86,129,87,293,294,295,296,297,298,299,300,301,133,302,303,3,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,4,327,328,5,329,127,330,331,6,332,333,334,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,335,336,337,338,339,340,341,342,343,344,128,345,346,347,348,349,350,351,352,134,135,136,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,67,368,369,370,68,371,372,373,374,137,375,376,377,27,378,379,380,381,382,383,384,385,386,116,387,388,389,390,391,392,393,394,395,396,397,398,399,105,400,119,120,401,402,403,404,405,117,121,406,28,122,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,29,425,426,106,427,428,429,430,107,431,432,30,433,31,32,33,34,35,36,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,37,450,38,39,40,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,118,487,488,489,490,491,492,493,494,65,108,66,495,496,497,498],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":384,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":177,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":65,"org.easymock.tests2.DelegateToTest.testReturnException":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":324,"org.easymock.tests.MockingTest.testPartialClassMocking":307,"org.easymock.tests.MockClassControlTest.testToString":134,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":230,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":208,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":194,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":422,"org.easymock.tests2.UsageTest.wrongArguments":175,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":118,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":107,"org.easymock.tests2.UsageConstraintsTest.testNull":155,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":258,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":281,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.CaptureTest.testPrimitive":78,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":425,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":26,"org.easymock.tests.UsageTest.moreThanOneArgument":329,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":481,"org.easymock.tests.UsageTest.argumentsOrdered":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":314,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":286,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":318,"org.easymock.tests.ReplayStateInvalidUsageTest.times":418,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests2.DependencyTest.testClassMocking":191,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":246,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":428,"org.easymock.tests2.CaptureTest.testAnd":76,"org.easymock.tests2.UsageTest.strictResetToDefault":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":276,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":485,"org.easymock.tests2.DelegateToTest.testDelegate":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":22,"org.easymock.tests.LimitationsTest.mockFinalMethod":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":339,"org.easymock.tests2.DependencyTest.testClassMockingSupport":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":119,"org.easymock.tests2.CaptureTest.testCapture1_2446744":79,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":244,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":412,"org.easymock.tests.UsageThrowableTest.throwError":30,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":430,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":137,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":226,"org.easymock.samples.PartialClassMockTest.testGetArea":108,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":413,"org.easymock.tests.MockingTest.testInterfaceMocking":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":362,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":213,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":73,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":61,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":277,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":427,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":472,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":223,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":160,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":462,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":302,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":159,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":83,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":440,"org.easymock.tests2.EasyMockSupportClassTest.testAll":205,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":399,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":245,"org.easymock.tests2.CaptureTest.testCaptureAll":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":337,"org.easymock.tests.MockNameTest.defaultName":328,"org.easymock.tests2.UsageConstraintsTest.testMatches":161,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":359,"org.easymock.samples.ExampleTest.voteForRemovals":490,"org.easymock.tests.UsageVarargTest.allKinds":448,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":449,"org.easymock.samples.BasicClassMockTest.testPrintContent":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":35,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":327,"org.easymock.tests2.UsageConstraintsTest.greaterThan":163,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":206,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":403,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":265,"org.easymock.samples.ExampleTest.voteForRemoval":487,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":372,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":251,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":266,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":101,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":104,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":409,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":274,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":323,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":144,"org.easymock.tests2.CaptureTest.testCaptureFirst":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":275,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":458,"org.easymock.tests2.UsageTest.moreThanOneArgument":174,"org.easymock.tests2.CaptureTest.testCapture2_2446744":129,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":391,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":447,"org.easymock.tests.GenericTest.testBridgedEquals":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":479,"org.easymock.tests.UsageExpectAndReturnTest.longType":454,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":335,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":25,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":471,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":356,"org.easymock.tests.UsageCallCountTest.tooManyCalls":480,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":185,"org.easymock.tests.MockingTest.testNiceClassMocking":313,"org.easymock.tests.MockingTest.testClassMocking":305,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":473,"org.easymock.tests2.UsageConstraintsTest.testContains":158,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":72,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":270,"org.easymock.tests2.UsageConstraintsTest.testFind":154,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":3,"org.easymock.tests.MockTypeTest.fromEasyMockClass":429,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":111,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":343,"org.easymock.tests.UsageExpectAndReturnTest.object":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":280,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":442,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":300,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":482,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":467,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":437,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":42,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":215,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":483,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":243,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":227,"org.easymock.tests.UsageVarargTest.varargCharAccepted":441,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":366,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":500,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":283,"org.easymock.tests.DefaultClassInstantiatorTest.object":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":38,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":56,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":41,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":468,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":224,"org.easymock.tests2.UsageTest.resumeIfFailure":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":326,"org.easymock.tests2.StubTest.stubWithReturnValue":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":460,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":236,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":389,"org.easymock.samples.SupportTest.voteForRemovals":496,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":124,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":19,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":395,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":228,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":436,"org.easymock.tests.UsageExpectAndThrowTest.object":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":166,"org.easymock.tests2.DelegateToTest.testWrongClass":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":364,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":365,"org.easymock.samples.ConstructorCalledMockTest.testTax":493,"org.easymock.tests.UsageStrictMockTest.range":347,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":289,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":202,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":125,"org.easymock.tests2.CaptureTest.testCaptureNone":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":363,"org.easymock.tests.UsageUnorderedTest.message":426,"org.easymock.tests.UsageVerifyTest.twoReturns":450,"org.easymock.tests.UsageVarargTest.varargByteAccepted":446,"org.easymock.tests2.ThreadingTest.testThreadSafe":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":219,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":477,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":497,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":301,"org.easymock.tests2.CaptureTest.testCapture_2617107":77,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":29,"org.easymock.tests2.UsageConstraintsTest.any":143,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":417,"org.easymock.tests2.StubTest.stub":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndThrowTest.longType":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":370,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":416,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests2.SerializationTest.testClass":92,"org.easymock.tests.LimitationsTest.mockNativeMethod":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":470,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":105,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":55,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests2.NameTest.nameForMocksControl":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":57,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":207,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":11,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":310,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":308,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":260,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":53,"org.easymock.tests2.CompareToTest.testCompareEqual":70,"org.easymock.tests2.CaptureTest.testCaptureLast":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":167,"org.easymock.tests.MockingTest.testTwoMocks":306,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":451,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":171,"org.easymock.samples.ExampleTest.removeNonExistingDocument":491,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":414,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":60,"org.easymock.tests.UsageStrictMockTest.differentMethods":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":43,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":368,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":252,"org.easymock.tests2.MockBuilderTest.testCreateMockString":103,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":351,"org.easymock.tests.UsageExpectAndThrowTest.floatType":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":209,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":204,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":114,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":249,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":218,"org.easymock.samples.ExampleTest.voteAgainstRemoval":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":385,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":361,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests.LimitationsTest.privateConstructor":294,"org.easymock.tests2.UsageConstraintsTest.testNotNull":170,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests2.UsageTest.defaultResetToNice":179,"org.easymock.samples.ExampleTest.voteAgainstRemovals":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":386,"org.easymock.tests.UsageVarargTest.differentLength":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":54,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.UsageConstraintsTest.equals":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":262,"org.easymock.tests.UsageTest.openCallCountByLastCall":331,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":151,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":424,"org.easymock.tests.UsageCallCountTest.tooFewCalls":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":33,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":126,"org.easymock.tests.MockingTest.testStrictClassMocking":304,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":374,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":59,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":188,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":115,"org.easymock.tests.ObjectMethodsTest.testHashCode":299,"org.easymock.tests2.NameTest.nameForNiceMock":233,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":254,"org.easymock.tests2.DependencyTest.testInterfaceMocking":193,"org.easymock.samples.ExampleTest.addDocument":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":220,"org.easymock.tests2.DelegateToTest.testStubDelegate":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":225,"org.easymock.tests2.AnswerTest.stubAnswer":229,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":345,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":240,"org.easymock.tests.UsageVarargTest.varargLongAccepted":445,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":383,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":469,"org.easymock.tests.UsageExpectAndReturnTest.floatType":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":247,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":494,"org.easymock.tests.UsageThrowableTest.noUpperLimit":433,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":164,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":50,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":152,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":80,"org.easymock.tests2.SerializationTest.test":235,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":452,"org.easymock.tests2.UsageConstraintsTest.testSame":156,"org.easymock.samples.SupportTest.addDocument":495,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":187,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":210,"org.easymock.tests.GenericTest.testPackageScope":398,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":49,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":311,"org.easymock.tests2.NameTest.nameForMock":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":463,"org.easymock.tests2.UsageStrictMockTest.differentMethods":200,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":242,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":455,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":21,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":405,"org.easymock.tests2.MockedExceptionTest.testRealException":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":116,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":197,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":423,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":421,"org.easymock.tests2.NameTest.nameForStrictMock":232,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":501,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":259,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":288,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":165,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":369,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":94,"org.easymock.tests2.UsageStrictMockTest.range":199,"org.easymock.tests2.UsageConstraintsTest.lessThan":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":45,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":382,"org.easymock.tests2.CaptureTest.testCaptureRightOne":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":214,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":141,"org.easymock.tests2.UsageConstraintsTest.testOr":157,"org.easymock.tests.UsageRangeTest.combination":402,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":256,"org.easymock.tests.UsageTest.wrongArguments":330,"org.easymock.tests2.MockBuilderTest.testWithConstructor":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":211,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargShortAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":68,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":478,"org.easymock.tests2.UsageConstraintsTest.cmpTo":69,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":27,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests2.CaptureTest.testCaptureFromStub":86,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":411,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":95,"org.easymock.tests.UsageTest.unexpectedCallWithArray":127,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":128,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":465,"org.easymock.tests2.CaptureTest.testCapture":84,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":346,"org.easymock.samples.ExampleTest.addAndChangeDocument":492,"org.easymock.tests.UsageStrictMockTest.testVerify":350,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":66,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":344,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":336,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":457,"org.easymock.tests.LimitationsTest.abstractClass":293,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":317,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":278}}]
