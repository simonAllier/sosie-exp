[{"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,1,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,0,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[287,288,289],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[290],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[291,150,151,152,1,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ZERO_OR_MORE"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[224,242,248,292],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[7,76,277,278,279,280,281,282],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[293,18,19,58,187],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[176,241,256],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[15,55,56,65,66,67,68,69,70,71,84,86,87,88,89,90,126,127,128,153,154,185,294,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,258,263,264,265,0,266,267,268,269,270,271,272,273,274,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[4,6,8,9,10,88,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[295,200,201],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[2,3,190,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[15,55,56,65,66,67,68,69,70,71,84,86,87,88,89,90,126,127,128,153,154,185,294,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,258,263,264,265,0,266,267,268,269,270,271,272,273,274,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[297,298,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[301,302],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[295,200,201,303],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[17,18,19,21,23,26,27,38,42,43,45,48,54,56,58,60,78,99,104,109,113,114,116,119,132,149,150,151,152,1,157,161,162,165,170,173,174,175,176,180,181,182,184,185,187,189,210,225,226,228,230,231,237,240,241,243,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[65,235],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":227,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":83,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":176,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":303,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":81,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":129,"org.easymock.tests.MockingTest.testPartialClassMocking":31,"org.easymock.samples.SupportTest.voteForRemovals":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":301,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":117,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":295,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":105,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":130,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":192,"org.easymock.tests.UsageExpectAndThrowTest.object":115,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":245,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":169,"org.easymock.tests2.DelegateToTest.testWrongClass":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":126,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":127,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageTest.wrongArguments":174,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":74,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":212,"org.easymock.tests2.UsageConstraintsTest.testNull":229,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":208,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":165,"org.easymock.tests2.CaptureTest.testPrimitive":0,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.UsageTest.moreThanOneArgument":21,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":124,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":146,"org.easymock.tests2.CaptureTest.testCaptureNone":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":63,"org.easymock.tests.UsageUnorderedTest.message":128,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests2.ThreadingTest.testThreadSafe":219,"org.easymock.tests.UsageTest.argumentsOrdered":27,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":139,"org.easymock.tests2.CaptureTest.testCapture_2617107":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests2.UsageConstraintsTest.any":235,"org.easymock.tests2.StubTest.stub":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":82,"org.easymock.tests.UsageExpectAndThrowTest.longType":108,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":297,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests2.SerializationTest.testClass":200,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":53,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":101,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":291,"org.easymock.tests2.CaptureTest.testAnd":263,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":290,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests2.MockedExceptionTest.testMockedException":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":160,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":25,"org.easymock.tests2.DelegateToTest.testDelegate":282,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":143,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":109,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":209,"org.easymock.tests.MockingTest.testNicePartialClassMocking":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":120,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":257,"org.easymock.tests2.CaptureTest.testCaptureLast":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":30,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":232,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":218,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":29,"org.easymock.tests2.CaptureTest.testCapture1_2446744":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":113,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":250,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":221,"org.easymock.tests2.MockBuilderTest.testCreateMockString":211,"org.easymock.tests.UsageExpectAndThrowTest.floatType":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":148,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":241,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":194,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":204,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests2.CompareToTest.testLessOrEqual":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":87,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":106,"org.easymock.tests2.UsageTest.niceToStrict":175,"org.easymock.tests2.UsageConstraintsTest.testNotNull":249,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":207,"org.easymock.tests2.UsageTest.defaultResetToNice":179,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":49,"org.easymock.tests2.CallbackTest.callback":170,"org.easymock.tests.UsageTest.openCallCountByLastCall":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":114,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":69,"org.easymock.tests.UsageOverloadedMethodTest.overloading":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":239,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":45,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":102,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":298,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":238,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":271,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests2.EasyMockSupportClassTest.testAll":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":122,"org.easymock.tests2.CaptureTest.testCaptureAll":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":93,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":217,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":214,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":300,"org.easymock.tests2.UsageConstraintsTest.testMatches":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":216,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":147,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":223,"org.easymock.tests.UsageVarargTest.allKinds":15,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":17,"org.easymock.tests2.DependencyTest.testInterfaceMocking":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":94,"org.easymock.tests2.DelegateToTest.testStubDelegate":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests2.AnswerTest.stubAnswer":195,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":85,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":289,"org.easymock.tests2.UsageConstraintsTest.greaterThan":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":150,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":261,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":60,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":52,"org.easymock.tests.UsageExpectAndReturnTest.floatType":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":190,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":243,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":225,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":79,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":267,"org.easymock.tests2.SerializationTest.test":201,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.UsageConstraintsTest.testSame":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":80,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":287,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":277,"org.easymock.tests2.CaptureTest.testCaptureFirst":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":159,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":41,"org.easymock.tests.GenericTest.testPackageScope":100,"org.easymock.tests2.CaptureTest.testCapture2_2446744":274,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":222,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":142,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":210,"org.easymock.tests.UsageExpectAndReturnTest.longType":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":91,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":123,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":247,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":121,"org.easymock.tests2.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":152,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":99,"org.easymock.tests2.MockedExceptionTest.testRealException":286,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":110,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":213,"org.easymock.tests2.UsageConstraintsTest.testContains":237,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":285,"org.easymock.tests2.UsageConstraintsTest.testFind":228,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":104,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":256,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":154,"org.easymock.tests.UsageExpectAndReturnTest.object":44,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":258,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":206,"org.easymock.tests2.UsageStrictMockTest.range":187,"org.easymock.tests2.UsageConstraintsTest.lessThan":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":164,"org.easymock.tests.UsageTest.exactCallCountByLastCall":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":65,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":157,"org.easymock.tests2.CaptureTest.testCaptureRightOne":272,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":140,"org.easymock.tests2.UsageConstraintsTest.testOr":231,"org.easymock.tests.UsageRangeTest.combination":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":50,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":76,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":47,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":141,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":197,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":294,"org.easymock.tests2.UsageConstraintsTest.cmpTo":236,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":288,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":193,"org.easymock.tests2.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":167,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":12,"org.easymock.tests2.CaptureTest.testCaptureFromStub":273,"org.easymock.tests.UsageTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":112,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":48,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":259,"org.easymock.tests2.UsageConstraintsTest.constraints":226,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":57,"org.easymock.samples.ExampleTest.addAndChangeDocument":11,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":51,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":92,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":268,"org.easymock.tests2.UsageTest.resumeIfFailure":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":88,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":89,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":162}}]
