[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[37,38,39,40,41,42,43,44,45,13,46,47,48,49],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[50,51,52,53,54,55],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[24,32,56,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,0,87,88,89,90,91,92,93,94,95,96],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[97,98,24,99,100,101,102,103,104,105,106,107,108,109,26,110,27,31,111,32,112,113,114,34,115,35,36],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[129,130,131,57,132,133,134,58,63,66,76,82,6,8,10,11,13,93,135,136,137,138,139,140,141,142,143,144,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[21,22,23,145,24,99,6,12,13,15,47,25,26,27,28,29,30,31,32,112,146,147,49,33,34,35,36,148,149,150],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[151,152,153,154,155,156,157,0,89,90,158,93,94],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,22,23,24,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[159,160,161],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[162,163,129,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,37,179,38,180,181,39,182,183,40,184,41,42,43,44,185,45,186,187,188,189,190,191,192,97,21,193,194,195,196,197,22,23,145,198,130,133,199,200,201,202,98,203,24,99,204,205,206,207,208,209,210,211,212,213,214,215,216,1,217,218,219,220,221,222,223,135,224,136,137,117,118,119,120,225,226,46,227,228,229,230,231,232,47,233,234,235,116,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,140,251,252,253,254,255,256,257,258,259,144,260,261,262,263,264,265,266,121,122,123,124,125,126,267,268,110,27,28,269,270,29,30,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,31,111,302,32,112,303,304,305,306,307,308,309,310,311,312,313,314,48,127,315,316,317,113,114,49,318,319,320,321,322,323,324,325,326,33,327,328,128,329,330,34,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,115,35,36,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,148,149,150,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[401,402,403],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[24,32,404,56,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[152,153,154,156,405,89,94],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[406,407],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[170,172,408],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[172,173,174,175,176,177,178,37,179,38,42,43,186,187,237,238,239,240,247,248],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[162,163,129,164,165,166,167,168,409,169,170,171,172,173,410,174,175,176,177,178,37,179,38,180,181,39,182,183,40,184,41,42,43,44,185,45,186,187,188,411,412,413,414,415,189,190,416,417,418,419,420,191,192,97,21,193,194,195,196,197,22,23,145,198,130,131,57,132,421,133,134,58,59,422,423,199,200,201,202,98,203,24,99,204,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,424,425,426,427,428,429,205,206,430,431,432,433,434,207,208,209,210,211,212,435,213,214,215,216,0,1,2,4,87,6,7,88,436,8,9,10,89,11,437,90,12,13,92,15,217,218,219,220,93,94,438,221,222,223,135,224,136,439,137,138,440,139,16,403,441,442,443,444,445,446,447,448,449,117,118,119,120,225,226,46,227,228,229,230,231,232,47,233,234,235,450,451,452,453,454,455,456,116,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,457,458,140,459,251,252,253,254,255,460,256,257,258,461,462,463,141,142,464,143,465,466,467,259,144,260,261,262,263,264,265,266,121,122,123,124,125,126,267,268,110,27,28,269,270,29,30,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,31,111,302,32,112,303,304,468,469,470,471,472,473,474,475,305,306,307,308,309,310,311,312,313,314,476,50,51,52,53,477,54,478,55,48,127,147,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,315,495,496,497,498,499,316,500,501,317,502,17,503,113,114,504,49,318,319,320,321,322,323,324,325,326,33,505,506,507,508,509,510,511,512,513,514,515,516,517,327,328,128,329,330,34,18,518,519,331,332,19,333,334,335,336,337,338,339,340,341,342,520,343,521,344,345,346,522,347,348,349,350,351,352,353,354,115,35,36,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,148,149,150,385,386,387,388,389,390,391,392,393,394,395,523,396,95,96,397,20,398,399,400,524,525],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[130,131,57,132,134,58,63,66,76,82,0,2,4,6,7,8,9,10,11,12,13,15,93,136,439,138,440,139,16,441,444,445,446,447,449,119,140,460,463,141,142,143,468,469,470,471,472,473,474,475,317,502,17,503,505,18,19,95,95,96,96,20,524,525],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[191,196,268,270,337,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[101,105,107,108,27,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[526],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":173,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":526,"org.easymock.tests2.UsageTest.argumentsOrdered":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":489,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":194,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":397,"org.easymock.tests2.DelegateToTest.testReturnException":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":122,"org.easymock.tests.MockingTest.testPartialClassMocking":141,"org.easymock.tests.MockClassControlTest.testToString":470,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":272,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":152,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":37,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":327,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":265,"org.easymock.samples.ExampleTest.answerVsDelegate":391,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":19,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":466,"org.easymock.tests2.UsageConstraintsTest.testNull":175,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":138,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":47,"org.easymock.tests2.CaptureTest.testPrimitive":240,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":330,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":291,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":385,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":494,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":405,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":4,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":419,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":262,"org.easymock.tests.ReplayStateInvalidUsageTest.times":514,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests2.DependencyTest.testClassMocking":422,"org.easymock.tests2.AnswerTest.answer":207,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":495,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":220,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":519,"org.easymock.tests2.CaptureTest.testAnd":237,"org.easymock.tests2.UsageTest.strictResetToDefault":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":444,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":319,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":389,"org.easymock.tests2.DelegateToTest.testDelegate":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":287,"org.easymock.tests.LimitationsTest.mockFinalMethod":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":296,"org.easymock.tests2.DependencyTest.testClassMockingSupport":423,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":113,"org.easymock.tests2.CaptureTest.testCapture1_2446744":241,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":218,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":508,"org.easymock.tests.UsageThrowableTest.throwError":335,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":332,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":420,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":84,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":509,"org.easymock.tests.MockingTest.testInterfaceMocking":464,"org.easymock.tests2.CompareToTest.testLessOrEqual":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":311,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":71,"org.easymock.tests2.UsageTest.niceToStrict":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":273,"org.easymock.tests2.ThreadingTest.testChangeDefault":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":159,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.MockBuilderTest.testCreateMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":101,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":281,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":518,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":357,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageOverloadedMethodTest.overloading":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":324,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":369,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":39,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":246,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":522,"org.easymock.tests.MockClassControlTest.testEquals":474,"org.easymock.tests2.EasyMockSupportClassTest.testAll":63,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":219,"org.easymock.tests2.CaptureTest.testCaptureAll":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":294,"org.easymock.tests.MockNameTest.defaultName":267,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":506,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":395,"org.easymock.tests.UsageVarargTest.allKinds":354,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":115,"org.easymock.samples.BasicClassMockTest.testPrintContent":525,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":295,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":341,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":126,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":478,"org.easymock.tests2.UsageConstraintsTest.greaterThan":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":64,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":318,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":447,"org.easymock.samples.ExampleTest.voteForRemoval":392,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":55,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":448,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":16,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":505,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":46,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":121,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":162,"org.easymock.tests2.CaptureTest.testCaptureFirst":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":227,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":198,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":365,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.UsageTest.moreThanOneArgument":97,"org.easymock.tests2.CaptureTest.testCapture2_2446744":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":496,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":503,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":149,"org.easymock.tests.UsageExpectAndReturnTest.longType":361,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":292,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":290,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":185,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":150,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":366,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":340,"org.easymock.tests.MockingTest.testNiceClassMocking":467,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":131,"org.easymock.tests.MockingTest.testClassMocking":462,"org.easymock.tests2.UsageConstraintsTest.testContains":181,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":5,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":380,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":119,"org.easymock.tests2.UsageConstraintsTest.testFind":174,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":258,"org.easymock.tests.MockTypeTest.fromEasyMockClass":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests.UsageExpectAndReturnTest.object":368,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":441,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":153,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":348,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":254,"org.easymock.tests.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":520,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":94,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":323,"org.easymock.tests.MockClassControlTest.testHashCode":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":412,"org.easymock.tests2.EasyMockSupportTest.testVerify":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":73,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":387,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":356,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":217,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":424,"org.easymock.tests.UsageVarargTest.varargCharAccepted":347,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":476,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":500,"org.easymock.tests2.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":160,"org.easymock.tests.DefaultClassInstantiatorTest.object":50,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":355,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":252,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":411,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":472,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":445,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":278,"org.easymock.tests.CapturesMatcherTest.test":407,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":297,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":471,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests2.UsageTest.resumeIfFailure":145,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":124,"org.easymock.tests2.StubTest.stubWithReturnValue":236,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":367,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":315,"org.easymock.samples.SupportTest.voteForRemovals":400,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":105,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":284,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":316,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":208,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":521,"org.easymock.tests.UsageExpectAndThrowTest.object":282,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.DelegateToTest.testWrongClass":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":313,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":314,"org.easymock.tests.UsageStrictMockTest.range":32,"org.easymock.samples.ConstructorCalledMockTest.testTax":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":455,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":283,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":516,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":107,"org.easymock.tests2.CaptureTest.testCaptureNone":245,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":312,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":146,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":77,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":384,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":524,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":255,"org.easymock.tests2.CaptureTest.testCapture_2617107":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":498,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":329,"org.easymock.tests2.UsageConstraintsTest.any":38,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":513,"org.easymock.tests2.StubTest.stub":116,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":499,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":123,"org.easymock.tests.UsageExpectAndThrowTest.longType":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":477,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":512,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests2.NameTest.nameForMocksControl":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests2.MockedExceptionTest.testMockedException":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":65,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":409,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":276,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":11,"org.easymock.tests.MockingTest.testNicePartialClassMocking":142,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":151,"org.easymock.tests2.CaptureTest.testCaptureLast":244,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":114,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":44,"org.easymock.tests.MockingTest.testTwoMocks":463,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":280,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":187,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":401,"org.easymock.samples.ExampleTest.removeNonExistingDocument":523,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":510,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":413,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":52,"org.easymock.tests2.ConstraintsToStringTest.andToString":104,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":223,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":67,"org.easymock.tests.UsageExpectAndThrowTest.floatType":274,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":62,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":438,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":76,"org.easymock.samples.ExampleTest.voteAgainstRemoval":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":310,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":446,"org.easymock.tests.LimitationsTest.privateConstructor":458,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":86,"org.easymock.tests2.UsageConstraintsTest.testNotNull":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":342,"org.easymock.tests2.UsageTest.defaultResetToNice":197,"org.easymock.samples.ExampleTest.voteAgainstRemovals":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.UsageVarargTest.differentLength":349,"org.easymock.tests2.CallbackTest.callback":167,"org.easymock.tests2.UsageConstraintsTest.equals":410,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":442,"org.easymock.tests.UsageTest.openCallCountByLastCall":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":128,"org.easymock.tests.UsageCallCountTest.tooFewCalls":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":266,"org.easymock.tests.UsageThrowableTest.throwCheckedException":339,"org.easymock.tests.MockingTest.testStrictClassMocking":461,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":206,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":515,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":212,"org.easymock.tests.ObjectMethodsTest.testHashCode":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":156,"org.easymock.tests2.NameTest.nameForNiceMock":215,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests2.DependencyTest.testInterfaceMocking":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":154,"org.easymock.samples.ExampleTest.addDocument":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":78,"org.easymock.tests2.DelegateToTest.testStubDelegate":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.AnswerTest.stubAnswer":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":437,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndReturnTest.floatType":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":376,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.tests2.ConstraintsToStringTest.orToString":100,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests.UsageThrowableTest.noUpperLimit":336,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":450,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":242,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":51,"org.easymock.tests2.UsageConstraintsTest.testSame":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":359,"org.easymock.samples.SupportTest.addDocument":399,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":421,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":68,"org.easymock.tests.GenericTest.testPackageScope":317,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":417,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":465,"org.easymock.tests2.NameTest.nameForMock":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":370,"org.easymock.tests2.UsageStrictMockTest.differentMethods":99,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":443,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":286,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":320,"org.easymock.tests2.MockedExceptionTest.testRealException":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":456,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":492,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":517,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":328,"org.easymock.tests2.NameTest.nameForStrictMock":214,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":436,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":454,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":6,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":487,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":155,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":72,"org.easymock.tests2.CaptureTest.testCaptureRightOne":247,"org.easymock.tests2.UsageConstraintsTest.testOr":177,"org.easymock.tests.UsageRangeTest.combination":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":439,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests2.MockBuilderTest.testWithConstructor":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":69,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":371,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":54,"org.easymock.tests.UsageVarargTest.varargShortAccepted":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":148,"org.easymock.tests2.UsageConstraintsTest.cmpTo":180,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests2.CaptureTest.testCaptureFromStub":248,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":507,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":7,"org.easymock.tests.UsageTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":383,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":372,"org.easymock.tests2.CaptureTest.testCapture":406,"org.easymock.tests2.UsageConstraintsTest.constraints":172,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.samples.ExampleTest.addAndChangeDocument":396,"org.easymock.tests2.ConstraintsToStringTest.notToString":102,"org.easymock.tests.UsageStrictMockTest.testVerify":304,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":398,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":260,"org.easymock.tests.LimitationsTest.abstractClass":457,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":261,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":230,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345}}]
