[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[7],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[8,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[14,15,16,17,18,19,8,11,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,6,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,2,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,323,324,324,325,326,327,328,329,330,331],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[109,117,124,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,185,199,201,202,203,204,205,206,222,298,302,308,312,314],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[18,19,8,11,20,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,6,67,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,124,125,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,332,173,174,333,334,175,176,177,178,179,180,335,181,336,182,183,184,185,186,187,188,189,190,193,195,196,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,337,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,261,283,289,291,292,293,294,295,296,297,298,299,301,302,305,306,307,308,309,310,311,312,313,314,315,317,321,323,323,324,324,325,326,327,328,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[128,178,180,284],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[8,12,41,42,43,338,339,340,54,341,342,55,343,344,345,346,347,348,349,350,351,56,352,353,354,355,356,57,357,358,58,359,360,361,362,86,87,89,90,91,363,92,364,365,366,93,94,95,367,368,101,102,103,104,106,107,369,112,370,371,113,372,114,115,9,373,116,374,169,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,207,208,209,391,392,393,394,215,216,217,395,396,397,398,399,297,400,318,319,321,323,323,324,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[8,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[8,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[401,402,403],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[404],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[8,58,359,405,9,406,407,408,409,410,411,412,413],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[414],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[364,416,417,418,419,323,324],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[420,421,422,423,424],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[20,22,30,61,62,66,6,68,78],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[45,47,50,51,52,61,75,87,93,95,112,373,116,374,117,120,121,122,126,127,128,129,131,135,136,139,177,425,426,191,2,194,195,196,427,428,254,429,265,266,291,298,5,300,303,304,305,314,315],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[20,22,30,61,62,64,66,6,68,78,83],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[49,51,52,54,55,56,57,58,86,87,88,89,90,91,92,93,94,95,99,101,102,103,104,105,106,107,110,111,112,113,114,115,116,145,175,176,177,178,179,180,182,193,195,196,210,211,212,213,215,216,217,229,230,231,232,233,234,237,238,240,241,242,244,245,246,247,248,292,293,294,295,296,297,317,321,325,327,328,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[75,90,122,431],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[375,376,377,378,380,381],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[8,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[365,121],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[382,387,432],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[8,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":298,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":277,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":122,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":320,"org.easymock.tests2.DelegateToTest.testReturnException":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.MockingTest.testPartialClassMocking":215,"org.easymock.tests.MockClassControlTest.testToString":384,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":149,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":182,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.samples.ExampleTest.answerVsDelegate":326,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":397,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":168,"org.easymock.tests.UsageTest.moreThanOneArgument":299,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":212,"org.easymock.tests.UsageTest.argumentsOrdered":304,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":251,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":292,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":296,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests2.AnswerTest.answer":34,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":284,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests2.DelegateToTest.testDelegate":148,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":164,"org.easymock.tests.LimitationsTest.mockFinalMethod":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests2.CaptureTest.testCapture1_2446744":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":162,"org.easymock.tests.UsageThrowableTest.throwError":199,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":426,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":358,"org.easymock.samples.PartialClassMockTest.testGetArea":321,"org.easymock.tests2.CompareToTest.testLessOrEqual":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":150,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":113,"org.easymock.tests2.MockBuilderTest.testCreateMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":158,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":226,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":260,"org.easymock.tests.UsageOverloadedMethodTest.overloading":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":356,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":73,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":310,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":72,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.MockClassControlTest.testEquals":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":54,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":166,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":418,"org.easymock.tests2.CaptureTest.testCaptureAll":21,"org.easymock.tests2.UsageConstraintsTest.testMatches":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":213,"org.easymock.samples.ExampleTest.voteForRemovals":330,"org.easymock.tests.UsageVarargTest.allKinds":259,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":313,"org.easymock.samples.BasicClassMockTest.testPrintContent":319,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":205,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":413,"org.easymock.tests2.UsageConstraintsTest.greaterThan":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":95,"org.easymock.samples.ExampleTest.voteForRemoval":327,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":381,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":97,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":363,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":169,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":132,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":143,"org.easymock.tests2.CaptureTest.testCaptureFirst":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":236,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":99,"org.easymock.tests2.CaptureTest.testCapture2_2446744":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":285,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":258,"org.easymock.tests.GenericTest.testBridgedEquals":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":265,"org.easymock.tests.UsageExpectAndReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":167,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":187,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":210,"org.easymock.tests.UsageCallCountTest.tooManyCalls":266,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":204,"org.easymock.tests.MockingTest.testNiceClassMocking":395,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":102,"org.easymock.tests.MockingTest.testClassMocking":393,"org.easymock.tests2.UsageConstraintsTest.testContains":71,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":63,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":312,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":191,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":19,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":409,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":253,"org.easymock.tests.UsageTest.exactCallCountByLastCall":305,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":173,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":359,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":307,"org.easymock.tests.MockClassControlTest.testHashCode":387,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":349,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":174,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":306,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":427,"org.easymock.tests.UsageVarargTest.varargCharAccepted":252,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":290,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":402,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.DefaultClassInstantiatorTest.object":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":224,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":428,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":202,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":188,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.StubTest.stubWithReturnValue":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":405,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":238,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":317,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":161,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":289,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":35,"org.easymock.tests.UsageExpectAndThrowTest.object":159,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":79,"org.easymock.tests2.DelegateToTest.testWrongClass":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":176,"org.easymock.tests.UsageStrictMockTest.range":195,"org.easymock.samples.ConstructorCalledMockTest.testTax":323,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":114,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":338,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":172,"org.easymock.tests2.CaptureTest.testCaptureNone":28,"org.easymock.tests.UsageUnorderedTest.message":291,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":425,"org.easymock.tests.UsageVerifyTest.twoReturns":315,"org.easymock.tests.UsageVarargTest.varargByteAccepted":257,"org.easymock.tests2.ThreadingTest.testThreadSafe":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":352,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":264,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":318,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":287,"org.easymock.tests2.UsageConstraintsTest.any":69,"org.easymock.tests2.StubTest.stub":108,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":190,"org.easymock.tests.UsageExpectAndThrowTest.longType":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":288,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":431,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":297,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":248,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":53,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":430,"org.easymock.tests2.NameTest.nameForMocksControl":17,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":342,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":302,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":414,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":153,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":115,"org.easymock.tests.MockingTest.testNicePartialClassMocking":216,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":91,"org.easymock.tests2.CompareToTest.testCompareEqual":422,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":407,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":337,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":80,"org.easymock.tests.MockingTest.testTwoMocks":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":157,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":84,"org.easymock.tests.UsageStrictMockTest.differentMethods":196,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":98,"org.easymock.tests2.MockBuilderTest.testCreateMockString":374,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":382,"org.easymock.tests.UsageExpectAndThrowTest.floatType":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":343,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":37,"org.easymock.tests.UsageVerifyTest.twoThrows":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":56,"org.easymock.samples.ExampleTest.voteAgainstRemoval":328,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":94,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":83,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":206,"org.easymock.tests2.UsageTest.defaultResetToNice":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":279,"org.easymock.tests.UsageVarargTest.differentLength":254,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":364,"org.easymock.tests.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":184,"org.easymock.tests.UsageCallCountTest.tooFewCalls":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":104,"org.easymock.tests.UsageThrowableTest.throwCheckedException":203,"org.easymock.tests.MockingTest.testStrictClassMocking":392,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":228,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":105,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":39,"org.easymock.tests.ObjectMethodsTest.testHashCode":432,"org.easymock.tests2.CompareToTest.testGreateOrEqual":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":412,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":100,"org.easymock.tests2.NameTest.nameForNiceMock":16,"org.easymock.tests2.DependencyTest.testInterfaceMocking":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":410,"org.easymock.samples.ExampleTest.addDocument":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":353,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.AnswerTest.stubAnswer":38,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":193,"org.easymock.tests.UsageVarargTest.varargLongAccepted":256,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":276,"org.easymock.tests.UsageExpectAndReturnTest.floatType":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":324,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":77,"org.easymock.tests.UsageThrowableTest.noUpperLimit":200,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":360,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":25,"org.easymock.tests2.SerializationTest.test":11,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":230,"org.easymock.samples.SupportTest.addDocument":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":344,"org.easymock.tests.GenericTest.testPackageScope":207,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.NameTest.nameForMock":14,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":419,"org.easymock.tests2.UsageStrictMockTest.differentMethods":52,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":180,"org.easymock.tests2.MockedExceptionTest.testRealException":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":406,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":183,"org.easymock.tests2.NameTest.nameForStrictMock":15,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":362,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":112,"org.easymock.tests2.UsageStrictMockTest.range":51,"org.easymock.tests2.UsageConstraintsTest.lessThan":85,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":415,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":275,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":348,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":300,"org.easymock.tests2.MockBuilderTest.testWithConstructor":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":345,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":268,"org.easymock.tests.UsageVarargTest.varargShortAccepted":255,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":429,"org.easymock.tests2.UsageConstraintsTest.cmpTo":70,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":36,"org.easymock.tests2.CompareToTest.testLessThan":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":270,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":31,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":263,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":243,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":194,"org.easymock.samples.ExampleTest.addAndChangeDocument":331,"org.easymock.tests.UsageStrictMockTest.testVerify":198,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":192,"org.easymock.tests2.CompareToTest.testGreateThan":421,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":294,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":295,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":136,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":250}}]
