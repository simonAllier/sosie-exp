[{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[1,2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,1,113,114,115,2,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,3,261,4,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[322,323,5,7,8,10,18,20,21,22,25,26,29,35,324,325,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,326,327,328,57,58,59,61,63,65,66,69,87,96,97,98,99,100,113,116,117,118,141,143,144,191,193,194,195,196,197,198,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,210,346,211,212,213,215,217,218,219,222,223,347,348,349,224,229,233,235,236,350,351,352,353,354,240,355,356,357,246,247,248,249,250,251,252,254,255,256,358,257,258,259,260,3,4,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,359,360,361,289,362,292,363,364,299,300,302,303,305,306,307,308,310,311,365,314,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[366,367,326,63,64,65,66,67,68,69,94,96,97,98,99,100,143,144,145,368,369,347,245,258,259,260,3,4,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,289,299,300,301,302,303,370,304,305,306,307,308,309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[372,373,23,367,374,375],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[224,225,235,376,242,377,378,379,380],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:39","sourceCode":"if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[265],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[366,262],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:94","failures":[260,3,4,262,263,264,265,266,267,268,277,278,282,283,299,300,301,302,308,309],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[19,21,26,193,211,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,84,156,313,315,316,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:319","sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[382],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[322,323,5,7,8,10,18,20,21,22,25,26,29,35,324,325,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,326,327,328,57,58,59,61,63,65,66,69,96,97,98,99,100,113,115,116,117,118,141,143,144,163,165,174,175,177,191,193,194,195,196,197,198,329,331,332,333,334,335,336,337,338,339,340,342,343,344,345,210,346,211,212,213,215,217,218,222,223,347,348,349,224,229,233,235,236,350,351,352,353,240,355,356,246,247,248,249,250,251,252,254,255,256,358,257,258,259,260,3,4,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,359,360,361,289,292,364,299,300,302,303,305,306,307,308,310,311,365,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[272,383],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[179,183],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[384,240,362,292,385,386],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.UsageTest.argumentsOrdered":221,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":164,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":216,"org.easymock.tests2.DelegateToTest.testReturnException":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":91,"org.easymock.tests.MockingTest.testPartialClassMocking":35,"org.easymock.tests.MockClassControlTest.testToString":148,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":226,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":119,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":351,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":65,"org.easymock.tests2.UsageTest.wrongArguments":214,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests2.UsageConstraintsTest.testNull":262,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":359,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":343,"org.easymock.tests2.CaptureTest.testPrimitive":302,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":138,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":206,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":100,"org.easymock.tests.ReplayStateInvalidUsageTest.times":78,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":365,"org.easymock.tests2.DependencyTest.testClassMocking":209,"org.easymock.tests2.AnswerTest.answer":229,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":171,"org.easymock.tests2.CaptureTest.testAnd":299,"org.easymock.tests2.UsageTest.strictResetToDefault":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":338,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":203,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":134,"org.easymock.tests.LimitationsTest.mockFinalMethod":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":30,"org.easymock.tests2.CaptureTest.testCapture1_2446744":303,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":132,"org.easymock.tests.UsageThrowableTest.throwError":191,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":208,"org.easymock.samples.PartialClassMockTest.testGetArea":323,"org.easymock.tests.MockingTest.testInterfaceMocking":36,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":97,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":58,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":120,"org.easymock.tests2.UsageTest.niceToStrict":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":154,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":240,"org.easymock.tests2.MockBuilderTest.testCreateMock":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":128,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":374,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":104,"org.easymock.tests.UsageOverloadedMethodTest.overloading":117,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":272,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":48,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":271,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":307,"org.easymock.tests.MockClassControlTest.testEquals":152,"org.easymock.tests2.EasyMockSupportClassTest.testAll":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":114,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":136,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":385,"org.easymock.tests2.CaptureTest.testCaptureAll":300,"org.easymock.tests.MockNameTest.defaultName":16,"org.easymock.tests2.UsageConstraintsTest.testMatches":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":207,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests.UsageVarargTest.allKinds":366,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":18,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":95,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":316,"org.easymock.tests2.UsageConstraintsTest.greaterThan":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":363,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":184,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":293,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":211,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":90,"org.easymock.tests2.CaptureTest.testCaptureFirst":311,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":337,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":88,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":44,"org.easymock.tests2.UsageTest.moreThanOneArgument":213,"org.easymock.tests2.CaptureTest.testCapture2_2446744":310,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":172,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":357,"org.easymock.tests.GenericTest.testBridgedEquals":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":111,"org.easymock.tests.UsageExpectAndReturnTest.longType":40,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":137,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":17,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":204,"org.easymock.tests.UsageCallCountTest.tooManyCalls":112,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":196,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":247,"org.easymock.tests.MockingTest.testClassMocking":33,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":384,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":105,"org.easymock.tests2.UsageConstraintsTest.testContains":270,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":320,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":118,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":369,"org.easymock.tests.UsageExpectAndReturnTest.object":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":188,"org.easymock.tests.UsageTest.exactCallCountByLastCall":29,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":382,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":159,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":60,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":53,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":84,"org.easymock.tests.MockClassControlTest.testHashCode":151,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":14,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":82,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":177,"org.easymock.tests2.UsageTest.openCallCountByLastCall":217,"org.easymock.tests.DefaultClassInstantiatorTest.object":178,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":13,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":186,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":194,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":150,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":125,"org.easymock.tests.CapturesMatcherTest.test":381,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":101,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":353,"org.easymock.tests2.UsageTest.resumeIfFailure":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":93,"org.easymock.tests2.StubTest.stubWithReturnValue":333,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":46,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":281,"org.easymock.tests2.SerializationTest.testAllMockedMethod":237,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":170,"org.easymock.samples.SupportTest.voteForRemovals":322,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":375,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":131,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":176,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":230,"org.easymock.tests.UsageExpectAndThrowTest.object":129,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":62,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":278,"org.easymock.tests2.DelegateToTest.testWrongClass":315,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":144,"org.easymock.tests.UsageStrictMockTest.range":327,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":297,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":130,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":355,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":372,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":59,"org.easymock.tests2.CaptureTest.testCaptureNone":306,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":371,"org.easymock.tests.UsageUnorderedTest.message":145,"org.easymock.tests.UsageVerifyTest.twoReturns":20,"org.easymock.tests2.ThreadingTest.testThreadSafe":254,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":109,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":189,"org.easymock.tests2.CaptureTest.testCapture_2617107":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":68,"org.easymock.tests2.UsageConstraintsTest.any":268,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":77,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":92,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":182,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":76,"org.easymock.tests2.SerializationTest.testClass":235,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":364,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":56,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":386,"org.easymock.tests2.NameTest.nameForMocksControl":228,"org.easymock.tests2.MockedExceptionTest.testMockedException":319,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":123,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":325,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":356,"org.easymock.tests.MockingTest.testNicePartialClassMocking":324,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":361,"org.easymock.tests2.CaptureTest.testCaptureLast":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":252,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":265,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":279,"org.easymock.tests.MockingTest.testTwoMocks":34,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":127,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":283,"org.easymock.samples.ExampleTest.removeNonExistingDocument":11,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":74,"org.easymock.tests.UsageStrictMockTest.differentMethods":328,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":180,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":256,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":146,"org.easymock.tests.UsageExpectAndThrowTest.floatType":121,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":274,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":232,"org.easymock.tests.UsageVerifyTest.twoThrows":19,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":352,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":292,"org.easymock.tests.LimitationsTest.privateConstructor":140,"org.easymock.tests2.UsageConstraintsTest.testNotNull":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":198,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":318,"org.easymock.tests2.UsageTest.defaultResetToNice":219,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":52,"org.easymock.tests2.UsageConstraintsTest.equals":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":290,"org.easymock.tests.UsageTest.openCallCountByLastCall":25,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":67,"org.easymock.tests.UsageCallCountTest.tooFewCalls":107,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":249,"org.easymock.tests.UsageThrowableTest.throwCheckedException":195,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":373,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":248,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":250,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":234,"org.easymock.tests.ObjectMethodsTest.testHashCode":187,"org.easymock.tests2.CompareToTest.testGreateOrEqual":383,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":257,"org.easymock.tests2.DependencyTest.testInterfaceMocking":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":379,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testStubDelegate":314,"org.easymock.tests2.AnswerTest.stubAnswer":233,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":326,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":163,"org.easymock.tests.UsageExpectAndReturnTest.floatType":39,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":224,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":192,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":259,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":295,"org.easymock.tests2.SerializationTest.test":236,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":38,"org.easymock.tests2.UsageConstraintsTest.testSame":263,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":75,"org.easymock.tests.GenericTest.testPackageScope":113,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":158,"org.easymock.tests2.NameTest.nameForMock":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":49,"org.easymock.tests2.UsageStrictMockTest.differentMethods":349,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":291,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":133,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":332,"org.easymock.tests2.MockedExceptionTest.testRealException":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":167,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":81,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":368,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":296,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":181,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":354,"org.easymock.tests2.UsageStrictMockTest.range":348,"org.easymock.tests2.UsageConstraintsTest.lessThan":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":0,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":308,"org.easymock.tests2.UsageConstraintsTest.testOr":264,"org.easymock.tests.UsageRangeTest.combination":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":286,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":50,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":183,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":110,"org.easymock.tests2.UsageConstraintsTest.cmpTo":269,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":157,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":218,"org.easymock.tests2.CaptureTest.testCaptureFromStub":309,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":71,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":238,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":51,"org.easymock.tests2.UsageConstraintsTest.constraints":260,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":98,"org.easymock.tests.LimitationsTest.abstractClass":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":99,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":340}}]
