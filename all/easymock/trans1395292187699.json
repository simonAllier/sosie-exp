[{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,0,66,67,1,68,69,70,71,2,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,8,9,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[437,441],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[30,69,71,139,142,143,144,183,186,188,192,193,195,397,403,405,407,408,409,413,415,416,419,420,421,468,469],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[493,494,495],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[280],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[30,31,34,36,37,39,49,54,106,108,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[496,3,4,5,497,498,7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[10,15,16,17,19,20,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,62,63,64,65,1,68,2,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,130,131,132,133,134,135,136,137,8,9,139,140,141,142,143,144,145,146,149,151,152,154,155,158,159,160,161,162,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,220,221,223,224,227,228,229,229,230,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,339,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,440,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,65,66,68,69,71,2,72,73,74,75,76,77,78,79,80,82,85,86,87,88,91,92,93,94,95,96,97,98,99,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,130,131,132,133,134,135,136,137,8,139,140,141,142,143,144,145,149,152,162,168,176,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,207,214,215,216,217,218,219,220,221,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,261,262,263,264,265,266,268,269,270,271,272,273,274,275,277,278,282,284,285,286,287,288,289,290,291,292,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,329,330,331,332,333,334,335,344,345,365,397,398,399,400,401,402,403,404,405,406,407,408,409,410,412,413,414,415,416,417,418,419,420,421,425,426,427,428,429,430,431,432,433,434,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,467,468,469,470,471,472,473,474,479,480,482,486,488,489,492],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[386],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[30,499],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"position":"org.easymock.ConstructorArgs:77","failures":[500,501],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[2,72,73,502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[35],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[0,1,2,3,4,5,7,8,9],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,59,63,65,66,69,2,72,74,75,76,77,78,79,82,86,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,113,114,115,116,117,118,119,130,131,132,133,134,135,136,137,8,141,143,144,149,152,162,168,176,183,184,185,187,189,190,191,194,195,196,197,198,199,200,201,207,214,216,217,218,219,220,221,223,224,225,229,229,230,230,232,235,236,237,238,239,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,260,261,262,263,277,279,282,283,284,285,286,287,288,289,290,291,292,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,329,344,345,346,347,348,349,350,365,367,368,369,386,392,394,395,396,397,406,408,409,412,413,414,417,418,421,422,423,424,425,426,427,428,429,430,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,465,467,468,469,470,471,472,473,474,479,480,482,486,488,489,491],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[31,37,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[63,67,1,68,71,2,83,87,90,8,9,276,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[28,44,47,56,95,96,97,105,107,113,114,119,185,214,216,217,243,263,299,305,311,315,317,386,397,414,444,450,456,460,462],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[28,29,33,34,35,36,42,44,45,47,48,54,55,56,117,141,229,229,230,230,252,253,254,255,256,260,286,288,289,292,344,345,406,470,471,472,473,474],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[46,78,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[39],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[373],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[143,186,192,193,503,397,405,408,415,416,419,420,468,469],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[97,360],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":413,"org.easymock.tests2.UsageTest.argumentsOrdered":193,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":380,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":188,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":231,"org.easymock.tests2.DelegateToTest.testReturnException":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":426,"org.easymock.tests.MockingTest.testPartialClassMocking":479,"org.easymock.tests.MockClassControlTest.testToString":321,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":10,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":299,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":38,"org.easymock.tests2.UsageTest.wrongArguments":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":288,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":433,"org.easymock.samples.ExampleTest.answerVsDelegate":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":341,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":484,"org.easymock.tests2.UsageConstraintsTest.testNull":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":77,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":24,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":326,"org.easymock.tests2.CaptureTest.testPrimitive":109,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":292,"org.easymock.tests.UsageTest.moreThanOneArgument":414,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":318,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":472,"org.easymock.tests.UsageTest.argumentsOrdered":420,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":346,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":212,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":256,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests.ReplayStateInvalidUsageTest.times":359,"org.easymock.tests2.DependencyTest.testClassMocking":128,"org.easymock.tests2.AnswerTest.answer":196,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":94,"org.easymock.tests2.CaptureTest.testAnd":106,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":338,"org.easymock.tests2.UsageTest.strictResetToDefault":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":284,"org.easymock.tests2.DelegateToTest.testDelegate":105,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":314,"org.easymock.tests.LimitationsTest.mockFinalMethod":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":402,"org.easymock.tests2.DependencyTest.testClassMockingSupport":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":464,"org.easymock.tests2.CaptureTest.testCapture1_2446744":110,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":92,"org.easymock.tests.UsageThrowableTest.throwError":244,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":340,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":213,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":170,"org.easymock.samples.PartialClassMockTest.testGetArea":232,"org.easymock.tests.MockingTest.testInterfaceMocking":481,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":354,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":368,"org.easymock.tests2.UsageTest.niceToStrict":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":157,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":300,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":308,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":20,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":431,"org.easymock.tests.UsageOverloadedMethodTest.overloading":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":455,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":261,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":43,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":115,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":267,"org.easymock.tests2.EasyMockSupportClassTest.testAll":149,"org.easymock.tests.MockClassControlTest.testEquals":325,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":400,"org.easymock.tests2.CaptureTest.testCaptureAll":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":93,"org.easymock.tests.MockNameTest.defaultName":475,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":473,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":351,"org.easymock.samples.ExampleTest.voteForRemovals":241,"org.easymock.tests.UsageVarargTest.allKinds":275,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":467,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":401,"org.easymock.samples.BasicClassMockTest.testPrintContent":228,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":250,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":430,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":209,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":442,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":283,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":88,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":443,"org.easymock.samples.ExampleTest.voteForRemoval":238,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":96,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":89,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":80,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":412,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":17,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":119,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":18,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":195,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":451,"org.easymock.tests2.UsageTest.moreThanOneArgument":185,"org.easymock.tests2.CaptureTest.testCapture2_2446744":118,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":388,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":274,"org.easymock.tests.GenericTest.testBridgedEquals":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":334,"org.easymock.tests.UsageExpectAndReturnTest.longType":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":398,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":317,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":52,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":470,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":423,"org.easymock.tests.UsageCallCountTest.tooManyCalls":335,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":249,"org.easymock.tests.MockingTest.testNiceClassMocking":485,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":219,"org.easymock.tests.MockingTest.testClassMocking":477,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":136,"org.easymock.tests2.UsageConstraintsTest.testFind":33,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":263,"org.easymock.tests.MockTypeTest.fromEasyMockClass":339,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":216,"org.easymock.tests.UsageExpectAndReturnTest.object":454,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":269,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":296,"org.easymock.tests.UsageTest.exactCallCountByLastCall":421,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":257,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":460,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":488,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":203,"org.easymock.tests.MockClassControlTest.testHashCode":324,"org.easymock.tests2.EasyMockSupportTest.testVerify":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":159,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":91,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":127,"org.easymock.tests.UsageVarargTest.varargCharAccepted":268,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":435,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":393,"org.easymock.tests2.UsageTest.openCallCountByLastCall":189,"org.easymock.tests.DefaultClassInstantiatorTest.object":436,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":26,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":394,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":294,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":174,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":202,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":86,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":461,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":168,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":322,"org.easymock.tests2.UsageTest.resumeIfFailure":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":428,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":453,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":53,"org.easymock.tests2.SerializationTest.testAllMockedMethod":73,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":386,"org.easymock.samples.SupportTest.voteForRemovals":235,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":311,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":392,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":197,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":259,"org.easymock.tests.UsageExpectAndThrowTest.object":309,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":50,"org.easymock.tests2.DelegateToTest.testWrongClass":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":344,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":345,"org.easymock.tests.UsageStrictMockTest.range":408,"org.easymock.samples.ConstructorCalledMockTest.testTax":229,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":125,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":22,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":310,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":65,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":432,"org.easymock.tests2.CaptureTest.testCaptureNone":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":369,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":494,"org.easymock.tests.UsageUnorderedTest.message":397,"org.easymock.tests.UsageVerifyTest.twoReturns":469,"org.easymock.tests.UsageVarargTest.varargByteAccepted":273,"org.easymock.tests2.ThreadingTest.testThreadSafe":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":163,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":332,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":227,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":297,"org.easymock.tests2.CaptureTest.testCapture_2617107":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":291,"org.easymock.tests2.UsageConstraintsTest.any":40,"org.easymock.tests2.StubTest.stub":132,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndThrowTest.longType":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":440,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":357,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":463,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":173,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests2.NameTest.nameForMocksControl":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":175,"org.easymock.tests2.MockedExceptionTest.testMockedException":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":151,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":418,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":482,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":303,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":66,"org.easymock.tests.MockingTest.testNicePartialClassMocking":480,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":171,"org.easymock.tests2.CaptureTest.testCaptureLast":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":465,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":225,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":51,"org.easymock.tests.MockingTest.testTwoMocks":478,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":307,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":55,"org.easymock.samples.ExampleTest.removeNonExistingDocument":242,"org.easymock.tests.UsageStrictMockTest.differentMethods":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":178,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":204,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":495,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":438,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":97,"org.easymock.tests2.MockBuilderTest.testCreateMockString":71,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":153,"org.easymock.tests.UsageExpectAndThrowTest.floatType":301,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":199,"org.easymock.tests.UsageVerifyTest.twoThrows":468,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":138,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":162,"org.easymock.samples.ExampleTest.voteAgainstRemoval":239,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":87,"org.easymock.tests.LimitationsTest.privateConstructor":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":500,"org.easymock.tests2.UsageConstraintsTest.testNotNull":54,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":251,"org.easymock.tests2.UsageTest.defaultResetToNice":191,"org.easymock.samples.ExampleTest.voteAgainstRemovals":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":172,"org.easymock.tests.UsageVarargTest.differentLength":270,"org.easymock.tests2.CallbackTest.callback":217,"org.easymock.tests2.UsageConstraintsTest.equals":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":83,"org.easymock.tests.UsageTest.openCallCountByLastCall":417,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":290,"org.easymock.tests.UsageCallCountTest.tooFewCalls":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":221,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":434,"org.easymock.tests.UsageThrowableTest.throwCheckedException":248,"org.easymock.tests.MockingTest.testStrictClassMocking":476,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":224,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":220,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":223,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":201,"org.easymock.tests.ObjectMethodsTest.testHashCode":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":99,"org.easymock.tests2.NameTest.nameForNiceMock":13,"org.easymock.tests2.DependencyTest.testInterfaceMocking":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":169,"org.easymock.tests2.DelegateToTest.testStubDelegate":102,"org.easymock.tests2.AnswerTest.stubAnswer":200,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":406,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":67,"org.easymock.tests.UsageVarargTest.varargLongAccepted":272,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":379,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":462,"org.easymock.tests.UsageExpectAndReturnTest.floatType":446,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":230,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":211,"org.easymock.tests.UsageThrowableTest.noUpperLimit":245,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":120,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":111,"org.easymock.tests2.SerializationTest.test":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":445,"org.easymock.tests2.UsageConstraintsTest.testSame":35,"org.easymock.samples.SupportTest.addDocument":234,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":222,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":154,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":210,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":483,"org.easymock.tests2.NameTest.nameForMock":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":456,"org.easymock.tests2.UsageStrictMockTest.differentMethods":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":448,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":313,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":285,"org.easymock.tests2.MockedExceptionTest.testRealException":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":126,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":383,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":289,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":362,"org.easymock.tests2.NameTest.nameForStrictMock":12,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":62,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":78,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":124,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":439,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":143,"org.easymock.tests2.UsageConstraintsTest.lessThan":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":6,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":158,"org.easymock.tests2.CaptureTest.testCaptureRightOne":116,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":493,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests.UsageRangeTest.combination":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":75,"org.easymock.tests.UsageTest.wrongArguments":416,"org.easymock.tests2.MockBuilderTest.testWithConstructor":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":155,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":371,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":441,"org.easymock.tests.UsageVarargTest.varargShortAccepted":271,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":333,"org.easymock.tests2.UsageConstraintsTest.cmpTo":41,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":373,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":190,"org.easymock.tests2.CaptureTest.testCaptureFromStub":117,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":352,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":60,"org.easymock.tests.UsageTest.unexpectedCallWithArray":415,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":458,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":407,"org.easymock.tests2.UsageConstraintsTest.constraints":30,"org.easymock.samples.ExampleTest.addAndChangeDocument":243,"org.easymock.tests.UsageStrictMockTest.testVerify":411,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":233,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":404,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":399,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":450,"org.easymock.tests.LimitationsTest.abstractClass":363,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":21,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265}}]
