[{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,6,7,24,277,278,279,42,44,45,280,281,88,282,283,111,284,285,286,287,288,289,290,142,144,145,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[6,7,24,279,41,44,291,89,92,93,144,209,215,216],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[292,293,294,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[153,154],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[302,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[304,305,306,147,307,198,308,199,309,200,201,310,202,311,248,249,250,312,258,259,313,268],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[314,315,257,316,317,318,258,259,260,319,313,320,321,322,265,266,323,323,324,324,268],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[6,7,24,279,41,44,291,89,92,93,284,144,209,215,216],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[326,327,328,329,330,132,331,332,333,334,335,336,337,338,339,340,341,139,342,343,344,345,346,347,267,276],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[348,227,228,229,230,231,232,233,234,235,236,237,349,238,239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[348,350,228,349,238],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:314","failures":[351,352,353,354],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[137,297,147,193,197,355,356,357,298,358,359,360,361,362,363,364,365,247,366,367,248,368,369,370,371,372,373,374,375,376,249,377,378,379,380,381,250,382,383,323,324],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[384,64,385,386,387,388,107,389,390,391,203,392],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[393,394,395,396,397,23,398,42,48,49,50,51,52,399,400,401,402,403,62,63,66,404,104,105,142,150,151,154,155,156,157,163,165,166,168,169,175,176,177,349,241,323,323,324,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[405,292,293,294,295,296,406,137],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[152,158,163,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[407,147,148,149],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[300],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[110,392],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[44,45,144,145],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[408,409,410],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[292,293,294,411,406,137,297,147,298,358],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[351,352,353,354],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":153,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.UsageTest.argumentsOrdered":216,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":331,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":211,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":267,"org.easymock.tests2.DelegateToTest.testReturnException":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":386,"org.easymock.tests.MockingTest.testPartialClassMocking":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":67,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":248,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":292,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.tests2.UsageTest.wrongArguments":209,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":347,"org.easymock.samples.ExampleTest.answerVsDelegate":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":306,"org.easymock.tests2.UsageConstraintsTest.testNull":155,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":254,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":187,"org.easymock.tests2.CaptureTest.testPrimitive":230,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":86,"org.easymock.tests.UsageTest.moreThanOneArgument":88,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":401,"org.easymock.tests.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageVarargTest.varargIntAccepted":27,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":296,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":335,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":52,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.AnswerTest.answer":219,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":21,"org.easymock.tests2.CaptureTest.testAnd":227,"org.easymock.tests2.UsageTest.strictResetToDefault":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":15,"org.easymock.tests2.DelegateToTest.testDelegate":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":107,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":280,"org.easymock.tests2.CaptureTest.testCapture1_2446744":231,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":80,"org.easymock.tests.UsageThrowableTest.throwError":54,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":403,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":383,"org.easymock.samples.PartialClassMockTest.testGetArea":268,"org.easymock.tests2.CompareToTest.testLessOrEqual":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":68,"org.easymock.tests2.UsageTest.niceToStrict":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":372,"org.easymock.tests2.ThreadingTest.testChangeDefault":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":199,"org.easymock.tests2.MockBuilderTest.testCreateMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":76,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":286,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":354,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":95,"org.easymock.tests.UsageOverloadedMethodTest.overloading":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":165,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":123,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":36,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":164,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":300,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":236,"org.easymock.tests2.EasyMockSupportClassTest.testAll":247,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":84,"org.easymock.tests2.CaptureTest.testCaptureAll":228,"org.easymock.tests2.UsageConstraintsTest.testMatches":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":402,"org.easymock.samples.ExampleTest.voteForRemovals":274,"org.easymock.tests.UsageVarargTest.allKinds":35,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.samples.BasicClassMockTest.testPrintContent":266,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":60,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":389,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":406,"org.easymock.tests2.UsageConstraintsTest.greaterThan":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":14,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":260,"org.easymock.samples.ExampleTest.voteForRemoval":271,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":243,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":319,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":312,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":180,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":385,"org.easymock.tests2.CaptureTest.testCaptureFirst":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":181,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":119,"org.easymock.tests2.UsageTest.moreThanOneArgument":208,"org.easymock.tests2.CaptureTest.testCapture2_2446744":238,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":100,"org.easymock.tests.UsageExpectAndReturnTest.longType":115,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":85,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":398,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":173,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":399,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageCallCountTest.tooManyCalls":101,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":192,"org.easymock.tests2.UsageConstraintsTest.testContains":163,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":203,"org.easymock.tests2.UsageConstraintsTest.testFind":154,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":38,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":205,"org.easymock.tests.UsageExpectAndReturnTest.object":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":186,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":293,"org.easymock.tests.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":11,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":297,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":128,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":25,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":109,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":327,"org.easymock.tests2.EasyMockSupportTest.testVerify":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":374,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":12,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":353,"org.easymock.tests.UsageVarargTest.varargCharAccepted":28,"org.easymock.tests2.CaptureTest.testCaptureMultiple":350,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":141,"org.easymock.tests2.UsageTest.openCallCountByLastCall":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":408,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":189,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":375,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":73,"org.easymock.tests.CapturesMatcherTest.test":348,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":250,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":288,"org.easymock.tests2.UsageTest.resumeIfFailure":217,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":305,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":388,"org.easymock.tests2.StubTest.stubWithReturnValue":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":298,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":121,"org.easymock.tests2.SerializationTest.testAllMockedMethod":149,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":20,"org.easymock.samples.SupportTest.voteForRemovals":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":79,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":407,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":303,"org.easymock.tests.UsageExpectAndThrowTest.object":77,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":171,"org.easymock.tests2.DelegateToTest.testWrongClass":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":104,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":105,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":323,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":200,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":363,"org.easymock.tests2.CaptureTest.testCaptureNone":235,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":33,"org.easymock.tests2.ThreadingTest.testThreadSafe":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":377,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":99,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests2.UsageConstraintsTest.any":161,"org.easymock.tests2.StubTest.stub":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":387,"org.easymock.tests.UsageExpectAndThrowTest.longType":70,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":325,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests2.SerializationTest.testClass":147,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests.LimitationsTest.mockNativeMethod":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":131,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":339,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.tests2.NameTest.nameForMocksControl":226,"org.easymock.tests2.MockedExceptionTest.testMockedException":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":367,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":71,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":201,"org.easymock.tests.MockingTest.testNicePartialClassMocking":9,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":256,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":405,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests2.CaptureTest.testCaptureLast":234,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":337,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":281,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":197,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":172,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":355,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":75,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":215,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":176,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":328,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":244,"org.easymock.tests2.ConstraintsToStringTest.andToString":289,"org.easymock.tests2.MockBuilderTest.testCreateMockString":311,"org.easymock.tests.UsageExpectAndThrowTest.floatType":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":368,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":220,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":249,"org.easymock.samples.ExampleTest.voteAgainstRemoval":272,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":259,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":362,"org.easymock.tests2.UsageConstraintsTest.testNotNull":175,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":390,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":61,"org.easymock.tests2.UsageTest.defaultResetToNice":214,"org.easymock.samples.ExampleTest.voteAgainstRemovals":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":19,"org.easymock.tests.UsageVarargTest.differentLength":30,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":338,"org.easymock.tests2.CallbackTest.callback":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":316,"org.easymock.tests.UsageTest.openCallCountByLastCall":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.UsageCallCountTest.tooFewCalls":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":194,"org.easymock.tests.UsageThrowableTest.throwCheckedException":58,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":277,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":196,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":195,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":222,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":295,"org.easymock.tests2.NameTest.nameForNiceMock":225,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":294,"org.easymock.samples.ExampleTest.addDocument":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":378,"org.easymock.tests2.DelegateToTest.testStubDelegate":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests.UsageVarargTest.varargLongAccepted":32,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":130,"org.easymock.tests.UsageExpectAndReturnTest.floatType":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":137,"org.easymock.tests2.ConstraintsToStringTest.orToString":285,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":324,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":169,"org.easymock.tests.UsageThrowableTest.noUpperLimit":55,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":151,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":320,"org.easymock.tests2.SerializationTest.test":148,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":232,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":301,"org.easymock.tests2.UsageConstraintsTest.testSame":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":113,"org.easymock.samples.SupportTest.addDocument":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":369,"org.easymock.tests.GenericTest.testPackageScope":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":333,"org.easymock.tests2.NameTest.nameForMock":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":16,"org.easymock.tests2.MockedExceptionTest.testRealException":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":278,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests2.NameTest.nameForStrictMock":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":255,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":322,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":170,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":198,"org.easymock.tests2.UsageStrictMockTest.range":144,"org.easymock.tests2.UsageConstraintsTest.lessThan":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":18,"org.easymock.tests2.CaptureTest.testCaptureRightOne":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":373,"org.easymock.tests2.UsageConstraintsTest.testOr":157,"org.easymock.tests.UsageRangeTest.combination":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":252,"org.easymock.tests.UsageTest.wrongArguments":89,"org.easymock.tests2.MockBuilderTest.testWithConstructor":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":17,"org.easymock.tests.UsageVarargTest.varargShortAccepted":31,"org.easymock.tests2.UsageConstraintsTest.cmpTo":162,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests2.CaptureTest.testCaptureFromStub":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":308,"org.easymock.tests.UsageTest.unexpectedCallWithArray":291,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":98,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.constraints":152,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.samples.ExampleTest.addAndChangeDocument":275,"org.easymock.tests2.ConstraintsToStringTest.notToString":287,"org.easymock.tests.UsageStrictMockTest.testVerify":47,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":40,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":118,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":184,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":26}}]
