[{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[0,1,2,3,4,5,6],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[19,20,21],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[0,48,48,49,49,50,51,52,53,54,55,56,7,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,1,2,3,4,5,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,29,120,121,122,123,124,125,126,127,128,129,130,131,41,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,16,17,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methods":"methods","list":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[8,9,11,12,13,298,299],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,48,48,49,49,7,300,301,1,302,2,3,4,5,303,6,102,304,108,109,110,305,306,307,308,309,159,160,161,162,16,215,216,217,238,258,259,266],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[10,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[0,48,48,49,49,50,52,53,54,56,7,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,1,2,3,4,5,87,88,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,29,120,121,122,123,124,125,126,127,128,129,130,41,134,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,169,170,171,16,17,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,226,228,229,230,231,232,233,234,235,236,237,248,250,252,253,254,255,256,257,258,259,260,261,262,266,267,268,271,272,273,274,275,276,277,284,286,288,289,291,292,293,295,296],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[87,89,90,91,92,93,94,96,310,97,98,100],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[50,52,53,54,56,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[8,9,11,12,13,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,48,49,50,51,52,53,311,54,55,22,312,313,23,314,56,7,315,316,317,318,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,319,320,321,322,301,2,323,3,4,87,88,89,90,92,93,94,95,96,97,100,101,103,104,105,106,107,324,109,111,112,115,116,117,118,119,29,121,122,123,325,126,127,129,130,131,41,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,326,159,160,161,162,163,166,167,168,327,169,171,328,16,17,329,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,226,229,230,231,232,234,238,330,331,332,333,334,248,251,252,258,335,261,262,336,337,338,339,340,341,342,343,344,265,345,266,267,268,271,346,347,348,349,272,273,274,275,276,278,279,280,281,282,283,284,285,286,350,351,287,352,353,354,288,289,355,291,293,356,357],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[358,77],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[61,68,74,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[323,304],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[359],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[61,76,1,360,5,6,102,108,110,113,120,361,123,325,362,363,127,128,131,148,152,153,156,364,365,170,171,229,233,366,367,368,369,237,244,370,285,286,371,372,373,374,290,375,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[376,377,378,379,366,290],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[380,381,382],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[50,51,52,53,311,54,383,55,7,315,316,317,318,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,319,320,321,322,301,1,2,323,360,5,6,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,304,107,324,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,361,123,325,124,125,126,362,363,127,128,129,131,41,133,134,135,137,138,139,141,142,145,146,163,166,167,168,364,327,169,365,170,171,328,16,17,329,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,384,385,386,387,388,389,390,391,392,393,394,395,218,219,220,221,222,223,396,224,225,226,397,227,229,230,231,232,233,234,366,367,235,236,368,369,237,238,330,331,332,333,334,19,244,248,249,250,251,252,253,254,255,256,257,258,335,260,261,262,336,337,338,339,340,370,341,342,343,344,265,398,345,399,400,401,402,403,404,266,267,268,269,270,271,346,347,348,349,272,273,274,275,276,405,406,407,278,279,280,281,282,283,284,285,286,350,351,287,352,353,354,371,372,373,288,289,374,355,290,291,375,292,293,356,357],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[170,171,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[359,258,335,259,408],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[258,259,408],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[409,376,410,411,297,412,122,169,170,171,413,227,379,414,415,234,244,284,285,286,291,292,293],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[416,74,81,86],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.UsageTest.argumentsOrdered":363,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":30,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":325,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testReturnException":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":279,"org.easymock.tests.MockingTest.testPartialClassMocking":215,"org.easymock.tests.MockClassControlTest.testToString":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":160,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":11,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":267,"org.easymock.tests2.UsageTest.wrongArguments":361,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":348,"org.easymock.samples.ExampleTest.answerVsDelegate":51,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":156,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":305,"org.easymock.tests2.CaptureTest.testPrimitive":90,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":191,"org.easymock.tests.UsageTest.moreThanOneArgument":234,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":220,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":239,"org.easymock.tests.UsageTest.argumentsOrdered":369,"org.easymock.tests.UsageVarargTest.varargIntAccepted":338,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":34,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":276,"org.easymock.tests.ReplayStateInvalidUsageTest.times":392,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests2.AnswerTest.answer":163,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":87,"org.easymock.tests2.UsageTest.strictResetToDefault":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":231,"org.easymock.tests2.DelegateToTest.testDelegate":137,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":334,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":413,"org.easymock.tests2.CaptureTest.testCapture1_2446744":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":386,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":222,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":173,"org.easymock.tests2.UsageTest.niceToStrict":123,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":2,"org.easymock.tests2.MockBuilderTest.testCreateMock":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":44,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":181,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":376,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":152,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":346,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":74,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":260,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":381,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":96,"org.easymock.tests.MockClassControlTest.testEquals":403,"org.easymock.tests2.EasyMockSupportClassTest.testAll":159,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":189,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":306,"org.easymock.tests2.CaptureTest.testCaptureAll":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":332,"org.easymock.tests2.UsageConstraintsTest.testMatches":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":221,"org.easymock.samples.ExampleTest.voteForRemovals":54,"org.easymock.tests.UsageVarargTest.allKinds":265,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":284,"org.easymock.samples.BasicClassMockTest.testPrintContent":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":333,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":256,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":230,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":110,"org.easymock.samples.ExampleTest.voteForRemoval":52,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":112,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":304,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":238,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":149,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":278,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":132,"org.easymock.tests2.CaptureTest.testCaptureFirst":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":150,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":202,"org.easymock.tests2.UsageTest.moreThanOneArgument":122,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":114,"org.easymock.tests2.CaptureTest.testCapture2_2446744":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":5,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":344,"org.easymock.tests.GenericTest.testBridgedEquals":408,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":372,"org.easymock.tests.UsageExpectAndReturnTest.longType":198,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":190,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":82,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":218,"org.easymock.tests.UsageCallCountTest.tooManyCalls":373,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":255,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.testContains":72,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":351,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":63,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":262,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":58,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":374,"org.easymock.tests.UsageExpectAndReturnTest.object":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":12,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":407,"org.easymock.tests.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":248,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":211,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":224,"org.easymock.tests.MockClassControlTest.testHashCode":402,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":25,"org.easymock.tests2.EasyMockSupportTest.testVerify":326,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":223,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageVarargTest.varargCharAccepted":339,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests2.UsageTest.openCallCountByLastCall":124,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":158,"org.easymock.tests.DefaultClassInstantiatorTest.object":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":245,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":405,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":253,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":39,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":192,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":411,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":162,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":281,"org.easymock.tests2.StubTest.stubWithReturnValue":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.tests2.SerializationTest.testAllMockedMethod":329,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":263,"org.easymock.samples.SupportTest.voteForRemovals":56,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":377,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":184,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":264,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":164,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.DelegateToTest.testWrongClass":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests.UsageStrictMockTest.range":292,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":3,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":347,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":378,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":296,"org.easymock.tests.UsageUnorderedTest.message":244,"org.easymock.tests.UsageVerifyTest.twoReturns":286,"org.easymock.tests.UsageVarargTest.varargByteAccepted":343,"org.easymock.tests2.ThreadingTest.testThreadSafe":111,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":354,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":312,"org.easymock.tests2.CaptureTest.testCapture_2617107":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":270,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":391,"org.easymock.tests2.StubTest.stub":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":194,"org.easymock.tests.UsageExpectAndThrowTest.longType":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":280,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":380,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":390,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":365,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":29,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests.LimitationsTest.mockNativeMethod":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":214,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":38,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":308,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":328,"org.easymock.tests2.NameTest.nameForMocksControl":318,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":40,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":176,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":4,"org.easymock.tests.MockingTest.testNicePartialClassMocking":216,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":36,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":227,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":180,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":362,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":85,"org.easymock.samples.ExampleTest.removeNonExistingDocument":383,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":43,"org.easymock.tests.UsageStrictMockTest.differentMethods":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":26,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":113,"org.easymock.tests2.ConstraintsToStringTest.andToString":297,"org.easymock.tests2.MockBuilderTest.testCreateMockString":6,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":174,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":166,"org.easymock.tests.UsageVerifyTest.twoThrows":285,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":161,"org.easymock.samples.ExampleTest.voteAgainstRemoval":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests2.UsageConstraintsTest.testNotNull":84,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":257,"org.easymock.tests2.UsageTest.defaultResetToNice":126,"org.easymock.samples.ExampleTest.voteAgainstRemovals":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":37,"org.easymock.tests.UsageVarargTest.differentLength":370,"org.easymock.tests2.CallbackTest.callback":131,"org.easymock.tests.UsageTest.openCallCountByLastCall":235,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":269,"org.easymock.tests.UsageCallCountTest.tooFewCalls":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":349,"org.easymock.tests.UsageThrowableTest.throwCheckedException":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":379,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":249,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":42,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":144,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":168,"org.easymock.tests.ObjectMethodsTest.testHashCode":406,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":298,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":115,"org.easymock.tests2.NameTest.nameForNiceMock":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":13,"org.easymock.samples.ExampleTest.addDocument":311,"org.easymock.tests2.DelegateToTest.testStubDelegate":134,"org.easymock.tests2.AnswerTest.stubAnswer":167,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":291,"org.easymock.tests.UsageVarargTest.varargLongAccepted":342,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":356,"org.easymock.tests.UsageExpectAndReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.tests2.ConstraintsToStringTest.orToString":409,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":33,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":78,"org.easymock.tests.UsageThrowableTest.noUpperLimit":251,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":382,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":20,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":196,"org.easymock.samples.SupportTest.addDocument":314,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":389,"org.easymock.tests.GenericTest.testPackageScope":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":32,"org.easymock.tests2.NameTest.nameForMock":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":207,"org.easymock.tests2.UsageStrictMockTest.differentMethods":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":232,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":414,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":169,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":268,"org.easymock.tests2.NameTest.nameForStrictMock":316,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":1,"org.easymock.tests2.UsageStrictMockTest.range":170,"org.easymock.tests2.UsageConstraintsTest.lessThan":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":28,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":300,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":14,"org.easymock.tests2.CaptureTest.testCaptureRightOne":97,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":367,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":208,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":21,"org.easymock.tests.UsageVarargTest.varargShortAccepted":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":371,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":165,"org.easymock.tests2.CompareToTest.testLessThan":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests2.CaptureTest.testCaptureFromStub":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":385,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":302,"org.easymock.tests.UsageTest.unexpectedCallWithArray":366,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":209,"org.easymock.tests2.CaptureTest.testCapture":310,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":375,"org.easymock.samples.ExampleTest.addAndChangeDocument":55,"org.easymock.tests2.ConstraintsToStringTest.notToString":410,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":355,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":331,"org.easymock.tests2.CompareToTest.testGreateThan":358,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":274,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":201,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":153,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":337}}]
