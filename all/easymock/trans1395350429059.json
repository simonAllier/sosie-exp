[{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:161","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[96,97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[31,99,100,101,0,102,103,104,105],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[120,121,122,123,96,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,97,98,152,153,154,155,156,157],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[158,159,160],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[161,162],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[163,157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[165,166,167,124,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[10,186,11,12,187,13,188,189,189,190,190,191,14,192,193,15,194,195,16,17,196,197,198,199,18,200,19,20,201,202,203,204,205,206,207,208,209,210,211,5,212,213,8,214,161,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,108,231,109,110,111,112,113,114,232,115,117,118,233,119,234,235,236,237,238,239,21,22,23,24,25,26,240,27,241,28,29,30,31,242,243,244,32,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,33,34,260,35,36,261,37,262,120,263,264,265,266,267,268,121,269,159,270,271,272,273,274,275,163,276,38,39,40,41,42,43,44,0,1,2,45,46,47,48,277,278,279,280,281,282,49,283,9,284,285,286,122,287,288,289,290,50,291,51,52,53,54,55,292,293,294,295,56,296,57,58,297,298,59,60,61,62,63,64,299,300,65,66,301,67,68,69,302,70,71,72,73,74,303,304,305,306,123,307,75,76,77,78,79,308,96,309,162,310,311,312,313,314,315,80,81,82,316,83,84,85,317,125,86,318,319,320,321,322,323,324,325,326,327,328,126,329,330,331,332,127,160,333,334,335,336,337,338,339,340,341,342,343,344,6,87,88,89,90,91,92,345,93,346,347,128,348,94,95,349,350,351,352,353,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,354,149,355,150,151,97,98,152,153,356,357,358,359,360,154,155,156,361,362,363,157,364,365,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[368,369],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[223],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[370,50,291,51,371],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[281,49,174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[19,265,159,270,295,57,96,309,372,373,330,331,160,333,354,366],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:117","failures":[186,196,197,234,237,239,285,361],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[120,121,96,126,127,150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[120,121,122,123,96,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,97,98,152,153,154,155,156,157],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[18,19,20,264,56,57,58,308,96,309,329,374,375,376,377,354],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[108,231,109,110,111,112,113,114,115,117,118,233,119,378],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[244],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":210,"org.easymock.tests2.UsageTest.argumentsOrdered":270,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":174,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":267,"org.easymock.tests2.StubTest.stubWithReturnValue":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":227,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":66,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":282,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":304,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":370,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":182,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":314,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":129,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":235,"org.easymock.tests.UsageExpectAndThrowTest.object":139,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":374,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":224,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":17,"org.easymock.tests2.DelegateToTest.testWrongClass":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":214,"org.easymock.tests2.UsageTest.wrongArguments":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":93,"org.easymock.tests.UsageStrictMockTest.range":57,"org.easymock.samples.ConstructorCalledMockTest.testTax":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":186,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":38,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests2.CaptureTest.testPrimitive":110,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":348,"org.easymock.tests.UsageTest.moreThanOneArgument":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":148,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":54,"org.easymock.tests2.CaptureTest.testCaptureNone":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":84,"org.easymock.tests.UsageUnorderedTest.message":354,"org.easymock.tests.UsageVerifyTest.twoReturns":309,"org.easymock.tests.UsageVarargTest.varargByteAccepted":343,"org.easymock.tests2.ThreadingTest.testThreadSafe":242,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":356,"org.easymock.tests.UsageTest.argumentsOrdered":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":337,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":322,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":87,"org.easymock.tests2.CaptureTest.testCapture_2617107":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":260,"org.easymock.tests2.UsageConstraintsTest.any":161,"org.easymock.tests2.StubTest.stub":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":305,"org.easymock.tests.UsageExpectAndThrowTest.longType":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":184,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests2.AnswerTest.answer":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":74,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":205,"org.easymock.tests2.CaptureTest.testAnd":108,"org.easymock.tests2.UsageTest.strictResetToDefault":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":241,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.MockedExceptionTest.testMockedException":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":77,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":360,"org.easymock.tests2.DelegateToTest.testDelegate":284,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":133,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":144,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":26,"org.easymock.tests2.CaptureTest.testCaptureLast":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":312,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":225,"org.easymock.tests.MockingTest.testTwoMocks":315,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":311,"org.easymock.tests2.CaptureTest.testCapture1_2446744":111,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":164,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":137,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":229,"org.easymock.tests.UsageThrowableTest.throwError":149,"org.easymock.tests.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":244,"org.easymock.tests2.MockBuilderTest.testCreateMockString":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":292,"org.easymock.tests.UsageExpectAndThrowTest.floatType":131,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":220,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":237,"org.easymock.tests.UsageVerifyTest.twoThrows":96,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests2.CompareToTest.testLessOrEqual":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests2.UsageTest.niceToStrict":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":228,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":165,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.UsageTest.defaultResetToNice":269,"org.easymock.tests2.MockBuilderTest.testCreateMock":261,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":176,"org.easymock.tests.UsageVarargTest.differentLength":340,"org.easymock.tests2.CallbackTest.callback":285,"org.easymock.tests2.UsageConstraintsTest.equals":158,"org.easymock.tests.UsageTest.openCallCountByLastCall":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":138,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageCallCountTest.tooFewCalls":320,"org.easymock.tests.UsageOverloadedMethodTest.overloading":317,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":218,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":157,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":41,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":217,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":97,"org.easymock.tests2.EasyMockSupportClassTest.testAll":45,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests2.CaptureTest.testCaptureAll":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":204,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":310,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":43,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests2.UsageConstraintsTest.testMatches":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":42,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":55,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":245,"org.easymock.tests.UsageVarargTest.allKinds":6,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":308,"org.easymock.tests2.DependencyTest.testInterfaceMocking":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.samples.BasicClassMockTest.testPrintContent":195,"org.easymock.samples.ExampleTest.addDocument":187,"org.easymock.tests2.DelegateToTest.testStubDelegate":49,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":198,"org.easymock.tests2.AnswerTest.stubAnswer":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":307,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":9,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests2.UsageConstraintsTest.greaterThan":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":76,"org.easymock.tests.UsageVarargTest.varargLongAccepted":342,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":173,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":73,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":190,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.UsageThrowableTest.noUpperLimit":355,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":222,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":208,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":112,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":248,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":150,"org.easymock.tests2.UsageConstraintsTest.testSame":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.samples.SupportTest.addDocument":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":303,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":281,"org.easymock.tests2.CaptureTest.testCaptureFirst":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":249,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":272,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":300,"org.easymock.tests.GenericTest.testPackageScope":50,"org.easymock.tests2.UsageTest.moreThanOneArgument":264,"org.easymock.tests2.CaptureTest.testCapture2_2446744":233,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":168,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":344,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":324,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":147,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":226,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":92,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageCallCountTest.tooManyCalls":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":78,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":319,"org.easymock.tests2.MockedExceptionTest.testRealException":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":178,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":372,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":98,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":39,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests2.UsageConstraintsTest.testContains":216,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":275,"org.easymock.tests2.UsageConstraintsTest.testFind":211,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":25,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":197,"org.easymock.tests.UsageExpectAndReturnTest.object":301,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":375,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests.ErrorMessageTest.testGetters":376,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":254,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":103,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":169,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":172,"org.easymock.tests2.CaptureTest.testCaptureRightOne":117,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests2.UsageConstraintsTest.testOr":213,"org.easymock.tests.UsageRangeTest.combination":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":99,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":363,"org.easymock.tests.UsageTest.wrongArguments":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":7,"org.easymock.tests2.EasyMockSupportTest.testVerify":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":166,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":361,"org.easymock.tests.UsageVarargTest.varargShortAccepted":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":155,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":202,"org.easymock.tests2.UsageConstraintsTest.cmpTo":215,"org.easymock.tests.UsageVarargTest.varargCharAccepted":338,"org.easymock.tests2.CaptureTest.testCaptureMultiple":107,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":236,"org.easymock.tests2.CompareToTest.testLessThan":106,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":185,"org.easymock.tests2.UsageTest.openCallCountByLastCall":268,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.tests.UsageTest.unexpectedCallWithArray":330,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":136,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":368,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":302,"org.easymock.tests2.CaptureTest.testCapture":116,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.UsageConstraintsTest.constraints":209,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":135,"org.easymock.samples.ExampleTest.addAndChangeDocument":188,"org.easymock.tests.CapturesMatcherTest.test":378,"org.easymock.tests.UsageStrictMockTest.testVerify":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":72,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":191,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.UsageTest.resumeIfFailure":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":89,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":299,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":90,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":377,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":252}}]
