[{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[70,35,37,38,39,40,41,42,44,71,45,46,48],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[6,8,24,30,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[73,74,75,76,77],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,73,74,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,4,3,5,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,0,157,1,158,159,160,6,7,8,9,161,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,162,163,34,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,35,36,37,38,39,40,41,42,43,44,45,46,47,48,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,49,77,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,50,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,51,52,53,54,55,56,311,312,313,314,315,316,317,318,319,320,57,58,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,2,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,59,60,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,61,62,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,63,466,64,65,66,67,68,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,69,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,73,74,92,508,509,510,93,511,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,4,3,5,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,0,157,1,158,159,160,6,7,8,9,161,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,162,163,34,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,35,36,37,38,39,40,41,42,43,44,45,46,47,48,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,49,77,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,50,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,51,52,53,54,55,56,311,312,313,314,315,316,317,318,319,320,57,58,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,2,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,59,60,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,61,62,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,63,466,64,65,66,67,68,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,69,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","this":"this","key":"key"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[95,512,513,514,515,516,517,518,141,519],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[321,325],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9,10,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[78,79,80,81,82,83,85,86,87,88,89,90,91,73,74,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,115,118,128,134,137,138,139,140,4,5,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,1,158,160,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,162,163,34,164,165,166,167,173,176,177,178,35,36,37,38,39,40,41,42,43,44,45,46,47,48,179,180,181,182,183,189,196,197,198,199,201,202,203,205,206,209,210,211,212,215,216,217,220,221,228,229,230,231,232,233,234,49,237,238,239,240,248,255,257,258,50,259,260,263,265,266,267,268,272,273,274,275,276,277,278,279,302,303,304,305,306,307,308,309,310,51,52,53,54,55,56,314,315,317,57,58,322,323,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,384,385,386,387,388,389,390,391,392,393,394,395,396,59,60,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,431,432,433,434,435,436,437,438,439,61,62,440,441,442,443,445,447,448,451,452,453,454,462,463,464,465,63,466,64,65,66,67,68,467,469,470,483,484,485,487,488,489,490,491,492,493,69,520,520],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[85,98,101,102,103,107,110,4,5,160,6,7,8,10,11,12,13,19,20,21,22,24,25,32,33,165,166,36,37,39,40,42,43,47,48,183,255,257,258,279,302,303,306,307,56,352,353,356,358,359,360,361,363,364,365,366,368,369,370,371,385,398,399,402,404,405,406,407,409,410,411,412,414,415,416,417,431,441,442,452,467,468,469,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[257,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[177,178],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[6,24,27,521],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[99,105,106,165,304,305,308,309,56,522,523,61,441,451,453,454],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[101,23,232,378],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9,10,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[524,525],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[89,90,91,73,73,74,74,94,115,118,128,134,139,141,143,196,197,198,199,202,203,205,206,209,210,211,212,215,216,217,228,229,231,232,233,234,49,237,238,239,240,260,263,313,314,315,317,322,323,324,501],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,520],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[321,325],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[99,105,106,165,304,305,308,309,56,523,61,441,453,454],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[89,90,91,73,73,74,74,94,526,527,528,115,118,128,134,139,141,143,196,197,198,199,202,203,205,529,206,207,209,210,211,212,215,216,530,217,228,229,231,232,233,234,49,237,238,239,240,260,263,313,314,315,317,322,323,324,418,423,501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[531],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[73,73,74,74,6,7,10,11,12,13,19,21,22,24,25,31,32,33,34,46,51,52,55,57,58,329,333,334,342,347,392,393,394,395,396,59,62,64,65,66,67,68,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[11,26,31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[73,74,111,6,7,10,11,12,13,19,21,22,24,25,31,32,33,34,46,51,52,55,57,58,392,393,394,395,396,59,62,64,65,66,67,68],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":9,"org.easymock.tests2.UsageTest.argumentsOrdered":106,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":302,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":2,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":88,"org.easymock.tests2.DelegateToTest.testReturnException":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":463,"org.easymock.tests.MockingTest.testPartialClassMocking":314,"org.easymock.tests.MockClassControlTest.testToString":502,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":168,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":398,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":118,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":221,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":513,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":15,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":423,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":319,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":231,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":507,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":38,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":417,"org.easymock.tests.UsageTest.moreThanOneArgument":303,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":394,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":478,"org.easymock.tests.UsageTest.argumentsOrdered":309,"org.easymock.tests.UsageVarargTest.varargIntAccepted":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":517,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":224,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":285,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":248,"org.easymock.tests.ReplayStateInvalidUsageTest.times":380,"org.easymock.tests2.DependencyTest.testClassMocking":218,"org.easymock.tests2.AnswerTest.answer":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":182,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":420,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests2.UsageTest.strictResetToDefault":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":393,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":482,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":413,"org.easymock.tests.LimitationsTest.mockFinalMethod":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":276,"org.easymock.tests2.DependencyTest.testClassMockingSupport":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":326,"org.easymock.tests2.CaptureTest.testCapture1_2446744":39,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":411,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":180,"org.easymock.tests.UsageThrowableTest.throwError":384,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":374,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":136,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":288,"org.easymock.samples.PartialClassMockTest.testGetArea":91,"org.easymock.tests.MockingTest.testInterfaceMocking":316,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":375,"org.easymock.tests2.CompareToTest.testLessOrEqual":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":475,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":123,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests2.ThreadingTest.testChangeDefault":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":209,"org.easymock.tests2.MockBuilderTest.testCreateMock":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":407,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":428,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":127,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":448,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":21,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":524,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":20,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":486,"org.easymock.tests.MockClassControlTest.testEquals":506,"org.easymock.tests2.EasyMockSupportClassTest.testAll":115,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":415,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":526,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":181,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":274,"org.easymock.tests.MockNameTest.defaultName":397,"org.easymock.tests2.UsageConstraintsTest.testMatches":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":395,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":372,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests.UsageVarargTest.allKinds":69,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":452,"org.easymock.samples.BasicClassMockTest.testPrintContent":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":390,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":191,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":518,"org.easymock.tests2.UsageConstraintsTest.greaterThan":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":468,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":240,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":289,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":461,"org.easymock.samples.ExampleTest.voteForRemoval":80,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":241,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":234,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":281,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":260,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":462,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":108,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":359,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":346,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":493,"org.easymock.tests.GenericTest.testBridgedEquals":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":531,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":436,"org.easymock.tests.UsageExpectAndReturnTest.longType":355,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":272,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":530,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":416,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":477,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":414,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":472,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":392,"org.easymock.tests.UsageCallCountTest.tooManyCalls":437,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":403,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":197,"org.easymock.tests.MockingTest.testNiceClassMocking":320,"org.easymock.tests.MockingTest.testClassMocking":312,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":529,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":430,"org.easymock.tests2.UsageConstraintsTest.testContains":19,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":139,"org.easymock.tests2.UsageConstraintsTest.testFind":10,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":279,"org.easymock.tests.MockTypeTest.fromEasyMockClass":421,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":438,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":5,"org.easymock.tests.UsageExpectAndReturnTest.object":362,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":514,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":488,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":497,"org.easymock.tests.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":479,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":95,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":483,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":447,"org.easymock.tests.MockClassControlTest.testHashCode":505,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":185,"org.easymock.tests2.EasyMockSupportTest.testVerify":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":125,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":480,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":445,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":427,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":522,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":109,"org.easymock.tests.UsageVarargTest.varargCharAccepted":487,"org.easymock.tests2.CaptureTest.testCaptureMultiple":70,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":351,"org.easymock.tests2.UsageTest.openCallCountByLastCall":102,"org.easymock.tests.DefaultClassInstantiatorTest.object":455,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":426,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":495,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":523,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":184,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":504,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":238,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":404,"org.easymock.tests.CapturesMatcherTest.test":520,"org.easymock.tests.ReplayStateInvalidCallsTest.times":293,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":369,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":471,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":294,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":134,"org.easymock.tests2.UsageTest.resumeIfFailure":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":465,"org.easymock.tests2.StubTest.stubWithReturnValue":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":519,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":361,"org.easymock.tests2.SerializationTest.testAllMockedMethod":143,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":344,"org.easymock.samples.SupportTest.voteForRemovals":87,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":410,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":350,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":174,"org.easymock.tests.UsageExpectAndThrowTest.object":408,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":271,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":27,"org.easymock.tests2.DelegateToTest.testWrongClass":158,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":57,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":58,"org.easymock.tests.UsageStrictMockTest.range":441,"org.easymock.samples.ConstructorCalledMockTest.testTax":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":226,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":409,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":112,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":308,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":476,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":509,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":454,"org.easymock.tests.UsageVarargTest.varargByteAccepted":492,"org.easymock.tests2.ThreadingTest.testThreadSafe":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":129,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":434,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":498,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":89,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageConstraintsTest.any":17,"org.easymock.tests2.StubTest.stub":110,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":464,"org.easymock.tests.UsageExpectAndThrowTest.longType":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":459,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.SerializationTest.testClass":141,"org.easymock.tests.LimitationsTest.mockNativeMethod":263,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":371,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":528,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":245,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":299,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests2.NameTest.nameForMocksControl":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":117,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":402,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":3,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":212,"org.easymock.tests.MockingTest.testNicePartialClassMocking":315,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":512,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":327,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":298,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":28,"org.easymock.tests.MockingTest.testTwoMocks":313,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":295,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":406,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":105,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":32,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":511,"org.easymock.samples.ExampleTest.removeNonExistingDocument":84,"org.easymock.tests.UsageStrictMockTest.differentMethods":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":250,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":186,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":457,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":93,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":258,"org.easymock.tests2.MockBuilderTest.testCreateMockString":217,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":500,"org.easymock.tests.UsageExpectAndThrowTest.floatType":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":119,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":176,"org.easymock.tests.UsageVerifyTest.twoThrows":453,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":128,"org.easymock.samples.ExampleTest.voteAgainstRemoval":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":239,"org.easymock.tests.LimitationsTest.privateConstructor":262,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":391,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":137,"org.easymock.tests2.UsageTest.defaultResetToNice":104,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":340,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":367,"org.easymock.tests.UsageVarargTest.differentLength":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":244,"org.easymock.tests2.CallbackTest.callback":183,"org.easymock.tests2.UsageConstraintsTest.equals":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":77,"org.easymock.tests.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":53,"org.easymock.tests.UsageCallCountTest.tooFewCalls":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":510,"org.easymock.tests.UsageThrowableTest.throwCheckedException":388,"org.easymock.tests.MockingTest.testStrictClassMocking":311,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":249,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":178,"org.easymock.tests.ObjectMethodsTest.testHashCode":496,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":516,"org.easymock.tests2.NameTest.nameForNiceMock":171,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":259,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":297,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":292,"org.easymock.tests2.DependencyTest.testInterfaceMocking":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":515,"org.easymock.samples.ExampleTest.addDocument":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.DelegateToTest.testStubDelegate":1,"org.easymock.tests2.AnswerTest.stubAnswer":177,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":213,"org.easymock.tests.UsageVarargTest.varargLongAccepted":491,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndReturnTest.floatType":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":94,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":74,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests.UsageThrowableTest.noUpperLimit":385,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":193,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":7,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":222,"org.easymock.tests2.SerializationTest.test":142,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":40,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":525,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":456,"org.easymock.tests2.UsageConstraintsTest.testSame":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":353,"org.easymock.samples.SupportTest.addDocument":86,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":200,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":282,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":120,"org.easymock.tests.GenericTest.testPackageScope":322,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":192,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":280,"org.easymock.tests2.NameTest.nameForMock":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":364,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":412,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":494,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":470,"org.easymock.tests2.MockedExceptionTest.testRealException":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":52,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":383,"org.easymock.tests2.NameTest.nameForStrictMock":170,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":208,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":232,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":458,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":26,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":206,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":286,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":124,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests.UsageRangeTest.combination":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":229,"org.easymock.tests.UsageTest.wrongArguments":305,"org.easymock.tests2.MockBuilderTest.testWithConstructor":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":121,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":501,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":365,"org.easymock.tests.UsageVarargTest.varargShortAccepted":490,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":460,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":435,"org.easymock.tests2.UsageConstraintsTest.cmpTo":18,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":300,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":175,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":373,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":207,"org.easymock.tests.UsageTest.unexpectedCallWithArray":304,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":296,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":366,"org.easymock.tests2.CaptureTest.testCapture":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":440,"org.easymock.tests2.UsageConstraintsTest.constraints":8,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageStrictMockTest.testVerify":444,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":92,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":439,"org.easymock.tests2.CompareToTest.testGreateThan":521,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":273,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":41,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":527,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.LimitationsTest.abstractClass":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":358,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150}}]
