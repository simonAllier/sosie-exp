[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[0],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,4,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,0,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,5,124,125,126,127,128,129,6,130,2,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,7,214,8,9,10,11,12,13,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,14,232,233,234,235,236,237,15,238,239,240,241,16,3,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,17,279,280,281,282,283,284,285,286,18,287,288,289,19,290,291,292,293,294,295,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,296,297,298,298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[73,74,75,299],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[84,91,96,107,302],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:280","sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n            org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","type":"CtForEachImpl"},"failures":[303,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[305,306,307,308,239,268],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[84,98,5,126,127,128,2,131,132,133,135,143,145,151,154,155,156,161,165,166,169,173,184,189,190,191,215,309,310,222,15,239,240,3,242,243,252,311,312,266,268,270,271,272,283,284,285,18,287],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[142,313,314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[143,144,315,316,185],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[73,74,75,299],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[143,313,184,190],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[84,98,109,110,113,114,119,317,5,125,126,127,128,2,131,132,133,135,142,145,313,151,153,154,155,156,157,161,163,165,166,168,169,318,319,314,320,173,178,321,183,184,322,187,188,189,190,191,323,215,324,325,326,327,328,329,222,330,331,332,15,238,239,240,3,242,243,252,266,268,269,270,271,272,273,333,279,280,283,284,285,286,18,287,334,335,336,290,337,338,339,340,341,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[43,44,45,46,47,48,49,50,343,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,344,76,77,78,345,79,80,4,82,83,84,85,1,86,87,88,89,90,91,346,92,93,94,95,96,97,98,99,100,101,102,103,104,105,0,106,107,347,348,349,350,108,109,111,112,351,115,352,353,116,117,118,354,355,356,300,357,119,317,358,359,360,361,362,363,364,120,365,121,366,367,368,369,122,370,371,372,373,374,123,5,124,125,126,127,128,129,6,130,2,131,132,133,375,134,135,136,137,138,139,140,376,141,377,142,143,144,145,378,313,146,147,148,149,150,151,152,153,154,155,156,157,379,380,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,381,318,319,314,320,173,174,175,176,177,382,383,384,301,385,178,321,386,387,388,389,390,179,180,181,182,183,184,322,391,185,186,187,188,189,190,191,192,323,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,7,214,8,9,10,11,12,13,215,324,325,326,327,328,329,392,393,394,395,396,397,398,399,400,401,402,216,403,217,218,219,404,220,221,222,223,224,225,226,227,228,229,230,231,14,232,405,406,330,331,332,407,408,409,233,234,235,236,237,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,15,238,239,240,241,16,3,242,243,244,245,246,247,248,434,435,436,437,438,439,440,252,441,253,254,255,256,257,258,259,260,261,262,263,442,443,444,445,446,447,264,265,266,267,268,269,270,271,272,273,448,303,274,275,449,304,276,277,278,17,450,451,452,453,454,333,455,279,280,281,282,283,284,285,286,18,287,288,334,289,19,335,336,290,456,457,458,20,21,22,337,338,459,460,461,462,463,464,465,466,467,468,469,470,471,291,292,293,294,295,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,296,297,472,473,339,474,475,340,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,64,65,66,67,68,69,72,73,74,75,76,78,79,81,85,87,90,91,92,93,95,98,101,102,103,104,105,0,108,109,110,111,112,113,114,115,116,119,120,121,122,123,5,124,126,127,128,2,131,133,134,135,136,137,138,139,141,144,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,178,181,185,187,188,196,197,199,204,209,7,214,8,9,10,11,12,13,215,216,217,218,219,220,221,223,224,225,226,227,240,3,242,243,249,250,251,252,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,284,285,18,287,288,289,19,336,337,338,291,292,293,294,25,26,28,33,38],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[305,306,307,308,239,268],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[143,144,316,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[84,119,5,126,127,128,130,2,131,133,140,142,151,154,155,156,162,164,165,167,168,174,175,176,177,178,183,186,187,188,190,191,215,15,239,240,3,242,243,244,245,246,247,248,255,256,257,258,266,268,270,271,272,18,287],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[73,74,75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[126,2,131,155,215,310,239,240,3,242,268,271,18,287,290],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[477,478,479,480,481,482,483],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[305,306,307,308,239,268],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[59,61,69,84,85,87,89,90,346,101,0],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[344,345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[59,61,62,63,64,65,66,68,484,69,70,72],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,4,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,0,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,5,124,125,126,127,128,129,6,130,2,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,7,214,8,9,10,11,12,13,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,14,232,233,234,235,236,237,15,238,239,240,241,16,3,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,17,279,280,281,282,283,284,285,286,18,287,288,289,19,290,291,292,293,294,295,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,296,297,298,298],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[43,54,55,57,57,58,58,73,75,81,477,347,348,108,109,110,111,113,114,363,364,485,120,486,365,121,366,367,487,488,368,489,490,369,491,122,370,371,372,373,374,123,492,493,134,135,137,138,139,140,141,494,377,142,143,144,145,378,313,495,496,179,180,181,183,184,322,391,185,186,187,188,497,189,190,191,324,327,393,394,395,396,397,398,400,401,402,216,403,405,330,331,332,407,408,409,434,435,436,249,250,251,440,303,274,275,449,304,276,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[498,499,500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[59,61,62,63,64,65,66,68,484,69,70,72],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[443,444,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[501],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[73,74,75,299],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[185,502],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":85,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":476,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":15,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":420,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":128,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":44,"org.easymock.tests2.DelegateToTest.testReturnException":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":229,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests.MockClassControlTest.testToString":330,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":381,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":23,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":478,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests2.UsageTest.wrongArguments":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":291,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":257,"org.easymock.samples.ExampleTest.answerVsDelegate":46,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":327,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":439,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":169,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":495,"org.easymock.tests2.CaptureTest.testPrimitive":62,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":295,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":42,"org.easymock.tests.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":450,"org.easymock.tests.UsageTest.argumentsOrdered":242,"org.easymock.tests.UsageVarargTest.varargIntAccepted":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":482,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":389,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":263,"org.easymock.tests.ReplayStateInvalidUsageTest.times":468,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests2.DependencyTest.testClassMocking":379,"org.easymock.tests2.AnswerTest.answer":115,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":177,"org.easymock.tests2.CaptureTest.testAnd":59,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":454,"org.easymock.tests2.DelegateToTest.testDelegate":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":38,"org.easymock.tests.LimitationsTest.mockFinalMethod":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":248,"org.easymock.tests2.DependencyTest.testClassMockingSupport":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":337,"org.easymock.tests2.CaptureTest.testCapture1_2446744":63,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":175,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":7,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":326,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":390,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":493,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":463,"org.easymock.tests.MockingTest.testInterfaceMocking":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":457,"org.easymock.tests2.UsageTest.niceToStrict":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":24,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":185,"org.easymock.tests2.MockBuilderTest.testCreateMock":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":372,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":32,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":305,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":255,"org.easymock.tests.UsageOverloadedMethodTest.overloading":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":374,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":96,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":277,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":68,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":404,"org.easymock.tests.MockClassControlTest.testEquals":408,"org.easymock.tests2.EasyMockSupportClassTest.testAll":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":176,"org.easymock.tests2.CaptureTest.testCaptureAll":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":246,"org.easymock.tests.MockNameTest.defaultName":342,"org.easymock.tests2.UsageConstraintsTest.testMatches":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.samples.ExampleTest.voteForRemovals":50,"org.easymock.tests.UsageVarargTest.allKinds":227,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":286,"org.easymock.samples.BasicClassMockTest.testPrintContent":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":12,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":232,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":345,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":399,"org.easymock.tests2.UsageConstraintsTest.greaterThan":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":486,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":441,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":145,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":400,"org.easymock.samples.ExampleTest.voteForRemoval":47,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":147,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":378,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":228,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":163,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":201,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":149,"org.easymock.tests2.UsageTest.moreThanOneArgument":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":190,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":226,"org.easymock.tests.GenericTest.testBridgedEquals":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":284,"org.easymock.tests.UsageExpectAndReturnTest.longType":197,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":244,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":502,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":41,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":472,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":39,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":233,"org.easymock.tests.UsageCallCountTest.tooManyCalls":285,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":11,"org.easymock.tests.MockingTest.testNiceClassMocking":440,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":109,"org.easymock.tests.MockingTest.testClassMocking":435,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":455,"org.easymock.tests2.UsageConstraintsTest.testContains":94,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":316,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":181,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":17,"org.easymock.tests.MockTypeTest.fromEasyMockClass":325,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":193,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests.UsageExpectAndReturnTest.object":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":479,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":221,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":475,"org.easymock.tests.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":451,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":445,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":477,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":289,"org.easymock.tests.MockClassControlTest.testHashCode":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":490,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":452,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":21,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":174,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":309,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":375,"org.easymock.tests.UsageVarargTest.varargCharAccepted":220,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":392,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastCall":129,"org.easymock.tests.DefaultClassInstantiatorTest.object":393,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":20,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":339,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":369,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":496,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":382,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":143,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":29,"org.easymock.tests.CapturesMatcherTest.test":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":123,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":331,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":231,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":483,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":75,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":426,"org.easymock.samples.SupportTest.voteForRemovals":53,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":306,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":35,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":299,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":432,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":352,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":447,"org.easymock.tests.UsageExpectAndThrowTest.object":33,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":102,"org.easymock.tests2.DelegateToTest.testWrongClass":78,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":297,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests.UsageStrictMockTest.range":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":349,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":187,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":470,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":256,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":307,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":458,"org.easymock.tests2.CaptureTest.testCaptureNone":67,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":215,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":311,"org.easymock.tests.UsageVerifyTest.twoReturns":287,"org.easymock.tests.UsageVarargTest.varargByteAccepted":225,"org.easymock.tests2.ThreadingTest.testThreadSafe":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":370,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":282,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":54,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":340,"org.easymock.tests2.CaptureTest.testCapture_2617107":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":294,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":467,"org.easymock.tests2.StubTest.stub":80,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndThrowTest.longType":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":397,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":466,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":154,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.SerializationTest.testClass":73,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":157,"org.easymock.tests2.NameTest.nameForMocksControl":320,"org.easymock.tests2.MockedExceptionTest.testMockedException":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":365,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":27,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":188,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.CaptureTest.testCaptureLast":66,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":338,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":114,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":103,"org.easymock.tests.MockingTest.testTwoMocks":436,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":31,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":500,"org.easymock.samples.ExampleTest.removeNonExistingDocument":343,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":464,"org.easymock.tests.UsageStrictMockTest.differentMethods":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":384,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":499,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":395,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":148,"org.easymock.tests2.MockBuilderTest.testCreateMockString":191,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":366,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":116,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":122,"org.easymock.samples.ExampleTest.voteAgainstRemoval":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":144,"org.easymock.tests.LimitationsTest.privateConstructor":402,"org.easymock.tests2.UsageConstraintsTest.testNotNull":0,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":13,"org.easymock.tests2.UsageTest.defaultResetToNice":130,"org.easymock.samples.ExampleTest.voteAgainstRemovals":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":209,"org.easymock.tests.UsageVarargTest.differentLength":222,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.CallbackTest.callback":173,"org.easymock.tests2.UsageConstraintsTest.equals":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":494,"org.easymock.tests.UsageTest.openCallCountByLastCall":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":82,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":293,"org.easymock.tests.UsageCallCountTest.tooFewCalls":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":258,"org.easymock.tests.UsageThrowableTest.throwCheckedException":10,"org.easymock.tests.MockingTest.testStrictClassMocking":434,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":308,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":265,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":112,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":118,"org.easymock.tests.ObjectMethodsTest.testHashCode":474,"org.easymock.tests2.CompareToTest.testGreateOrEqual":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":481,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":150,"org.easymock.tests2.NameTest.nameForNiceMock":314,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":480,"org.easymock.samples.ExampleTest.addDocument":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.DelegateToTest.testStubDelegate":77,"org.easymock.tests2.AnswerTest.stubAnswer":117,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":269,"org.easymock.tests.UsageVarargTest.varargLongAccepted":224,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.floatType":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":100,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":347,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":64,"org.easymock.tests2.SerializationTest.test":74,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":394,"org.easymock.tests2.UsageConstraintsTest.testSame":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":195,"org.easymock.samples.SupportTest.addDocument":52,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":367,"org.easymock.tests.GenericTest.testPackageScope":274,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":387,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":438,"org.easymock.tests2.NameTest.nameForMock":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":206,"org.easymock.tests2.UsageStrictMockTest.differentMethods":156,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":37,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests2.MockedExceptionTest.testRealException":182,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":423,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":153,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":292,"org.easymock.tests2.NameTest.nameForStrictMock":319,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":391,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":396,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":184,"org.easymock.tests2.UsageStrictMockTest.range":155,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":489,"org.easymock.tests2.CaptureTest.testCaptureRightOne":69,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":501,"org.easymock.tests2.UsageConstraintsTest.testOr":89,"org.easymock.tests.UsageRangeTest.combination":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":487,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":207,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":398,"org.easymock.tests.UsageVarargTest.varargShortAccepted":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":283,"org.easymock.tests2.UsageConstraintsTest.cmpTo":93,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.CaptureTest.testCaptureFromStub":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":322,"org.easymock.tests.UsageTest.unexpectedCallWithArray":239,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":208,"org.easymock.tests2.CaptureTest.testCapture":484,"org.easymock.tests2.UsageConstraintsTest.constraints":84,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests.UsageStrictMockTest.testVerify":448,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":56,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":245,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":261,"org.easymock.tests.LimitationsTest.abstractClass":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":262,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":218}}]
