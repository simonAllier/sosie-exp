[{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[16,53,54,55,56,17,18,57,19,20,58,59,60,61,21,62,22,63,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,22,83,84,85,86,87,88],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[90,91,92,93,94,95,96,97,98,7,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,64,125,65,66,126,127,16,128,53,54,55,56,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,17,147,67,68,148,149,150,18,69,70,151,152,153,154,155,156,1,2,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,57,191,192,19,193,194,20,58,59,60,61,21,62,195,196,197,78,79,198,80,81,199,200,82,22,83,201,202,63,23,203,204,205,206,24,84,85,207,25,86,87,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,88,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,261,47,48,49,50,51,52,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod","finalizeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[278,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[119,122,171,193,267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[280,281],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[119,120,122,171,176,177,193,267],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[282,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[64,66,126,67,284,79,81,199,82,22,83,84,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":93,"org.easymock.tests2.UsageTest.argumentsOrdered":70,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":24,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":61,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":149,"org.easymock.tests2.StubTest.stubWithReturnValue":16,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":246,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":112,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":59,"org.easymock.samples.SupportTest.voteForRemovals":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":26,"org.easymock.tests.UsageExpectAndThrowTest.object":36,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":75,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":109,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":258,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":201,"org.easymock.tests2.UsageTest.wrongArguments":68,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.samples.ExampleTest.answerVsDelegate":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":173,"org.easymock.tests2.UsageConstraintsTest.testNull":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":137,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":188,"org.easymock.tests2.CaptureTest.testPrimitive":160,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":203,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests.UsageTest.moreThanOneArgument":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":45,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":211,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.UsageUnorderedTest.message":88,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":228,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests.UsageTest.argumentsOrdered":87,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":217,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":231,"org.easymock.tests2.CaptureTest.testCapture_2617107":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests2.UsageConstraintsTest.any":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":283,"org.easymock.tests2.StubTest.stub":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":60,"org.easymock.tests.UsageExpectAndThrowTest.longType":29,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":4,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests.LimitationsTest.mockNativeMethod":189,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":256,"org.easymock.tests2.AnswerTest.answer":119,"org.easymock.tests2.CaptureTest.testAnd":157,"org.easymock.tests2.UsageTest.strictResetToDefault":147,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests2.NameTest.nameForMocksControl":74,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":133,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":25,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":30,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":41,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":9,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":21,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":98,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":110,"org.easymock.tests2.CaptureTest.testCapture1_2446744":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":34,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":114,"org.easymock.tests.UsageThrowableTest.throwError":46,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":213,"org.easymock.tests.UsageExpectAndThrowTest.floatType":28,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":105,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":120,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":232,"org.easymock.samples.ExampleTest.voteAgainstRemoval":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":27,"org.easymock.tests2.UsageTest.niceToStrict":148,"org.easymock.tests2.UsageConstraintsTest.testNotNull":113,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":52,"org.easymock.samples.ExampleTest.voteAgainstRemovals":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":252,"org.easymock.tests.UsageVarargTest.differentLength":225,"org.easymock.tests2.CallbackTest.callback":171,"org.easymock.tests.UsageTest.openCallCountByLastCall":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":35,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":63,"org.easymock.tests.UsageCallCountTest.tooFewCalls":215,"org.easymock.tests.UsageOverloadedMethodTest.overloading":192,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":174,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":191,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":5,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":102,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":166,"org.easymock.tests.UsageThrowableTest.throwCheckedException":49,"org.easymock.tests2.EasyMockSupportClassTest.testAll":118,"org.easymock.tests.MockClassControlTest.testEquals":187,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":43,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.UsageConstraintsTest.testMatches":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":175,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":212,"org.easymock.samples.ExampleTest.voteForRemovals":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests2.NameTest.nameForNiceMock":73,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests.UsageVarargTest.allKinds":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":82,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.samples.BasicClassMockTest.testPrintContent":276,"org.easymock.samples.ExampleTest.addDocument":270,"org.easymock.tests2.DelegateToTest.testStubDelegate":154,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":51,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests2.AnswerTest.stubAnswer":121,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":106,"org.easymock.tests.UsageVarargTest.varargLongAccepted":227,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.samples.ExampleTest.voteForRemoval":268,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":255,"org.easymock.tests.UsageExpectAndReturnTest.floatType":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.tests.UsageThrowableTest.noUpperLimit":261,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":107,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":195,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":162,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":238,"org.easymock.tests2.UsageConstraintsTest.testSame":96,"org.easymock.samples.SupportTest.addDocument":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":58,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":132,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":244,"org.easymock.tests.GenericTest.testPackageScope":262,"org.easymock.tests2.UsageTest.moreThanOneArgument":67,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":229,"org.easymock.tests.GenericTest.testBridgedEquals":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests2.NameTest.nameForMock":71,"org.easymock.tests.UsageExpectAndReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":44,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":111,"org.easymock.tests2.UsageStrictMockTest.differentMethods":66,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":241,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":40,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":206,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":214,"org.easymock.tests2.MockedExceptionTest.testRealException":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":245,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":50,"org.easymock.tests2.NameTest.nameForStrictMock":72,"org.easymock.tests2.UsageConstraintsTest.testContains":101,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.UsageConstraintsTest.testFind":94,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":182,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":177,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":76,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":184,"org.easymock.tests2.UsageStrictMockTest.range":65,"org.easymock.tests2.UsageConstraintsTest.lessThan":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":136,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":186,"org.easymock.tests.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":190,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":130,"org.easymock.tests2.CaptureTest.testCaptureRightOne":167,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":259,"org.easymock.tests2.UsageConstraintsTest.testOr":97,"org.easymock.tests.UsageRangeTest.combination":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":253,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":194,"org.easymock.tests.UsageTest.wrongArguments":85,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":242,"org.easymock.tests2.EasyMockSupportTest.testVerify":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":250,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":260,"org.easymock.tests.UsageVarargTest.varargShortAccepted":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":193,"org.easymock.tests2.UsageConstraintsTest.cmpTo":100,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":124,"org.easymock.tests2.UsageTest.openCallCountByLastCall":150,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests.DefaultClassInstantiatorTest.object":236,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":278,"org.easymock.tests2.CaptureTest.testCaptureFromStub":168,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":33,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":251,"org.easymock.tests2.CaptureTest.testCapture":280,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.samples.ExampleTest.addAndChangeDocument":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":32,"org.easymock.tests.CapturesMatcherTest.test":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":254,"org.easymock.tests.UsageStrictMockTest.testVerify":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":265,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests2.UsageTest.resumeIfFailure":151,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":234,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":135}}]
