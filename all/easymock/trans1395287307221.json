[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[14,15,16,17,18,19],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[14,15,16,17,18,19],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[20,21],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[23,24,25,26,27,28,5,6,7,8,9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[25,26,57,58],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,29,30,31,32,73,33,22,34,35,36,74,37,75,76,77,78,79,80,81,82,83,84,85,86,38,87,88,39,89,90,91,92,93,40,94,95,2,96,97,98,99,100,41,101,42,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,43,119,120,121,122,123,44,45,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,46,157,158,48,49,159,50,51,52,53,54,160,161,162,55,163,164,165,166,167,168,169,170,171,172,173,174,56,175,176,177,178,179,180,19,181,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[183,184],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[185,186,187,47,56,175,188],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[189,190],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[59,191,191,192,192,67,68,72,193,194,195,196,197,198,75,199,76,77,200,201,202,203,204,88,39,90,91,92,205,93,206,207,208,209,40,210,211,212,0,1,2,213,214,109,110,111,112,114,115,215,216,217,218,219,125,220,221,126,222,223,224,225,226,227,228,229,230,127,231,232,233,234,235,128,236,237,134,136,238,239,240,147,148,149,241,242,243,158,244,183,245,246,247,184,248,20,160,161,249,21,250,251,252,253,254,255,256,257,258,259,173,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[134,135,136,262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[59,191,191,192,192,67,68,72,194,195,196,197,75,199,76,77,201,202,203,204,88,39,90,91,92,205,93,208,209,40,210,2,109,110,111,112,114,115,265,216,266,267,125,126,127,128,134,136,240,147,148,149,242,243,158,160,161,249,251,173],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[183,184],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[268],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[270,271,272,273],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[51,52,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[59,191,192,205,209,40,0,110,111,114,115,147,148,149,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[274,275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[72,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[276,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:153","failures":[0,1,2,3,4,277,5,6,7,8,9,10],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[244,183,245,246,184,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[100],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[90,92,278,185,279,19,280,188,281,282],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":41,"org.easymock.tests2.StubTest.stubWithReturnValue":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":37,"org.easymock.tests2.SerializationTest.testAllMockedMethod":136,"org.easymock.tests2.DelegateToTest.testReturnException":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":147,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":20,"org.easymock.tests.MockClassControlTest.testToString":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":225,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":262,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":126,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":35,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":104,"org.easymock.tests2.DelegateToTest.testWrongClass":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageStrictMockTest.range":188,"org.easymock.samples.ConstructorCalledMockTest.testTax":191,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":90,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":257,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":76,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":123,"org.easymock.tests2.CaptureTest.testPrimitive":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":217,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":89,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":16,"org.easymock.tests2.CaptureTest.testCaptureNone":85,"org.easymock.tests.UsageUnorderedTest.message":47,"org.easymock.tests.UsageVerifyTest.twoReturns":175,"org.easymock.tests.UsageVarargTest.varargByteAccepted":170,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageVarargTest.varargIntAccepted":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":231,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":177,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":67,"org.easymock.tests2.CaptureTest.testCapture_2617107":80,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":174,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":199,"org.easymock.tests2.UsageConstraintsTest.any":32,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests.UsageExpectAndThrowTest.longType":138,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":247,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":12,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.SerializationTest.testClass":134,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests.LimitationsTest.mockNativeMethod":173,"org.easymock.tests2.DependencyTest.testClassMocking":263,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":249,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":266,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":208,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":133,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":149,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":77,"org.easymock.tests.MockingTest.testNicePartialClassMocking":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":141,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":92,"org.easymock.tests2.CompareToTest.testNotComparable":268,"org.easymock.tests.LimitationsTest.mockFinalMethod":260,"org.easymock.tests2.CaptureTest.testCaptureLast":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":154,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":115,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":36,"org.easymock.tests2.DependencyTest.testClassMockingSupport":264,"org.easymock.tests.MockingTest.testTwoMocks":240,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests.UsageThrowableTest.throwError":48,"org.easymock.tests.UsageStrictMockTest.differentMethods":281,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":275,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":245,"org.easymock.tests2.MockBuilderTest.testCreateMockString":204,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":222,"org.easymock.tests.UsageExpectAndThrowTest.floatType":137,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":130,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":127,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":40,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":226,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests.LimitationsTest.privateConstructor":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":54,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":75,"org.easymock.tests2.MockBuilderTest.testCreateMock":201,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":206,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":14,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":120,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":277,"org.easymock.tests.UsageOverloadedMethodTest.overloading":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":230,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":162,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":86,"org.easymock.tests.UsageThrowableTest.throwCheckedException":51,"org.easymock.tests.MockClassControlTest.testEquals":256,"org.easymock.tests2.EasyMockSupportClassTest.testAll":125,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":161,"org.easymock.tests.MockingTest.testStrictClassMocking":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":17,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":265,"org.easymock.tests2.CaptureTest.testCaptureAll":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":113,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":95,"org.easymock.tests.UsageVarargTest.allKinds":172,"org.easymock.tests2.DependencyTest.testInterfaceMocking":103,"org.easymock.samples.BasicClassMockTest.testPrintContent":68,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":236,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":210,"org.easymock.tests.UsageVarargTest.varargLongAccepted":169,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":182,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":248,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":192,"org.easymock.tests.UsageThrowableTest.noUpperLimit":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":158,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":213,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":82,"org.easymock.tests2.SerializationTest.test":135,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":218,"org.easymock.samples.SupportTest.addDocument":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":43,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":223,"org.easymock.tests.GenericTest.testPackageScope":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":171,"org.easymock.tests.GenericTest.testBridgedEquals":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":178,"org.easymock.tests.UsageExpectAndReturnTest.longType":143,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":203,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":74,"org.easymock.tests2.UsageStrictMockTest.differentMethods":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":207,"org.easymock.tests.UsageCallCountTest.tooManyCalls":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":13,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":234,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":52,"org.easymock.tests.MockingTest.testNiceClassMocking":241,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests.MockingTest.testClassMocking":239,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":195,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":91,"org.easymock.tests.UsageExpectAndReturnTest.object":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":214,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":246,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":34,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":196,"org.easymock.tests2.UsageStrictMockTest.range":185,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":122,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":167,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":227,"org.easymock.tests2.CaptureTest.testCaptureRightOne":38,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":39,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":151,"org.easymock.tests.UsageTest.wrongArguments":155,"org.easymock.tests.MockClassControlTest.testHashCode":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":224,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":251,"org.easymock.tests2.EasyMockSupportTest.testVerify":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":228,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":11,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":57,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":150,"org.easymock.tests.UsageVarargTest.varargShortAccepted":168,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":184,"org.easymock.tests2.UsageConstraintsTest.cmpTo":73,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":105,"org.easymock.tests.UsageVarargTest.varargCharAccepted":166,"org.easymock.tests2.CompareToTest.testLessThan":269,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests.DefaultClassInstantiatorTest.object":244,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":45,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":197,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":229,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":50,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":176,"org.easymock.tests2.CaptureTest.testCapture":189,"org.easymock.tests2.UsageConstraintsTest.constraints":276,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":254,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":209,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests.CapturesMatcherTest.test":190,"org.easymock.tests.UsageStrictMockTest.testVerify":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":24,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":69,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":128,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests2.UsageTest.resumeIfFailure":270,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":83,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":216,"org.easymock.tests.LimitationsTest.abstractClass":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":242,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":121,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":164,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":187}}]
