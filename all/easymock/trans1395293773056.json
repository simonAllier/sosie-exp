[{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,43,44,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MocksControl:136","failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,43,43,44,44,152],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[169,170,171,156,172,173,174,175,176,177,178,179,180,181,182,183,184,185,158,9,186,159,187,188,189,59,190,191,192,161,162,163,193,194,195,196,197,198,199,62,200,201,26,202,165,203,204,82,205,206,207,153,208,209,210,211,212,90,93,99,166,213,167,168,214,215,216,217,218,219,220,221,222,223,224,225,226,227,150,151,228,229,230,231,232,233,234,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:552","sourceCode":"org.easymock.IMocksControl.reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[236,237,238,239,240,241,242,243,244,245,246,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[15,24,247,248,249,250],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[251,81,252,82],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[253,43,43,44,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[254],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[253,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[257,154,155,45,46,47,48,49,258,50,259,260,51,261,169,170,262,263,264,265,266,267,268,269,270,271,272,2,273,274,275,3,4,0,236,276,277,278,279,280,281,5,282,283,284,285,6,286,287,288,289,290,52,53,54,55,56,57,291,58,7,292,171,293,294,156,172,173,174,295,175,176,177,178,179,180,181,182,183,296,297,8,298,299,300,301,302,303,184,185,158,9,186,159,187,188,189,10,11,12,13,14,15,16,17,18,19,59,304,190,305,306,307,308,309,310,20,21,191,192,22,311,237,238,239,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,160,161,337,338,162,163,339,193,340,194,195,196,197,341,198,199,60,61,62,63,64,65,342,343,344,345,66,346,347,348,349,350,351,23,352,353,354,355,356,357,358,359,360,240,361,24,25,67,68,69,70,241,242,243,244,245,246,362,363,364,71,72,73,74,75,76,77,78,365,366,367,368,369,370,371,372,373,164,374,375,247,376,248,377,378,379,380,381,382,383,384,385,386,387,388,389,249,250,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,79,80,408,409,410,411,412,413,414,415,416,417,418,419,420,421,200,201,26,202,165,203,204,81,252,82,27,28,422,423,424,29,30,31,32,425,426,205,206,427,33,428,34,35,429,36,37,430,431,432,207,153,38,39,40,433,434,435,208,436,437,438,439,440,209,210,211,212,83,84,85,86,441,442,87,88,443,444,445,446,447,89,448,90,91,449,92,93,94,95,450,96,451,97,98,99,452,100,101,102,103,453,454,455,456,457,458,459,460,166,461,213,462,463,464,167,168,465,466,467,1,468,469,253,256,470,214,215,216,217,471,218,219,472,473,220,221,222,223,474,475,41,476,224,225,42,477,478,479,480,481,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,482,131,132,133,134,483,135,136,137,138,139,140,141,142,143,144,145,484,485,146,149,486,487,226,227,150,151,228,43,44,152,229,488,230,231,232,233,489,234,235],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[478,479],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[490,491,158,160,492,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[158,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[206],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[422,423,29,30,32,425,426,205,430,38,471,218,219,472,475,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[257,155,48,49,50,264,265,266,267,7,183,296,297,9,159,187,10,11,12,13,14,304,305,306,307,308,309,310,20,21,22,335,336,337,338,339,61,63,24,25,69,373,374,375,247,376,248,377,378,379,380,381,382,383,384,385,386,387,388,389,249,250,395,404,79,415,26,165,203,81,252,27,28,422,423,29,30,31,32,425,426,206,427,33,428,34,35,429,36,37,430,431,432,153,38,39,40,433,434,435,208,436,437,438,439,440,209,210,211,83,84,85,86,442,87,88,90,93,95,96,99,103,458,459,460,461,462,463,464,465,466,253,471,218,472,473,222,223,474,475,476,224,42,477,478,479,480,481,107,110,120,126,129,130,482,131,132,133,135,139,140,141,484,485,227,152,229,230,231,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[154,155,48,49,50,264,7,292,156,172,173,174,175,176,177,178,179,180,181,182,183,296,184,185,158,9,186,159,187,188,189,10,11,12,13,14,59,304,190,305,306,307,308,309,310,20,21,191,192,22,317,318,320,325,330,161,162,163,339,193,195,196,197,198,199,61,62,24,25,69,245,368,370,371,373,247,376,377,382,387,395,403,405,407,79,409,415,200,201,26,202,165,203,204,81,252,82,423,29,30,31,425,426,205,206,427,428,34,429,36,430,431,432,207,153,38,433,434,435,208,436,437,438,439,440,209,210,211,212,83,84,85,86,442,87,88,90,93,95,96,99,103,458,459,166,461,213,464,167,168,466,467,469,256,214,215,216,217,471,218,219,472,473,220,221,222,223,474,475,224,480,481,107,110,120,126,129,130,482,131,132,133,135,139,140,141,484,485,226,227,150,151,228,152,229,488,230,231,232,233,234,235],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,408,81,82,83,84,85,86,87,88,89,448,90,91,449,92,93,94,95,450,96,97,98,99,452,100,101,102,103,104,105,107,109,110,111,112,113,115,116,117,118,120,121,122,123,124,125,126,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,149,150,151,43,44,152],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[53,57],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[48,49,50,11,12,14,15,16,18,24,25,69,374,375,247,376,248,380,381,387,388,389,249,250,404,79,83,84,85,86,442,87,88,90,93,95,96,99,253,480,107,110,120,126,129,482,131,133,227,43,43,44,44,152,229,230,231,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[240],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.STRICT":"type"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[48,49,50,264,265,266,267,9,159,187,10,11,12,13,14,15,16,17,18,20,24,25,69,374,375,247,376,248,377,380,381,383,384,385,387,388,389,249,250,404,79,26,165,203,83,84,85,86,442,87,88,90,93,95,96,99,480,107,110,120,126,129,130,482,131,132,133,135,139,140,141,484,485,227,152,229,230,231,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[257,154,155,45,46,47,48,49,258,50,259,260,51,261,169,170,262,263,264,265,266,267,268,269,270,271,272,2,273,274,275,3,4,0,236,276,277,278,279,280,281,5,282,283,284,285,6,286,287,288,289,52,53,54,55,56,57,58,7,292,171,293,294,156,172,173,174,295,175,176,177,178,179,180,181,182,183,296,297,8,298,299,300,301,302,303,184,185,158,9,186,159,187,188,189,10,11,12,13,14,15,16,17,18,19,59,304,190,305,306,307,308,309,310,20,21,191,192,22,311,237,238,239,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,160,161,337,338,162,163,339,193,340,194,195,196,197,341,198,199,60,61,62,63,64,65,342,343,344,345,66,346,347,348,349,350,351,23,352,353,354,355,356,357,358,359,360,240,361,24,25,67,68,69,70,241,242,243,244,245,246,362,363,364,71,72,73,74,75,76,77,78,365,366,367,368,369,370,371,372,373,164,374,375,247,376,248,377,378,379,380,381,382,383,384,385,386,387,388,389,249,250,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,79,80,409,410,411,412,413,414,415,416,417,418,419,420,421,200,201,26,202,165,203,204,81,252,82,27,28,422,423,424,29,30,31,32,425,426,205,206,427,33,428,34,35,429,36,37,430,431,432,207,153,38,39,40,433,434,435,208,436,437,438,439,440,209,210,211,212,83,84,85,86,441,442,87,88,443,444,445,446,447,89,90,91,92,93,94,95,96,451,97,98,99,100,101,102,103,453,454,455,456,457,458,459,460,166,461,213,462,463,464,167,168,465,466,467,1,468,469,253,256,470,214,215,216,217,471,218,219,472,473,220,221,222,223,474,475,41,476,224,225,42,477,478,479,480,481,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,482,131,132,133,134,483,135,136,137,138,139,140,141,142,143,144,145,484,485,146,149,486,487,226,227,150,151,228,43,44,152,229,488,230,231,232,233,489,234,235],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[154,155,264,156,494,157,177,495,496,184,158,186,159,187,335,160,161,162,163,339,341,198,199,409,200,202,165,203,422,429,434,437,438,209,90,98,99,100,458,166,461,213,167,168,465,466,130,139,141],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[130],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[497,34,432,40],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":423,"org.easymock.tests2.UsageTest.argumentsOrdered":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":335,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":278,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":228,"org.easymock.tests2.DelegateToTest.testReturnException":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":242,"org.easymock.tests.MockingTest.testPartialClassMocking":48,"org.easymock.tests.MockClassControlTest.testToString":73,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":470,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":366,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":315,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":426,"org.easymock.tests2.UsageTest.wrongArguments":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":20,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":421,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":350,"org.easymock.samples.ExampleTest.answerVsDelegate":488,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":66,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":260,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":131,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":78,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":209,"org.easymock.tests2.CaptureTest.testPrimitive":472,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":22,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":334,"org.easymock.tests.UsageTest.moreThanOneArgument":336,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":482,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":17,"org.easymock.tests.UsageTest.argumentsOrdered":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":261,"org.easymock.tests.UsageVarargTest.varargIntAccepted":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":10,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":148,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":14,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":415,"org.easymock.tests.ReplayStateInvalidUsageTest.times":359,"org.easymock.tests2.DependencyTest.testClassMocking":144,"org.easymock.tests2.AnswerTest.answer":467,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":447,"org.easymock.tests2.CaptureTest.testAnd":471,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":343,"org.easymock.tests2.UsageTest.strictResetToDefault":459,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":266,"org.easymock.tests2.DelegateToTest.testDelegate":407,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":330,"org.easymock.tests.LimitationsTest.mockFinalMethod":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.DependencyTest.testClassMockingSupport":145,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":312,"org.easymock.tests2.CaptureTest.testCapture1_2446744":473,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":445,"org.easymock.tests.UsageThrowableTest.throwError":304,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":345,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":496,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":128,"org.easymock.samples.PartialClassMockTest.testGetArea":152,"org.easymock.tests.MockingTest.testInterfaceMocking":258,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":293,"org.easymock.tests2.UsageTest.niceToStrict":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":115,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":123,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":418,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":324,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":437,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":371,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":383,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":428,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":474,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":295,"org.easymock.tests2.EasyMockSupportClassTest.testAll":107,"org.easymock.tests.MockClassControlTest.testEquals":77,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":446,"org.easymock.tests2.CaptureTest.testCaptureAll":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests.MockNameTest.defaultName":311,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":23,"org.easymock.samples.ExampleTest.voteForRemovals":233,"org.easymock.tests.UsageVarargTest.allKinds":182,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":257,"org.easymock.samples.BasicClassMockTest.testPrintContent":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":309,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":246,"org.easymock.tests2.UsageConstraintsTest.greaterThan":36,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":108,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":141,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":58,"org.easymock.samples.ExampleTest.voteForRemoval":230,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":478,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":142,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":134,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":458,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":59,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":435,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":241,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":402,"org.easymock.tests2.CaptureTest.testCaptureFirst":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":208,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":466,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":379,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":480,"org.easymock.tests2.CaptureTest.testCapture2_2446744":476,"org.easymock.tests2.UsageTest.moreThanOneArgument":460,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":285,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":181,"org.easymock.tests.GenericTest.testBridgedEquals":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":198,"org.easymock.tests.UsageExpectAndReturnTest.longType":376,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":333,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":8,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":15,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.UsageCallCountTest.tooManyCalls":199,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":308,"org.easymock.tests.MockingTest.testNiceClassMocking":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":84,"org.easymock.tests.MockingTest.testClassMocking":46,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":340,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":29,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":297,"org.easymock.tests.MockTypeTest.fromEasyMockClass":344,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":457,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests.UsageExpectAndReturnTest.object":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":440,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":176,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":301,"org.easymock.tests.UsageTest.exactCallCountByLastCall":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":169,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":388,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":172,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":391,"org.easymock.tests.MockClassControlTest.testHashCode":76,"org.easymock.tests2.EasyMockSupportTest.testVerify":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":117,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":170,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":368,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":444,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":454,"org.easymock.tests.UsageVarargTest.varargCharAccepted":175,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":289,"org.easymock.tests2.UsageTest.openCallCountByLastCall":462,"org.easymock.tests.DefaultClassInstantiatorTest.object":52,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":211,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":362,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":299,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":390,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":139,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":321,"org.easymock.tests.CapturesMatcherTest.test":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":389,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":126,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":74,"org.easymock.tests2.UsageTest.resumeIfFailure":465,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":244,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":450,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":381,"org.easymock.tests2.SerializationTest.testAllMockedMethod":82,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":283,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":227,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":327,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":251,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":288,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.UsageExpectAndThrowTest.object":325,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":367,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":431,"org.easymock.tests2.DelegateToTest.testWrongClass":405,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":25,"org.easymock.tests.UsageStrictMockTest.range":159,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":486,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":326,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests2.CaptureTest.testCaptureNone":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":294,"org.easymock.tests.UsageUnorderedTest.message":156,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":495,"org.easymock.tests.UsageVerifyTest.twoReturns":155,"org.easymock.tests.UsageVarargTest.varargByteAccepted":180,"org.easymock.tests2.ThreadingTest.testThreadSafe":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":121,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":197,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":150,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":286,"org.easymock.tests2.UsageConstraintsTest.any":206,"org.easymock.tests2.StubTest.stub":225,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":287,"org.easymock.tests.UsageExpectAndThrowTest.longType":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":56,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":357,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":395,"org.easymock.tests2.SerializationTest.testClass":81,"org.easymock.tests.LimitationsTest.mockNativeMethod":69,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":250,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":412,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests2.NameTest.nameForMocksControl":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":414,"org.easymock.tests2.MockedExceptionTest.testMockedException":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":109,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":456,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":319,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":410,"org.easymock.tests2.CaptureTest.testCaptureLast":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":313,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":425,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":432,"org.easymock.tests.MockingTest.testTwoMocks":47,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":323,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":167,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.samples.ExampleTest.removeNonExistingDocument":489,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":187,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":392,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":54,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":479,"org.easymock.tests2.MockBuilderTest.testCreateMockString":100,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":111,"org.easymock.tests.UsageExpectAndThrowTest.floatType":317,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":106,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":469,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":408,"org.easymock.tests.UsageVerifyTest.twoThrows":154,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":120,"org.easymock.samples.ExampleTest.voteAgainstRemoval":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":279,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":140,"org.easymock.tests.LimitationsTest.privateConstructor":68,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":310,"org.easymock.tests2.UsageTest.defaultResetToNice":464,"org.easymock.samples.ExampleTest.voteAgainstRemovals":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":280,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":411,"org.easymock.tests.UsageVarargTest.differentLength":177,"org.easymock.tests2.CallbackTest.callback":409,"org.easymock.tests2.UsageConstraintsTest.equals":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":136,"org.easymock.tests.UsageTest.openCallCountByLastCall":337,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":351,"org.easymock.tests.UsageThrowableTest.throwCheckedException":307,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":45,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":87,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":85,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":442,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":256,"org.easymock.tests.ObjectMethodsTest.testHashCode":300,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":481,"org.easymock.tests2.NameTest.nameForNiceMock":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":484,"org.easymock.samples.ExampleTest.addDocument":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":122,"org.easymock.tests2.DelegateToTest.testStubDelegate":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":127,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":451,"org.easymock.tests.UsageVarargTest.varargLongAccepted":179,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":277,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":79,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":399,"org.easymock.tests.UsageThrowableTest.noUpperLimit":190,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":37,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":146,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":220,"org.easymock.tests2.SerializationTest.test":252,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":53,"org.easymock.tests2.UsageConstraintsTest.testSame":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":375,"org.easymock.samples.SupportTest.addDocument":226,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":441,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":112,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":3,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":398,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":259,"org.easymock.tests2.NameTest.nameForMock":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":384,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":452,"org.easymock.tests2.UsageStrictMockTest.differentMethods":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":137,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":329,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":267,"org.easymock.tests2.MockedExceptionTest.testRealException":453,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":255,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":21,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":361,"org.easymock.tests2.NameTest.nameForStrictMock":215,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":455,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":132,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":149,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":430,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":90,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":276,"org.easymock.tests2.CaptureTest.testCaptureRightOne":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":116,"org.easymock.tests2.UsageConstraintsTest.testOr":32,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":130,"org.easymock.tests.UsageTest.wrongArguments":161,"org.easymock.tests2.MockBuilderTest.testWithConstructor":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":113,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":273,"org.easymock.tests.UsageVarargTest.varargShortAccepted":178,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":57,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":341,"org.easymock.tests2.UsageConstraintsTest.cmpTo":427,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":468,"org.easymock.tests2.CompareToTest.testLessThan":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":275,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":463,"org.easymock.tests2.CaptureTest.testCaptureFromStub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":352,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":91,"org.easymock.tests.UsageTest.unexpectedCallWithArray":160,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":386,"org.easymock.tests2.UsageConstraintsTest.constraints":422,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.samples.ExampleTest.addAndChangeDocument":234,"org.easymock.tests.UsageStrictMockTest.testVerify":189,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":235,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":12,"org.easymock.tests.LimitationsTest.abstractClass":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":13,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":438,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":173}}]
