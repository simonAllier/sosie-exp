[{"position":"org.easymock.internal.LastControl:92","failures":[0],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.RecordState:108","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,25,27,28,29,30,31,33,34,41,43,44,54],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[58,59,60,61,62,63,64,65,0,66,67],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[68,69,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[72],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,25,26,27,28,29,30,31,33,34,35,36,41,43,44,52,53,54],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[73,74,75,76,77,78,79,80,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,21,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,25,128,26,27,28,29,30,31,129,130,32,33,131,132,34,133,134,135,136,137,138,139,35,140,141,142,143,36,144,145,146,37,38,39,40,41,42,147,148,149,43,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,44,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,56,231,232,233,234,58,235,59,236,237,238,239,240,241,242,60,243,244,245,246,247,248,249,250,251,48,49,50,51,252,253,70,71,254,255,256,257,258,259,260,261,262,263,264,265,266,267,55,268,269,270,271,272,273,274,275,276,277,278,279,280,281,52,282,283,284,285,286,287,53,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,54,306,307,61,62,308,63,309,64,65,310,311,312,313,314,315,316,317,318,319,66,320,321,322,323,67,324,325,326,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[330,315,321,325],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[331,331,332,332,108,333,129,130,131,155,334,335,336,337,338,181,182,183,184,185,201,202,203,204,205,217,218,243,295,306,307,308,63,309,64,313,315,316,318,319,67,324,325],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[314],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[331,331,332,332,108,333,129,130,131,155,334,335,336,337,338,181,182,183,184,185,201,202,203,204,205,217,218,243,295,54,306,307,308,63,309,64,313,315,316,318,319,67,324,325],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[339,331,331,332,332,340,341,81,82,342,343,109,120,121,122,123,124,125,126,127,134,137,344,163,164,166,345,219,222,223,225,226,227,228,229,56,231,232,233,346,347,348,349,350,50,254,256,351,257,258,352,259,260,268,269,270,272,273,353,354,274,275,276,329],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[83,355,34,133,141,142,144,145,151,154,157,284,289,290,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[339,331,331,332,332,340,341,81,82,342,109,121,134,137,344,163,164,166,219,222,223,225,226,227,228,229,56,231,232,233,347,348,349,350,50,254,256,356,357,351,257,258,352,259,260,268,358,269,270,272,273,353,354,274,275,359,276,329],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[83,360,361,34,133,157,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[87,93,100,101,182,205],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[83,362,355,34,133,141,142,144,145,154,157,284,289,290,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[363,364,365,140,141,142,144,145,154,366,367,368,369,283,284,289,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[370,132,34,133,140,142,144,145,154,155,157,158,261,262,263,264,283,284,289,290,295,297,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[83,370,360,371,361,132,34,133,140,155,157,158,283,295,297,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[68,69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[0],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[57,342,372,232,346,254,272,373,374,274,276,329,375],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[83,355,34,133,141,142,144,145,154,157,284,289,290,297],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[363,364,141,154,366,368],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[378,379],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[70,71],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[83,355,34,133,141,142,144,145,154,157,284,289,290,297],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[73,74,75,76,77,78,80,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,121,128,26,129,130,131,132,34,133,140,37,38,39,40,41,42,150,153,155,158,159,160,163,164,166,170,171,172,173,174,175,180,44,181,182,183,184,185,201,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,219,222,224,225,226,227,229,56,232,58,235,59,236,238,239,240,241,242,60,245,246,247,250,251,48,49,50,51,252,253,70,71,254,255,256,257,258,259,260,261,262,263,264,265,266,55,268,272,273,282,283,285,286,288,291,294,295,298,299,300,301,302,303,304,305,54,306,307,61,62,308,63,309,64,65,310,311,312,313,314,315,316,317,318,319,66,320,321,323,67,324,325,327,328,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests2.UsageTest.argumentsOrdered":290,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":286,"org.easymock.tests2.StubTest.stubWithReturnValue":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":93,"org.easymock.tests2.SerializationTest.testAllMockedMethod":256,"org.easymock.tests2.DelegateToTest.testReturnException":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.MockingTest.testPartialClassMocking":163,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":368,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":57,"org.easymock.tests.MockClassControlTest.testToString":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":13,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":1,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":69,"org.easymock.tests.UsageExpectAndThrowTest.object":11,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":370,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":320,"org.easymock.tests2.DelegateToTest.testWrongClass":267,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":218,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":310,"org.easymock.tests2.UsageTest.wrongArguments":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":129,"org.easymock.samples.ConstructorCalledMockTest.testTax":331,"org.easymock.tests.UsageStrictMockTest.range":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":113,"org.easymock.samples.ExampleTest.answerVsDelegate":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":351,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":137,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":353,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":127,"org.easymock.tests2.CaptureTest.testPrimitive":236,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":131,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":20,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":112,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":183,"org.easymock.tests2.CaptureTest.testCaptureNone":241,"org.easymock.tests.UsageUnorderedTest.message":83,"org.easymock.tests.UsageVerifyTest.twoReturns":133,"org.easymock.tests.UsageVarargTest.varargByteAccepted":214,"org.easymock.tests2.ThreadingTest.testThreadSafe":246,"org.easymock.tests.UsageTest.argumentsOrdered":145,"org.easymock.tests.UsageVarargTest.varargIntAccepted":208,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":175,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":201,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":221,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":33,"org.easymock.tests2.UsageConstraintsTest.any":311,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":273,"org.easymock.tests2.StubTest.stub":305,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":24,"org.easymock.tests.UsageExpectAndThrowTest.longType":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":195,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.SerializationTest.testClass":254,"org.easymock.tests.LimitationsTest.mockNativeMethod":219,"org.easymock.tests.ReplayStateInvalidUsageTest.times":197,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":377,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":342,"org.easymock.tests2.AnswerTest.answer":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":303,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":282,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests2.NameTest.nameForMocksControl":264,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":106,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":5,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":166,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":222,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":354,"org.easymock.tests.MockingTest.testNicePartialClassMocking":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":16,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":227,"org.easymock.tests2.CaptureTest.testCaptureLast":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":220,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":119,"org.easymock.tests.MockingTest.testTwoMocks":344,"org.easymock.tests2.CaptureTest.testCapture1_2446744":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":9,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":324,"org.easymock.tests.UsageThrowableTest.throwError":25,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":191,"org.easymock.samples.ExampleTest.removeNonExistingDocument":79,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":193,"org.easymock.tests.UsageStrictMockTest.differentMethods":158,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":136,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":248,"org.easymock.tests2.MockBuilderTest.testCreateMockString":276,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":120,"org.easymock.tests.UsageExpectAndThrowTest.floatType":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":185,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":317,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests.UsageVerifyTest.twoThrows":34,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":349,"org.easymock.samples.PartialClassMockTest.testGetArea":339,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":192,"org.easymock.tests.MockingTest.testInterfaceMocking":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":202,"org.easymock.samples.ExampleTest.voteAgainstRemoval":76,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":232,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":345,"org.easymock.tests2.UsageTest.niceToStrict":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":2,"org.easymock.tests2.UsageConstraintsTest.testNotNull":67,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":31,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":272,"org.easymock.tests2.UsageTest.defaultResetToNice":288,"org.easymock.tests2.MockBuilderTest.testCreateMock":274,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":99,"org.easymock.tests.UsageVarargTest.differentLength":211,"org.easymock.tests2.CallbackTest.callback":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":372,"org.easymock.tests.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":111,"org.easymock.tests.UsageCallCountTest.tooFewCalls":173,"org.easymock.tests.UsageOverloadedMethodTest.overloading":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":315,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":95,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":179,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":314,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":114,"org.easymock.tests.UsageThrowableTest.throwCheckedException":28,"org.easymock.tests2.EasyMockSupportClassTest.testAll":347,"org.easymock.tests.MockClassControlTest.testEquals":126,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":82,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":18,"org.easymock.tests.MockingTest.testStrictClassMocking":161,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":302,"org.easymock.tests2.CaptureTest.testCaptureAll":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":258,"org.easymock.tests2.UsageConstraintsTest.testMatches":316,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":198,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":189,"org.easymock.tests.ObjectMethodsTest.testHashCode":187,"org.easymock.samples.ExampleTest.voteForRemovals":78,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":72,"org.easymock.tests2.NameTest.nameForNiceMock":263,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":250,"org.easymock.tests.UsageVarargTest.allKinds":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":304,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":132,"org.easymock.samples.BasicClassMockTest.testPrintContent":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":118,"org.easymock.samples.ExampleTest.addDocument":77,"org.easymock.tests2.DelegateToTest.testStubDelegate":266,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":30,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests2.AnswerTest.stubAnswer":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":155,"org.easymock.tests2.UsageConstraintsTest.greaterThan":318,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":233,"org.easymock.tests.UsageVarargTest.varargLongAccepted":213,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.samples.ExampleTest.voteForRemoval":75,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":247,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":234,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":102,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":228,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":332,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":319,"org.easymock.tests.UsageThrowableTest.noUpperLimit":128,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":307,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":109,"org.easymock.tests2.SerializationTest.test":255,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":238,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":374,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":378,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":26,"org.easymock.tests2.UsageConstraintsTest.testSame":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.CaptureTest.testCaptureFirst":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":68,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":292,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":91,"org.easymock.tests.GenericTest.testPackageScope":81,"org.easymock.tests2.UsageTest.moreThanOneArgument":283,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":249,"org.easymock.tests2.CaptureTest.testCapture2_2446744":244,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":215,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":167,"org.easymock.tests.GenericTest.testBridgedEquals":343,"org.easymock.tests2.NameTest.nameForMock":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":177,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":115,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":96,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":333,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":322,"org.easymock.tests2.UsageStrictMockTest.differentMethods":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":17,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":181,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageCallCountTest.tooManyCalls":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":15,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":107,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":172,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":92,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":281,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":362,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":130,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":257,"org.easymock.tests.MockingTest.testNiceClassMocking":169,"org.easymock.tests.MockingTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":358,"org.easymock.tests2.UsageConstraintsTest.testContains":313,"org.easymock.tests2.NameTest.nameForStrictMock":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":171,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":308,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":44,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":271,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":226,"org.easymock.tests.MockTypeTest.fromEasyMockClass":135,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":328,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":152,"org.easymock.tests.UsageExpectAndReturnTest.object":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":280,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":360,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":229,"org.easymock.tests.ErrorMessageTest.testGetters":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":269,"org.easymock.tests2.UsageStrictMockTest.range":297,"org.easymock.tests2.UsageConstraintsTest.lessThan":325,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":210,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":188,"org.easymock.tests.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.CaptureTest.testCaptureRightOne":60,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":365,"org.easymock.tests2.UsageConstraintsTest.testOr":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":375,"org.easymock.tests.UsageRangeTest.combination":104,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":223,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":100,"org.easymock.tests.UsageTest.wrongArguments":142,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":149,"org.easymock.tests.MockClassControlTest.testHashCode":125,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":97,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":379,"org.easymock.tests.UsageVarargTest.varargShortAccepted":212,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":176,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":326,"org.easymock.tests2.UsageConstraintsTest.cmpTo":312,"org.easymock.tests.UsageVarargTest.varargCharAccepted":209,"org.easymock.tests2.CompareToTest.testLessThan":330,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests2.UsageTest.openCallCountByLastCall":287,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests.DefaultClassInstantiatorTest.object":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":45,"org.easymock.tests2.CaptureTest.testCaptureFromStub":243,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":190,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":270,"org.easymock.tests.UsageTest.unexpectedCallWithArray":141,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":186,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":98,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":231,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":124,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.samples.ExampleTest.addAndChangeDocument":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":101,"org.easymock.tests.UsageStrictMockTest.testVerify":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":350,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":123,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":116,"org.easymock.tests2.UsageTest.resumeIfFailure":291,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":239,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":90,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":361,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":277}}]
