[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,287,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[98,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[302,303,304,305,306,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[70,72,80,98,99,103,104,309,115],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[4,5,6,7,8,9,10,11,12,310,311,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,312,313,314,315,59,60,61,62,63,64,65,66,67,68,69,316,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,309,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,317,128,129,130,318,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,319,153,154,155,155,156,156,157,158,159,320,321,322,160,161,162,163,164,165,166,167,168,323,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,324,325,326,327,328,204,205,206,207,208,209,210,211,212,213,214,215,216,329,330,331,299,332,333,334,335,336,337,338,339,340,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,341,342,238,239,240,241,242,243,244,245,246,247,343,301,344,345,346,347,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,348,349,350,351,352,353,354,355,356,267,268,269,270,271,272,273,274,275,357,276,277,358,359,278,360,361,362,279,280,281,282,283,284,363,285,286,288,289,290,291,292,293,294,295,364,365,296,297,298,366,367,368,369,370],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[371],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[54,372,304,305,306,307,308,373],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[22,23,29,30,312,313,314,315,139,141,142,196,198,201,202,216,267,268,269,359,290,291,293,294],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[5,7,374,375,47,48,49,50,52,53,54,302,376,377,378,55,379,380,56,381,382,383,384,385,386,387,388,389,57,390,391,392,393,394,58,395,396,61,397,62,398,399,63,64,65,66,400,67,68,401,69,402,84,85,87,88,89,90,91,403,404,92,93,94,95,405,406,123,124,125,155,155,156,156,157,158,159,407,408,194,329,409,410,411,412,413,414,415,416,217,417,418,0,265,266,348,419,349,350,351,352,353,354,355,356,420,421,365,296,297,298,422],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[23,29,30,31,42,62,67,68,69,141,142,197,198,201,202,208,209,210,216,268,269,278,423,424,425,426,284,290,293,294],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"failures":[427,428,429,430,431,432,433,434],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[435],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[22,23,29,30,436,437,438,439,440,441,442,443,444,445,446,139,141,142,196,197,198,201,202,216,341,342,267,268,269,357,358,359,278,447,448,449,450,451,426,290,291,293,294],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[12,13,15,18,19,46,148,275],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[5,6,7,452],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:185","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[134,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[56,57,155,156,157],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[453,454,455,456,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[22,139,141,142,196,216,458,459,460,461,267,268,269,291,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:222","failures":[341,342,357,358],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[5,54,302,462,56,57,58,61,463,62,398,464,399,63,64,65,303,66,465,400,67,68,466,69,90,403,93,94,406,123,155,156,157,407,408,0,348],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[16,17,47,48,49,50,51,52,53,54,55,56,57,58,62,63,65,66,68,84,85,86,87,88,89,91,93,94,95,129,135,139,141,142,145,147,149,150,152,157,321,323,169,174,175,176,177,178,179,182,183,185,186,187,189,190,191,192,193,211,212,213,214,215,217,246,247,344,270,271,272,273,284,363,285,286,291,293,294,296,297,298],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[4,5,6,12,14,16,17,20,21,22,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,60,62,63,65,66,68,70,71,73,74,77,78,79,80,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,125,127,129,132,133,134,135,136,139,141,142,145,147,149,150,152,157,321,322,160,162,163,164,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,199,200,203,211,212,213,214,215,217,238,240,241,242,243,244,245,246,247,467,468,469,470,471,344,265,348,267,269,359,284,363,285,286,291,293,294,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[109,264,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[23,29,30,141,197,198,201,202,216,268,269,426,290,293],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[472,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":99,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":43,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":25,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":146,"org.easymock.tests2.DelegateToTest.testReturnException":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":249,"org.easymock.tests.MockingTest.testPartialClassMocking":296,"org.easymock.tests.MockClassControlTest.testToString":351,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":218,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":458,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":304,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":167,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":408,"org.easymock.tests2.UsageConstraintsTest.testNull":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":42,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.CaptureTest.testPrimitive":73,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":173,"org.easymock.tests.UsageTest.moreThanOneArgument":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":272,"org.easymock.tests.UsageTest.argumentsOrdered":202,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":215,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":440,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests.ReplayStateInvalidUsageTest.times":337,"org.easymock.tests2.AnswerTest.answer":12,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":11,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":21,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":271,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.DelegateToTest.testDelegate":131,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests.LimitationsTest.mockFinalMethod":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":341,"org.easymock.tests2.CaptureTest.testCapture1_2446744":74,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":9,"org.easymock.tests.UsageThrowableTest.throwError":238,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":299,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":396,"org.easymock.samples.PartialClassMockTest.testGetArea":157,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":332,"org.easymock.tests2.CompareToTest.testLessOrEqual":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":321,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":385,"org.easymock.tests2.UsageTest.niceToStrict":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":219,"org.easymock.tests2.ThreadingTest.testChangeDefault":457,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":3,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":392,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":437,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":227,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":38,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":165,"org.easymock.tests.UsageOverloadedMethodTest.overloading":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":110,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":162,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":109,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":79,"org.easymock.tests2.EasyMockSupportClassTest.testAll":55,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":266,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":442,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":10,"org.easymock.tests2.CaptureTest.testCaptureAll":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":281,"org.easymock.tests2.UsageConstraintsTest.testMatches":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":330,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":264,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":267,"org.easymock.samples.BasicClassMockTest.testPrintContent":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":244,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":253,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":363,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":95,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":414,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":405,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":90,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":194,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":35,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":248,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":36,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":181,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.CaptureTest.testCapture2_2446744":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":68,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":263,"org.easymock.tests.GenericTest.testBridgedEquals":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":209,"org.easymock.tests.UsageExpectAndReturnTest.longType":177,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":279,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":401,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":118,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":448,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":243,"org.easymock.tests.MockingTest.testNiceClassMocking":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":48,"org.easymock.tests.MockingTest.testClassMocking":421,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":397,"org.easymock.tests2.UsageConstraintsTest.testContains":108,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":125,"org.easymock.tests2.UsageConstraintsTest.testFind":100,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":19,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":41,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":305,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":347,"org.easymock.tests.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":160,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":451,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":190,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.MockClassControlTest.testHashCode":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":387,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":439,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":361,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":8,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":316,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":26,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests.DefaultClassInstantiatorTest.object":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":360,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":345,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":388,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":241,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":93,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":224,"org.easymock.tests.CapturesMatcherTest.test":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":324,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":58,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":352,"org.easymock.tests2.UsageTest.resumeIfFailure":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":251,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":303,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":119,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":343,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":444,"org.easymock.samples.SupportTest.voteForRemovals":145,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":230,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":452,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":301,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.UsageExpectAndThrowTest.object":228,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":116,"org.easymock.tests2.DelegateToTest.testWrongClass":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":247,"org.easymock.samples.ConstructorCalledMockTest.testTax":155,"org.easymock.tests.UsageStrictMockTest.range":293,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":65,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":201,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":447,"org.easymock.tests2.CaptureTest.testCaptureNone":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":322,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":454,"org.easymock.tests.UsageUnorderedTest.message":216,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":423,"org.easymock.tests.UsageVerifyTest.twoReturns":269,"org.easymock.tests.UsageVarargTest.varargByteAccepted":262,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":390,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":207,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":158,"org.easymock.tests2.CaptureTest.testCapture_2617107":72,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":172,"org.easymock.tests2.UsageConstraintsTest.any":106,"org.easymock.tests2.StubTest.stub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndThrowTest.longType":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":412,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests.LimitationsTest.mockNativeMethod":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":193,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":348,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests2.NameTest.nameForMocksControl":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":427,"org.easymock.tests2.MockedExceptionTest.testMockedException":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":380,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":222,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":298,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":66,"org.easymock.tests.MockingTest.testNicePartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":342,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":226,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":121,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":456,"org.easymock.samples.ExampleTest.removeNonExistingDocument":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":294,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":333,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":455,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":410,"org.easymock.tests2.ConstraintsToStringTest.andToString":443,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":134,"org.easymock.tests2.MockBuilderTest.testCreateMockString":69,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":349,"org.easymock.tests.UsageExpectAndThrowTest.floatType":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":381,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":462,"org.easymock.tests.UsageVerifyTest.twoThrows":268,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":57,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":320,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":94,"org.easymock.tests.LimitationsTest.privateConstructor":416,"org.easymock.tests2.UsageConstraintsTest.testNotNull":120,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":245,"org.easymock.tests2.UsageTest.defaultResetToNice":28,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests.UsageVarargTest.differentLength":259,"org.easymock.tests2.CallbackTest.callback":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":403,"org.easymock.tests.UsageTest.openCallCountByLastCall":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":171,"org.easymock.tests.UsageCallCountTest.tooFewCalls":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":168,"org.easymock.tests.UsageThrowableTest.throwCheckedException":242,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":449,"org.easymock.tests.MockingTest.testStrictClassMocking":420,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":52,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":49,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":51,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":15,"org.easymock.tests.ObjectMethodsTest.testHashCode":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":307,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":136,"org.easymock.tests2.NameTest.nameForNiceMock":314,"org.easymock.tests2.DependencyTest.testInterfaceMocking":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":306,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.DelegateToTest.testStubDelegate":129,"org.easymock.tests2.AnswerTest.stubAnswer":14,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":291,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":465,"org.easymock.tests.UsageVarargTest.varargLongAccepted":261,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.floatType":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.tests2.ConstraintsToStringTest.orToString":436,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":114,"org.easymock.tests.UsageThrowableTest.noUpperLimit":239,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":374,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":175,"org.easymock.tests2.UsageConstraintsTest.testSame":102,"org.easymock.samples.SupportTest.addDocument":144,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":382,"org.easymock.tests.GenericTest.testPackageScope":265,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":369,"org.easymock.tests2.NameTest.nameForMock":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":466,"org.easymock.tests2.UsageStrictMockTest.differentMethods":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests2.MockedExceptionTest.testRealException":126,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":450,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":170,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":340,"org.easymock.tests2.NameTest.nameForStrictMock":313,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":399,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":375,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":459,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":411,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":115,"org.easymock.tests.ErrorMessageTest.testGetters":460,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":62,"org.easymock.tests2.UsageStrictMockTest.range":141,"org.easymock.tests2.UsageConstraintsTest.lessThan":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":386,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests2.UsageConstraintsTest.testOr":103,"org.easymock.tests.UsageRangeTest.combination":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageTest.wrongArguments":198,"org.easymock.tests2.MockBuilderTest.testWithConstructor":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":383,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":187,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":413,"org.easymock.tests.UsageVarargTest.varargShortAccepted":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":208,"org.easymock.tests2.UsageConstraintsTest.cmpTo":107,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":311,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":27,"org.easymock.tests2.CaptureTest.testCaptureFromStub":81,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":331,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":398,"org.easymock.tests.UsageTest.unexpectedCallWithArray":197,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.constraints":98,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":153,"org.easymock.tests2.ConstraintsToStringTest.notToString":438,"org.easymock.tests.UsageStrictMockTest.testVerify":364,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":154,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":280,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":76,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":213,"org.easymock.tests.LimitationsTest.abstractClass":415,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":214,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":39,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255}}]
