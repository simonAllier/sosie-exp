[{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,82,83,83,84],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,24,129,130,25,131,132,133,134,135,136,137,138,139,26,140,141,142,143,144,27,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,28,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,29,195,30,31,196,197,32,33,34,198,35,199,200,36,37,201,38,202,203,204,205,85,206,207,208,209,210,211,212,213,214,215,216,217,218,219,39,220,40,41,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,42,43,44,45,251,252,46,47,253,254,255,256,257,258,259,260,48,49,261,50,51,52,53,262,54,263,264,55,56,57,58,265,59,266,267,268,269,270,271,272,273,274,275,60,61,62,63,64,65,66,276,67,277,278,68,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,69,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,70,71,72,331,73,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,347,17,18,19,20,21,23,22,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,74,382,383,384,385,75,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,76,77,78,79,477,478,479,480,481,482,483,484,485,486,487,80,81,488,82,83,84],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[87,89,92,94,96,99,101,103,105,107,109,112,114,148,151,153,155,158,159,175,176,30,33,204,206,210,40,223,225,227,229,231,233,44,47,255,257,260,49,50,52,55,268,270,63,280,294,303,304,69,314,317,318,320,321,322,323,72,339,343,345,349,351,355,356,364,366,372,374,376,378,389,392,394,396,398,405,437,439,453,457,460,463,468,471,78,484],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[116,117,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[476],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:520","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[107,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[39,220,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[223,225,226,227,228,229,230,232,489,233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[86,87,88,89,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,124,125,24,25,26,27,147,150,151,152,153,154,155,156,157,158,159,160,161,167,174,175,28,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,29,30,32,33,34,35,36,37,38,202,203,204,205,85,206,207,208,209,210,211,212,213,215,216,217,219,39,220,40,41,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,243,42,43,44,45,252,46,47,254,255,256,257,258,260,48,49,261,50,51,52,53,54,55,56,57,58,267,268,269,270,272,273,274,61,62,63,64,65,66,276,67,68,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,300,301,303,304,305,306,307,308,309,310,69,311,312,313,314,315,316,317,318,319,320,321,322,71,72,73,338,339,340,341,342,343,344,345,346,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,76,77,477,478,479,480,481,482,483,484,485,486,487,80,81,488,82,83,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[88,89,92,94,95,97,107,112,223,225,233],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,124,125,24,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,167,168,174,175,28,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,29,202,203,204,205,85,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,243,244,252,254,255,256,257,258,260,48,261,267,268,269,270,272,273,275,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,336,338,339,340,341,342,343,344,345,346,347,23,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,481,482,483,485,486,487,488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[86,87,88,89,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,124,125,25,26,27,147,150,151,152,155,157,158,161,167,174,175,28,176,177,179,180,181,182,185,187,188,190,192,193,194,32,34,35,202,203,204,85,207,208,213,215,216,217,219,39,220,41,223,226,232,233,237,243,42,43,44,45,252,46,47,254,255,256,258,260,48,261,50,52,68,293,294,296,297,305,306,307,308,310,314,316,317,320,321,322,71,72,73,338,339,340,341,342,343,345,346,348,349,350,351,352,354,355,358,359,362,363,364,365,367,368,369,370,371,400,401,402,403,404,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,474,475,478,479,480,481,483,487,82,83,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:80","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[490,491,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[214,216,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests2.UsageTest.argumentsOrdered":211,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":354,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":11,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":206,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":488,"org.easymock.tests2.DelegateToTest.testReturnException":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":71,"org.easymock.tests.MockClassControlTest.testToString":63,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":266,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":448,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":25,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":96,"org.easymock.tests2.UsageTest.wrongArguments":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":338,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":365,"org.easymock.samples.ExampleTest.answerVsDelegate":479,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":75,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":333,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":186,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":67,"org.easymock.tests2.CaptureTest.testPrimitive":226,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":467,"org.easymock.tests.UsageTest.moreThanOneArgument":355,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":369,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":443,"org.easymock.tests.UsageTest.argumentsOrdered":361,"org.easymock.tests.UsageVarargTest.varargIntAccepted":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":400,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests.ReplayStateInvalidUsageTest.times":288,"org.easymock.tests2.DependencyTest.testClassMocking":122,"org.easymock.tests2.AnswerTest.answer":147,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":17,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":257,"org.easymock.tests2.CaptureTest.testAnd":223,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":383,"org.easymock.tests2.UsageTest.strictResetToDefault":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":345,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":447,"org.easymock.tests2.DelegateToTest.testDelegate":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":463,"org.easymock.tests.LimitationsTest.mockFinalMethod":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":352,"org.easymock.tests2.DependencyTest.testClassMockingSupport":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":437,"org.easymock.tests2.CaptureTest.testCapture1_2446744":227,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":255,"org.easymock.tests.UsageThrowableTest.throwError":468,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":282,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":385,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":173,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":146,"org.easymock.samples.PartialClassMockTest.testGetArea":84,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":283,"org.easymock.tests.MockingTest.testInterfaceMocking":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":401,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":135,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":60,"org.easymock.tests2.UsageTest.niceToStrict":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":32,"org.easymock.tests2.MockBuilderTest.testCreateMock":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":457,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":363,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":491,"org.easymock.tests.UsageOverloadedMethodTest.overloading":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":139,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":102,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":426,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":295,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":101,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":232,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":391,"org.easymock.tests2.EasyMockSupportClassTest.testAll":24,"org.easymock.tests.MockClassControlTest.testEquals":276,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":465,"org.easymock.tests2.CaptureTest.testCaptureAll":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":350,"org.easymock.tests.MockNameTest.defaultName":292,"org.easymock.tests2.UsageConstraintsTest.testMatches":103,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":370,"org.easymock.samples.ExampleTest.voteForRemovals":483,"org.easymock.tests.UsageVarargTest.allKinds":399,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":320,"org.easymock.samples.BasicClassMockTest.testPrintContent":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":351,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":474,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":169,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":310,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":413,"org.easymock.tests2.UsageConstraintsTest.greaterThan":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":344,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":58,"org.easymock.samples.ExampleTest.voteForRemoval":480,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":414,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":191,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":265,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":386,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":53,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":214,"org.easymock.tests2.CaptureTest.testCaptureFirst":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":422,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":193,"org.easymock.tests2.UsageTest.moreThanOneArgument":204,"org.easymock.tests2.CaptureTest.testCapture2_2446744":235,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":18,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":398,"org.easymock.tests.GenericTest.testBridgedEquals":79,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":492,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":379,"org.easymock.tests.UsageExpectAndReturnTest.longType":418,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":348,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":466,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":464,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":367,"org.easymock.tests.UsageCallCountTest.tooManyCalls":380,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":453,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":473,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":43,"org.easymock.tests.MockingTest.testNiceClassMocking":334,"org.easymock.tests.MockingTest.testClassMocking":330,"org.easymock.tests2.UsageConstraintsTest.testContains":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":373,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":28,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":297,"org.easymock.tests.MockTypeTest.fromEasyMockClass":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":260,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":311,"org.easymock.tests.UsageExpectAndReturnTest.object":425,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":185,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":393,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":274,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":493,"org.easymock.tests.UsageTest.exactCallCountByLastCall":362,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":6,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":444,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":431,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":388,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":163,"org.easymock.tests.MockClassControlTest.testHashCode":66,"org.easymock.tests2.EasyMockSupportTest.testVerify":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":137,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":445,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":254,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":250,"org.easymock.tests.UsageVarargTest.varargCharAccepted":392,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":406,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":22,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests.DefaultClassInstantiatorTest.object":407,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":188,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":326,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":241,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":432,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":27,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":64,"org.easymock.tests2.UsageTest.resumeIfFailure":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":74,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":424,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.samples.SupportTest.voteForRemovals":487,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":23,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":148,"org.easymock.tests.UsageExpectAndThrowTest.object":458,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":337,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":435,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":436,"org.easymock.samples.ConstructorCalledMockTest.testTax":82,"org.easymock.tests.UsageStrictMockTest.range":316,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":120,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":459,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":290,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":364,"org.easymock.tests2.CaptureTest.testCaptureNone":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":325,"org.easymock.tests.UsageUnorderedTest.message":405,"org.easymock.tests.UsageVerifyTest.twoReturns":322,"org.easymock.tests.UsageVarargTest.varargByteAccepted":397,"org.easymock.tests2.ThreadingTest.testThreadSafe":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":140,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":377,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":80,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":275,"org.easymock.tests2.CaptureTest.testCapture_2617107":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":341,"org.easymock.tests2.UsageConstraintsTest.any":98,"org.easymock.tests2.StubTest.stub":160,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":442,"org.easymock.tests.UsageExpectAndThrowTest.longType":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":411,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":286,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":434,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":240,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests2.NameTest.nameForMocksControl":270,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":130,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":452,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":73,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":259,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":52,"org.easymock.tests2.CaptureTest.testCaptureLast":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":238,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":438,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":70,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":456,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":210,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":113,"org.easymock.samples.ExampleTest.removeNonExistingDocument":484,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":245,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":284,"org.easymock.tests.UsageStrictMockTest.differentMethods":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":164,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":409,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":192,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":61,"org.easymock.tests.UsageExpectAndThrowTest.floatType":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":131,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":222,"org.easymock.tests.UsageVerifyTest.twoThrows":321,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.ExampleTest.voteAgainstRemoval":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.LimitationsTest.privateConstructor":278,"org.easymock.tests2.UsageConstraintsTest.testNotNull":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":475,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":174,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":13,"org.easymock.tests.UsageVarargTest.differentLength":394,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":239,"org.easymock.tests2.CallbackTest.callback":237,"org.easymock.tests2.UsageConstraintsTest.equals":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":263,"org.easymock.tests.UsageTest.openCallCountByLastCall":358,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":340,"org.easymock.tests.UsageCallCountTest.tooFewCalls":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":366,"org.easymock.tests.UsageThrowableTest.throwCheckedException":472,"org.easymock.tests.MockingTest.testStrictClassMocking":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":294,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":244,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":252,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":152,"org.easymock.tests.ObjectMethodsTest.testHashCode":273,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":194,"org.easymock.tests2.NameTest.nameForNiceMock":269,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.samples.ExampleTest.addDocument":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":145,"org.easymock.tests2.DelegateToTest.testStubDelegate":216,"org.easymock.tests2.AnswerTest.stubAnswer":151,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":314,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":199,"org.easymock.tests.UsageVarargTest.varargLongAccepted":396,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":433,"org.easymock.tests.UsageExpectAndReturnTest.floatType":417,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":83,"org.easymock.tests.UsageThrowableTest.noUpperLimit":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":171,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":106,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":87,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":115,"org.easymock.tests2.SerializationTest.test":220,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":228,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":416,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.samples.SupportTest.addDocument":486,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":251,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":132,"org.easymock.tests.GenericTest.testPackageScope":76,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":170,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":332,"org.easymock.tests2.NameTest.nameForMock":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":427,"org.easymock.tests2.UsageStrictMockTest.differentMethods":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":264,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":419,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":462,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":346,"org.easymock.tests2.MockedExceptionTest.testRealException":176,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":339,"org.easymock.tests2.NameTest.nameForStrictMock":268,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":490,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":119,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":410,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":157,"org.easymock.tests2.UsageConstraintsTest.lessThan":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":136,"org.easymock.tests2.CaptureTest.testCaptureRightOne":233,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.UsageRangeTest.combination":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":49,"org.easymock.tests.UsageTest.wrongArguments":357,"org.easymock.tests2.MockBuilderTest.testWithConstructor":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":133,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":2,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":412,"org.easymock.tests.UsageVarargTest.varargShortAccepted":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":378,"org.easymock.tests2.UsageConstraintsTest.cmpTo":99,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":4,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":234,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":281,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":31,"org.easymock.tests.UsageTest.unexpectedCallWithArray":356,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":376,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":429,"org.easymock.tests2.CaptureTest.testCapture":489,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":315,"org.easymock.samples.ExampleTest.addAndChangeDocument":485,"org.easymock.tests.UsageStrictMockTest.testVerify":319,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":477,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":349,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":421,"org.easymock.tests.LimitationsTest.abstractClass":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":403,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183}}]
