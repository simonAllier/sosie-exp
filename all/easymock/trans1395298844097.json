[{"position":"org.easymock.internal.LastControl:124","failures":[0],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,58,59],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[60],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[61,62,63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return this.java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[67,68,69,70,71,72,2,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[113,114,115,4,5,6,86,87,88,89,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,92,145,93,94,146,147,148,149,150,151,152,153,154,95,155,156,7,157,158,159,160,161,162,163,164,96,165,166,167,168,169,170,171,172,173,174,97,175,176,177,178,179,98,99,100,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,8,9,101,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,13,221,222,102,223,224,225,226,14,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,103,244,245,246,247,248,104,105,106,249,250,251,252,253,254,255,256,257,258,259,18,260,261,262,263,107,264,108,109,265,19,266,20,267,268,67,68,69,70,71,72,2,73,75,269,270,271,272,273,274,275,276,76,77,277,278,279,78,79,280,281,282,283,284,285,286,287,288,289,290,291,292,293,21,22,23,24,294,25,26,110,295,296,297,27,29,31,32,33,34,35,36,38,298,299,39,300,0,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,80,81,82,83,323,324,325,326,327,328,84,85,329,330,331,332,333,334,335,336,337,40,41,42,43,44,45,338,46,47,48,49,50,51,52,53,54,111,112,339,340,55,56,341,57,57,58,58,59,342,343,344,345,346,347,348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[352,353,354,355,356,18,357,19,358,359],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[113,114,115,4,5,6,86,88,89,116,117,118,119,120,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,143,144,92,145,93,94,146,148,149,150,151,152,153,154,95,155,156,7,157,158,159,160,161,162,163,164,96,165,166,167,168,170,171,172,173,174,97,175,176,177,178,179,98,99,100,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,202,203,8,9,101,204,205,206,219,220,13,221,222,102,223,224,225,233,235,236,238,239,240,241,242,243,103,244,245,246,247,248,104,105,106,249,250,251,252,253,254,255,256,257,258,259,18,260,261,263,107,264,108,109,265,19,266,20,267,268,67,68,69,70,71,72,2,73,75,269,270,271,272,273,274,275,276,76,77,277,278,279,78,79,280,281,282,283,284,285,286,287,288,289,290,291,292,293,21,22,23,24,294,25,26,110,295,296,297,27,31,32,33,34,36,38,298,299,39,300,0,360,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,80,81,82,83,323,324,325,326,327,328,84,85,329,330,331,332,333,334,335,336,337,40,41,42,43,44,45,338,46,47,48,49,50,51,53,111,112,339,340,55,56,341,57,58,59,342,343,344,345,346,347,349,350],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[361,362,363,364,217],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[365,280],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[210,335,366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[114,86,124,125,126,127,128,129,131,132,133,134,135,137,142,143,92,145,93,94,146,157,160,161,162,163,164,96,165,166,351,192,193,198,200,203,259,260,262,263,107,264,108,109,265,68,70,2,73,75,271,274,76,77,277,278,279,78,281,282,283,284,286,287,290,291,292,31,36,303,306,307,311,312,81,82,83,324,325,326,327,328,84,330,45,47,53,340,59,342,344,345,347,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[10,11,12,19,27,29,30,31,33,34,36,38,41,42,43,49,52,53,367,59],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[235,368,256,257,258,369,259,343],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[370,352,353,354,371,372,356,18,357,19,358,359,373,374],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[32,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[113,114,115,375,376,3,4,5,377,6,378,379,380,381,382,383,384,385,86,87,88,89,116,117,118,119,120,386,387,388,389,390,391,392,361,393,394,395,396,397,398,399,400,90,401,402,403,404,405,91,406,121,407,408,409,410,411,412,122,123,61,62,63,124,125,126,127,413,128,129,130,131,132,133,134,135,136,137,138,414,415,139,140,141,416,417,142,143,144,92,145,93,94,146,147,148,149,150,151,152,153,154,95,155,156,7,157,158,159,160,161,162,163,164,96,165,166,167,168,418,362,363,364,351,169,419,170,171,172,173,174,97,175,176,177,178,179,98,99,100,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,8,9,10,420,11,421,422,12,423,424,101,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,425,426,13,427,221,222,102,223,224,225,428,429,430,226,14,227,228,229,230,231,232,431,64,432,233,234,235,236,433,237,238,239,240,241,242,243,103,244,245,246,247,248,104,105,106,249,250,251,252,253,254,434,435,436,437,438,255,439,440,441,442,443,444,368,256,257,258,369,259,18,357,260,445,446,447,448,449,261,450,451,452,453,454,455,262,263,107,264,108,109,265,19,266,20,267,268,67,68,456,69,70,71,72,2,73,74,75,269,270,271,272,273,274,275,276,76,77,277,278,279,78,79,280,281,282,283,284,285,286,287,288,289,290,291,292,293,21,22,23,24,294,25,26,110,295,296,297,27,29,30,457,31,32,33,34,359,35,36,38,298,299,39,300,0,360,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,458,459,316,317,318,460,319,320,321,322,80,81,82,83,323,324,325,326,327,328,84,85,329,330,331,332,333,334,335,336,337,461,462,463,40,464,465,41,466,467,468,469,470,471,472,473,474,42,475,476,477,478,479,43,480,481,44,45,338,46,47,48,49,482,50,483,484,51,52,53,54,366,367,485,486,111,112,487,488,489,490,339,340,55,56,341,57,57,58,58,59,342,343,344,345,346,347,348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[210],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[491,492,144,188,493,494],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[113,114,115,375,376,3,4,5,377,6,378,379,380,381,382,383,384,385,86,87,88,89,116,117,118,119,120,386,387,388,389,390,391,392,361,393,394,395,396,397,398,399,400,90,401,402,403,404,405,91,406,495,121,407,408,409,410,411,496,412,122,123,61,62,63,124,125,126,127,413,128,129,130,131,132,133,134,135,136,137,138,414,415,139,140,141,416,417,142,143,144,92,145,93,94,146,147,148,149,150,151,152,153,154,95,155,156,7,157,158,159,160,161,162,163,164,96,165,166,167,168,418,362,363,364,351,169,419,170,171,172,173,174,97,175,176,177,178,179,98,99,100,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,8,9,10,420,11,421,422,12,423,424,101,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,425,426,13,427,221,222,102,223,224,225,428,429,430,226,14,227,228,229,230,231,232,431,64,432,233,234,235,236,433,237,238,239,240,241,242,243,103,244,245,246,247,248,104,105,106,249,250,251,252,253,254,434,435,436,437,438,255,439,440,441,442,443,444,368,256,257,258,369,259,18,357,497,260,445,446,447,448,449,261,450,451,452,453,454,455,262,263,107,264,108,109,265,19,266,20,267,268,67,68,456,69,70,71,72,2,73,74,75,269,270,271,272,273,274,275,276,76,77,277,278,279,78,79,280,281,282,283,284,285,286,287,288,289,290,291,292,293,21,22,23,24,294,25,26,110,295,296,297,27,498,29,30,499,457,31,32,33,358,34,359,35,36,500,38,298,299,39,300,501,0,360,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,458,459,316,317,318,460,319,320,321,322,80,81,82,83,323,324,325,326,327,328,84,85,329,330,331,332,333,334,335,336,337,461,462,463,40,464,465,41,466,467,468,469,470,471,472,473,474,42,475,476,477,478,479,43,480,481,44,45,338,46,47,48,49,482,50,483,484,51,52,53,54,366,367,485,486,111,112,487,488,489,490,339,340,55,56,341,57,57,58,58,59,342,343,344,345,346,347,348,349,350],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[491,492,144,188,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[114,115,124,502,144,93,188,189,192,193,108,305,311,312],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[114,115,124,503,502,504,505,144,93,94,188,189,192,193,108,109,305,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[491,492,506,144,187,188,189,192,193,493,507,494,508,304,305,311,312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[458,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:70","failures":[93,94,108,109],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[1,10,18,357,497,19,498,499,31,358,509,359,35,500,38,41,42,483,53,367,57,57,58,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[491,492,506,144,187,188,189,192,193,493,507,494,508,304,305,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.Capture:82","failures":[80,82,83,323,324,325,326,328,66,84,85,330],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[510,28,31,52,53],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[511],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[491,492,144,188,493,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[113,114,115,124,92,93,94,187,512,513,514,515,107,108,109,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":68,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.UsageTest.argumentsOrdered":312,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":395,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":307,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":341,"org.easymock.tests2.DelegateToTest.testReturnException":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":222,"org.easymock.tests.MockingTest.testPartialClassMocking":4,"org.easymock.tests.MockClassControlTest.testToString":227,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":460,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":170,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":512,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":352,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":96,"org.easymock.tests2.UsageTest.wrongArguments":305,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":205,"org.easymock.samples.ExampleTest.answerVsDelegate":343,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":12,"org.easymock.tests2.UsageConstraintsTest.testNull":70,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":46,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":232,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":290,"org.easymock.tests2.CaptureTest.testPrimitive":83,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":168,"org.easymock.tests.UsageTest.moreThanOneArgument":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":185,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":95,"org.easymock.tests.UsageTest.argumentsOrdered":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":381,"org.easymock.tests.UsageVarargTest.varargIntAccepted":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":148,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":372,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":443,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":152,"org.easymock.tests.ReplayStateInvalidUsageTest.times":215,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":261,"org.easymock.tests2.DependencyTest.testClassMocking":485,"org.easymock.tests2.AnswerTest.answer":315,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":297,"org.easymock.tests2.CaptureTest.testAnd":80,"org.easymock.tests2.UsageTest.strictResetToDefault":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":285,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":385,"org.easymock.tests2.DelegateToTest.testDelegate":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":181,"org.easymock.tests.LimitationsTest.mockFinalMethod":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":120,"org.easymock.tests2.DependencyTest.testClassMockingSupport":486,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":351,"org.easymock.tests2.CaptureTest.testCapture1_2446744":323,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":295,"org.easymock.tests.UsageThrowableTest.throwError":157,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":209,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":505,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":481,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":210,"org.easymock.tests.MockingTest.testInterfaceMocking":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":470,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":171,"org.easymock.tests2.UsageTest.niceToStrict":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.MockBuilderTest.testCreateMock":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":178,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":430,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":101,"org.easymock.tests.UsageOverloadedMethodTest.overloading":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":236,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":272,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":104,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":60,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":271,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":328,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":413,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.MockClassControlTest.testEquals":231,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":9,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":183,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":118,"org.easymock.tests2.CaptureTest.testCaptureAll":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":296,"org.easymock.tests.MockNameTest.defaultName":418,"org.easymock.tests2.UsageConstraintsTest.testMatches":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":207,"org.easymock.samples.ExampleTest.voteForRemovals":347,"org.easymock.tests.UsageVarargTest.allKinds":135,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":119,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":163,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":225,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":369,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":496,"org.easymock.tests2.UsageConstraintsTest.greaterThan":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":87,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":54,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":412,"org.easymock.samples.ExampleTest.voteForRemoval":344,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":366,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":49,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":7,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":302,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":283,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":221,"org.easymock.tests2.CaptureTest.testCaptureFirst":330,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":284,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":314,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests2.UsageTest.moreThanOneArgument":304,"org.easymock.tests2.CaptureTest.testCapture2_2446744":329,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":134,"org.easymock.tests.GenericTest.testBridgedEquals":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":202,"org.easymock.tests.UsageExpectAndReturnTest.longType":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":116,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":184,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":37,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":414,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":363,"org.easymock.tests.UsageCallCountTest.tooManyCalls":203,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":22,"org.easymock.tests.MockingTest.testNiceClassMocking":380,"org.easymock.tests.MockingTest.testClassMocking":376,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":28,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":196,"org.easymock.tests2.UsageConstraintsTest.testContains":270,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":39,"org.easymock.tests2.UsageConstraintsTest.testFind":69,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":138,"org.easymock.tests.MockTypeTest.fromEasyMockClass":421,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":301,"org.easymock.tests.UsageExpectAndReturnTest.object":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":511,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":289,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":353,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":141,"org.easymock.tests.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":382,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":506,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":357,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":435,"org.easymock.tests.MockClassControlTest.testHashCode":230,"org.easymock.tests2.EasyMockSupportTest.testVerify":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":472,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":429,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":233,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":501,"org.easymock.tests.UsageVarargTest.varargCharAccepted":128,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":406,"org.easymock.tests2.UsageTest.openCallCountByLastCall":308,"org.easymock.tests.DefaultClassInstantiatorTest.object":121,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":428,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":139,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":176,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":175,"org.easymock.tests.CapturesMatcherTest.test":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":228,"org.easymock.tests2.UsageTest.resumeIfFailure":313,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":223,"org.easymock.tests2.StubTest.stubWithReturnValue":332,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":358,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":279,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":90,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":374,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":340,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":99,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":91,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":458,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":432,"org.easymock.tests.UsageExpectAndThrowTest.object":179,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":77,"org.easymock.tests2.DelegateToTest.testWrongClass":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":220,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests.UsageStrictMockTest.range":93,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":489,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":461,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":204,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":63,"org.easymock.tests2.CaptureTest.testCaptureNone":327,"org.easymock.tests.UsageUnorderedTest.message":124,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":504,"org.easymock.tests.UsageVerifyTest.twoReturns":115,"org.easymock.tests.UsageVarargTest.varargByteAccepted":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":475,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":200,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":416,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":82,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":508,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":167,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":214,"org.easymock.tests2.StubTest.stub":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndThrowTest.longType":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":102,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":410,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":213,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":255,"org.easymock.tests.LimitationsTest.mockNativeMethod":13,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":17,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests2.NameTest.nameForMocksControl":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.MockedExceptionTest.testMockedException":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":465,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":174,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":6,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":360,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":34,"org.easymock.tests.MockingTest.testNicePartialClassMocking":5,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests2.CaptureTest.testCaptureLast":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":26,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":2,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":277,"org.easymock.tests.MockingTest.testTwoMocks":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":177,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.samples.ExampleTest.removeNonExistingDocument":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests.UsageStrictMockTest.differentMethods":94,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":436,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":408,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":335,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":466,"org.easymock.tests.UsageExpectAndThrowTest.floatType":172,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":497,"org.easymock.tests.UsageVerifyTest.twoThrows":114,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.ExampleTest.voteAgainstRemoval":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":53,"org.easymock.tests.LimitationsTest.privateConstructor":426,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":164,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":298,"org.easymock.tests2.UsageTest.defaultResetToNice":310,"org.easymock.samples.ExampleTest.voteAgainstRemovals":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":250,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.UsageVarargTest.differentLength":130,"org.easymock.tests2.CallbackTest.callback":260,"org.easymock.tests2.UsageConstraintsTest.equals":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":483,"org.easymock.tests.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":166,"org.easymock.tests.UsageCallCountTest.tooFewCalls":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":206,"org.easymock.tests.UsageThrowableTest.throwCheckedException":161,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":492,"org.easymock.tests.MockingTest.testStrictClassMocking":375,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":23,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":294,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":318,"org.easymock.tests.ObjectMethodsTest.testHashCode":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":371,"org.easymock.tests2.NameTest.nameForNiceMock":321,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":337,"org.easymock.tests2.DependencyTest.testInterfaceMocking":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":354,"org.easymock.samples.ExampleTest.addDocument":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.DelegateToTest.testStubDelegate":257,"org.easymock.tests2.AnswerTest.stubAnswer":317,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":92,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":509,"org.easymock.tests.UsageVarargTest.varargLongAccepted":132,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":442,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests.UsageThrowableTest.noUpperLimit":158,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":268,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":487,"org.easymock.tests2.SerializationTest.test":266,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":407,"org.easymock.tests2.UsageConstraintsTest.testSame":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":240,"org.easymock.samples.SupportTest.addDocument":339,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":467,"org.easymock.tests.GenericTest.testPackageScope":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":441,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":378,"org.easymock.tests2.NameTest.nameForMock":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":105,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":500,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":484,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":180,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":89,"org.easymock.tests2.MockedExceptionTest.testRealException":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":398,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":165,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":218,"org.easymock.tests2.NameTest.nameForStrictMock":320,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":488,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":513,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":409,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":76,"org.easymock.tests.ErrorMessageTest.testGetters":514,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.UsageConstraintsTest.lessThan":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":438,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":471,"org.easymock.tests2.CaptureTest.testCaptureRightOne":84,"org.easymock.tests2.UsageConstraintsTest.testOr":72,"org.easymock.tests.UsageRangeTest.combination":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":189,"org.easymock.tests2.MockBuilderTest.testWithConstructor":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":468,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":14,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":106,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":411,"org.easymock.tests.UsageVarargTest.varargShortAccepted":131,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":201,"org.easymock.tests2.UsageConstraintsTest.cmpTo":269,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":459,"org.easymock.tests2.CompareToTest.testLessThan":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests2.CaptureTest.testCaptureFromStub":85,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":208,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":30,"org.easymock.tests.UsageTest.unexpectedCallWithArray":188,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":249,"org.easymock.tests2.CaptureTest.testCapture":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":145,"org.easymock.tests2.UsageConstraintsTest.constraints":67,"org.easymock.samples.ExampleTest.addAndChangeDocument":349,"org.easymock.tests.UsageStrictMockTest.testVerify":147,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":350,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":117,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":16,"org.easymock.tests.LimitationsTest.abstractClass":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":151,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":515,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":287}}]
