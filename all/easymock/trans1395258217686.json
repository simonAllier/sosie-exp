[{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[9,10,11],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,13,76,9,77,78,79,14,15,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,1,96,97,98,2,3,99,100,101,102,103,104,105,10,106,107,5,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,11,123,124,125,126,127,128,129,130,6,131,7,132,133,134,135,136,137,138,8,139,140,141,142,143,144,145,146,147,148,149,16,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,17,18,192,193,19,20,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,21,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,22,23,237,238,239,24,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,25,270,271,26,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[29,30,31,31,32,32,40,49,50,296,51,52,53,54,55,56,57,63,64,65,66,68,69,86,119,120,122,11,123,124,125,126,127,128,129,297,130,142,143,144,145,165,167,298,299,182,183,300,301,302,208,303,222,223,224,240,304,305,306,307,308,309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[50,55,56,57,70,73,13,76,9,14,15,80,81,0,10,120,127,129,146,149,16,150,153,157,158,161,190,17,18,19,20,194,213,214,215,230,22,23,237,24,312,313,268,25,271,26,272,314,27],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,54,58,59,60,62,63,64,65,66,67,68,69,70,71,72,74,75,76,9,79,80,82,83,84,85,86,87,88,89,90,91,92,93,337,338,339,340,94,95,0,1,96,97,98,2,3,99,100,101,102,103,104,105,10,106,107,5,108,109,111,112,113,114,115,116,117,118,119,121,122,11,123,125,126,128,130,6,131,7,132,134,135,136,137,138,8,141,142,143,144,145,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,195,196,197,198,199,201,202,208,341,342,209,210,211,212,217,218,343,222,223,224,225,226,227,228,229,231,232,233,234,235,236,22,23,237,344,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,305,266,269,270,272,273,345,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[48,58,346,75,13,14,15,148,16,150,347,348,349,350,191,17,18,19,20,236,22,23,24,351,352,25,270,26,272,353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[28,29,30,31,31,32,32,33,34,35,36,37,38,354,39,40,41,42,43,44,45,355,46,47,356,357,358,359,360,48,361,362,363,364,365,366,49,367,50,296,368,369,51,52,53,370,54,371,55,56,372,57,373,374,375,376,377,58,378,379,380,381,382,383,384,59,60,61,385,62,63,64,65,66,67,68,69,70,386,387,388,346,389,71,72,73,74,75,13,76,9,77,78,79,14,15,80,81,390,391,82,83,84,85,86,87,88,392,89,90,393,394,91,92,93,395,337,338,339,340,94,95,0,1,396,96,97,98,2,3,99,4,100,101,102,103,104,105,10,106,107,5,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,11,123,124,397,125,398,399,126,127,128,129,400,297,130,401,402,6,131,7,132,133,134,135,136,137,138,8,139,140,141,403,404,405,142,406,407,143,408,409,410,411,412,413,414,415,416,144,417,418,419,420,421,145,422,423,146,147,148,149,16,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,424,425,426,298,347,427,299,428,348,168,169,170,171,172,173,174,175,176,177,429,430,431,178,179,180,181,432,182,183,300,301,433,434,349,435,436,350,302,184,185,186,187,188,189,190,191,17,18,192,193,19,20,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,437,438,439,440,441,442,443,444,445,341,342,209,210,211,212,213,214,215,446,447,448,216,217,218,219,449,220,221,450,343,21,451,452,303,222,223,453,224,454,455,456,457,458,459,225,226,227,460,228,229,230,231,232,233,234,235,236,22,23,237,344,238,239,461,462,463,464,465,24,466,467,468,469,470,471,472,473,474,475,476,477,478,479,240,480,351,352,481,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,482,331,332,333,334,335,483,336,261,262,263,264,265,304,305,306,307,308,309,310,311,266,267,268,269,25,270,271,26,272,273,345,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[29,30,31,31,32,32,40,49,50,296,51,52,53,54,55,56,57,63,64,65,66,68,69,86,119,120,122,11,123,124,125,126,127,128,129,297,130,142,143,144,145,165,167,298,299,182,183,300,302,208,303,222,223,224,240,305,306,307,308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[385,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[10],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[72,84,85,86,87,184,185,186,187,188,189,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[75,13,14,15,484,485,486,487,191,17,18,19,20,25,488,489,490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[29,30,63,66,387,388,85,86,119,120,122,11,123,125,399,126,129,400,297,403,142,407,408,409,412,415,417,418,421,167,182,183,301,208,438,439,440,441,442,443,445,451,452,303,456,478,479,240,480,304,305,306,307,308,309,310,311],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[52,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[28,29,30,33,35,36,37,38,39,41,42,43,51,13,9,14,15,110,131,7,134,135,136,137,141,147,149,16,150,151,155,161,162,163,164,167,170,183,18,19,20,201,208,210,211,212,214,215,225,226,227,228,229,231,232,233,234,235,24,351,352,269,25,271,26,272,273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[34,59,61,385,62,220,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[125,398,399,126,127,128,129,400,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":325,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":41,"org.easymock.tests2.DelegateToTest.testReturnException":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":185,"org.easymock.tests.MockingTest.testPartialClassMocking":222,"org.easymock.tests.MockClassControlTest.testToString":306,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":395,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":241,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":168,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":299,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":455,"org.easymock.tests2.UsageConstraintsTest.testNull":97,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":122,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":311,"org.easymock.tests2.CaptureTest.testPrimitive":132,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":172,"org.easymock.tests.UsageTest.moreThanOneArgument":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":260,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":461,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.UsageVarargTest.varargIntAccepted":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":195,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":199,"org.easymock.tests.ReplayStateInvalidUsageTest.times":474,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests2.DependencyTest.testClassMocking":390,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":12,"org.easymock.tests2.AnswerTest.answer":90,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":118,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":156,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":238,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":465,"org.easymock.tests2.DelegateToTest.testDelegate":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":256,"org.easymock.tests.LimitationsTest.mockFinalMethod":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":177,"org.easymock.tests2.DependencyTest.testClassMockingSupport":391,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":351,"org.easymock.tests2.CaptureTest.testCapture1_2446744":133,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":397,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":116,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":468,"org.easymock.tests.UsageThrowableTest.throwError":200,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":427,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":313,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":423,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":469,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":196,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":412,"org.easymock.tests2.UsageTest.niceToStrict":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":242,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":51,"org.easymock.tests2.MockBuilderTest.testCreateMock":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":484,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":250,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":104,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":221,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":103,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":138,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":460,"org.easymock.tests2.EasyMockSupportClassTest.testAll":142,"org.easymock.tests.MockClassControlTest.testEquals":310,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":183,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":175,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":117,"org.easymock.tests.MockNameTest.defaultName":353,"org.easymock.tests2.UsageConstraintsTest.testMatches":105,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":466,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":264,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":235,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":176,"org.easymock.samples.BasicClassMockTest.testPrintContent":30,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":206,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":146,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":444,"org.easymock.tests2.UsageConstraintsTest.greaterThan":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":344,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":129,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":445,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":400,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":45,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":124,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":184,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":384,"org.easymock.tests2.CaptureTest.testCaptureFirst":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":155,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":81,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests2.CaptureTest.testCapture2_2446744":140,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":46,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":332,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":234,"org.easymock.tests.GenericTest.testBridgedEquals":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":214,"org.easymock.tests.UsageExpectAndReturnTest.longType":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":173,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":259,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":433,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":261,"org.easymock.tests.UsageCallCountTest.tooManyCalls":215,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":205,"org.easymock.tests.MockingTest.testNiceClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testClassMocking":452,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":342,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":86,"org.easymock.tests2.UsageConstraintsTest.testFind":96,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":89,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":229,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":436,"org.easymock.tests.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":462,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":429,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":490,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":401,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":220,"org.easymock.tests.MockClassControlTest.testHashCode":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.EasyMockSupportTest.testVerify":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":414,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":463,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":115,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":314,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":386,"org.easymock.tests.UsageVarargTest.varargCharAccepted":228,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":437,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageTest.openCallCountByLastCall":77,"org.easymock.tests.DefaultClassInstantiatorTest.object":438,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":446,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":349,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":127,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":308,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":145,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":307,"org.easymock.tests2.UsageTest.resumeIfFailure":80,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":187,"org.easymock.tests2.StubTest.stubWithReturnValue":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":370,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":167,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":482,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":486,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":253,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":483,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":393,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":431,"org.easymock.tests.UsageExpectAndThrowTest.object":251,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":61,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":275,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":346,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":53,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":403,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":488,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":459,"org.easymock.tests2.CaptureTest.testCaptureNone":137,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":312,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":233,"org.easymock.tests2.ThreadingTest.testThreadSafe":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":417,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":212,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":29,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":487,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":481,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":334,"org.easymock.tests2.UsageConstraintsTest.any":100,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":473,"org.easymock.tests2.StubTest.stub":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":186,"org.easymock.tests.UsageExpectAndThrowTest.longType":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":335,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":442,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":472,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.SerializationTest.testClass":165,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":295,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests2.NameTest.nameForMocksControl":340,"org.easymock.tests2.MockedExceptionTest.testMockedException":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":407,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":392,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":245,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":54,"org.easymock.tests.MockingTest.testNicePartialClassMocking":223,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":123,"org.easymock.tests2.CaptureTest.testCaptureLast":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":352,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":303,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":249,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":113,"org.easymock.samples.ExampleTest.removeNonExistingDocument":354,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":470,"org.easymock.tests.UsageStrictMockTest.differentMethods":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":440,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":355,"org.easymock.tests2.MockBuilderTest.testCreateMockString":57,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":408,"org.easymock.tests.UsageExpectAndThrowTest.floatType":243,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":402,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":144,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests.LimitationsTest.privateConstructor":479,"org.easymock.tests2.UsageConstraintsTest.testNotNull":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":207,"org.easymock.tests2.UsageTest.defaultResetToNice":79,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":327,"org.easymock.tests.UsageVarargTest.differentLength":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.CallbackTest.callback":70,"org.easymock.tests2.UsageConstraintsTest.equals":396,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":398,"org.easymock.tests.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":170,"org.easymock.tests.UsageCallCountTest.tooFewCalls":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests.UsageThrowableTest.throwCheckedException":204,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":489,"org.easymock.tests.MockingTest.testStrictClassMocking":451,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":267,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":67,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":93,"org.easymock.tests.ObjectMethodsTest.testHashCode":435,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":47,"org.easymock.tests2.NameTest.nameForNiceMock":339,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":60,"org.easymock.tests2.AnswerTest.stubAnswer":92,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":270,"org.easymock.tests.UsageVarargTest.varargLongAccepted":232,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":324,"org.easymock.tests.UsageExpectAndReturnTest.floatType":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":130,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":107,"org.easymock.tests.UsageThrowableTest.noUpperLimit":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":387,"org.easymock.tests2.SerializationTest.test":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":134,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":439,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":277,"org.easymock.samples.SupportTest.addDocument":42,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":409,"org.easymock.tests.GenericTest.testPackageScope":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":454,"org.easymock.tests2.NameTest.nameForMock":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests2.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":372,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":399,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":255,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":239,"org.easymock.tests2.MockedExceptionTest.testRealException":87,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":328,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":477,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":169,"org.easymock.tests2.NameTest.nameForStrictMock":338,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":388,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":441,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":50,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":413,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests2.UsageConstraintsTest.testOr":2,"org.easymock.tests.UsageRangeTest.combination":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":120,"org.easymock.tests.UsageTest.wrongArguments":18,"org.easymock.tests2.MockBuilderTest.testWithConstructor":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":410,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":316,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":443,"org.easymock.tests.UsageVarargTest.varargShortAccepted":231,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":213,"org.easymock.tests2.UsageConstraintsTest.cmpTo":101,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":318,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.CaptureTest.testCaptureFromStub":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":467,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":296,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":211,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":271,"org.easymock.samples.ExampleTest.addAndChangeDocument":39,"org.easymock.tests.UsageStrictMockTest.testVerify":345,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":28,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":174,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":197,"org.easymock.tests.LimitationsTest.abstractClass":478,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":198,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":226}}]
