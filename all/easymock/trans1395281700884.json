[{"position":"org.easymock.internal.MockBuilder:223","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,0,39,40,1,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,2,139,140,3,141,142,143,144,145,146,147,148,149,150,151,152,153,4,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[46,47,48,332],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[37,1,41,42,43,191,242,293,294,295,296,297,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[174,299],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[99,194,279,291,292,333,334],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,0,39,40,1,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,331,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,144,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,171,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[336,112,114,115,116,117,118,119,121,337,122,123,125],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[338,339,340,341,342,343,344,345,46,346],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[22,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,0,39,40,1,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,2,140,3,141,142,144,145,146,147,148,149,150,151,152,153,154,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,347,348,349,350,351,352,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,266,353,267,268,269,270,274,275,276,277,278,279,280,281,282,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,320,321,322,323,324,326,327,328,329,330,354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[355,356],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[19,20,357,358,359],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,360],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[23,26,27,28,32,33,34,35,50,54,55,58,70,84,95,98,99,100,130,139,143,144,145,149,156,158,180,182,183,186,187,188,194,361,362,271,272,273,274,276,278,279,280,291,292,304,325,363,364],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[25,97,99,100,365,366,367,368,369,370,181,194,371,372,362,204,205,277,279,280,284,287,288,289,290,291,292],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[373,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[194,333],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[140,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,376,12,13,14,15,16,17,18,19,19,20,20,21,22,338,377,23,24,25,26,27,28,29,30,31,32,33,34,35,378,36,37,379,380,381,38,382,383,0,384,385,386,387,388,389,390,391,392,39,393,394,395,396,397,40,398,399,1,41,42,43,44,400,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,401,72,73,74,75,76,77,331,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,402,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,403,404,405,406,407,131,408,409,410,411,412,413,132,133,134,135,136,137,138,2,357,139,414,415,416,140,3,141,346,142,417,143,144,358,145,418,419,146,147,420,421,422,423,148,149,150,151,152,153,4,424,154,359,425,155,156,157,158,426,5,427,428,429,430,431,159,432,433,434,435,436,437,160,161,162,163,164,165,438,439,166,440,167,168,169,170,441,171,442,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,443,444,195,196,197,445,198,446,447,448,199,200,373,201,202,203,374,204,205,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,206,466,467,468,469,470,207,471,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,472,347,473,348,349,474,350,475,476,351,477,352,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,478,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,479,480,481,482,483,484,263,264,265,266,353,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,485,486,355,487,488,489,356,490,491,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,492,323,324,325,326,327,328,329,330,493,494,495,496,497,498,499,354,500,501,502,503,504,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[18,46,2,506,139,414,140,3,141,142,143,144,375,145,4,203,479,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[15,21,384,388,393,52,55,57,402,102,103,104,105,403,404,405,407,131,408,409,410,413,132,149,155,158,5,427,428,429,431,159,432,433,434,437,347,481,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[6,8,9,11,14,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[507,508,509,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":28,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":15,"org.easymock.tests2.DelegateToTest.testReturnException":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":294,"org.easymock.tests.MockingTest.testPartialClassMocking":196,"org.easymock.tests.MockClassControlTest.testToString":500,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":402,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":243,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":189,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":169,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":482,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":447,"org.easymock.tests2.UsageConstraintsTest.testNull":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":505,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":58,"org.easymock.tests2.CaptureTest.testPrimitive":115,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":193,"org.easymock.tests.UsageTest.moreThanOneArgument":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":262,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":238,"org.easymock.tests.UsageTest.argumentsOrdered":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":315,"org.easymock.tests.UsageVarargTest.varargIntAccepted":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":303,"org.easymock.tests.ReplayStateInvalidUsageTest.times":476,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests2.DependencyTest.testClassMocking":418,"org.easymock.tests2.AnswerTest.answer":106,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":129,"org.easymock.tests2.CaptureTest.testAnd":112,"org.easymock.tests2.UsageTest.strictResetToDefault":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":306,"org.easymock.tests2.DelegateToTest.testDelegate":67,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":258,"org.easymock.tests.LimitationsTest.mockFinalMethod":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":176,"org.easymock.tests2.DependencyTest.testClassMockingSupport":419,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":204,"org.easymock.tests2.CaptureTest.testCapture1_2446744":116,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":127,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":473,"org.easymock.tests.UsageThrowableTest.throwError":228,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":481,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":399,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.MockingTest.testInterfaceMocking":445,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":300,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":312,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":388,"org.easymock.tests2.UsageTest.niceToStrict":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":140,"org.easymock.tests2.MockBuilderTest.testCreateMock":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":252,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":366,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":54,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":167,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":508,"org.easymock.tests.UsageOverloadedMethodTest.overloading":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":82,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":286,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":219,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":81,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":121,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":492,"org.easymock.tests.MockClassControlTest.testEquals":504,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":174,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":128,"org.easymock.tests2.CaptureTest.testCaptureAll":113,"org.easymock.tests.MockNameTest.defaultName":478,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":472,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":239,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":330,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":175,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":234,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":298,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":490,"org.easymock.tests2.UsageConstraintsTest.greaterThan":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":158,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":491,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":426,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":161,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":165,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":51,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":293,"org.easymock.tests2.CaptureTest.testCaptureFirst":125,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":52,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":215,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":163,"org.easymock.tests2.CaptureTest.testCapture2_2446744":124,"org.easymock.tests2.UsageTest.moreThanOneArgument":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":467,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":144,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":329,"org.easymock.tests.GenericTest.testBridgedEquals":374,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":509,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":272,"org.easymock.tests.UsageExpectAndReturnTest.longType":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":172,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":261,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":375,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":90,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":309,"org.easymock.tests.UsageCallCountTest.tooManyCalls":273,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":233,"org.easymock.tests.MockingTest.testNiceClassMocking":448,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":133,"org.easymock.tests.MockingTest.testClassMocking":444,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests2.UsageConstraintsTest.testContains":80,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":353,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":72,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":179,"org.easymock.tests.MockTypeTest.fromEasyMockClass":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":45,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests.UsageExpectAndReturnTest.object":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":57,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":341,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":496,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":510,"org.easymock.tests.UsageTest.exactCallCountByLastCall":188,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":338,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":224,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":285,"org.easymock.tests.MockClassControlTest.testHashCode":503,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests2.EasyMockSupportTest.testVerify":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":390,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":126,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":361,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":378,"org.easymock.tests.UsageVarargTest.varargCharAccepted":323,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":485,"org.easymock.tests2.CaptureTest.testCaptureMultiple":336,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":29,"org.easymock.tests.DefaultClassInstantiatorTest.object":486,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":60,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":263,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":494,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":502,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":249,"org.easymock.tests.CapturesMatcherTest.test":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":308,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":368,"org.easymock.tests2.UsageTest.resumeIfFailure":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":296,"org.easymock.tests2.StubTest.stubWithReturnValue":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":346,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":217,"org.easymock.tests2.SerializationTest.testAllMockedMethod":48,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":206,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":373,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":255,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":332,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":207,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":107,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":442,"org.easymock.tests.UsageExpectAndThrowTest.object":253,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":88,"org.easymock.tests2.DelegateToTest.testWrongClass":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":200,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":477,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":168,"org.easymock.tests2.CaptureTest.testCaptureNone":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":313,"org.easymock.tests.UsageUnorderedTest.message":194,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":363,"org.easymock.tests.UsageVerifyTest.twoReturns":292,"org.easymock.tests.UsageVarargTest.varargByteAccepted":328,"org.easymock.tests2.ThreadingTest.testThreadSafe":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":270,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":497,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests2.CaptureTest.testCapture_2617107":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":192,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":475,"org.easymock.tests2.StubTest.stub":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndThrowTest.longType":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":295,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":489,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":98,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.SerializationTest.testClass":46,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests2.NameTest.nameForMocksControl":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.MockedExceptionTest.testMockedException":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":383,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":400,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":198,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":247,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":197,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests2.CaptureTest.testCaptureLast":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":339,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":138,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":89,"org.easymock.tests.MockingTest.testTwoMocks":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":251,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":93,"org.easymock.samples.ExampleTest.removeNonExistingDocument":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests.UsageStrictMockTest.differentMethods":280,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":487,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":162,"org.easymock.tests2.ConstraintsToStringTest.andToString":369,"org.easymock.tests2.MockBuilderTest.testCreateMockString":145,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":245,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":109,"org.easymock.tests.UsageVerifyTest.twoThrows":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":377,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":39,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":157,"org.easymock.tests.LimitationsTest.privateConstructor":439,"org.easymock.tests2.UsageConstraintsTest.testNotNull":92,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":235,"org.easymock.tests2.UsageTest.defaultResetToNice":31,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":223,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.UsageVarargTest.differentLength":325,"org.easymock.tests2.CallbackTest.callback":130,"org.easymock.tests2.UsageConstraintsTest.equals":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":359,"org.easymock.tests.UsageTest.openCallCountByLastCall":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":170,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":335,"org.easymock.tests.UsageThrowableTest.throwCheckedException":232,"org.easymock.tests.MockingTest.testStrictClassMocking":443,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":371,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":137,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":134,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":136,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":111,"org.easymock.tests.ObjectMethodsTest.testHashCode":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":343,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":164,"org.easymock.tests2.NameTest.nameForNiceMock":104,"org.easymock.tests2.DependencyTest.testInterfaceMocking":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":342,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.DelegateToTest.testStubDelegate":64,"org.easymock.tests2.AnswerTest.stubAnswer":110,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":277,"org.easymock.tests.UsageVarargTest.varargLongAccepted":327,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.ConstraintsToStringTest.orToString":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":229,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":420,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":117,"org.easymock.tests2.SerializationTest.test":47,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":355,"org.easymock.tests2.UsageConstraintsTest.testSame":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":209,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":385,"org.easymock.tests.GenericTest.testPackageScope":201,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":446,"org.easymock.tests2.NameTest.nameForMock":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":220,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":358,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":425,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":257,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":493,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":307,"org.easymock.tests2.MockedExceptionTest.testRealException":43,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":190,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":352,"org.easymock.tests2.NameTest.nameForStrictMock":103,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":507,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":488,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":87,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":333,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":139,"org.easymock.tests2.UsageStrictMockTest.range":99,"org.easymock.tests2.UsageConstraintsTest.lessThan":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":389,"org.easymock.tests2.CaptureTest.testCaptureRightOne":122,"org.easymock.tests2.UsageConstraintsTest.testOr":75,"org.easymock.tests.UsageRangeTest.combination":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":149,"org.easymock.tests.UsageTest.wrongArguments":183,"org.easymock.tests2.MockBuilderTest.testWithConstructor":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":386,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":221,"org.easymock.tests.UsageVarargTest.varargShortAccepted":326,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":356,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":271,"org.easymock.tests2.UsageConstraintsTest.cmpTo":79,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":30,"org.easymock.tests2.CaptureTest.testCaptureFromStub":123,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":347,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":414,"org.easymock.tests.UsageTest.unexpectedCallWithArray":182,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":222,"org.easymock.tests2.CaptureTest.testCapture":337,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests2.ConstraintsToStringTest.notToString":367,"org.easymock.tests.UsageStrictMockTest.testVerify":282,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":21,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":173,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":301,"org.easymock.tests.LimitationsTest.abstractClass":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":214,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":55,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":321,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":334}}]
