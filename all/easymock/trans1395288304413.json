[{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[13,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[17,18],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[30,31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[33,21,22,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[36,37,12,38,39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[6,7,8,9,10,11],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,46,6,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,34,174,175,176,177,178,179,180,181,182,183,184,9,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,30,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,18,256,257,5,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,14,15,16,4,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:557","failures":[40,41,42,43,44,45,46,48,49,52,328,329,330,33,21,22,331,23,24,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,87,94,95,96,97,98,99,100,101,102,103,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,155,332,157,158,159,160,161,162,163,169,333,334,185,187,188,191,192,335,336,337,338,339,340,341,342,343,201,202,203,204,205,344,206,207,208,209,211,213,0,0,1,1,345,214,215,216,218,220,221,30,224,225,227,228,346,347,231,233,348,234,235,236,237,238,239,241,243,244,245,246,247,248,249,250,251,252,253,254,255,18,256,257,5,258,259,260,261,262,263,264,265,267,268,269,270,271,349,350,272,273,274,279,280,281,282,283,284,285,286,287,288,289,290,351,352,291,292,293,353,294,14,15,4,354,355,356,357,358,359,360,31,361,362,363,364,365,366,367,368,369,301,303,304,306,307,309,310,311,370,371,312,313,314,315,317,318,321,322,323,324,325,326,327],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[251,17,263,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[372],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[246,261,267,39],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[373,374,375,332,344,0,0,1,1,226,227,376,377,228,346,347,378,379,231,232,240,380,243,244,381,279,14,4,382,366,367,368],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[173,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[6,47,48,49,50,51,52,7,8,331,9,185,10,11,214],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[372,383],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[105,207,291,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[384,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[373,374,84,385,96,97,98,155,156,332,163,194,344,0,0,1,1,386,387,226,388,227,376,228,229,346,347,230,231,389,232,234,235,237,238,239,240,241,242,243,244,245,281,390,391,14,16,4,365,366,367,368,309,310,311,370,312,313],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[40,41,42,43,44,94,114,115,118,185,191,192,201,202,203,204,205,0,0,1,1,246,247,250,251,252,253,257,258,259,261,262,263,268,269,270,301,307,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[40,41,42,43,44,45,46,6,47,48,49,50,51,52,328,329,330,373,392,393,394,395,374,396,397,33,21,22,331,23,24,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,398,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,399,94,95,400,401,385,96,97,402,98,403,404,405,99,100,101,102,103,104,105,106,406,107,108,109,110,111,407,112,408,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,142,143,144,145,146,147,148,149,150,151,152,153,154,375,155,156,332,431,157,158,159,160,161,162,432,433,163,434,164,165,166,167,168,169,170,171,172,173,34,174,175,435,436,437,438,439,440,441,442,443,444,445,446,447,35,448,449,384,450,451,452,453,454,333,455,456,457,458,459,334,460,176,177,178,179,461,180,181,182,462,463,183,184,9,185,186,187,188,189,190,191,192,335,336,337,338,339,340,341,342,343,193,194,195,196,197,198,199,200,201,202,203,204,205,464,344,465,206,207,208,209,210,211,212,213,0,1,386,387,466,345,214,215,216,217,218,219,220,221,30,222,223,224,225,226,227,376,377,228,229,346,347,378,379,230,231,232,467,468,233,348,234,235,236,237,238,239,240,469,241,380,470,242,243,244,245,471,381,246,247,248,249,472,250,251,252,253,254,255,17,18,256,257,5,258,259,260,261,262,263,264,265,266,267,268,269,270,473,474,475,476,477,19,271,349,350,272,273,274,275,276,277,278,279,280,281,282,283,478,284,285,20,286,287,288,289,290,479,480,481,482,483,351,484,485,486,487,488,489,352,291,292,293,353,294,14,15,16,4,382,354,355,356,357,358,359,360,31,361,362,363,364,490,491,295,296,297,298,492,493,494,495,496,497,498,499,500,365,501,502,366,503,504,505,506,507,508,509,510,511,367,512,513,514,515,516,368,517,518,519,520,521,522,523,369,524,525,526,527,528,529,299,300,301,302,303,304,305,306,307,308,309,310,311,370,530,371,312,313,531,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[95,116,157,158,159,160,161,162,279,280,281,282],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,46,6,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,105,106,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,176,177,178,179,183,184,9,185,186,187,188,189,191,192,201,202,203,204,205,464,344,465,206,207,208,209,210,211,213,0,1,386,387,466,345,214,215,216,217,218,219,220,221,30,222,223,224,225,226,227,228,229,346,347,230,231,232,233,348,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,18,256,257,5,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,351,291,292,293,294,14,15,16,4,354,355,356,357,358,359,360,31,361,362,363,364,490,365,366,367,368,369,299,300,301,302,303,304,305,306,307,309,310,311,370,371,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[375,155,156,332,431],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[40,41,42,43,44,45,46,6,47,48,49,50,51,52,329,394,395,396,397,33,21,22,331,23,24,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,399,94,95,385,99,100,101,102,103,104,105,106,406,107,108,109,110,111,407,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,161,162,333,334,176,177,178,179,461,180,181,182,462,183,184,9,185,186,187,188,189,190,191,192,335,336,337,338,339,340,341,342,343,201,202,203,204,205,464,465,206,207,208,209,210,211,213,466,345,214,215,216,217,218,219,220,221,30,222,223,224,225,233,348,236,246,247,248,249,250,251,252,253,254,255,17,18,256,257,5,258,259,260,261,262,263,264,265,266,267,268,269,270,271,349,350,272,273,274,275,276,277,278,279,280,281,282,532,533,283,284,285,286,287,288,289,290,351,484,352,291,292,293,353,294,14,15,354,355,356,357,358,359,360,31,361,362,363,364,490,295,296,297,298,369,524,299,300,301,302,303,304,305,306,307,371,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[13,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[40,41,42,43,44,45,46,6,47,48,49,50,51,52,328,329,330,394,395,396,397,33,21,22,331,23,24,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,398,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,399,94,95,402,403,404,99,100,101,102,103,104,105,106,406,107,108,109,110,111,407,112,408,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,34,174,441,442,443,444,445,446,447,35,448,449,384,450,451,452,453,454,333,455,456,457,458,459,334,460,176,177,178,179,461,180,181,182,462,463,183,184,9,185,186,187,188,189,190,191,192,335,336,337,338,339,340,341,342,343,201,202,203,204,205,464,465,206,207,208,209,210,211,212,213,466,345,214,215,216,217,218,219,220,221,30,222,223,224,225,233,348,236,246,247,248,249,472,250,251,252,253,254,255,17,18,256,257,5,258,259,260,261,262,263,264,265,266,267,268,269,270,271,349,350,272,273,274,275,276,277,278,279,280,281,282,283,478,284,285,286,287,288,289,290,479,480,481,482,483,351,484,485,486,487,488,489,352,291,292,293,353,294,15,354,355,356,357,358,359,360,31,361,362,363,364,490,491,295,296,297,298,496,497,519,520,521,522,523,369,524,525,526,527,528,529,299,300,301,302,303,304,305,306,307,308,371,531,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":249,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.UsageTest.argumentsOrdered":223,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":384,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":219,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":465,"org.easymock.tests2.DelegateToTest.testReturnException":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":158,"org.easymock.tests.MockingTest.testPartialClassMocking":96,"org.easymock.tests.MockClassControlTest.testToString":195,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":491,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":506,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":53,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":366,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":348,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":430,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":114,"org.easymock.tests2.UsageTest.wrongArguments":217,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":529,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":178,"org.easymock.samples.ExampleTest.answerVsDelegate":207,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":374,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":404,"org.easymock.tests2.UsageConstraintsTest.testNull":251,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":237,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":362,"org.easymock.tests2.CaptureTest.testPrimitive":317,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":118,"org.easymock.tests.UsageTest.moreThanOneArgument":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":72,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":42,"org.easymock.tests.UsageTest.argumentsOrdered":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":339,"org.easymock.tests.UsageVarargTest.varargIntAccepted":75,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":533,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":201,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":488,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":205,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":414,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":29,"org.easymock.tests.ReplayStateInvalidUsageTest.times":172,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":369,"org.easymock.tests2.DependencyTest.testClassMocking":467,"org.easymock.tests2.AnswerTest.answer":271,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":455,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":278,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":393,"org.easymock.tests2.CaptureTest.testAnd":314,"org.easymock.tests2.UsageTest.strictResetToDefault":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":358,"org.easymock.tests2.DelegateToTest.testDelegate":294,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":343,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":68,"org.easymock.tests.LimitationsTest.mockFinalMethod":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":154,"org.easymock.tests2.DependencyTest.testClassMockingSupport":468,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":407,"org.easymock.tests2.CaptureTest.testCapture1_2446744":318,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":276,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":166,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":489,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":44,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":518,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":417,"org.easymock.samples.PartialClassMockTest.testGetArea":344,"org.easymock.tests.MockingTest.testInterfaceMocking":402,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":167,"org.easymock.tests2.CompareToTest.testLessOrEqual":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":507,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":463,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":54,"org.easymock.tests2.UsageTest.niceToStrict":218,"org.easymock.tests2.ThreadingTest.testChangeDefault":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":228,"org.easymock.tests2.MockBuilderTest.testCreateMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":514,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":526,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":62,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":176,"org.easymock.tests.UsageOverloadedMethodTest.overloading":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":511,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":106,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":109,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":5,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":372,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":323,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":398,"org.easymock.tests.MockClassControlTest.testEquals":199,"org.easymock.tests2.EasyMockSupportClassTest.testAll":365,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":70,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":390,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":277,"org.easymock.tests2.CaptureTest.testCaptureAll":315,"org.easymock.tests.MockNameTest.defaultName":399,"org.easymock.tests2.UsageConstraintsTest.testMatches":259,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":43,"org.easymock.samples.ExampleTest.voteForRemovals":211,"org.easymock.tests.UsageVarargTest.allKinds":83,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":119,"org.easymock.samples.BasicClassMockTest.testPrintContent":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":153,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":148,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":162,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":353,"org.easymock.tests2.UsageConstraintsTest.greaterThan":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":501,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":100,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":245,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":418,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":440,"org.easymock.samples.ExampleTest.voteForRemoval":208,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":471,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":286,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":240,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":410,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":84,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":214,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":356,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":499,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":157,"org.easymock.tests2.CaptureTest.testCaptureFirst":327,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":357,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":225,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":216,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":288,"org.easymock.tests2.CaptureTest.testCapture2_2446744":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":456,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":231,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":82,"org.easymock.tests.GenericTest.testBridgedEquals":431,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":92,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":150,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":354,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":389,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":71,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":266,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":27,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":515,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":528,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":147,"org.easymock.tests.MockingTest.testNiceClassMocking":405,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":310,"org.easymock.tests.MockingTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":388,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":86,"org.easymock.tests2.UsageConstraintsTest.testContains":257,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":281,"org.easymock.tests2.UsageConstraintsTest.testFind":250,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":111,"org.easymock.tests.MockTypeTest.fromEasyMockClass":394,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":284,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":527,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":361,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":77,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":182,"org.easymock.tests.UsageTest.exactCallCountByLastCall":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":328,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":382,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":73,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":105,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":480,"org.easymock.tests.MockClassControlTest.testHashCode":198,"org.easymock.tests2.EasyMockSupportTest.testVerify":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":509,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":28,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":23,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":275,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":308,"org.easymock.tests.UsageVarargTest.varargCharAccepted":76,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":532,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":460,"org.easymock.tests2.UsageTest.openCallCountByLastCall":220,"org.easymock.tests.DefaultClassInstantiatorTest.object":175,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":331,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":510,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":522,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":479,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":416,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":59,"org.easymock.tests.CapturesMatcherTest.test":25,"org.easymock.tests.ReplayStateInvalidCallsTest.times":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":33,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":423,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":368,"org.easymock.tests2.UsageTest.resumeIfFailure":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":160,"org.easymock.tests2.StubTest.stubWithReturnValue":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":267,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":333,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":11,"org.easymock.samples.SupportTest.voteForRemovals":345,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":375,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":65,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":334,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":349,"org.easymock.tests.UsageExpectAndThrowTest.object":63,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":330,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":264,"org.easymock.tests2.DelegateToTest.testWrongClass":293,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":420,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.tests.UsageStrictMockTest.range":187,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":496,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":31,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":498,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":177,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":7,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":412,"org.easymock.tests2.CaptureTest.testCaptureNone":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":337,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":474,"org.easymock.tests.UsageUnorderedTest.message":113,"org.easymock.tests.UsageVerifyTest.twoReturns":121,"org.easymock.tests.UsageVarargTest.varargByteAccepted":81,"org.easymock.tests2.ThreadingTest.testThreadSafe":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":512,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":90,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":462,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":386,"org.easymock.tests2.CaptureTest.testCapture_2617107":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":117,"org.easymock.tests2.UsageConstraintsTest.any":18,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":171,"org.easymock.tests2.StubTest.stub":306,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":159,"org.easymock.tests.UsageExpectAndThrowTest.longType":56,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":438,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":170,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":351,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":332,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":521,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":428,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":475,"org.easymock.tests2.NameTest.nameForMocksControl":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":523,"org.easymock.tests2.MockedExceptionTest.testMockedException":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":502,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":49,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":478,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":57,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":234,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":347,"org.easymock.tests.MockingTest.testNicePartialClassMocking":97,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":519,"org.easymock.tests2.CompareToTest.testCompareEqual":12,"org.easymock.tests2.CaptureTest.testCaptureLast":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":112,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":427,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":254,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":313,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":265,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":424,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":531,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":61,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":222,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":269,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":19,"org.easymock.samples.ExampleTest.removeNonExistingDocument":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":525,"org.easymock.tests.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":168,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":481,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":477,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":436,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":287,"org.easymock.tests2.MockBuilderTest.testCreateMockString":232,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":503,"org.easymock.tests.UsageExpectAndThrowTest.floatType":55,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":500,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":272,"org.easymock.tests.UsageVerifyTest.twoThrows":120,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":367,"org.easymock.samples.ExampleTest.voteAgainstRemoval":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":450,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":244,"org.easymock.tests.LimitationsTest.privateConstructor":433,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":3,"org.easymock.tests2.UsageConstraintsTest.testNotNull":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":149,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":279,"org.easymock.tests2.UsageTest.defaultResetToNice":30,"org.easymock.samples.ExampleTest.voteAgainstRemovals":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":520,"org.easymock.tests.UsageVarargTest.differentLength":78,"org.easymock.tests2.CallbackTest.callback":290,"org.easymock.tests2.UsageConstraintsTest.equals":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":380,"org.easymock.tests.UsageTest.openCallCountByLastCall":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":116,"org.easymock.tests.UsageCallCountTest.tooFewCalls":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":179,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":476,"org.easymock.tests.UsageThrowableTest.throwCheckedException":146,"org.easymock.tests.MockingTest.testStrictClassMocking":400,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":95,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":524,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":371,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":274,"org.easymock.tests.ObjectMethodsTest.testHashCode":181,"org.easymock.tests2.CompareToTest.testGreateOrEqual":38,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":426,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":289,"org.easymock.tests2.NameTest.nameForNiceMock":297,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":421,"org.easymock.tests2.DependencyTest.testInterfaceMocking":233,"org.easymock.samples.ExampleTest.addDocument":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":517,"org.easymock.tests2.DelegateToTest.testStubDelegate":292,"org.easymock.tests2.AnswerTest.stubAnswer":273,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":185,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":378,"org.easymock.tests.UsageVarargTest.varargLongAccepted":80,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":487,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":262,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":247,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":492,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":319,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":383,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.tests2.UsageConstraintsTest.testSame":252,"org.easymock.samples.SupportTest.addDocument":466,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":530,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":411,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":504,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":486,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":403,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":409,"org.easymock.tests2.NameTest.nameForMock":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests2.UsageStrictMockTest.differentMethods":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":470,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":67,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":102,"org.easymock.tests2.MockedExceptionTest.testRealException":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":452,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":115,"org.easymock.tests2.NameTest.nameForStrictMock":296,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":377,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":238,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":437,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":263,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":227,"org.easymock.tests2.UsageStrictMockTest.range":303,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":415,"org.easymock.tests2.UsageConstraintsTest.lessThan":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":508,"org.easymock.tests2.CaptureTest.testCaptureRightOne":324,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":473,"org.easymock.tests2.UsageConstraintsTest.testOr":253,"org.easymock.tests.UsageRangeTest.combination":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":235,"org.easymock.tests.UsageTest.wrongArguments":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":505,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":439,"org.easymock.tests.UsageVarargTest.varargShortAccepted":79,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":91,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":429,"org.easymock.tests2.UsageConstraintsTest.cmpTo":256,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":350,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":419,"org.easymock.tests2.CompareToTest.testLessThan":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":221,"org.easymock.tests2.CaptureTest.testCaptureFromStub":325,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":165,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":376,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":425,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":89,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests2.CaptureTest.testCapture":26,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.UsageConstraintsTest.constraints":248,"org.easymock.samples.ExampleTest.addAndChangeDocument":213,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":464,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":151,"org.easymock.tests2.CompareToTest.testGreateThan":37,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":320,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":203,"org.easymock.tests.LimitationsTest.abstractClass":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":204,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":360}}]
