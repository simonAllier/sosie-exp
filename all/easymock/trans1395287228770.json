[{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:50","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,48,149,150,151,152,153,154,155,156,157,158,0,1,2,3,159,160,161,162,163,164,165,166,167,168,169,170,4,171,172,173,174,175,176,5,49,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,6,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,50,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,27,333,334,335,336,337,338,339,340,341,342,343,28,344,345,346,347,29,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,30,374,31,375,32,33,34,35,36,37,376,377,378,379,380,381,382,38,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,39,40,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,41,42,43,44,45,46,452,47,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[270,271,272,477],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[478],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,479,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,480,112,113,481,114,115,116,117,482,118,119,120,121,122,483,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,48,149,150,151,152,153,154,155,156,157,158,0,1,2,3,159,160,161,162,163,164,165,166,167,168,169,170,4,171,172,173,174,175,176,5,49,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,484,485,486,206,207,208,209,6,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,273,274,275,487,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,50,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,27,333,334,335,336,337,338,339,340,341,342,343,28,344,345,346,347,29,348,349,350,351,352,353,354,355,356,357,358,359,360,361,488,362,363,364,365,366,367,489,368,369,370,371,372,373,30,374,31,375,32,33,34,35,36,37,376,377,378,379,380,381,382,38,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,39,40,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,41,42,43,44,45,46,452,47,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[257],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[376,380],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[84,89,99,104],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[124,126,127,128,129,130,131,133,491,134,135,137],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[492,493,494,495,345,467],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,479,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,480,112,113,481,114,115,116,117,482,118,119,120,121,122,483,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,48,149,150,151,152,153,154,155,156,157,158,0,1,2,3,159,160,161,162,163,164,165,166,167,168,169,170,4,171,172,173,174,175,176,5,49,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,484,485,486,206,207,208,209,6,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,273,274,275,487,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,50,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,27,333,334,335,336,337,338,339,340,341,342,343,28,344,345,346,347,29,348,349,350,351,352,353,354,355,356,357,358,359,360,361,488,362,363,364,365,366,367,489,368,369,370,371,372,373,30,374,31,375,32,33,34,35,36,37,376,377,378,379,380,381,382,38,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,39,40,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,41,42,43,44,45,46,452,47,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[51,111,496,112,113,115,116,117,118,121,122,490,497,123,144,270,322,327,379],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[51,496,112,115,117,118,122,497,123,144,149,150,498,499,270,322,327,420],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,500,501,502,503,504,505,138,139,140,141,142,143,144,145,146,147,148,48,149,150,151,152,153,154,506,155,156,157,158,0,1,2,3,159,160,161,162,163,164,165,166,167,168,169,170,4,171,172,173,174,175,176,5,49,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,484,485,206,207,208,209,6,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,50,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,27,333,334,335,336,337,338,339,340,341,342,343,28,344,345,346,347,29,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,30,374,31,375,32,33,34,35,36,37,376,377,378,379,380,381,382,38,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,39,40,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,41,42,43,44,45,46,452,47,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":81,"org.easymock.tests2.UsageTest.argumentsOrdered":178,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":393,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":62,"org.easymock.tests2.DelegateToTest.testReturnException":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":42,"org.easymock.tests.MockingTest.testPartialClassMocking":50,"org.easymock.tests.MockClassControlTest.testToString":421,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":70,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":238,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":184,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":528,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":431,"org.easymock.tests2.UsageTest.wrongArguments":173,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":436,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":327,"org.easymock.tests2.UsageConstraintsTest.testNull":84,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":141,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":228,"org.easymock.tests2.CaptureTest.testPrimitive":127,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":433,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":26,"org.easymock.tests.UsageTest.moreThanOneArgument":344,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.UsageTest.argumentsOrdered":349,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":169,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":442,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":512,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":192,"org.easymock.tests.ReplayStateInvalidUsageTest.times":313,"org.easymock.tests2.DependencyTest.testClassMocking":181,"org.easymock.tests2.AnswerTest.answer":257,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":400,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":110,"org.easymock.tests2.CaptureTest.testAnd":124,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":324,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":48,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":342,"org.easymock.tests2.DelegateToTest.testDelegate":204,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":511,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":22,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":361,"org.easymock.tests2.DependencyTest.testClassMockingSupport":182,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":336,"org.easymock.tests2.CaptureTest.testCapture1_2446744":128,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":108,"org.easymock.tests.UsageThrowableTest.throwError":31,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":307,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":326,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":487,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":256,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":515,"org.easymock.samples.PartialClassMockTest.testGetArea":51,"org.easymock.tests.MockingTest.testInterfaceMocking":300,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":475,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":451,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":243,"org.easymock.tests2.ThreadingTest.testChangeDefault":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":251,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":195,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":224,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":434,"org.easymock.tests.UsageOverloadedMethodTest.overloading":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":253,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":27,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":381,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":133,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":410,"org.easymock.tests.MockClassControlTest.testEquals":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":235,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":24,"org.easymock.tests2.CaptureTest.testCaptureAll":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":359,"org.easymock.tests.MockNameTest.defaultName":374,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":320,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests.UsageVarargTest.allKinds":418,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":452,"org.easymock.samples.BasicClassMockTest.testPrintContent":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":360,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":36,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":46,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":203,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":489,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":151,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":516,"org.easymock.samples.ExampleTest.voteForRemoval":56,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":368,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":155,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":152,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":490,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":328,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":144,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":508,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":351,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":221,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":41,"org.easymock.tests2.CaptureTest.testCaptureFirst":137,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":222,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":157,"org.easymock.tests2.CaptureTest.testCapture2_2446744":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":401,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":122,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":417,"org.easymock.tests.GenericTest.testBridgedEquals":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":461,"org.easymock.tests.UsageExpectAndReturnTest.longType":279,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":357,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":25,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":462,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":211,"org.easymock.tests.MockingTest.testNiceClassMocking":304,"org.easymock.tests.MockingTest.testClassMocking":297,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":496,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":455,"org.easymock.tests2.UsageConstraintsTest.testContains":92,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":83,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":38,"org.easymock.tests.MockTypeTest.fromEasyMockClass":325,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":465,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":77,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":227,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":412,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":449,"org.easymock.tests.UsageTest.exactCallCountByLastCall":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":69,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":407,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests.MockClassControlTest.testHashCode":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":160,"org.easymock.tests2.EasyMockSupportTest.testVerify":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":245,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":107,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":186,"org.easymock.tests.UsageVarargTest.varargCharAccepted":411,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":488,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":406,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":230,"org.easymock.tests.DefaultClassInstantiatorTest.object":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":370,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":447,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":190,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":159,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":514,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.ReplayStateInvalidCallsTest.times":520,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":273,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":521,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":254,"org.easymock.tests2.UsageTest.resumeIfFailure":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":44,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":482,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":272,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":399,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":67,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":19,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":477,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":405,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":258,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":445,"org.easymock.tests.UsageExpectAndThrowTest.object":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DelegateToTest.testWrongClass":202,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":518,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":463,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":464,"org.easymock.tests.UsageStrictMockTest.range":470,"org.easymock.samples.ConstructorCalledMockTest.testTax":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":207,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":232,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":315,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":435,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":510,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":476,"org.easymock.tests2.CaptureTest.testCaptureNone":132,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":501,"org.easymock.tests.UsageUnorderedTest.message":369,"org.easymock.tests.UsageVerifyTest.twoReturns":453,"org.easymock.tests.UsageVarargTest.varargByteAccepted":416,"org.easymock.tests2.ThreadingTest.testThreadSafe":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":249,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":459,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":450,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":63,"org.easymock.tests2.CaptureTest.testCapture_2617107":126,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":40,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests2.StubTest.stub":209,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":43,"org.easymock.tests.UsageExpectAndThrowTest.longType":10,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":311,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests2.SerializationTest.testClass":270,"org.easymock.tests.LimitationsTest.mockNativeMethod":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":295,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":379,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":189,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":526,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":502,"org.easymock.tests2.NameTest.nameForMocksControl":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":191,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":237,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":11,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":76,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":301,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":299,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":143,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":187,"org.easymock.tests2.CaptureTest.testCaptureLast":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":337,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":525,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":217,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.MockingTest.testTwoMocks":298,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":522,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":505,"org.easymock.samples.ExampleTest.removeNonExistingDocument":60,"org.easymock.tests.UsageStrictMockTest.differentMethods":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":194,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":161,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":504,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":364,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":156,"org.easymock.tests2.MockBuilderTest.testCreateMockString":123,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":419,"org.easymock.tests.UsageExpectAndThrowTest.floatType":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":239,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":234,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":479,"org.easymock.tests.UsageVerifyTest.twoThrows":47,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":248,"org.easymock.samples.ExampleTest.voteAgainstRemoval":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":150,"org.easymock.tests.LimitationsTest.privateConstructor":428,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":37,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.UsageTest.defaultResetToNice":49,"org.easymock.samples.ExampleTest.voteAgainstRemovals":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":291,"org.easymock.tests.UsageVarargTest.differentLength":413,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":188,"org.easymock.tests2.CallbackTest.callback":185,"org.easymock.tests2.UsageConstraintsTest.equals":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":147,"org.easymock.tests.UsageTest.openCallCountByLastCall":347,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":39,"org.easymock.tests.UsageCallCountTest.tooFewCalls":457,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":437,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":503,"org.easymock.tests.UsageThrowableTest.throwCheckedException":34,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":296,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":193,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":215,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":262,"org.easymock.tests.ObjectMethodsTest.testHashCode":448,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":524,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":158,"org.easymock.tests2.NameTest.nameForNiceMock":73,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":519,"org.easymock.tests2.DependencyTest.testInterfaceMocking":183,"org.easymock.samples.ExampleTest.addDocument":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":250,"org.easymock.tests2.DelegateToTest.testStubDelegate":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":255,"org.easymock.tests2.AnswerTest.stubAnswer":261,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":468,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":119,"org.easymock.tests.UsageVarargTest.varargLongAccepted":415,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.floatType":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":68,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":53,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":168,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests.UsageThrowableTest.noUpperLimit":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":79,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":205,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":129,"org.easymock.tests2.SerializationTest.test":271,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":363,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":277,"org.easymock.samples.SupportTest.addDocument":66,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":214,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":509,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":240,"org.easymock.tests.GenericTest.testPackageScope":377,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":167,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":302,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":507,"org.easymock.tests2.NameTest.nameForMock":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":483,"org.easymock.tests2.UsageStrictMockTest.differentMethods":268,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":21,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":343,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":396,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":432,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":316,"org.easymock.tests2.NameTest.nameForStrictMock":72,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":114,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":142,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":206,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":365,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":112,"org.easymock.tests2.UsageStrictMockTest.range":267,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":513,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":220,"org.easymock.tests2.CaptureTest.testCaptureRightOne":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":244,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":500,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests.UsageRangeTest.combination":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":139,"org.easymock.tests.UsageTest.wrongArguments":346,"org.easymock.tests2.MockBuilderTest.testWithConstructor":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":241,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.UsageVarargTest.varargShortAccepted":414,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":460,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":527,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":259,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":386,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.CaptureTest.testCaptureFromStub":135,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":306,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":113,"org.easymock.tests.UsageTest.unexpectedCallWithArray":345,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":523,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":467,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests2.CaptureTest.testCapture":491,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":469,"org.easymock.tests2.UsageConstraintsTest.constraints":80,"org.easymock.samples.ExampleTest.addAndChangeDocument":61,"org.easymock.tests2.ConstraintsToStringTest.notToString":478,"org.easymock.tests.UsageStrictMockTest.testVerify":473,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":65,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":358,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":130,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":440,"org.easymock.tests.LimitationsTest.abstractClass":427,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":441,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":225}}]
