[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:336","sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[8,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[10,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[19,7,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[22,10,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[10,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[47,47,48,48,22,49,50,51,10,12,52,53,54,55,56,57,58,59,60,61,62,63,23,64,65,24,25,66,67,27,68,28,29,30,31,32,33,34,35,69,36,70,37,38,39,40,41,71,72,42,73,74,75,76,77,78,79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[80,81,82,83,84,85,86,87,88,89,47,48,90,22,49,50,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,51,113,114,115,116,117,118,0,119,120,10,11,12,121,52,53,54,55,122,123,56,57,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,59,60,139,61,62,63,23,140,64,141,142,65,24,25,66,143,26,144,145,146,147,148,67,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,5,191,192,19,193,6,14,194,7,195,196,197,198,199,200,201,202,203,20,46,204,205,206,21,207,208,209,210,211,212,213,214,215,216,217,218,219,27,220,28,29,221,222,30,31,32,223,33,224,43,34,35,225,36,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,70,249,250,37,251,252,253,254,255,256,257,258,259,38,260,261,262,263,264,39,265,266,267,268,269,270,271,272,273,274,275,2,3,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,4,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,40,328,329,330,331,41,332,333,334,335,336,337,338,339,340,341,342,15,71,72,42,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,45,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,9,402,403,73,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,74,75,76,447,77,448,449,450,451,78,452,453,454,455,456,457,79,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[80,81,82,83,84,85,86,87,88,89,47,48,90,22,49,50,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,51,113,114,115,116,117,118,0,119,120,10,11,12,121,52,53,54,55,122,123,56,57,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,59,60,139,61,62,63,23,140,64,141,142,65,24,25,66,143,26,144,145,146,147,148,67,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,5,191,192,19,193,6,14,194,7,195,196,197,198,199,200,201,202,203,20,46,204,205,206,21,207,208,209,210,211,212,213,214,215,216,217,218,219,27,220,28,29,221,222,30,31,32,223,33,224,43,34,35,225,36,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,70,249,250,37,251,252,253,254,255,256,257,258,259,38,260,261,262,263,264,39,265,266,267,268,269,270,271,272,273,274,275,2,3,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,4,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,40,328,329,330,331,41,332,333,334,335,336,337,338,339,340,341,342,15,71,72,42,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,45,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,9,402,403,73,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,74,75,76,447,77,448,449,450,451,78,452,453,454,455,456,457,79,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[117,119,120,235,275,2,3,298,300,301,380,490],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[47,48,51,113,114,10,141,220,221,223,43,225],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[47,48,51,499,500,501,502,503,504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,236,242,243,2,3,506,297,4,381,9,491,492,495,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[0,119,4,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[125,127,135,14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[129,137,345,351,357,361,363,383,389,395,399,401,9,489],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[117,126,132,133,138,6,195,276,277,278,279,280,298,325,9,410,411,418,419,420,421,422,438,439],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[23,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[26,35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[308,312],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AssertionErrorWrapper:32","sourceCode":"return java.lang.AssertionError","type":"CtReturnImpl"},"failures":[94,115,117,118,0,119,120,121,60,24,66,174,178,179,182,190,201,210,211,212,213,28,34,35,36,233,235,236,237,238,242,243,244,245,275,2,3,295,297,298,299,4,300,301,334,336,337,340,341,342,9,432,485,489,490,491,492,495,496,497],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[5,14,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[81,82,84,85,87,22,95,111,112,51,117,0,119,52,53,54,55,123,56,57,59,60,139,61,62,63,64,24,25,66,169,28,30,32,33,35,70,37,38,39,276,277,278,279,280,298,4,300,344,345,346,347,348,349,352,353,355,356,357,359,360,361,362,363,73,418,438,439,440,441,442,443,75,76,77,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":489,"org.easymock.tests2.UsageTest.argumentsOrdered":243,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":471,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":238,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":90,"org.easymock.tests2.DelegateToTest.testReturnException":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":322,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":452,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":209,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":254,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":382,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":112,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":418,"org.easymock.tests2.UsageTest.wrongArguments":236,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":273,"org.easymock.samples.ExampleTest.answerVsDelegate":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":41,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":449,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":182,"org.easymock.tests2.CaptureTest.testPrimitive":128,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":422,"org.easymock.tests.UsageTest.moreThanOneArgument":490,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":401,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":442,"org.easymock.tests.UsageTest.argumentsOrdered":496,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageVarargTest.varargIntAccepted":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":160,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":228,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":280,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests.ReplayStateInvalidUsageTest.times":371,"org.easymock.tests2.DependencyTest.testClassMocking":109,"org.easymock.tests2.AnswerTest.answer":214,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":478,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":166,"org.easymock.tests2.CaptureTest.testAnd":125,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":329,"org.easymock.tests2.UsageTest.strictResetToDefault":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":441,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":177,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":397,"org.easymock.tests.LimitationsTest.mockFinalMethod":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":417,"org.easymock.tests2.DependencyTest.testClassMockingSupport":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":284,"org.easymock.tests2.CaptureTest.testCapture1_2446744":129,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":164,"org.easymock.tests.UsageThrowableTest.throwError":287,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":366,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":331,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":161,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":444,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":266,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.MockingTest.testInterfaceMocking":447,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":277,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":269,"org.easymock.tests2.UsageTest.niceToStrict":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":255,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":383,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":30,"org.easymock.tests2.MockBuilderTest.testCreateMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":391,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":178,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":460,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":271,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":502,"org.easymock.tests.UsageOverloadedMethodTest.overloading":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":199,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":378,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":355,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":198,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":134,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":429,"org.easymock.tests.MockClassControlTest.testEquals":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":165,"org.easymock.tests2.CaptureTest.testCaptureAll":126,"org.easymock.tests.MockNameTest.defaultName":412,"org.easymock.tests2.UsageConstraintsTest.testMatches":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":443,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":364,"org.easymock.samples.ExampleTest.voteForRemovals":87,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":498,"org.easymock.tests.UsageVarargTest.allKinds":437,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":416,"org.easymock.samples.BasicClassMockTest.testPrintContent":50,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":293,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":115,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":326,"org.easymock.tests2.UsageConstraintsTest.greaterThan":202,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":486,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":66,"org.easymock.samples.ExampleTest.voteForRemoval":84,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":143,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":93,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":332,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":79,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":175,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":321,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":167,"org.easymock.tests2.CaptureTest.testCaptureFirst":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":176,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":245,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":351,"org.easymock.tests2.CaptureTest.testCapture2_2446744":137,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":95,"org.easymock.tests2.UsageTest.moreThanOneArgument":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":479,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":436,"org.easymock.tests.GenericTest.testBridgedEquals":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":503,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":500,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":341,"org.easymock.tests.UsageExpectAndReturnTest.longType":347,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":413,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":400,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":69,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":205,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":267,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":440,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":304,"org.easymock.tests.UsageCallCountTest.tooManyCalls":342,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":352,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":387,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":292,"org.easymock.tests.MockingTest.testNiceClassMocking":450,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":53,"org.easymock.tests.MockingTest.testClassMocking":446,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":68,"org.easymock.tests2.UsageConstraintsTest.testContains":197,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":335,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":67,"org.easymock.tests2.UsageConstraintsTest.testFind":192,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":425,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":146,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests.UsageExpectAndReturnTest.object":354,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":181,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":431,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":318,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":504,"org.easymock.tests.UsageTest.exactCallCountByLastCall":497,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":406,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":113,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":360,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":377,"org.easymock.tests.MockClassControlTest.testHashCode":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":151,"org.easymock.tests2.EasyMockSupportTest.testVerify":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":257,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":459,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":163,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":162,"org.easymock.tests.UsageVarargTest.varargCharAccepted":430,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":306,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":484,"org.easymock.tests2.UsageTest.openCallCountByLastCall":239,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":458,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":316,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":150,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":454,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":388,"org.easymock.tests.CapturesMatcherTest.test":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":303,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests2.UsageTest.resumeIfFailure":244,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":324,"org.easymock.tests2.StubTest.stubWithReturnValue":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":223,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":353,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":477,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":44,"org.easymock.samples.SupportTest.voteForRemovals":81,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":394,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":483,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":215,"org.easymock.tests.UsageExpectAndThrowTest.object":392,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":283,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":46,"org.easymock.tests2.DelegateToTest.testWrongClass":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":438,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":439,"org.easymock.samples.ConstructorCalledMockTest.testTax":47,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":231,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":52,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":501,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":393,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":32,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":246,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":272,"org.easymock.tests2.CaptureTest.testCaptureNone":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":270,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":435,"org.easymock.tests2.ThreadingTest.testThreadSafe":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":260,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":339,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":49,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":319,"org.easymock.tests2.CaptureTest.testCapture_2617107":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":421,"org.easymock.tests2.UsageConstraintsTest.any":195,"org.easymock.tests2.StubTest.stub":186,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":370,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndThrowTest.longType":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":323,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":369,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":118,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests.LimitationsTest.mockNativeMethod":73,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":99,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":120,"org.easymock.tests2.NameTest.nameForMocksControl":213,"org.easymock.tests2.MockedExceptionTest.testMockedException":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":250,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":494,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":386,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":145,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":33,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":285,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":204,"org.easymock.tests.MockingTest.testTwoMocks":74,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":390,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":242,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":207,"org.easymock.samples.ExampleTest.removeNonExistingDocument":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":104,"org.easymock.tests.UsageStrictMockTest.differentMethods":300,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":152,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":309,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":94,"org.easymock.tests2.MockBuilderTest.testCreateMockString":36,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":451,"org.easymock.tests.UsageExpectAndThrowTest.floatType":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":114,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":472,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":268,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests.LimitationsTest.privateConstructor":403,"org.easymock.tests2.UsageConstraintsTest.testNotNull":21,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":294,"org.easymock.tests2.UsageTest.defaultResetToNice":241,"org.easymock.samples.ExampleTest.voteAgainstRemovals":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":359,"org.easymock.tests.UsageVarargTest.differentLength":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":98,"org.easymock.tests2.CallbackTest.callback":121,"org.easymock.tests2.UsageConstraintsTest.equals":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":141,"org.easymock.tests.UsageTest.openCallCountByLastCall":493,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":420,"org.easymock.tests.UsageCallCountTest.tooFewCalls":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":55,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":274,"org.easymock.tests.UsageThrowableTest.throwCheckedException":291,"org.easymock.tests.MockingTest.testStrictClassMocking":445,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":411,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":54,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":372,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":123,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":219,"org.easymock.tests.ObjectMethodsTest.testHashCode":317,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests2.NameTest.nameForNiceMock":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":111,"org.easymock.samples.ExampleTest.addDocument":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":261,"org.easymock.tests2.DelegateToTest.testStubDelegate":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.AnswerTest.stubAnswer":218,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":298,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":224,"org.easymock.tests.UsageVarargTest.varargLongAccepted":434,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.floatType":346,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":159,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":203,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":189,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":226,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":130,"org.easymock.tests2.SerializationTest.test":11,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":308,"org.easymock.tests2.UsageConstraintsTest.testSame":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":345,"org.easymock.samples.SupportTest.addDocument":80,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":122,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":252,"org.easymock.tests.GenericTest.testPackageScope":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":158,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":448,"org.easymock.tests2.NameTest.nameForMock":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":356,"org.easymock.tests2.UsageStrictMockTest.differentMethods":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":225,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":396,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":488,"org.easymock.tests2.MockedExceptionTest.testRealException":149,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":474,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":419,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":374,"org.easymock.tests2.NameTest.nameForStrictMock":211,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":222,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":230,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":8,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":310,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":28,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":174,"org.easymock.tests2.CaptureTest.testCaptureRightOne":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":256,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":492,"org.easymock.tests2.MockBuilderTest.testWithConstructor":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":253,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":357,"org.easymock.tests.UsageVarargTest.varargShortAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":340,"org.easymock.tests2.UsageConstraintsTest.cmpTo":196,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests2.CaptureTest.testCaptureFromStub":136,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":365,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":29,"org.easymock.tests.UsageTest.unexpectedCallWithArray":491,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":358,"org.easymock.tests2.CaptureTest.testCapture":17,"org.easymock.tests2.UsageConstraintsTest.constraints":190,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":89,"org.easymock.tests.UsageStrictMockTest.testVerify":302,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":91,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":414,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":131,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":278,"org.easymock.tests.LimitationsTest.abstractClass":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":279,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":179,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":1}}]
