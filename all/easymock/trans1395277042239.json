[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[11,12,0,13,14,15,16,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,1,34,2,3,4,35,36,37,38,39,40,41,42,7,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,9,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,6,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[259,260,261,262,263,63,66,264,77,265,266,267,268,269,270,271,272,90,91,93,94,95,96,273,274,99,275,276,125,126,277,278,279,280,281,282,283,284,285,164,286,287,288,289,290,291,292,293,294,295,296,297,298,206,299,300,208],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[40,45,49,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[301],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[302,303,304,305,306,307,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[11,312,12,0,13,14,313,15,314,16,315,17,259,260,316,18,19,20,21,317,22,23,318,319,24,25,26,27,28,29,30,31,32,261,33,1,34,2,3,4,35,36,37,302,38,39,40,41,320,42,7,43,44,45,46,321,47,48,49,50,51,52,53,54,55,56,57,58,8,59,60,61,62,262,263,322,323,63,64,65,66,324,67,68,69,325,70,71,72,73,74,75,326,327,328,329,330,76,331,332,333,334,335,336,264,337,338,77,339,265,78,266,267,340,341,268,342,343,269,344,79,270,271,345,346,272,80,347,348,81,82,83,349,84,350,85,86,87,351,352,88,89,353,90,91,92,93,94,95,354,310,96,355,273,274,97,98,99,275,276,100,101,102,9,103,104,356,105,357,106,107,358,359,360,108,109,110,111,112,113,114,115,116,117,118,119,120,121,361,362,363,364,365,366,122,367,368,369,370,371,372,373,374,375,123,376,377,378,379,380,381,124,125,126,127,382,128,383,384,129,385,130,131,386,387,388,132,389,133,390,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,391,392,393,394,395,396,397,398,277,278,279,280,281,282,283,284,285,164,286,399,400,401,402,403,404,405,406,407,408,409,10,165,166,167,168,169,170,287,288,289,290,291,292,293,294,171,172,173,174,175,410,411,5,412,413,414,415,416,417,418,419,420,421,422,423,424,176,425,426,427,428,429,177,430,178,179,431,432,180,181,433,434,182,435,436,437,438,439,295,296,297,183,184,440,185,441,442,298,186,187,188,189,443,444,445,446,190,191,192,193,194,195,196,197,198,199,200,201,202,447,448,449,203,450,204,205,451,452,453,206,299,207,300,208,209,210,211,212,213,214,215,216,454,455,217,456,457,458,459,460,461,218,219,220,221,462,6,222,463,223,464,224,225,226,227,228,229,465,230,466,467,468,469,470,471,472,473,474,475,476,477,478,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,479,480,481,482,483,484,485],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:74","sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","type":"CtAssignmentImpl"},"failures":[400,401,403,404,405,406,407,408,409],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[318,319,24,26,486,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[487,488,489,490,431,449],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[124],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[21,29,30,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[487,488,489,490,431,449],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[53,350,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[281,492,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[21,317,23,318,319,24,25,30,53,8],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[18,18,19,19,355,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[83,105,107,358,363,364,365,366,179,203,205,451,454,217,456,218,219,220],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[302,303,304,305,306,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,312,12,0,13,14,313,15,314,16,315,17,259,260,316,18,18,19,19,20,21,317,22,23,318,319,24,25,26,27,28,29,30,31,32,261,1,34,2,4,35,36,37,38,39,40,41,42,7,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,8,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,81,82,83,349,84,350,85,86,87,351,352,88,89,353,90,91,92,93,94,95,354,96,274,97,98,99,100,101,102,9,103,104,356,105,357,106,107,358,108,109,110,111,112,113,114,115,116,117,118,119,120,121,361,363,364,365,366,122,367,368,369,370,123,124,125,126,127,382,128,129,385,130,131,388,132,389,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,277,164,399,400,401,403,404,405,406,407,408,409,10,165,166,167,168,169,170,287,288,289,290,291,292,293,294,171,172,173,174,175,178,179,431,432,180,181,433,434,182,435,436,437,438,439,183,184,185,186,187,188,189,443,444,445,446,190,191,192,193,194,201,202,447,448,449,203,450,204,205,451,452,206,299,208,209,210,211,454,455,217,456,457,458,459,460,461,218,219,220,221,462,6,222,223,464,230,467,468,469,470,471,472,473,474,475,476,477,478,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,480,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Find:41","failures":[495],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[73,122,133,134,422],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[320,351,433],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[18,19,31,37,302,496,355,497,498,308,386,387,499],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[31,32,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":178,"org.easymock.tests2.UsageTest.argumentsOrdered":352,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":419,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":350,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":312,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":166,"org.easymock.tests.MockingTest.testPartialClassMocking":183,"org.easymock.tests.MockClassControlTest.testToString":289,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":362,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":236,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":303,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":231,"org.easymock.tests2.UsageTest.wrongArguments":349,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":445,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":396,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":442,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":93,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":119,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":294,"org.easymock.tests2.CaptureTest.testPrimitive":22,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":235,"org.easymock.tests.UsageTest.moreThanOneArgument":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":255,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":173,"org.easymock.tests.UsageTest.argumentsOrdered":434,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":212,"org.easymock.tests.UsageVarargTest.varargIntAccepted":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":307,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":380,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests.ReplayStateInvalidUsageTest.times":475,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests2.DependencyTest.testClassMocking":359,"org.easymock.tests2.AnswerTest.answer":70,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":370,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":393,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests2.UsageTest.strictResetToDefault":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":114,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":251,"org.easymock.tests.LimitationsTest.mockFinalMethod":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":439,"org.easymock.tests2.DependencyTest.testClassMockingSupport":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":465,"org.easymock.tests2.CaptureTest.testCapture1_2446744":23,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":368,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":469,"org.easymock.tests.UsageThrowableTest.throwError":155,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":348,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":470,"org.easymock.tests.MockingTest.testInterfaceMocking":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":225,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":484,"org.easymock.tests2.UsageTest.niceToStrict":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":268,"org.easymock.tests2.ThreadingTest.testChangeDefault":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":129,"org.easymock.tests2.MockBuilderTest.testCreateMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":333,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":487,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":245,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":229,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":443,"org.easymock.tests.UsageOverloadedMethodTest.overloading":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":51,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":146,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":492,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":26,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":402,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.MockClassControlTest.testEquals":293,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":437,"org.easymock.tests2.CaptureTest.testCaptureAll":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":369,"org.easymock.tests.MockNameTest.defaultName":485,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":467,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":174,"org.easymock.samples.ExampleTest.voteForRemovals":15,"org.easymock.tests.UsageVarargTest.allKinds":10,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":438,"org.easymock.samples.BasicClassMockTest.testPrintContent":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":161,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":170,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":99,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":283,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":101,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":354,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":112,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":165,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":33,"org.easymock.tests2.CaptureTest.testCaptureFirst":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":113,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":142,"org.easymock.tests2.CaptureTest.testCapture2_2446744":29,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":9,"org.easymock.tests2.UsageTest.moreThanOneArgument":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":132,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":409,"org.easymock.tests.GenericTest.testBridgedEquals":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":460,"org.easymock.tests.UsageExpectAndReturnTest.longType":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":435,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":254,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":8,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":196,"org.easymock.tests.UsageCallCountTest.tooManyCalls":461,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":346,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":241,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":160,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testNiceClassMocking":298,"org.easymock.tests.MockingTest.testClassMocking":296,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":455,"org.easymock.tests2.UsageConstraintsTest.testContains":49,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":126,"org.easymock.tests2.UsageConstraintsTest.testFind":42,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":211,"org.easymock.tests.MockTypeTest.fromEasyMockClass":394,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":447,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":134,"org.easymock.tests.UsageExpectAndReturnTest.object":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":334,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":118,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":404,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":304,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":482,"org.easymock.tests.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":198,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":213,"org.easymock.tests2.ConstraintsToStringTest.findToString":495,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":302,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":151,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":6,"org.easymock.tests.MockClassControlTest.testHashCode":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":372,"org.easymock.tests2.EasyMockSupportTest.testVerify":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":343,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":221,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":228,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":367,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":353,"org.easymock.tests.UsageVarargTest.varargCharAccepted":403,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":121,"org.easymock.tests.DefaultClassInstantiatorTest.object":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":227,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":480,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":97,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":242,"org.easymock.tests.CapturesMatcherTest.test":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":152,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":290,"org.easymock.tests2.UsageTest.resumeIfFailure":88,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":168,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":59,"org.easymock.tests2.SerializationTest.testAllMockedMethod":261,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":176,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":488,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":453,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":248,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":177,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":71,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":200,"org.easymock.tests.UsageExpectAndThrowTest.object":246,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":256,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":257,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.UsageStrictMockTest.range":204,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":322,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":117,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":247,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":477,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":444,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":489,"org.easymock.tests2.CaptureTest.testCaptureNone":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":226,"org.easymock.tests.UsageUnorderedTest.message":163,"org.easymock.tests.UsageVerifyTest.twoReturns":220,"org.easymock.tests.UsageVarargTest.varargByteAccepted":408,"org.easymock.tests2.ThreadingTest.testThreadSafe":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":270,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":458,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":483,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":234,"org.easymock.tests2.UsageConstraintsTest.any":47,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":474,"org.easymock.tests2.StubTest.stub":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":167,"org.easymock.tests.UsageExpectAndThrowTest.longType":239,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":473,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":357,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":123,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests.LimitationsTest.mockNativeMethod":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":154,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":328,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":358,"org.easymock.tests2.NameTest.nameForMocksControl":366,"org.easymock.tests2.MockedExceptionTest.testMockedException":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":265,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":181,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":390,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":240,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":90,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":131,"org.easymock.tests.MockingTest.testNicePartialClassMocking":184,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":95,"org.easymock.tests2.CaptureTest.testCaptureLast":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":230,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":58,"org.easymock.tests.MockingTest.testTwoMocks":297,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":244,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":351,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":61,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":309,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":471,"org.easymock.tests.UsageStrictMockTest.differentMethods":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":373,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":279,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":102,"org.easymock.tests2.MockBuilderTest.testCreateMockString":389,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":287,"org.easymock.tests.UsageExpectAndThrowTest.floatType":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":266,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":496,"org.easymock.tests.UsageVerifyTest.twoThrows":219,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":79,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":224,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":98,"org.easymock.tests.LimitationsTest.privateConstructor":285,"org.easymock.tests2.UsageConstraintsTest.testNotNull":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":162,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":124,"org.easymock.tests2.UsageTest.defaultResetToNice":87,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":150,"org.easymock.tests.UsageVarargTest.differentLength":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":327,"org.easymock.tests2.CallbackTest.callback":122,"org.easymock.tests2.UsageConstraintsTest.equals":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":355,"org.easymock.tests.UsageTest.openCallCountByLastCall":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":233,"org.easymock.tests.UsageCallCountTest.tooFewCalls":456,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":446,"org.easymock.tests.UsageThrowableTest.throwCheckedException":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":490,"org.easymock.tests.MockingTest.testStrictClassMocking":295,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":331,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":476,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":67,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":75,"org.easymock.tests.ObjectMethodsTest.testHashCode":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":103,"org.easymock.tests2.NameTest.nameForNiceMock":365,"org.easymock.tests2.DependencyTest.testInterfaceMocking":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":305,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":271,"org.easymock.tests2.DelegateToTest.testStubDelegate":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.AnswerTest.stubAnswer":74,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":203,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":386,"org.easymock.tests.UsageVarargTest.varargLongAccepted":407,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":153,"org.easymock.tests.UsageExpectAndReturnTest.floatType":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests.UsageThrowableTest.noUpperLimit":156,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":39,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":262,"org.easymock.tests2.SerializationTest.test":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":318,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":493,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":136,"org.easymock.tests2.UsageConstraintsTest.testSame":43,"org.easymock.samples.SupportTest.addDocument":315,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":324,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":267,"org.easymock.tests.GenericTest.testPackageScope":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":441,"org.easymock.tests2.NameTest.nameForMock":363,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":499,"org.easymock.tests2.UsageStrictMockTest.differentMethods":107,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":250,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests2.MockedExceptionTest.testRealException":127,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":422,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":232,"org.easymock.tests2.NameTest.nameForStrictMock":364,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":263,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":56,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":280,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":128,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":342,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":91,"org.easymock.tests.UsageTest.wrongArguments":432,"org.easymock.tests2.MockBuilderTest.testWithConstructor":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":340,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":148,"org.easymock.tests.UsageVarargTest.varargShortAccepted":406,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":282,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":459,"org.easymock.tests2.UsageConstraintsTest.cmpTo":48,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":468,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":383,"org.easymock.tests.UsageTest.unexpectedCallWithArray":431,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":449,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":457,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":149,"org.easymock.tests2.CaptureTest.testCapture":486,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":450,"org.easymock.tests2.UsageConstraintsTest.constraints":40,"org.easymock.samples.ExampleTest.addAndChangeDocument":16,"org.easymock.tests.UsageStrictMockTest.testVerify":452,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":316,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":448,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":436,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":141,"org.easymock.tests.LimitationsTest.abstractClass":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":223,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":116}}]
