[{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[18],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,0,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,1,2,3,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,5,150,151,152,6,7,153,8,154,155,9,156,157,158,159,160,161,162,163,164,165,166,167,168,10,169,170,171,172,173,174,175,176,177,178,179,11,180,181,12,13,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,18,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,23,264,24,265,266,267,268,269,270,271,272,273,14,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,15,304,305,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[227,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[46,47,48,49,50,51,308,81,137,170,171,172,309,206,207,208,209,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[310,311,312,25,313,313,314,314,26,27,28,29,30,31,32,33,34,35,41,42,43,44,45,315,316,317,46,47,48,49,50,51,52,318,53,54,55,56,60,319,320,321,322,323,324,325,62,63,64,65,66,68,69,72,0,73,74,75,76,77,78,79,80,81,85,86,87,88,89,90,91,92,326,327,328,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,1,2,3,119,120,121,122,123,125,126,127,128,129,329,131,132,133,134,135,136,137,138,139,146,147,148,149,5,150,151,152,6,7,153,8,154,155,9,156,157,158,159,160,162,163,10,173,174,175,176,177,178,179,11,180,181,12,13,182,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,18,227,228,229,230,231,233,234,235,236,237,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,330,264,24,265,267,268,269,270,271,331,332,333,334,335,336,337,272,273,14,274,275,276,277,278,279,280,281,282,283,338,284,287,288,289,290,291,292,339,293,340,341,342,343,344,345,346,347,348,349,294,350,351,295,296,297,298,299,300,301,302,303,15,304,305,16,17,352,353,354,355],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[335,337,338,284,292],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[356,357,358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[313,313,314,314,62,63,64,65,66,80,114,115,116,117,118,135,136,139,162,163,11,210,211,214,215,216,217,223,225,226,227,228,229,234,235,236,257,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[137,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[359,284,290,291,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[310,311,312,313,313,314,314,360,315,316,361,362,363,317,364,325,365,93,366,367,368,369,370,371,372,373,326,327,328,130,329,374,375,376,377,378,379,380,381,206,207,208,262,330,331,382,383,384,332,333,334,335,385,386,336,337,338,387,292,339,340,341,342,388,343,389,390,344,391,345,392,393,394,346,347,348,349,350,351,395,396,397,352,398,399,353,400,401,402,403,404,405,406,407,408,354,409,410,411,412,413,355,414,415],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[310,311,312,25,313,313,314,314,26,27,28,29,30,31,32,33,34,416,35,36,37,38,39,40,41,42,43,44,45,360,315,316,361,362,363,417,317,364,46,47,48,49,50,51,52,318,53,54,55,56,57,58,59,60,61,319,418,320,321,419,322,420,421,323,308,324,325,62,63,64,65,66,67,68,69,422,70,423,71,72,0,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,365,93,366,367,368,369,370,371,372,424,425,373,326,327,426,328,427,428,429,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,1,2,3,119,120,121,430,122,123,124,125,126,127,128,129,130,329,374,375,376,431,432,377,131,132,133,134,135,136,137,138,139,140,141,4,378,142,143,379,144,145,146,147,148,149,5,150,151,152,6,7,153,8,154,155,9,156,157,158,159,160,161,162,163,164,165,166,167,168,10,169,170,171,172,173,174,175,176,177,178,179,11,180,181,12,13,182,183,184,185,186,187,188,189,190,433,434,435,436,437,438,439,440,309,441,442,22,443,444,359,445,446,191,447,448,449,450,451,192,452,193,194,195,196,197,198,199,200,201,202,203,204,205,380,381,453,454,206,207,208,209,210,211,212,213,455,214,215,216,217,218,219,220,221,222,223,224,225,226,18,227,228,229,230,231,232,233,234,235,236,456,457,458,459,460,461,237,238,462,463,464,465,466,239,240,241,242,243,467,468,469,470,471,244,245,472,473,474,475,476,246,247,248,249,250,251,252,253,254,255,256,257,258,259,477,478,260,261,262,263,330,23,264,24,265,266,267,268,269,270,271,331,479,382,383,480,384,332,333,334,481,335,385,386,336,482,337,272,273,14,274,275,276,277,278,279,280,281,282,283,338,387,483,284,285,286,287,288,289,290,484,291,292,339,293,340,341,342,388,485,343,389,390,344,391,345,392,393,394,346,347,348,349,294,350,351,295,296,297,486,298,299,300,301,302,303,15,304,305,16,17,395,396,397,352,398,399,353,400,401,402,403,404,405,406,407,408,354,409,410,411,412,413,355,414,415],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[275,390],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[212,213,215,217,218,220,229,234,246,248,256],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[327,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[62,96,98,112,113,162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[489,262,263,330],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[490,491,73,179,492,493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":213,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.UsageTest.argumentsOrdered":281,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":22,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":276,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.DelegateToTest.testReturnException":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":47,"org.easymock.tests.MockingTest.testPartialClassMocking":326,"org.easymock.tests.MockClassControlTest.testToString":374,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":486,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":146,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":353,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":261,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":135,"org.easymock.tests2.UsageTest.wrongArguments":274,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":175,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":379,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":428,"org.easymock.tests2.UsageConstraintsTest.testNull":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":340,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":202,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":377,"org.easymock.tests2.CaptureTest.testPrimitive":249,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":160,"org.easymock.tests.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":36,"org.easymock.tests.UsageTest.argumentsOrdered":78,"org.easymock.tests.UsageVarargTest.varargIntAccepted":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":114,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":465,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":118,"org.easymock.tests.ReplayStateInvalidUsageTest.times":421,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":244,"org.easymock.tests2.DependencyTest.testClassMocking":477,"org.easymock.tests2.AnswerTest.answer":284,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":271,"org.easymock.tests2.CaptureTest.testAnd":246,"org.easymock.tests2.UsageTest.strictResetToDefault":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":197,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":40,"org.easymock.tests2.DelegateToTest.testDelegate":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":156,"org.easymock.tests.LimitationsTest.mockFinalMethod":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":45,"org.easymock.tests2.DependencyTest.testClassMockingSupport":478,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":140,"org.easymock.tests2.CaptureTest.testCapture1_2446744":250,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":269,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":418,"org.easymock.tests.UsageThrowableTest.throwError":85,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":143,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":466,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":415,"org.easymock.samples.PartialClassMockTest.testGetArea":310,"org.easymock.tests.MockingTest.testInterfaceMocking":426,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":115,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":184,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":404,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":147,"org.easymock.tests2.UsageTest.niceToStrict":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":332,"org.easymock.tests2.MockBuilderTest.testCreateMock":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":7,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageOverloadedMethodTest.overloading":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":167,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":105,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":67,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":255,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests.MockClassControlTest.testEquals":432,"org.easymock.tests2.EasyMockSupportClassTest.testAll":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":158,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":43,"org.easymock.tests2.CaptureTest.testCaptureAll":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":270,"org.easymock.tests.MockNameTest.defaultName":71,"org.easymock.tests2.UsageConstraintsTest.testMatches":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":65,"org.easymock.samples.ExampleTest.voteForRemovals":34,"org.easymock.tests.UsageVarargTest.allKinds":129,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":44,"org.easymock.samples.BasicClassMockTest.testPrintContent":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":91,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":51,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":266,"org.easymock.tests2.UsageConstraintsTest.greaterThan":227,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":132,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":392,"org.easymock.samples.ExampleTest.voteForRemoval":31,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":393,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":388,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":272,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":325,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":195,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":46,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":23,"org.easymock.tests2.CaptureTest.testCaptureFirst":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":196,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":283,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":101,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":242,"org.easymock.tests2.CaptureTest.testCapture2_2446744":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":336,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":128,"org.easymock.tests.GenericTest.testBridgedEquals":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":58,"org.easymock.tests.UsageExpectAndReturnTest.longType":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":41,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":159,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":62,"org.easymock.tests.UsageCallCountTest.tooManyCalls":59,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":90,"org.easymock.tests.MockingTest.testNiceClassMocking":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":347,"org.easymock.tests.MockingTest.testClassMocking":425,"org.easymock.tests2.UsageConstraintsTest.testContains":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":318,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":208,"org.easymock.tests2.UsageConstraintsTest.testFind":214,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":69,"org.easymock.tests.MockTypeTest.fromEasyMockClass":142,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":291,"org.easymock.tests.UsageExpectAndReturnTest.object":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":343,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":201,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":123,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":189,"org.easymock.tests.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":37,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":387,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":110,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":458,"org.easymock.tests.MockClassControlTest.testHashCode":431,"org.easymock.tests2.EasyMockSupportTest.testVerify":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":406,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":19,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":38,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":164,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":83,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":268,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":456,"org.easymock.tests.UsageVarargTest.varargCharAccepted":122,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":365,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastCall":277,"org.easymock.tests.DefaultClassInstantiatorTest.object":93,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":82,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":470,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":391,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":151,"org.easymock.tests.CapturesMatcherTest.test":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":170,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":355,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":375,"org.easymock.tests2.UsageTest.resumeIfFailure":282,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":49,"org.easymock.tests2.StubTest.stubWithReturnValue":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":481,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":233,"org.easymock.tests2.SerializationTest.testAllMockedMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":191,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":28,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":154,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":192,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":285,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":423,"org.easymock.tests.UsageExpectAndThrowTest.object":153,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":230,"org.easymock.tests2.DelegateToTest.testWrongClass":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":163,"org.easymock.tests.UsageStrictMockTest.range":181,"org.easymock.samples.ConstructorCalledMockTest.testTax":313,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":453,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":8,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":185,"org.easymock.tests2.CaptureTest.testCaptureNone":254,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":356,"org.easymock.tests.UsageUnorderedTest.message":60,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":127,"org.easymock.tests2.ThreadingTest.testThreadSafe":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":409,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":56,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":190,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":311,"org.easymock.tests2.CaptureTest.testCapture_2617107":248,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":138,"org.easymock.tests2.UsageConstraintsTest.any":221,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":420,"org.easymock.tests2.StubTest.stub":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndThrowTest.longType":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":48,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":322,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests2.SerializationTest.testClass":262,"org.easymock.tests.LimitationsTest.mockNativeMethod":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":113,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":361,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":469,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests2.NameTest.nameForMocksControl":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":471,"org.easymock.tests2.MockedExceptionTest.testMockedException":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":399,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":5,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":328,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":292,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":335,"org.easymock.tests.MockingTest.testNicePartialClassMocking":327,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":467,"org.easymock.tests2.CaptureTest.testCaptureLast":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":141,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":218,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":351,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":231,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":6,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":280,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":235,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":358,"org.easymock.samples.ExampleTest.removeNonExistingDocument":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":459,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":357,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":367,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":241,"org.easymock.tests2.MockBuilderTest.testCreateMockString":337,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":400,"org.easymock.tests.UsageExpectAndThrowTest.floatType":148,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":483,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":354,"org.easymock.samples.ExampleTest.voteAgainstRemoval":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":183,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":345,"org.easymock.tests.LimitationsTest.privateConstructor":417,"org.easymock.tests2.UsageConstraintsTest.testNotNull":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":92,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":206,"org.easymock.tests2.UsageTest.defaultResetToNice":279,"org.easymock.samples.ExampleTest.voteAgainstRemovals":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":109,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":468,"org.easymock.tests.UsageVarargTest.differentLength":124,"org.easymock.tests2.CallbackTest.callback":297,"org.easymock.tests2.UsageConstraintsTest.equals":455,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":389,"org.easymock.tests.UsageTest.openCallCountByLastCall":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":137,"org.easymock.tests.UsageCallCountTest.tooFewCalls":54,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":176,"org.easymock.tests.UsageThrowableTest.throwCheckedException":89,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":424,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":294,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.ObjectMethodsTest.testHashCode":188,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests2.NameTest.nameForNiceMock":300,"org.easymock.tests2.DependencyTest.testInterfaceMocking":260,"org.easymock.samples.ExampleTest.addDocument":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.DelegateToTest.testStubDelegate":24,"org.easymock.tests2.AnswerTest.stubAnswer":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests.UsageVarargTest.varargLongAccepted":126,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":112,"org.easymock.tests.UsageExpectAndReturnTest.floatType":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":338,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":464,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests.UsageThrowableTest.noUpperLimit":86,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":228,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":380,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":251,"org.easymock.tests2.SerializationTest.test":263,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":95,"org.easymock.tests2.UsageConstraintsTest.testSame":216,"org.easymock.samples.SupportTest.addDocument":27,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":401,"org.easymock.tests.GenericTest.testPackageScope":315,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":463,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":427,"org.easymock.tests2.NameTest.nameForMock":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":482,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":9,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":134,"org.easymock.tests2.MockedExceptionTest.testRealException":209,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":359,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":136,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":324,"org.easymock.tests2.NameTest.nameForStrictMock":299,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":381,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":229,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":382,"org.easymock.tests2.UsageStrictMockTest.range":305,"org.easymock.tests2.UsageConstraintsTest.lessThan":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":461,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":405,"org.easymock.tests2.CaptureTest.testCaptureRightOne":256,"org.easymock.tests2.UsageConstraintsTest.testOr":217,"org.easymock.tests.UsageRangeTest.combination":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":339,"org.easymock.tests.UsageTest.wrongArguments":74,"org.easymock.tests2.MockBuilderTest.testWithConstructor":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":402,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":107,"org.easymock.tests.UsageVarargTest.varargShortAccepted":125,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":57,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":278,"org.easymock.tests2.CaptureTest.testCaptureFromStub":257,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":319,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":383,"org.easymock.tests.UsageTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":179,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":55,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":108,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests2.UsageConstraintsTest.constraints":212,"org.easymock.samples.ExampleTest.addAndChangeDocument":35,"org.easymock.tests.UsageStrictMockTest.testVerify":182,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":26,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":42,"org.easymock.tests2.CompareToTest.testGreateThan":306,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":116,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":100,"org.easymock.tests.LimitationsTest.abstractClass":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":117,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":10,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":199}}]
