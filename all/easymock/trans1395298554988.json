[{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[18,19,20,21],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[46,28,47,48,49,50,51,52,53,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[54,54,55,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,11,12,13,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,22,103,104,105,23,106,107,108,109,110,111,112,46,0,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,24,131,132,133,134,135,25,26,136,137,138,139,27,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,18,166,167,168,19,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,10,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,28,232,233,234,235,236,237,238,239,240,241,242,29,30,243,244,245,246,1,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,20,282,283,21,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,31,32,47,318,48,319,320,321,322,323,324,325,326,327,328,329,33,34,35,36,37,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,38,39,40,41,42,49,393,394,395,50,51,396,397,398,399,400,401,402,403,52,404,405,406,407,53,408,409,410,411,412,413,414,415,416,417,418,419,43,420,421,422,44,423,424,425,426,427,428,429,430,431,45,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[301],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Null:35","failures":[101,115,143,317],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[106,187,452],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[1,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[453,454,455,456,332,422],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[457,5,6,7,8,9,458,213],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[459,460,175,191,192],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[111],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[461,462,463],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[236],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[154,160,161,233,464,332,333,336,337,363,364,43,422,424],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[11,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,61,63,71,11,12,13,92,94,95,96,97,98,100,101,102,22,103,104,23,106,107,108,109,110,111,112,46,0,113,114,116,117,118,119,120,123,124,125,126,127,128,129,130,24,131,132,134,135,25,26,136,137,27,140,141,144,146,147,150,152,153,155,156,159,162,465,175,176,180,182,183,184,185,187,190,192,466,195,198,467,199,468,469,470,471,213,226,227,228,229,231,28,234,235,236,237,238,239,240,241,29,252,253,255,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,286,287,288,289,291,299,300,306,307,308,310,311,313,314,315,316,317,31,32,318,33,34,37,331,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,363,364,375,376,384,391,38,39,40,41,42,412,413,414,415,416,421,44,425,426,427,428,429,430,431,45,432,438,439,440,441,442,443,444,445,446,447,448],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[151,158,226,227,228,229,237,30,35,36,330,335,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,361,363,374,376,377,378,379,380,381,389,428,429,430,431,45,432],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[11,4,178,472,473,457,5,6,7,474,8,9,458,213,10,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[119,476],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[153,154,160,161,477,453,478,461,462,479,480,481,454,482,483,28,233,234,455,463,456,484,485,486,464,279,280,331,332,333,336,337,362,363,364,387,390,391,392,43,422,44,424,425],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[93],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[24,132,25,26,136,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[71,155,165,167,487,19,488,230,233,234,286,420,424,425],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,11,12,13,72,15,16,17,73,74,75,76,489,490,77,491,78,79,492,80,81,493,494,82,83,84,85,86,495,87,496,497,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,22,103,104,105,23,106,107,108,109,110,111,112,46,0,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,24,131,132,133,134,135,25,26,136,137,138,139,27,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,18,498,166,167,487,168,499,19,169,170,171,172,465,500,173,501,502,174,175,176,177,4,503,504,178,179,488,505,506,180,181,182,183,184,185,186,507,187,188,189,190,191,192,193,194,508,509,466,195,196,510,197,198,467,511,512,513,199,200,201,202,203,204,205,206,207,208,209,210,211,212,514,468,469,470,471,213,10,475,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,28,232,233,234,235,236,237,238,239,240,241,242,29,30,515,243,244,245,246,1,247,516,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,20,282,283,21,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,31,32,517,47,318,48,319,320,321,322,323,324,325,326,327,328,329,33,34,35,36,37,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,518,519,520,368,521,369,522,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,38,39,40,41,42,49,393,394,395,50,51,396,397,398,399,400,401,402,403,52,404,405,406,407,53,408,409,410,411,412,413,414,415,416,417,418,419,43,420,421,422,44,423,424,425,426,427,428,429,430,431,45,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[507],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[54,55,68,11,79,86,89,465,500,173,501,502,174,175,176,177,4,503,504,178,179,488,505,506,186,188,191,192,508,213,10,475,226,298,301,518,369],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[57,146,147,148,150,388],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:145","sourceCode":"return java.lang.reflect.Method != null ? org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>) : false","type":"CtReturnImpl"},"failures":[298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests2.UsageTest.argumentsOrdered":161,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":330,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":400,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":156,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":67,"org.easymock.tests2.DelegateToTest.testReturnException":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":429,"org.easymock.tests.MockingTest.testPartialClassMocking":252,"org.easymock.tests.MockClassControlTest.testToString":292,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":514,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":339,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":104,"org.easymock.tests2.UsageTest.wrongArguments":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":33,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":240,"org.easymock.samples.ExampleTest.answerVsDelegate":57,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":369,"org.easymock.tests2.UsageConstraintsTest.testNull":101,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":257,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":19,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":297,"org.easymock.tests2.CaptureTest.testPrimitive":132,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":37,"org.easymock.tests.UsageTest.moreThanOneArgument":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":358,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":440,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":433,"org.easymock.tests.UsageTest.argumentsOrdered":337,"org.easymock.tests.UsageVarargTest.varargIntAccepted":308,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":38,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":224,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":42,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":462,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests.ReplayStateInvalidUsageTest.times":326,"org.easymock.tests2.DependencyTest.testClassMocking":512,"org.easymock.tests2.AnswerTest.answer":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":406,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":129,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":520,"org.easymock.tests2.CaptureTest.testAnd":130,"org.easymock.tests2.UsageTest.strictResetToDefault":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":288,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":437,"org.easymock.tests2.DelegateToTest.testDelegate":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":354,"org.easymock.tests.LimitationsTest.mockFinalMethod":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":416,"org.easymock.tests2.DependencyTest.testClassMockingSupport":513,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":279,"org.easymock.tests2.CaptureTest.testCapture1_2446744":133,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":507,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":127,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":320,"org.easymock.tests.UsageThrowableTest.throwError":374,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":521,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":517,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":91,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.MockingTest.testInterfaceMocking":254,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":494,"org.easymock.tests2.UsageTest.niceToStrict":155,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":175,"org.easymock.tests2.MockBuilderTest.testCreateMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":209,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":453,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":348,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":519,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":443,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":238,"org.easymock.tests.UsageOverloadedMethodTest.overloading":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":88,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":270,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":359,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":108,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":2,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":136,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":309,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.MockClassControlTest.testEquals":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":300,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":480,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":356,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":128,"org.easymock.tests2.CaptureTest.testCaptureAll":24,"org.easymock.tests.MockNameTest.defaultName":242,"org.easymock.tests2.UsageConstraintsTest.testMatches":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":441,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":48,"org.easymock.samples.ExampleTest.voteForRemovals":61,"org.easymock.tests.UsageVarargTest.allKinds":317,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":415,"org.easymock.samples.BasicClassMockTest.testPrintContent":65,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":380,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":432,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":221,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":516,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":458,"org.easymock.tests2.UsageConstraintsTest.greaterThan":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":193,"org.easymock.samples.ExampleTest.voteForRemoval":58,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":248,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":141,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":522,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":318,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":18,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":428,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":145,"org.easymock.tests2.CaptureTest.testCaptureFirst":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":498,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":266,"org.easymock.tests2.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":143,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":407,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":316,"org.easymock.tests.GenericTest.testBridgedEquals":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":450,"org.easymock.tests.UsageExpectAndReturnTest.longType":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":412,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":357,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":115,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":438,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":451,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":463,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":379,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":466,"org.easymock.tests.MockingTest.testNiceClassMocking":258,"org.easymock.tests.MockingTest.testClassMocking":250,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":460,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":444,"org.easymock.tests2.UsageConstraintsTest.testContains":107,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":228,"org.easymock.tests2.UsageConstraintsTest.testFind":100,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":361,"org.easymock.tests.MockTypeTest.fromEasyMockClass":368,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":420,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageExpectAndReturnTest.object":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":499,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":311,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":21,"org.easymock.tests.UsageTest.exactCallCountByLastCall":338,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":51,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":434,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":486,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":275,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":306,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":215,"org.easymock.tests.MockClassControlTest.testHashCode":295,"org.easymock.tests2.EasyMockSupportTest.testVerify":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":83,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":461,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":126,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":172,"org.easymock.tests.UsageVarargTest.varargCharAccepted":310,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":515,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":411,"org.easymock.tests2.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":170,"org.easymock.tests.DefaultClassInstantiatorTest.object":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":417,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":282,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":377,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":204,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":214,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":191,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":345,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":371,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":89,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":293,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":518,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":431,"org.easymock.tests2.StubTest.stubWithReturnValue":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":405,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":473,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":454,"org.easymock.samples.SupportTest.voteForRemovals":70,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":351,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":410,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":121,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":305,"org.easymock.tests.UsageExpectAndThrowTest.object":349,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":31,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":32,"org.easymock.tests.UsageStrictMockTest.range":424,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":74,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":350,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":76,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":328,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":239,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":455,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":367,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":364,"org.easymock.tests.UsageVarargTest.varargByteAccepted":315,"org.easymock.tests2.ThreadingTest.testThreadSafe":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":495,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":448,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":64,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":36,"org.easymock.tests2.UsageConstraintsTest.any":23,"org.easymock.tests2.StubTest.stub":236,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndThrowTest.longType":342,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":1,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":324,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests.LimitationsTest.mockNativeMethod":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":278,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":203,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests2.NameTest.nameForMocksControl":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":205,"org.easymock.tests2.MockedExceptionTest.testMockedException":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":78,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":335,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":93,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":343,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":503,"org.easymock.tests.MockingTest.testNicePartialClassMocking":253,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":457,"org.easymock.tests2.CompareToTest.testCompareEqual":452,"org.easymock.tests2.CaptureTest.testCaptureLast":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":280,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":467,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":103,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.MockingTest.testTwoMocks":251,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":511,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":347,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":118,"org.easymock.samples.ExampleTest.removeNonExistingDocument":62,"org.easymock.tests.UsageStrictMockTest.differentMethods":425,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":208,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":216,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":245,"org.easymock.tests2.ConstraintsToStringTest.andToString":481,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":142,"org.easymock.tests2.MockBuilderTest.testCreateMockString":506,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":492,"org.easymock.tests.UsageExpectAndThrowTest.floatType":341,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":475,"org.easymock.tests.UsageVerifyTest.twoThrows":363,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":365,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":192,"org.easymock.tests.LimitationsTest.privateConstructor":383,"org.easymock.tests2.UsageConstraintsTest.testNotNull":117,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":381,"org.easymock.tests2.UsageTest.defaultResetToNice":159,"org.easymock.samples.ExampleTest.voteAgainstRemovals":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":202,"org.easymock.tests.UsageVarargTest.differentLength":312,"org.easymock.tests2.CallbackTest.callback":71,"org.easymock.tests2.UsageConstraintsTest.equals":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":484,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":188,"org.easymock.tests.UsageTest.openCallCountByLastCall":334,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":35,"org.easymock.tests.UsageCallCountTest.tooFewCalls":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":241,"org.easymock.tests.UsageThrowableTest.throwCheckedException":378,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":456,"org.easymock.tests.MockingTest.testStrictClassMocking":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":207,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":125,"org.easymock.tests.ObjectMethodsTest.testHashCode":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests2.NameTest.nameForNiceMock":470,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":144,"org.easymock.tests2.DependencyTest.testInterfaceMocking":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":87,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.AnswerTest.stubAnswer":124,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":504,"org.easymock.tests.UsageVarargTest.varargLongAccepted":314,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.floatType":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":213,"org.easymock.tests2.ConstraintsToStringTest.orToString":477,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":223,"org.easymock.tests.UsageThrowableTest.noUpperLimit":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":72,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":134,"org.easymock.tests2.SerializationTest.test":12,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":244,"org.easymock.tests2.UsageConstraintsTest.testSame":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":260,"org.easymock.samples.SupportTest.addDocument":69,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":510,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":80,"org.easymock.tests.GenericTest.testPackageScope":299,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":222,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":256,"org.easymock.tests2.NameTest.nameForMock":468,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":271,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":505,"org.easymock.tests2.UsageStrictMockTest.differentMethods":234,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":353,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":289,"org.easymock.tests2.MockedExceptionTest.testRealException":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":75,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":485,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":403,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":329,"org.easymock.tests2.NameTest.nameForStrictMock":469,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":174,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":73,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":246,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":173,"org.easymock.tests2.UsageStrictMockTest.range":233,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":218,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":165,"org.easymock.tests2.CaptureTest.testCaptureRightOne":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":82,"org.easymock.tests2.UsageConstraintsTest.testOr":22,"org.easymock.tests.UsageRangeTest.combination":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.UsageTest.wrongArguments":333,"org.easymock.tests2.MockBuilderTest.testWithConstructor":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":81,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":272,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":247,"org.easymock.tests.UsageVarargTest.varargShortAccepted":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":449,"org.easymock.tests2.UsageConstraintsTest.cmpTo":106,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":122,"org.easymock.tests2.CompareToTest.testLessThan":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests2.CaptureTest.testCaptureFromStub":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":319,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":501,"org.easymock.tests.UsageTest.unexpectedCallWithArray":332,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":447,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":273,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":423,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.samples.ExampleTest.addAndChangeDocument":63,"org.easymock.tests2.ConstraintsToStringTest.notToString":478,"org.easymock.tests.UsageStrictMockTest.testVerify":427,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":66,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":413,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":265,"org.easymock.tests.LimitationsTest.abstractClass":382,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":487,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":307}}]
