[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[79,80,17,18,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,25,96,29,97,31,37,39,40,98,99,100,101,102,103,47,48,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[118,81,119,120,121,122],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[123,124,125,126,127],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,118,1,2,146,3,147,148,149,150,151,6,7,10,11,14,15,152,16,18,153,154,155,156,157,81,158,159,84,85,160,88,161,162,163,164,165,166,167,90,168,169,170,171,172,173,174,175,176,177,178,179,180,91,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,24,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,119,212,213,121,214,26,215,30,32,33,34,35,36,216,38,217,218,219,220,221,222,40,41,42,43,124,125,223,224,225,226,227,44,45,228,99,100,229,46,48,230,231,232,49,233,234,235,236,237,238,239,240,50,241,242,51,52,53,54,55,56,57,58,59,60,61,243,244,62,63,245,64,65,66,246,67,68,69,70,71,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,72,73,74,280,281,282,283,284,285,286,75,76,77,78,287,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:61","sourceCode":"java.io.InputStream java.io.InputStream = org.easymock.internal.EasyMockProperties.getClassLoader().getResourceAsStream(java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[16,23,166,167,90,168,169,170,171,172,173,174,289,175,176,177,178,179,180,91,181,182,183,184,185,290,186,187,188,189,194,195,198,199,200,201,291,202,203,204,205,206,207,292,293,208,36,44,45,98,102,46,237,50,241,294,295,242,51,52,53,54,55,247,296,257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[297,298,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[300,301,5,302,302,303,303,148,149,150,6,304,305,306,9,10,11,12,14,15,307,308,309,310,311,312,313,19,314,315,20,316,317,318,319,320,321,322,323,324,21,325,326,327,328,329,22,330,331,209,211,214,25,332,333,26,215,27,28,334,96,29,97,30,31,33,34,35,335,36,336,337,216,37,38,39,338,339,123,124,125,126,127,340,341,342,343,49,344,239,345,346,347,72,73,74,348,349,286,350,351,352,353,354,355,356,357,358,359,297,360,361],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[362,363,364,128,129,130,131,365,366,132,133,134,135,136,367,137,138,139,140,368,369,141,142,143,144,145],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[148,149,150,151,162,218,99,233,234,235,236,237,238,370,296,371,372,373,374,375,376,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[377],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[378,377],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[379],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:153","failures":[148,149,150,151,233,234,235,236,237,238,294,296],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[380,381,377],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[383],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[183],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[384,166,90,181,186],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[362,0,118,1,2,146,3,147,363,300,301,385,4,5,302,302,303,303,148,149,150,151,6,365,7,8,9,10,11,12,13,14,15,368,79,152,16,80,17,18,153,81,82,158,159,83,84,85,386,387,160,86,87,88,89,161,162,19,20,21,22,163,164,388,23,165,166,167,90,168,169,170,171,172,173,174,289,175,176,177,178,179,180,91,181,182,183,184,185,290,186,187,188,189,190,191,192,193,194,195,389,196,24,390,391,197,198,199,200,201,291,202,203,204,205,206,207,292,293,208,392,92,393,394,395,93,94,396,397,95,398,399,400,209,210,211,119,401,120,212,213,121,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,402,217,218,40,41,42,43,403,404,405,124,125,126,44,45,98,228,99,100,406,407,101,229,102,46,103,47,48,230,231,104,232,106,408,409,107,108,109,49,233,234,235,236,237,238,239,122,410,411,370,412,240,50,241,294,295,242,51,52,53,54,55,56,57,58,59,60,61,243,244,62,63,245,64,65,66,246,67,68,69,70,71,413,414,247,296,248,249,250,251,252,112,253,254,255,256,257,371,258,259,372,373,374,375,376,415,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,416,417,418,72,73,74,280,282,283,284,285,114,115,419,75,76,77,78,287,420,421,422,423,424],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[294,420,421,422],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[90,168,170,172,173,289,183,187,198,200,207],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[300,301,5,302,302,303,303,150,6,9,10,11,12,14,15,19,20,21,22,209,211,425,426,214,427,25,332,26,215,27,28,96,29,428,97,30,31,33,34,35,335,36,216,37,38,39,124,125,126,340,341,49,239,347,72,73,74,286],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[362,0,118,1,2,146,3,147,363,300,301,385,4,5,302,303,148,149,150,151,6,365,7,8,9,10,11,12,13,14,15,368,79,152,16,80,17,18,153,154,155,156,157,81,82,158,159,83,84,85,386,387,160,86,87,88,89,161,162,19,20,21,22,163,164,388,23,165,166,167,90,168,169,170,171,172,173,174,175,176,177,178,179,180,91,181,182,183,184,185,290,186,187,188,189,194,195,196,24,390,197,198,199,200,201,291,202,203,204,205,206,207,292,293,208,392,92,393,394,395,93,94,396,397,95,398,399,400,209,210,211,119,212,213,121,214,25,26,215,27,28,96,29,97,30,31,32,33,34,35,335,36,216,37,38,39,402,217,218,219,220,221,222,40,42,43,124,125,223,224,225,226,227,44,45,98,228,99,100,101,229,102,46,103,47,48,230,430,430,104,232,105,106,408,409,107,108,109,49,233,234,235,236,237,238,239,122,411,370,431,50,241,294,295,242,51,52,53,54,55,56,57,58,59,60,61,243,244,62,63,245,64,65,66,246,67,68,69,70,71,247,296,248,249,250,251,252,112,253,254,255,256,257,371,258,259,372,373,374,375,376,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,72,73,74,282,283,284,285,113,114,115,75,76,77,78,287],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[362,0,118,1,2,146,3,147,363,300,301,385,4,5,302,302,303,303,148,149,150,151,6,365,7,8,9,10,11,12,13,14,15,368,79,152,16,80,17,18,153,81,82,158,159,83,84,85,386,387,160,86,87,88,89,161,162,19,20,21,22,163,164,388,23,165,166,167,90,168,169,170,171,172,173,174,175,176,177,178,179,180,91,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,389,196,24,390,391,197,198,199,200,201,291,202,203,204,205,206,207,292,293,208,392,92,393,394,395,93,94,396,397,95,398,399,400,209,210,211,119,401,120,212,213,121,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,402,217,218,40,41,42,43,403,404,405,124,125,126,44,45,98,228,99,100,406,407,101,229,102,46,103,47,48,230,231,104,232,106,408,409,107,108,109,49,233,234,235,236,237,238,239,122,410,411,370,412,240,50,241,294,295,242,51,52,53,54,55,56,57,58,59,60,61,243,244,62,63,245,64,65,66,246,67,68,69,70,71,432,413,414,433,434,247,296,248,249,250,251,252,112,253,254,255,256,257,371,258,259,372,373,374,375,376,415,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,416,417,418,347,72,73,74,280,282,283,284,285,114,115,419,75,76,77,78,287,420,421,422,423,424],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[380,381,377],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[435,436,102,105,437,438],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests2.UsageTest.argumentsOrdered":87,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":85,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":362,"org.easymock.tests2.DelegateToTest.testReturnException":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":72,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":319,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":50,"org.easymock.tests2.UsageTest.wrongArguments":83,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":221,"org.easymock.samples.ExampleTest.answerVsDelegate":118,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":341,"org.easymock.tests2.UsageConstraintsTest.testNull":170,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":95,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.CaptureTest.testPrimitive":201,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":242,"org.easymock.tests.UsageTest.moreThanOneArgument":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":279,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":432,"org.easymock.tests.UsageTest.argumentsOrdered":108,"org.easymock.tests.UsageVarargTest.varargIntAccepted":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":51,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":55,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":365,"org.easymock.tests2.DependencyTest.testClassMocking":305,"org.easymock.tests2.AnswerTest.answer":119,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":157,"org.easymock.tests2.CaptureTest.testAnd":198,"org.easymock.tests2.UsageTest.strictResetToDefault":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":42,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":434,"org.easymock.tests2.DelegateToTest.testDelegate":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests.LimitationsTest.mockFinalMethod":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":227,"org.easymock.tests2.DependencyTest.testClassMockingSupport":306,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":423,"org.easymock.tests2.CaptureTest.testCapture1_2446744":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":155,"org.easymock.tests.UsageThrowableTest.throwError":371,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":145,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":331,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests2.CompareToTest.testLessOrEqual":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":417,"org.easymock.tests2.UsageTest.niceToStrict":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":377,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":26,"org.easymock.tests2.MockBuilderTest.testCreateMock":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":133,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":435,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":219,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":179,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":370,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":64,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":178,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":298,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":206,"org.easymock.tests2.EasyMockSupportClassTest.testAll":19,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":125,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":277,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":156,"org.easymock.tests2.CaptureTest.testCaptureAll":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":225,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":379,"org.easymock.tests2.UsageConstraintsTest.testMatches":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":78,"org.easymock.samples.ExampleTest.voteForRemovals":3,"org.easymock.tests.UsageVarargTest.allKinds":257,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":226,"org.easymock.samples.BasicClassMockTest.testPrintContent":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":375,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":79,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests2.UsageConstraintsTest.greaterThan":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":39,"org.easymock.samples.ExampleTest.voteForRemoval":1,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":164,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":335,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":239,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":393,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":389,"org.easymock.tests2.CaptureTest.testCaptureFirst":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":394,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":244,"org.easymock.tests2.UsageTest.moreThanOneArgument":159,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":23,"org.easymock.tests2.CaptureTest.testCapture2_2446744":293,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":256,"org.easymock.tests.GenericTest.testBridgedEquals":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":114,"org.easymock.tests.UsageExpectAndReturnTest.longType":59,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":223,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":428,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":278,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":415,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":75,"org.easymock.tests.UsageCallCountTest.tooManyCalls":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":374,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":10,"org.easymock.tests.MockingTest.testNiceClassMocking":348,"org.easymock.tests.MockingTest.testClassMocking":346,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":427,"org.easymock.tests2.UsageConstraintsTest.testContains":177,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":281,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":150,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":101,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":195,"org.easymock.tests.UsageExpectAndReturnTest.object":245,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":397,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":247,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":413,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":68,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":248,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":137,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":322,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":414,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":404,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":154,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":110,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests2.UsageTest.openCallCountByLastCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":399,"org.easymock.tests.DefaultClassInstantiatorTest.object":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":403,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":372,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":37,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":266,"org.easymock.tests.CapturesMatcherTest.test":430,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":22,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.UsageTest.resumeIfFailure":88,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":63,"org.easymock.tests2.SerializationTest.testAllMockedMethod":211,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":406,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":436,"org.easymock.samples.SupportTest.voteForRemovals":4,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":272,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":407,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":401,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":184,"org.easymock.tests2.DelegateToTest.testWrongClass":390,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":44,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":45,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":302,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":396,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":220,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":418,"org.easymock.tests2.CaptureTest.testCaptureNone":205,"org.easymock.tests.UsageUnorderedTest.message":98,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":116,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageVarargTest.varargByteAccepted":255,"org.easymock.tests2.ThreadingTest.testThreadSafe":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":325,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":285,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests2.StubTest.stub":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":297,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":382,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":80,"org.easymock.tests2.SerializationTest.testClass":209,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":368,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":129,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests2.NameTest.nameForMocksControl":193,"org.easymock.tests2.MockedExceptionTest.testMockedException":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":315,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":409,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":73,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":35,"org.easymock.tests2.CompareToTest.testNotComparable":429,"org.easymock.tests2.CaptureTest.testCaptureLast":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":424,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":15,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":185,"org.easymock.tests.MockingTest.testTwoMocks":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":132,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":138,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":388,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":349,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":316,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":212,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":21,"org.easymock.samples.ExampleTest.voteAgainstRemoval":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":416,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":38,"org.easymock.tests.LimitationsTest.privateConstructor":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":378,"org.easymock.tests2.UsageConstraintsTest.testNotNull":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":376,"org.easymock.tests2.UsageTest.defaultResetToNice":160,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":128,"org.easymock.tests.UsageVarargTest.differentLength":112,"org.easymock.tests2.CallbackTest.callback":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":336,"org.easymock.tests.UsageTest.openCallCountByLastCall":408,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":222,"org.easymock.tests.UsageThrowableTest.throwCheckedException":373,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":438,"org.easymock.tests.MockingTest.testStrictClassMocking":345,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":13,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":121,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":165,"org.easymock.tests2.NameTest.nameForNiceMock":192,"org.easymock.tests2.DependencyTest.testInterfaceMocking":7,"org.easymock.samples.ExampleTest.addDocument":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":326,"org.easymock.tests2.DelegateToTest.testStubDelegate":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.AnswerTest.stubAnswer":213,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests.UsageVarargTest.varargLongAccepted":254,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":230,"org.easymock.tests.UsageExpectAndReturnTest.floatType":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":303,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":143,"org.easymock.tests.UsageThrowableTest.noUpperLimit":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":167,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":307,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":202,"org.easymock.tests2.SerializationTest.test":210,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":299,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":357,"org.easymock.tests2.UsageConstraintsTest.testSame":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":57,"org.easymock.samples.SupportTest.addDocument":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":317,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":142,"org.easymock.tests2.NameTest.nameForMock":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":65,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":337,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":43,"org.easymock.tests2.MockedExceptionTest.testRealException":151,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":241,"org.easymock.tests2.NameTest.nameForStrictMock":191,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":333,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":310,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":183,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":92,"org.easymock.tests2.CaptureTest.testCaptureRightOne":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":321,"org.easymock.tests2.UsageConstraintsTest.testOr":172,"org.easymock.tests.UsageRangeTest.combination":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":318,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":66,"org.easymock.tests.UsageVarargTest.varargShortAccepted":253,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":113,"org.easymock.tests2.UsageConstraintsTest.cmpTo":176,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":120,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":387,"org.easymock.tests2.CaptureTest.testCaptureFromStub":292,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":332,"org.easymock.tests.UsageTest.unexpectedCallWithArray":105,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":102,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":246,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":103,"org.easymock.tests2.UsageConstraintsTest.constraints":90,"org.easymock.samples.ExampleTest.addAndChangeDocument":147,"org.easymock.tests2.ConstraintsToStringTest.notToString":383,"org.easymock.tests.UsageStrictMockTest.testVerify":231,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":363,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":224,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":203,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":243,"org.easymock.tests.LimitationsTest.abstractClass":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":54,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":94,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":249}}]
