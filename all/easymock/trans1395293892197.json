[{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,0,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,1,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,2,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[32,98,209,212,213,481,481,482,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[132],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[488,489,490,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[209,210,211,492],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[4,5,6,7,17,18,25,34,37,39,43,46,48,86,89,94,96,100,102,108,109,119,120,125,126,159,160,164,165,169,171,172,222,223,251,252,253,258,261,262,283,298,301,302,303,304,305,309,361,362,363,420,421,422,425,426,441,442,444,445],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[15,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[8,9,10,11,17,24,25,26,27,0,28,29,31,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,94,96,99,100,102,108,115,116,117,118,119,120,121,1,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,141,142,143,144,145,146,2,147,148,149,150,151,152,153,154,155,156,158,159,160,161,163,164,165,167,168,169,170,171,172,173,174,176,187,190,200,206,209,210,211,212,215,217,218,219,221,493,493,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,286,289,290,293,294,295,296,297,309,310,311,312,313,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,361,362,363,364,365,366,367,368,381,382,383,384,385,386,387,388,390,392,393,395,397,398,401,402,403,404,405,406,407,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,431,432,434,438,439,440,441,442,443,444,445,446,454,455,456,457,458,468,469,470,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[494],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[30,495,491],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[120,125,126,171,496,309,362,363,421,422,425,426,441,444],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[497,498,499,500,421,441],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[501,72,74,75,76,77,78,79,81,502,82,83,85],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[135,140,149,154],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[55,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[497,498,499,500,421,441],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[95,98,503,504,505,506,209,212,213],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[98,507,508,509,510,511,512,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,513,514],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[464,515,516],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[120,125,126,171,496,309,362,363,401,421,422,425,426,441,444],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[217,219,221,227,397,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[95,517,503,504,505,518,519,520,506,213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[29,35,36,39,86,88,89,92,93,94,96,99,100,102,190,200,206,209,291,298,303,483],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[41,45,46,49,100,115,119,120,121,1,125,126,127,130,131,134,136,137,143,146,2,148,155,167,169,171,173,215,267,271,272,274,277,321,325,326,328,331,361,362,363,382,390,391,392,393,400,412,420,422,425,426,439,442,444,446,470],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[8,9,10,11,17,24,25,26,27,0,28,29,31,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,94,96,99,100,102,108,115,116,117,118,119,120,121,1,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,141,142,143,144,145,146,2,147,148,149,150,151,152,153,154,155,156,158,159,160,161,163,164,165,167,168,169,170,171,172,173,174,176,187,190,200,206,209,210,211,212,215,217,218,219,221,493,493,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,286,289,290,293,294,295,296,297,309,310,311,312,313,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,361,362,363,364,365,366,367,368,381,382,383,384,385,386,387,388,390,392,393,395,397,398,401,402,403,404,405,406,407,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,431,432,434,438,439,440,441,442,443,444,445,446,454,455,456,457,458,468,469,470,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[95,503,504,505,519,520,213],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":132,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":419,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":235,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":1,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":403,"org.easymock.tests.MockingTest.testPartialClassMocking":431,"org.easymock.tests.MockClassControlTest.testToString":251,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":3,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":454,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":312,"org.easymock.samples.ExampleTest.answerVsDelegate":472,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":303,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":436,"org.easymock.tests2.UsageConstraintsTest.testNull":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":49,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":256,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":458,"org.easymock.tests.UsageTest.moreThanOneArgument":420,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":336,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":353,"org.easymock.tests.UsageTest.argumentsOrdered":426,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":356,"org.easymock.tests.UsageVarargTest.varargIntAccepted":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":520,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":297,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests.ReplayStateInvalidUsageTest.times":377,"org.easymock.tests2.DependencyTest.testClassMocking":68,"org.easymock.tests2.AnswerTest.answer":53,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":11,"org.easymock.tests2.CaptureTest.testAnd":72,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":300,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":352,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":44,"org.easymock.tests2.DelegateToTest.testDelegate":221,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":332,"org.easymock.tests.LimitationsTest.mockFinalMethod":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":406,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":368,"org.easymock.tests2.DependencyTest.testClassMockingSupport":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":222,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":9,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":371,"org.easymock.tests.UsageThrowableTest.throwError":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":302,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":389,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":208,"org.easymock.samples.PartialClassMockTest.testGetArea":483,"org.easymock.tests.MockingTest.testInterfaceMocking":433,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":294,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":307,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":195,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":318,"org.easymock.tests2.ThreadingTest.testChangeDefault":495,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":92,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":111,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":326,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":45,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":410,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":310,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":509,"org.easymock.tests.UsageOverloadedMethodTest.overloading":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":205,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":398,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":145,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":468,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":515,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":340,"org.easymock.tests2.EasyMockSupportClassTest.testAll":187,"org.easymock.tests.MockClassControlTest.testEquals":255,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":10,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":366,"org.easymock.tests.MockNameTest.defaultName":283,"org.easymock.tests2.UsageConstraintsTest.testMatches":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":354,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":369,"org.easymock.samples.ExampleTest.voteForRemovals":476,"org.easymock.tests.UsageVarargTest.allKinds":348,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":361,"org.easymock.samples.BasicClassMockTest.testPrintContent":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":367,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":387,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":506,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":466,"org.easymock.tests2.UsageConstraintsTest.greaterThan":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":391,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":37,"org.easymock.samples.ExampleTest.voteForRemoval":473,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":467,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":38,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":60,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":438,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":42,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":402,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":43,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":270,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":62,"org.easymock.tests2.CaptureTest.testCapture2_2446744":84,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":243,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":347,"org.easymock.tests.GenericTest.testBridgedEquals":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":510,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":507,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":417,"org.easymock.tests.UsageExpectAndReturnTest.longType":266,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":364,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":335,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":394,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":351,"org.easymock.tests.UsageCallCountTest.tooManyCalls":418,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":386,"org.easymock.tests.MockingTest.testNiceClassMocking":437,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":159,"org.easymock.tests.MockingTest.testClassMocking":429,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":411,"org.easymock.tests2.UsageConstraintsTest.testContains":143,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.UsageConstraintsTest.testFind":134,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":470,"org.easymock.tests.MockTypeTest.fromEasyMockClass":301,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":439,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":176,"org.easymock.tests.UsageExpectAndReturnTest.object":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":342,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":260,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":511,"org.easymock.tests.UsageTest.exactCallCountByLastCall":427,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":230,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":279,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":337,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests.MockClassControlTest.testHashCode":254,"org.easymock.tests2.EasyMockSupportTest.testVerify":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":197,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":395,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":8,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":157,"org.easymock.tests.UsageVarargTest.varargCharAccepted":341,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":459,"org.easymock.tests2.CaptureTest.testCaptureMultiple":501,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":248,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":513,"org.easymock.tests.DefaultClassInstantiatorTest.object":460,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":51,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":314,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":258,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":384,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":35,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":323,"org.easymock.tests.CapturesMatcherTest.test":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":206,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":252,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":405,"org.easymock.tests2.StubTest.stubWithReturnValue":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":272,"org.easymock.tests2.SerializationTest.testAllMockedMethod":211,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":241,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":486,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":329,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":247,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":54,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":453,"org.easymock.tests.UsageExpectAndThrowTest.object":327,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.DelegateToTest.testWrongClass":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":408,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":409,"org.easymock.samples.ConstructorCalledMockTest.testTax":481,"org.easymock.tests.UsageStrictMockTest.range":444,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":182,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":47,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":508,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":328,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":94,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":308,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":489,"org.easymock.tests.UsageUnorderedTest.message":309,"org.easymock.tests.UsageVerifyTest.twoReturns":363,"org.easymock.tests.UsageVarargTest.varargByteAccepted":346,"org.easymock.tests2.ThreadingTest.testThreadSafe":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":201,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":415,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":479,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":245,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests2.StubTest.stub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":376,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":246,"org.easymock.tests.UsageExpectAndThrowTest.longType":320,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":375,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":170,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.SerializationTest.testClass":209,"org.easymock.tests.LimitationsTest.mockNativeMethod":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":282,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":105,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.tests2.NameTest.nameForMocksControl":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":107,"org.easymock.tests2.MockedExceptionTest.testMockedException":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":189,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":424,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":434,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":321,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":432,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":28,"org.easymock.tests2.CompareToTest.testNotComparable":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":103,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":223,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":165,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":151,"org.easymock.tests.MockingTest.testTwoMocks":430,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":325,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":155,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":491,"org.easymock.samples.ExampleTest.removeNonExistingDocument":477,"org.easymock.tests.UsageStrictMockTest.differentMethods":445,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":110,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":61,"org.easymock.tests2.MockBuilderTest.testCreateMockString":102,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":191,"org.easymock.tests.UsageExpectAndThrowTest.floatType":319,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":56,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":214,"org.easymock.tests.UsageVerifyTest.twoThrows":362,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":306,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":36,"org.easymock.tests.LimitationsTest.privateConstructor":285,"org.easymock.tests2.UsageConstraintsTest.testNotNull":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":388,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":64,"org.easymock.tests2.UsageTest.defaultResetToNice":124,"org.easymock.samples.ExampleTest.voteAgainstRemovals":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":104,"org.easymock.tests.UsageVarargTest.differentLength":343,"org.easymock.tests2.CallbackTest.callback":215,"org.easymock.tests2.UsageConstraintsTest.equals":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":32,"org.easymock.tests.UsageTest.openCallCountByLastCall":423,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":456,"org.easymock.tests.UsageCallCountTest.tooFewCalls":413,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":161,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":313,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":490,"org.easymock.tests.UsageThrowableTest.throwCheckedException":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":428,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":350,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":109,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":378,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":163,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":58,"org.easymock.tests.ObjectMethodsTest.testHashCode":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":519,"org.easymock.tests2.NameTest.nameForNiceMock":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":63,"org.easymock.tests2.DependencyTest.testInterfaceMocking":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":207,"org.easymock.tests2.DelegateToTest.testStubDelegate":218,"org.easymock.tests2.AnswerTest.stubAnswer":57,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":442,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":97,"org.easymock.tests.UsageVarargTest.varargLongAccepted":345,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":234,"org.easymock.tests.UsageExpectAndReturnTest.floatType":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":212,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":482,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":21,"org.easymock.tests.UsageThrowableTest.noUpperLimit":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":130,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":177,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests2.SerializationTest.test":210,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":516,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testSame":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":264,"org.easymock.samples.SupportTest.addDocument":485,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":162,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":192,"org.easymock.tests.GenericTest.testPackageScope":289,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":435,"org.easymock.tests2.NameTest.nameForMock":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":275,"org.easymock.tests2.UsageStrictMockTest.differentMethods":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":267,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":331,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":393,"org.easymock.tests2.MockedExceptionTest.testRealException":67,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":305,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":517,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":455,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":380,"org.easymock.tests2.NameTest.nameForStrictMock":5,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":514,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":181,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.UsageStrictMockTest.range":171,"org.easymock.tests2.UsageConstraintsTest.lessThan":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":518,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":233,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":196,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":488,"org.easymock.tests2.UsageConstraintsTest.testOr":137,"org.easymock.tests.UsageRangeTest.combination":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":25,"org.easymock.tests.UsageTest.wrongArguments":422,"org.easymock.tests2.MockBuilderTest.testWithConstructor":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":193,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":276,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":465,"org.easymock.tests.UsageVarargTest.varargShortAccepted":344,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":416,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":228,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":83,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":370,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":89,"org.easymock.tests.UsageTest.unexpectedCallWithArray":421,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":277,"org.easymock.tests2.CaptureTest.testCapture":502,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":443,"org.easymock.tests2.UsageConstraintsTest.constraints":131,"org.easymock.samples.ExampleTest.addAndChangeDocument":478,"org.easymock.tests.UsageStrictMockTest.testVerify":447,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":484,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":365,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":269,"org.easymock.tests.LimitationsTest.abstractClass":284,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":46,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":338}}]
