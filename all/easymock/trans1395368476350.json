[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[1,2,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,2,25,26,27],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[43,44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[45,46,47,12,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,5,6,7,77,8,47,9,78,79,10,11,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,12,13,109,14,15,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,16,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,17,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,18,19,238,239,240,241,242,20,21,243,244,245,246,22,247,23,24,248,249,2,25,26,27,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,0,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[75,5,6,7,8,47,9,10,11,81,82,83,86,12,13,14,15,17,190,193,18,19,20,21,22,23,24,296,324,312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[249,28,325,32,326,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[337,188],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[50,338,338,339,339,51,52,340,53,54,55,56,57,58,59,60,341,342,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,5,6,7,77,8,9,78,79,10,11,80,81,82,343,344,345,346,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,12,13,109,14,15,110,111,112,113,114,115,116,117,118,119,120,121,122,128,129,130,131,132,16,347,134,135,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,159,160,348,349,350,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,351,184,185,17,187,188,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,18,19,238,239,240,241,242,20,21,243,244,245,246,22,247,23,24,248,249,2,25,26,27,250,251,252,253,254,255,325,260,352,353,354,355,356,357,358,359,360,361,362,363,34,364,261,365,35,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,0,281,282,283,284,285,286,287,288,289,290,291,292,293,294,3,295,366,367,368,369,370,371,372,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[62,63,151,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[28,32,327,330,331,332,333,334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[338,338,339,339,340,341,342,373,374,375,376,343,344,345,346,377,347,378,348,349,350,379,380,381,351,382,186,383,384,385,386,387,388,389,390,391,392,393,394,395,396,249,28,325,352,397,398,399,353,400,401,354,402,403,404,405,406,407,408,409,410,355,411,412,413,414,415,356,416,417,418,357,419,420,358,421,359,360,326,422,361,423,362,363,34,364,365,35,294,3,366,367,368,424,369,425,426,427,370,371,372,428,4,429,430,320,321,322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[340,358,359,360,431],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[432,325,260,352],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[269,270,271,272,273,274,275,276,277,278,286,287,291,292,298,299,300,301,308,309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[270,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[50,338,339,51,52,340,53,54,55,56,57,58,59,433,60,341,342,434,61,62,63,64,65,66,435,67,68,69,70,71,72,73,74,75,76,5,6,7,77,8,47,9,78,79,10,11,80,81,82,436,373,437,438,83,84,374,85,86,375,376,343,344,345,439,346,440,441,377,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,12,13,109,14,15,110,111,112,113,114,442,115,443,116,117,118,119,120,121,122,123,444,445,446,447,448,449,450,451,452,453,454,124,125,126,127,128,129,130,131,132,16,133,347,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,455,154,155,156,157,158,159,160,378,348,349,350,379,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,380,381,351,382,184,185,17,186,383,384,385,386,387,388,389,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,337,187,471,472,473,474,475,188,476,477,390,391,392,393,394,395,478,396,189,190,191,192,193,479,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,480,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,481,482,233,234,235,236,237,18,19,238,239,240,241,242,20,21,243,244,245,246,22,247,23,24,248,249,28,483,1,2,25,26,27,250,251,252,253,254,255,256,257,258,259,325,260,352,397,398,399,353,400,401,354,402,403,404,405,406,407,408,409,410,355,411,412,413,414,415,356,416,417,418,30,357,419,31,420,358,421,359,32,360,484,326,422,361,33,423,485,362,363,34,364,486,261,365,35,36,262,263,264,265,266,267,268,269,270,487,271,272,273,274,275,276,277,278,279,280,0,281,282,283,284,285,286,287,288,289,290,291,292,293,294,3,295,366,367,368,424,488,369,425,426,427,370,371,372,428,4,489,490,491,43,492,296,297,493,494,495,496,497,429,498,499,500,430,324,501,298,299,300,301,302,303,304,305,306,307,308,309,310,311,502,503,504,44,505,312,313,506,507,508,509,510,314,315,316,317,318,319,320,321,322,323],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[270,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[373],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":270,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":466,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":239,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":53,"org.easymock.tests2.DelegateToTest.testReturnException":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":135,"org.easymock.tests.MockingTest.testPartialClassMocking":344,"org.easymock.tests.MockClassControlTest.testToString":384,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":1,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":405,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":164,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":354,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":330,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":276,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":118,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":510,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":126,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":374,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":272,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":366,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":229,"org.easymock.tests2.CaptureTest.testPrimitive":301,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":183,"org.easymock.tests.UsageTest.moreThanOneArgument":8,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":209,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":202,"org.easymock.tests.UsageVarargTest.varargIntAccepted":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":335,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":144,"org.easymock.tests.ReplayStateInvalidUsageTest.times":451,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests2.DependencyTest.testClassMocking":481,"org.easymock.tests2.AnswerTest.answer":250,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":259,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":438,"org.easymock.tests2.CaptureTest.testAnd":298,"org.easymock.tests2.UsageTest.strictResetToDefault":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":224,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":206,"org.easymock.tests2.DelegateToTest.testDelegate":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":179,"org.easymock.tests.LimitationsTest.mockFinalMethod":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":149,"org.easymock.tests2.DependencyTest.testClassMockingSupport":482,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":81,"org.easymock.tests2.CaptureTest.testCapture1_2446744":302,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":257,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":445,"org.easymock.tests.UsageThrowableTest.throwError":194,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":84,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":497,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":211,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":417,"org.easymock.samples.PartialClassMockTest.testGetArea":340,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":446,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":113,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":406,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":165,"org.easymock.tests2.UsageTest.niceToStrict":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":358,"org.easymock.tests2.MockBuilderTest.testCreateMock":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":413,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":173,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":48,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":124,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":40,"org.easymock.tests.UsageOverloadedMethodTest.overloading":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":410,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":281,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":98,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":307,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":435,"org.easymock.tests.MockClassControlTest.testEquals":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":353,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":258,"org.easymock.tests2.CaptureTest.testCaptureAll":299,"org.easymock.tests.MockNameTest.defaultName":75,"org.easymock.tests2.UsageConstraintsTest.testMatches":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":210,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests.UsageVarargTest.allKinds":74,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":148,"org.easymock.samples.BasicClassMockTest.testPrintContent":342,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":200,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":139,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":478,"org.easymock.tests2.UsageConstraintsTest.greaterThan":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":213,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":372,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":396,"org.easymock.samples.ExampleTest.voteForRemoval":56,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":428,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":263,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":424,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":236,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":222,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":134,"org.easymock.tests2.CaptureTest.testCaptureFirst":311,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":223,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":244,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":94,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":265,"org.easymock.tests2.CaptureTest.testCapture2_2446744":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":73,"org.easymock.tests.GenericTest.testBridgedEquals":379,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":159,"org.easymock.tests.UsageExpectAndReturnTest.longType":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":145,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":220,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":431,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":182,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":76,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":207,"org.easymock.tests.UsageCallCountTest.tooManyCalls":160,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":169,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":363,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":455,"org.easymock.tests2.UsageConstraintsTest.testContains":280,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":322,"org.easymock.tests2.UsageConstraintsTest.testFind":271,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":163,"org.easymock.tests.MockTypeTest.fromEasyMockClass":83,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":107,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":217,"org.easymock.tests.UsageExpectAndReturnTest.object":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":508,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":228,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":331,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":192,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":42,"org.easymock.tests.UsageTest.exactCallCountByLastCall":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":103,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":64,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":490,"org.easymock.tests.MockClassControlTest.testHashCode":387,"org.easymock.tests2.EasyMockSupportTest.testVerify":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":408,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":256,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":485,"org.easymock.tests.UsageVarargTest.varargCharAccepted":67,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":477,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":476,"org.easymock.tests2.UsageTest.openCallCountByLastCall":240,"org.easymock.tests.DefaultClassInstantiatorTest.object":390,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":61,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":409,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":44,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":489,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":104,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":150,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":356,"org.easymock.tests2.UsageTest.resumeIfFailure":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":137,"org.easymock.tests2.StubTest.stubWithReturnValue":219,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":290,"org.easymock.tests2.SerializationTest.testAllMockedMethod":352,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":187,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":328,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":49,"org.easymock.samples.SupportTest.voteForRemovals":52,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":176,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":432,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":188,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":251,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":443,"org.easymock.tests.UsageExpectAndThrowTest.object":174,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":287,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":185,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":338,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":324,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":362,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":359,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":397,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":45,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":114,"org.easymock.tests2.CaptureTest.testCaptureNone":306,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":72,"org.easymock.tests2.ThreadingTest.testThreadSafe":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":411,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":157,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":193,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":341,"org.easymock.tests2.CaptureTest.testCapture_2617107":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":121,"org.easymock.tests2.UsageConstraintsTest.any":278,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":450,"org.easymock.tests2.StubTest.stub":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndThrowTest.longType":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":136,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":394,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":449,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":247,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":296,"org.easymock.tests2.SerializationTest.testClass":325,"org.easymock.tests.LimitationsTest.mockNativeMethod":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":106,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":504,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":248,"org.easymock.tests2.NameTest.nameForMocksControl":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":505,"org.easymock.tests2.MockedExceptionTest.testMockedException":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":401,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":480,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":168,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":346,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":360,"org.easymock.tests.MockingTest.testNicePartialClassMocking":345,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":502,"org.easymock.tests2.CaptureTest.testCaptureLast":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":82,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":35,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":275,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":288,"org.easymock.tests.MockingTest.testTwoMocks":343,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":172,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":292,"org.easymock.samples.ExampleTest.removeNonExistingDocument":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":506,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":447,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":491,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":392,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":264,"org.easymock.tests2.MockBuilderTest.testCreateMockString":423,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":402,"org.easymock.tests.UsageExpectAndThrowTest.floatType":166,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":399,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":483,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":355,"org.easymock.samples.ExampleTest.voteAgainstRemoval":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":371,"org.easymock.tests.LimitationsTest.privateConstructor":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":38,"org.easymock.tests2.UsageConstraintsTest.testNotNull":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":201,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":320,"org.easymock.tests2.UsageTest.defaultResetToNice":242,"org.easymock.samples.ExampleTest.voteAgainstRemovals":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":102,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":503,"org.easymock.tests.UsageVarargTest.differentLength":69,"org.easymock.tests2.CallbackTest.callback":235,"org.easymock.tests2.UsageConstraintsTest.equals":487,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":425,"org.easymock.tests.UsageTest.openCallCountByLastCall":78,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":120,"org.easymock.tests.UsageCallCountTest.tooFewCalls":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":127,"org.easymock.tests.UsageThrowableTest.throwCheckedException":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":46,"org.easymock.tests.MockingTest.testStrictClassMocking":375,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":365,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":313,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":452,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":261,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":255,"org.easymock.tests.ObjectMethodsTest.testHashCode":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":334,"org.easymock.tests2.NameTest.nameForNiceMock":26,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":266,"org.easymock.tests2.DependencyTest.testInterfaceMocking":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":332,"org.easymock.samples.ExampleTest.addDocument":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.DelegateToTest.testStubDelegate":316,"org.easymock.tests2.AnswerTest.stubAnswer":254,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":484,"org.easymock.tests.UsageVarargTest.varargLongAccepted":71,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":105,"org.easymock.tests.UsageExpectAndReturnTest.floatType":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":249,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":495,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageThrowableTest.noUpperLimit":195,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":268,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":429,"org.easymock.tests2.SerializationTest.test":260,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":303,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":88,"org.easymock.tests2.UsageConstraintsTest.testSame":273,"org.easymock.samples.SupportTest.addDocument":51,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":486,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":403,"org.easymock.tests.GenericTest.testPackageScope":348,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":494,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests2.NameTest.nameForMock":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":99,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":33,"org.easymock.tests2.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":178,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":215,"org.easymock.tests2.MockedExceptionTest.testRealException":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":469,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests2.NameTest.nameForStrictMock":25,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":420,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":29,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":430,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":393,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":357,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":407,"org.easymock.tests2.CaptureTest.testCaptureRightOne":308,"org.easymock.tests2.UsageConstraintsTest.testOr":274,"org.easymock.tests.UsageRangeTest.combination":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":3,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests2.MockBuilderTest.testWithConstructor":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":404,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":100,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":395,"org.easymock.tests.UsageVarargTest.varargShortAccepted":70,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":158,"org.easymock.tests2.UsageConstraintsTest.cmpTo":279,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":459,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests2.CaptureTest.testCaptureFromStub":309,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":444,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":419,"org.easymock.tests.UsageTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":101,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":109,"org.easymock.tests2.UsageConstraintsTest.constraints":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":60,"org.easymock.tests.UsageStrictMockTest.testVerify":111,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":146,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":93,"org.easymock.tests.LimitationsTest.abstractClass":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":143,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":226}}]
