[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[43,44,45,46,47],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,1,2,60,61,62,63,64,65,66,67,68,69,70,71,3,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,6,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,13,118,119,120,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,121,122,123,124,125,126,127,128,129,130,131,132,133,134,45,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,36,152,153,154,155,156,157,158,37,159,160,161,162,163,164,165,166,167,41,168,169,170,171,172,173,174,175,176,177,178,179,180,181,46,47,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[256,252,253,254],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[65,257,258,259,260,261],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[65,114,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[51,53,55,61,65,66,68,69,3,6,92,93,263,7,94,95,96,104,114,264,265,266,15,125,126,127,129,146,148,149,37,160,161,267,38,164,165,167,172,173,174,175,193,201,231,232,236,237,249,250],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[229,234,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[48,50,51,52,53,54,55,56,57,58,59,1,2,60,61,62,64,65,66,67,68,69,70,268,71,3,269,270,271,4,5,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,6,92,93,263,7,94,95,96,97,98,99,100,101,102,272,273,8,103,104,105,106,107,108,110,111,112,113,114,115,116,117,13,265,266,118,119,274,120,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,121,123,124,125,126,127,128,129,130,131,132,133,134,45,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,36,152,153,154,155,156,157,158,37,159,160,161,162,163,267,38,164,165,166,167,41,168,169,275,276,170,171,177,178,179,181,46,47,182,183,184,185,186,187,188,189,191,193,194,195,197,198,199,200,277,201,202,203,204,205,278,206,207,208,209,210,211,279,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,280,248,249,250,251,252,253,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[48,0,281,282,283,49,284,50,51,52,53,285,54,55,58,59,1,2,60,61,286,63,64,65,66,67,68,69,70,287,268,71,3,269,270,271,4,5,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,288,289,290,6,92,259,93,263,7,94,95,96,291,292,293,294,295,98,99,100,101,102,296,297,298,299,300,272,301,273,8,302,103,303,104,105,106,107,108,109,110,111,112,113,114,264,304,305,306,307,308,9,10,11,12,13,14,309,265,266,310,311,312,313,314,315,118,119,316,274,120,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,121,122,123,124,125,126,127,317,318,319,320,321,322,323,324,325,128,129,130,131,132,133,134,135,136,139,140,141,326,142,143,144,145,146,147,148,149,150,151,36,156,37,159,160,161,162,163,267,38,327,164,165,166,167,39,40,41,42,168,169,275,276,170,171,172,173,174,175,185,193,328,329,194,195,196,197,198,330,199,200,277,331,201,202,203,204,205,278,206,207,208,209,210,211,332,279,212,213,214,215,216,217,218,219,333,220,221,222,223,224,225,334,335,336,337,338,226,227,228,229,230,231,232,233,234,235,339,236,237,238,239,240,241,242,243,244,245,246,247,280,248,249,250,251,252,253,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[204,211,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[52,53,54,55,56,57,2,340,62,64,65,67,70,268,71,3,269,270,271,4,5,74,75,77,82,87,289,93,94,95,96,97,272,273,8,103,104,105,106,107,108,110,111,112,113,114,115,116,117,274,120,18,19,21,26,31,126,127,128,129,130,131,132,133,45,135,136,137,138,139,140,141,142,143,145,147,150,152,153,154,155,156,157,158,37,159,161,162,163,164,165,167,41,276,170,171,177,178,179,181,46,47,182,183,184,185,186,187,188,189,191,193,194,199,277,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,229,234,235,236,237,239,242,245,246,247,280,248,252,253,254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[341,56,57,342,343],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[48,0,281,58,59,1,2,60,61,286,65,66,98,99,100,101,102,296,114,13,14,118,119,146,147,276,189,346,197,198,330,202,203,204,205,278,206,207,208,209,210,211,332,279,212,213,347,225,226,227,228,229,230,231,232,233,234,235,339,236,237,238,239,240,241,242,243,244,245,246,247,280,248,249,250,251,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.internal.LastControl:95","failures":[202,204,211,228,229,231,233,234,339,245,249],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[348,349],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[65,257,258,259,260,261],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[282,283,294,295],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[51,52,53,54,55,56,57,58,59,1,2,61,62,64,65,66,67,68,69,70,268,71,3,269,270,271,4,5,74,75,77,82,87,288,289,93,94,95,96,97,272,273,8,103,104,105,106,107,108,110,111,112,113,114,115,116,117,274,120,18,19,21,26,31,121,126,127,128,129,130,131,132,133,134,45,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,152,153,154,155,156,157,158,37,159,161,162,163,164,165,167,41,276,170,171,177,178,179,181,46,47,182,183,184,185,186,187,188,189,191,193,194,199,277,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,229,231,234,235,236,237,239,242,245,246,247,280,248,249,252,253,254,255],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[350,202,203,204,205,278,206,207,208,209,210,211,332,279,212],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[65,257,258,259,260,261],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[48,0,281,282,283,49,284,50,51,52,53,285,54,55,341,56,57,342,343,58,59,1,2,60,61,286,351,352,353,340,354,355,356,357,358,359,360,361,362,62,363,63,64,65,66,67,68,69,70,287,268,71,3,269,270,271,4,5,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,288,289,364,365,290,366,6,92,259,93,263,7,94,95,96,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,291,383,384,385,386,387,292,388,293,294,295,97,98,99,100,101,102,296,297,298,299,300,272,301,273,8,302,103,303,104,105,106,389,107,108,109,110,111,112,113,114,264,304,305,390,306,391,392,307,393,308,394,395,396,115,116,397,117,398,399,400,9,10,11,12,13,14,309,265,266,310,311,312,401,315,118,119,316,402,403,404,405,406,407,408,409,274,120,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,121,122,123,124,125,126,127,317,318,319,320,410,348,411,412,413,349,414,321,322,323,324,325,128,129,130,131,132,133,415,134,43,43,44,44,45,135,136,137,138,139,140,416,417,418,419,420,141,326,421,422,423,424,425,142,143,144,145,146,147,148,149,150,151,36,426,427,428,429,154,155,156,157,37,159,160,161,162,163,267,38,327,164,165,166,167,39,40,41,42,168,169,275,276,170,171,430,431,176,432,177,433,178,434,435,436,181,437,46,438,439,440,441,442,443,47,444,445,182,446,447,183,184,185,186,187,188,448,189,449,450,346,190,191,192,451,193,328,329,194,195,196,197,452,198,330,199,200,277,331,201,202,203,204,205,278,206,207,208,209,210,211,332,279,212,213,214,215,217,218,333,221,222,223,224,347,453,454,455,456,457,225,334,458,459,460,461,462,335,336,337,338,226,227,228,229,463,230,231,232,233,234,235,339,236,237,238,239,240,241,242,243,244,245,246,247,280,248,249,250,251,252,253,254,255],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[464],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[59,60,66,68,69,3,72,73,76,78,79,80,81,83,84,85,86,88,89,90,91,6,92,263,7,96,376,378,386,387,388,103,15,121,122,123,124,125,127,146,148,149,36,37,160,267,38,166,167,168,169,275,180,193,195,200,203,278,208,209,279,212,226,227,228,230,231,232,233,236,238,240,241,242,243,244,249,250,251],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[0,1,2,268,3,269,270,271,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,126,36,37,38,39,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[341,343],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[50,51,52,53,54,55,57,1,61,64,67,68,69,70,71,97,104,105,106,107,108,110,111,112,113,114,128,130,131,132,133,134,135,136,137,138,139,140,145,147,148,149,150,151,163,177,203,204,206,207,208,209,212,216,221,222,223,224,280,254],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[431,172,184,465],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[466,467,468,469,470],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":229,"org.easymock.tests2.UsageTest.argumentsOrdered":165,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":163,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":135,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":10,"org.easymock.tests.MockingTest.testPartialClassMocking":115,"org.easymock.tests.MockClassControlTest.testToString":404,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":431,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":16,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":235,"org.easymock.tests2.UsageTest.wrongArguments":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":58,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":319,"org.easymock.samples.ExampleTest.answerVsDelegate":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":401,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":399,"org.easymock.tests2.UsageConstraintsTest.testNull":231,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":186,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":221,"org.easymock.tests2.CaptureTest.testPrimitive":205,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":35,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":323,"org.easymock.tests.UsageTest.argumentsOrdered":95,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":309,"org.easymock.tests.UsageVarargTest.varargIntAccepted":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":424,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":102,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.ReplayStateInvalidUsageTest.times":357,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":262,"org.easymock.tests2.DependencyTest.testClassMocking":344,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.CaptureTest.testAnd":202,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":322,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests2.DelegateToTest.testDelegate":201,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":31,"org.easymock.tests.LimitationsTest.mockFinalMethod":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":300,"org.easymock.tests2.DependencyTest.testClassMockingSupport":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":288,"org.easymock.tests2.CaptureTest.testCapture1_2446744":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":313,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":447,"org.easymock.samples.PartialClassMockTest.testGetArea":45,"org.easymock.tests.MockingTest.testInterfaceMocking":397,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":304,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":177,"org.easymock.tests2.MockBuilderTest.testCreateMock":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":25,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":260,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":317,"org.easymock.tests.UsageOverloadedMethodTest.overloading":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":83,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":239,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":210,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":389,"org.easymock.tests.MockClassControlTest.testEquals":408,"org.easymock.tests2.EasyMockSupportClassTest.testAll":181,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":33,"org.easymock.tests2.CaptureTest.testCaptureAll":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.MockNameTest.defaultName":316,"org.easymock.tests2.UsageConstraintsTest.testMatches":241,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":324,"org.easymock.samples.ExampleTest.voteForRemovals":133,"org.easymock.tests.UsageVarargTest.allKinds":114,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":125,"org.easymock.samples.BasicClassMockTest.testPrintContent":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":4,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":14,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":331,"org.easymock.tests2.UsageConstraintsTest.greaterThan":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":192,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":414,"org.easymock.samples.ExampleTest.voteForRemoval":130,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":448,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":97,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":9,"org.easymock.tests2.CaptureTest.testCaptureFirst":212,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":79,"org.easymock.tests2.UsageTest.moreThanOneArgument":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":276,"org.easymock.tests2.CaptureTest.testCapture2_2446744":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":180,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":113,"org.easymock.tests.GenericTest.testBridgedEquals":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":54,"org.easymock.tests.UsageExpectAndReturnTest.longType":75,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":34,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":280,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":32,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":321,"org.easymock.tests.UsageCallCountTest.tooManyCalls":55,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":271,"org.easymock.tests.MockingTest.testNiceClassMocking":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testClassMocking":395,"org.easymock.tests2.UsageConstraintsTest.testContains":238,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":284,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":41,"org.easymock.tests2.UsageConstraintsTest.testFind":230,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":15,"org.easymock.tests.MockTypeTest.fromEasyMockClass":312,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":198,"org.easymock.tests.UsageExpectAndReturnTest.object":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":220,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":108,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":392,"org.easymock.tests.UsageTest.exactCallCountByLastCall":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":265,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":430,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":88,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":417,"org.easymock.tests.MockClassControlTest.testHashCode":407,"org.easymock.tests2.EasyMockSupportTest.testVerify":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":441,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":347,"org.easymock.tests.UsageVarargTest.varargCharAccepted":107,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastCall":267,"org.easymock.tests.DefaultClassInstantiatorTest.object":410,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":223,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":281,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":442,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":416,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":406,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":22,"org.easymock.tests.CapturesMatcherTest.test":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":293,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":182,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":12,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":254,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":470,"org.easymock.samples.SupportTest.voteForRemovals":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":261,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":28,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":256,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":292,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":328,"org.easymock.tests.UsageExpectAndThrowTest.object":26,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":366,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":246,"org.easymock.tests2.DelegateToTest.testWrongClass":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":119,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests.UsageStrictMockTest.range":68,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":428,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":436,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":94,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":318,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":257,"org.easymock.tests2.CaptureTest.testCaptureNone":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":305,"org.easymock.tests.UsageUnorderedTest.message":61,"org.easymock.tests.UsageVerifyTest.twoReturns":127,"org.easymock.tests.UsageVarargTest.varargByteAccepted":112,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":53,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":137,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":307,"org.easymock.tests2.CaptureTest.testCapture_2617107":204,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":2,"org.easymock.tests2.UsageConstraintsTest.any":236,"org.easymock.tests2.StubTest.stub":151,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":11,"org.easymock.tests.UsageExpectAndThrowTest.longType":19,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":413,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":355,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":147,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.SerializationTest.testClass":252,"org.easymock.tests.LimitationsTest.mockNativeMethod":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":91,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":150,"org.easymock.tests2.NameTest.nameForMocksControl":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockedExceptionTest.testMockedException":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":437,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":7,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":452,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":20,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":179,"org.easymock.tests.MockingTest.testNicePartialClassMocking":116,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":188,"org.easymock.tests2.CompareToTest.testNotComparable":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":466,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":208,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":289,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":158,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":234,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":247,"org.easymock.tests.MockingTest.testTwoMocks":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":24,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":250,"org.easymock.samples.ExampleTest.removeNonExistingDocument":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests.UsageStrictMockTest.differentMethods":69,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":418,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":411,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":275,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":402,"org.easymock.tests.UsageExpectAndThrowTest.floatType":18,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":242,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":194,"org.easymock.tests.UsageVerifyTest.twoThrows":126,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.ExampleTest.voteAgainstRemoval":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":191,"org.easymock.tests.LimitationsTest.privateConstructor":362,"org.easymock.tests2.UsageConstraintsTest.testNotNull":249,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":5,"org.easymock.tests2.UsageTest.defaultResetToNice":327,"org.easymock.samples.ExampleTest.voteAgainstRemovals":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":109,"org.easymock.tests2.CallbackTest.callback":255,"org.easymock.tests2.UsageConstraintsTest.equals":463,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":449,"org.easymock.tests.UsageTest.openCallCountByLastCall":263,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":1,"org.easymock.tests.UsageCallCountTest.tooFewCalls":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":320,"org.easymock.tests.UsageThrowableTest.throwCheckedException":270,"org.easymock.tests.MockingTest.testStrictClassMocking":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":0,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":196,"org.easymock.tests.ObjectMethodsTest.testHashCode":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":467,"org.easymock.tests2.NameTest.nameForNiceMock":174,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.DependencyTest.testInterfaceMocking":142,"org.easymock.samples.ExampleTest.addDocument":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":446,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests2.AnswerTest.stubAnswer":195,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":66,"org.easymock.tests.UsageVarargTest.varargLongAccepted":111,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":376,"org.easymock.tests.UsageExpectAndReturnTest.floatType":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":171,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":423,"org.easymock.tests.UsageThrowableTest.noUpperLimit":71,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":244,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":227,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":426,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":206,"org.easymock.tests2.SerializationTest.test":253,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":73,"org.easymock.tests2.UsageConstraintsTest.testSame":232,"org.easymock.samples.SupportTest.addDocument":139,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":422,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":398,"org.easymock.tests2.NameTest.nameForMock":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":84,"org.easymock.tests2.UsageStrictMockTest.differentMethods":149,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":30,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":124,"org.easymock.tests2.MockedExceptionTest.testRealException":42,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":469,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":360,"org.easymock.tests2.NameTest.nameForStrictMock":173,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":432,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":427,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":412,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":245,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":176,"org.easymock.tests2.UsageStrictMockTest.range":148,"org.easymock.tests2.UsageConstraintsTest.lessThan":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":440,"org.easymock.tests2.CaptureTest.testCaptureRightOne":211,"org.easymock.tests2.UsageConstraintsTest.testOr":233,"org.easymock.tests.UsageRangeTest.combination":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":184,"org.easymock.tests.UsageTest.wrongArguments":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":439,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":368,"org.easymock.tests.UsageVarargTest.varargShortAccepted":110,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":349,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":285,"org.easymock.tests2.UsageConstraintsTest.cmpTo":237,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests2.CaptureTest.testCaptureFromStub":332,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":351,"org.easymock.tests.UsageTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":86,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":67,"org.easymock.tests2.UsageConstraintsTest.constraints":228,"org.easymock.samples.ExampleTest.addAndChangeDocument":134,"org.easymock.tests.UsageStrictMockTest.testVerify":287,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":136,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":297,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":78,"org.easymock.tests.LimitationsTest.abstractClass":361,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":101,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219}}]
