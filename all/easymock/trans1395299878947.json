[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[296,297,298,299,300,196,301,302,303,291],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[169,173,304,301,305,306,302,307,308,309,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[311,291,292,293],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[146,147,305,308,312],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[235],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[314,315,146,147,148,196,301,316,305,306,199,302,317,303,203,308,207,208,312,220,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[0,1,318,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,319,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,75,76,77,320,79,80,81,82,83,84,85,86,87,88,89,321,90,91,92,97,322,323,99,100,324,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,325,125,126,127,128,129,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,191,192,193,194,195,196,326,327,328,329,198,199,201,202,204,206,207,208,209,210,211,212,213,214,215,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,264,265,266,267,268,269,270,271,272,273,330,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[272],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[232,234,242,266,267,269,271,272,330,283,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[311,291,292,293],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[0,1,331,332,333,2,9,315,11,12,13,14,15,16,17,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,334,335,54,55,58,59,62,336,295,337,338,339,63,65,66,67,68,69,75,76,77,320,321,340,341,342,90,91,92,93,94,95,96,97,98,343,322,323,344,345,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,325,125,126,127,128,129,134,135,136,137,138,139,140,141,142,144,145,146,146,147,147,148,154,155,156,157,160,162,163,165,166,167,168,169,170,171,172,173,174,175,176,178,180,181,182,185,186,187,188,189,190,191,192,193,194,195,196,198,199,201,202,204,206,207,208,209,210,211,212,213,214,215,217,219,220,221,222,346,313,223,224,225,226,227,347,228,229,230,348,231,232,233,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,294],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1,13,93,94,95,96,97,98,166,187,188,189,190],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,11,12,15,21,65,66,67,68,69,99,100,134,135,136,137,138,146,147,160,166,243,264,265,268,269,270,271,276,278,279,281,282,288,289,290],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:153","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectByType(java.lang.Object, java.util.List<java.lang.reflect.Field>, org.easymock.internal.InjectionPlan.getUnqualifiedInjections())","type":"CtInvocationImpl"},"failures":[149,150,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[0,9,315,11,12,15,17,21,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,62,65,66,67,68,69,320,90,91,92,99,100,101,102,103,124,325,125,126,127,129,139,141,142,144,148,154,155,156,157,160,162,163,166,167,168,169,170,171,172,173,174,175,176,178,180,181,182,185,186,189,191,192,193,194,195,196,198,199,201,202,204,206,207,208,209,210,211,212,213,214,215,217,219,220,221,222,224,229,232,233,235,236,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[370,371,372,194],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[373],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[374,281],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[20,375,376,56,377,378],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[21,54,58,59,62,127,129,160,174,180,181,186,222],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[296,297,298,379,380,301,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[169,304,211,218,221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[296,297,298,379,380,301,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1205","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:786","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[371,372],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[232,234,242,266,267,271,272,330,283],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":267,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests2.UsageTest.argumentsOrdered":184,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":96,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":179,"org.easymock.tests2.StubTest.stubWithReturnValue":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":302,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":43,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":149,"org.easymock.tests2.SerializationTest.testAllMockedMethod":293,"org.easymock.tests2.DelegateToTest.testReturnException":228,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":94,"org.easymock.tests.MockingTest.testPartialClassMocking":90,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":378,"org.easymock.samples.SupportTest.voteForRemovals":154,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":314,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":116,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":311,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":295,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":104,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":346,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":372,"org.easymock.tests.UsageExpectAndThrowTest.object":114,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":296,"org.easymock.tests2.DelegateToTest.testWrongClass":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":100,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":11,"org.easymock.tests2.UsageTest.wrongArguments":177,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":369,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":146,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":132,"org.easymock.samples.ExampleTest.answerVsDelegate":140,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests2.UsageConstraintsTest.testNull":269,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":201,"org.easymock.tests2.CaptureTest.testPrimitive":235,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":15,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests.UsageTest.moreThanOneArgument":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":123,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":131,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":136,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":341,"org.easymock.tests2.CaptureTest.testCaptureNone":240,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":87,"org.easymock.tests2.ThreadingTest.testThreadSafe":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":343,"org.easymock.tests.UsageTest.argumentsOrdered":61,"org.easymock.tests.UsageVarargTest.varargIntAccepted":81,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":5,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":151,"org.easymock.tests2.CaptureTest.testCapture_2617107":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":380,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":14,"org.easymock.tests2.UsageConstraintsTest.any":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":200,"org.easymock.tests2.StubTest.stub":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":95,"org.easymock.tests.UsageExpectAndThrowTest.longType":107,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests2.SerializationTest.testClass":291,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests.LimitationsTest.mockNativeMethod":17,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":315,"org.easymock.tests2.AnswerTest.answer":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":53,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests2.CaptureTest.testAnd":232,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":218,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests2.NameTest.nameForMocksControl":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":363,"org.easymock.tests2.MockedExceptionTest.testMockedException":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":125,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":345,"org.easymock.tests2.DelegateToTest.testDelegate":231,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":108,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":210,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":202,"org.easymock.tests.MockingTest.testNicePartialClassMocking":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":119,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests2.CaptureTest.testCaptureLast":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":334,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":272,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":173,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":74,"org.easymock.tests2.CaptureTest.testCapture1_2446744":236,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":112,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":183,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":289,"org.easymock.tests.UsageThrowableTest.throwError":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":365,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":352,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":193,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":359,"org.easymock.tests2.MockBuilderTest.testCreateMockString":205,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":324,"org.easymock.tests.UsageExpectAndThrowTest.floatType":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":138,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":280,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":316,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":208,"org.easymock.samples.PartialClassMockTest.testGetArea":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":340,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":105,"org.easymock.tests2.UsageTest.niceToStrict":178,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":310,"org.easymock.tests2.UsageConstraintsTest.testNotNull":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":33,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":187,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":199,"org.easymock.tests2.MockBuilderTest.testCreateMock":203,"org.easymock.tests2.UsageTest.defaultResetToNice":182,"org.easymock.samples.ExampleTest.voteAgainstRemovals":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests.UsageVarargTest.differentLength":84,"org.easymock.tests2.CallbackTest.callback":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":366,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":312,"org.easymock.tests.UsageTest.openCallCountByLastCall":58,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":113,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":251,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":373,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":130,"org.easymock.tests.UsageCallCountTest.tooFewCalls":3,"org.easymock.tests.UsageOverloadedMethodTest.overloading":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":278,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":45,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":277,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":133,"org.easymock.tests.UsageThrowableTest.throwCheckedException":30,"org.easymock.tests2.EasyMockSupportClassTest.testAll":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":10,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":262,"org.easymock.tests2.CaptureTest.testCaptureAll":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":72,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.testMatches":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":137,"org.easymock.samples.ExampleTest.voteForRemovals":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":379,"org.easymock.tests2.NameTest.nameForNiceMock":328,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":195,"org.easymock.tests.UsageVarargTest.allKinds":89,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":127,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":73,"org.easymock.samples.BasicClassMockTest.testPrintContent":152,"org.easymock.samples.ExampleTest.addDocument":143,"org.easymock.tests2.DelegateToTest.testStubDelegate":229,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":32,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests2.AnswerTest.stubAnswer":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":355,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":98,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":300,"org.easymock.tests2.UsageConstraintsTest.greaterThan":281,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":221,"org.easymock.tests.UsageVarargTest.varargLongAccepted":86,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":25,"org.easymock.samples.ExampleTest.voteForRemoval":141,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":52,"org.easymock.tests.UsageExpectAndReturnTest.floatType":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":196,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":357,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":282,"org.easymock.tests.UsageThrowableTest.noUpperLimit":27,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":265,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests2.SerializationTest.test":292,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":237,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":248,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":28,"org.easymock.tests2.UsageConstraintsTest.testSame":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":35,"org.easymock.samples.SupportTest.addDocument":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":93,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":347,"org.easymock.tests2.CaptureTest.testCaptureFirst":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":249,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":41,"org.easymock.tests.GenericTest.testPackageScope":9,"org.easymock.tests2.CaptureTest.testCapture2_2446744":244,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":194,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":204,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":356,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":88,"org.easymock.tests.GenericTest.testBridgedEquals":349,"org.easymock.tests2.NameTest.nameForMock":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":7,"org.easymock.tests.UsageExpectAndReturnTest.longType":37,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":122,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":342,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":286,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":120,"org.easymock.tests2.UsageStrictMockTest.differentMethods":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":38,"org.easymock.tests.UsageCallCountTest.tooManyCalls":8,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":118,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":126,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":2,"org.easymock.tests2.MockedExceptionTest.testRealException":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":109,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests2.NameTest.nameForStrictMock":327,"org.easymock.tests2.UsageConstraintsTest.testContains":276,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":189,"org.easymock.tests2.UsageConstraintsTest.testFind":268,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":103,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":227,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":18,"org.easymock.tests.UsageExpectAndReturnTest.object":44,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":217,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":367,"org.easymock.tests2.UsageStrictMockTest.range":162,"org.easymock.tests2.UsageConstraintsTest.lessThan":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":297,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":353,"org.easymock.tests.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":299,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":247,"org.easymock.tests2.CaptureTest.testCaptureRightOne":242,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":322,"org.easymock.tests2.UsageConstraintsTest.testOr":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":301,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":211,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":79,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":50,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":76,"org.easymock.tests.UsageTest.wrongArguments":57,"org.easymock.tests2.MockBuilderTest.testWithConstructor":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":351,"org.easymock.tests2.EasyMockSupportTest.testVerify":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":47,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":332,"org.easymock.tests.UsageVarargTest.varargShortAccepted":85,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":6,"org.easymock.tests2.UsageConstraintsTest.cmpTo":275,"org.easymock.tests.UsageVarargTest.varargCharAccepted":82,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":313,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests2.UsageTest.openCallCountByLastCall":180,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":181,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":331,"org.easymock.tests2.CaptureTest.testCaptureFromStub":243,"org.easymock.tests.UsageTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":111,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":4,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":48,"org.easymock.tests2.UsageConstraintsTest.constraints":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":219,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":110,"org.easymock.samples.ExampleTest.addAndChangeDocument":145,"org.easymock.tests.CapturesMatcherTest.test":64,"org.easymock.tests.UsageStrictMockTest.testVerify":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":51,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":337,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":209,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":19,"org.easymock.tests2.CompareToTest.testGreateThan":374,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":71,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":238,"org.easymock.tests2.UsageTest.resumeIfFailure":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":40,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":252,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":80}}]
