[{"position":"org.easymock.internal.MockBuilder:223","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[8,9,11,12,13,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[19,20,21,22,23,24,25,26,27,28,29],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[30,5,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[46,6,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,7,87,0,88,89,90,30,91,92,93,94,95,19,96,97,98,99,100,101,21,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,22,23,117,24,118,25,26,119,120,121,122,123,124,125,126,127,128,28,129,130,131,29,132,133,5,31,32,33,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,156,157,157,158,159,160,161,162,34,163,164,165,166,167,168,35,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,36,37,38,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,40,41,42,43,44,45,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[271,272,273,274,275,276],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[6,1,277,91,278,92,2,93,94,279,95,280,281,282,3,158,283,284,240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[6,8,9,285,11,12,13,17,18,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[286,287,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[19,20,21,22,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[271,272,273,274,275,276],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[289],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[290,291,292,293,294,46,295,296,297,298,299,300,6,47,301,302,303,304,305,48,49,50,51,52,53,306,307,54,55,56,308,57,58,59,60,309,61,310,62,63,64,311,312,65,66,313,314,315,316,317,318,319,67,68,69,70,71,72,73,74,75,76,77,78,320,79,80,81,82,83,321,84,85,86,322,7,8,323,324,325,326,87,327,328,0,329,330,331,332,333,334,335,336,337,88,338,339,340,341,342,89,343,344,345,346,347,348,349,90,30,1,350,91,278,351,352,92,2,93,9,94,353,10,279,95,354,281,355,19,96,20,97,98,356,357,99,100,101,21,102,103,104,105,106,107,108,109,110,3,358,111,359,360,361,112,113,114,362,4,115,116,22,23,363,117,24,118,25,26,119,27,120,121,122,123,124,125,126,127,128,28,129,130,364,131,29,132,133,5,31,32,33,365,366,367,368,369,134,370,371,372,373,374,375,135,136,137,138,139,140,141,142,143,144,145,376,377,146,378,147,148,379,380,149,381,150,151,152,153,382,154,383,155,384,156,157,158,385,386,159,160,161,162,34,163,164,165,387,388,389,390,166,167,168,35,169,170,283,391,392,393,394,284,395,396,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,273,397,194,195,398,399,196,36,37,38,400,401,197,402,403,404,405,406,407,198,199,200,201,202,203,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,204,432,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,433,225,434,226,227,228,229,230,231,232,233,234,235,435,436,437,438,439,440,441,39,442,443,444,445,446,447,448,449,236,450,451,452,453,454,237,455,456,238,457,458,459,460,461,462,463,40,41,42,43,44,45,464,465,466,467,468,469,470,471,472,473,474,475,476,239,477,240,478,479,480,481,482,483,484,485,486,241,242,243,244,245,246,247,248,249,487,250,251,488,252,489,253,254,255,490,491,492,493,494,495,256,257,258,259,496,497,276,260,498,261,262,499,500,501,502,503,263,264,504,265,505,506,507,266,267,268,269,270],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[310,109,126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[60,309,311,312,271,508,272,509,193,273,397,398,399,274,275,510,276],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[511,115,127,131],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[512,127],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[60,309,311,312,346,347,348,349,146,147,148,193,397,398,399,203,241,242,243,276,260,261,262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[513],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[447],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[30,5,31,32,33,34,35,37,38,428,39,40,41,42,43,44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[52,53],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[46,6,47,301,302,303,304,305,48,51,52,53,54,55,56,57,58,59,60,309,61,310,62,63,64,311,312,65,66,67,68,69,70,71,72,73,74,75,76,77,78,320,79,80,81,82,83,84,85,86,7,87,0,88,89,90,30,1,91,92,2,93,94,279,95,281,19,96,20,97,98,356,357,99,100,101,21,102,103,104,105,106,107,108,109,110,3,111,361,112,113,114,115,116,22,23,117,24,118,25,26,119,120,121,122,123,124,125,126,127,128,28,129,130,364,131,29,132,133,5,31,32,33,134,136,137,138,140,141,142,143,144,145,376,377,146,378,147,148,379,380,149,381,150,151,152,153,382,154,155,384,156,157,158,385,386,162,34,163,164,165,387,388,389,390,167,168,35,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,273,397,194,195,398,399,196,197,402,403,404,405,406,407,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,40,41,42,43,44,45,464,465,466,468,469,470,471,472,473,474,475,239,477,241,242,243,244,245,246,247,248,249,250,251,489,491,492,493,494,495,256,258,259,514,514,496,497,276,260,498,261,262,499,263,264,265],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[36,37,38,39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[314,315,316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[47,301,302,303,304,305,48,49,50,51,52,53,306,307,54,55,56,57,58,59,60,309,61,310,62,63,64,311,312,65,66,313,317,318,319,67,68,69,70,71,72,74,76,77,78,320,79,83,84,324,87,328,330,336,339,342,90,30,355,19,96,20,97,98,356,357,99,100,101,21,102,103,104,105,106,107,108,109,110,3,358,111,360,361,112,114,362,115,116,22,23,117,24,118,25,26,119,27,120,121,122,123,124,125,126,127,128,28,129,130,364,131,29,132,133,5,31,32,33,134,135,136,137,138,139,140,141,142,143,144,145,376,377,146,378,147,148,379,380,149,381,150,151,152,153,382,154,383,155,385,386,159,160,161,162,34,163,164,165,387,388,389,390,166,167,168,35,169,170,393,396,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,273,397,194,195,398,399,196,36,37,38,400,401,197,402,403,404,405,406,407,198,199,200,201,202,203,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,433,225,434,226,227,228,229,230,231,232,233,234,235,236,237,238,458,459,460,461,462,40,41,42,43,44,45,464,465,466,468,469,470,471,472,473,474,475,239,477,240,478,479,480,481,482,483,484,485,486,241,242,243,244,245,246,247,248,249,487,250,251,488,252,489,253,254,255,491,492,493,494,495,256,257,258,259,496,497,276,260,498,261,262,499,500,501,502,503,504,505,506,507,266,267,268,269,270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.UsageTest.argumentsOrdered":312,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":444,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":310,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":381,"org.easymock.tests2.DelegateToTest.testReturnException":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":41,"org.easymock.tests.MockingTest.testPartialClassMocking":263,"org.easymock.tests.MockClassControlTest.testToString":481,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":205,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":11,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":167,"org.easymock.tests2.UsageTest.wrongArguments":309,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":389,"org.easymock.samples.ExampleTest.answerVsDelegate":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":284,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":506,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":108,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":486,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":76,"org.easymock.tests2.CaptureTest.testPrimitive":97,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageTest.moreThanOneArgument":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":224,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":246,"org.easymock.tests.UsageTest.argumentsOrdered":399,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":266,"org.easymock.tests.UsageVarargTest.varargIntAccepted":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":198,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":202,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":287,"org.easymock.tests.ReplayStateInvalidUsageTest.times":426,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests2.DependencyTest.testClassMocking":306,"org.easymock.tests2.AnswerTest.answer":48,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":305,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":392,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests2.UsageTest.strictResetToDefault":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":351,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":71,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":258,"org.easymock.tests2.DelegateToTest.testDelegate":140,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":220,"org.easymock.tests.LimitationsTest.mockFinalMethod":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":495,"org.easymock.tests2.DependencyTest.testClassMockingSupport":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":433,"org.easymock.tests2.CaptureTest.testCapture1_2446744":98,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":303,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":420,"org.easymock.tests.UsageThrowableTest.throwError":226,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":394,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":490,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":344,"org.easymock.samples.PartialClassMockTest.testGetArea":158,"org.easymock.tests.MockingTest.testInterfaceMocking":504,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":421,"org.easymock.tests2.CompareToTest.testLessOrEqual":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":160,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":463,"org.easymock.tests2.UsageTest.niceToStrict":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":92,"org.easymock.tests2.MockBuilderTest.testCreateMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":214,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":271,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":72,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":391,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":400,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":387,"org.easymock.tests.UsageOverloadedMethodTest.overloading":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":342,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":124,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":182,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":123,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":467,"org.easymock.tests.MockClassControlTest.testEquals":485,"org.easymock.tests2.EasyMockSupportClassTest.testAll":87,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":477,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":493,"org.easymock.tests2.CaptureTest.testCaptureAll":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":304,"org.easymock.tests.MockNameTest.defaultName":417,"org.easymock.tests2.UsageConstraintsTest.testMatches":125,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":247,"org.easymock.samples.ExampleTest.voteForRemovals":154,"org.easymock.tests.UsageVarargTest.allKinds":475,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":494,"org.easymock.samples.BasicClassMockTest.testPrintContent":386,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":232,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":376,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":415,"org.easymock.tests2.UsageConstraintsTest.greaterThan":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":114,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":416,"org.easymock.samples.ExampleTest.voteForRemoval":152,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":362,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":316,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":3,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":191,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":69,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":40,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":135,"org.easymock.tests2.CaptureTest.testCaptureFirst":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":70,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":489,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":178,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":103,"org.easymock.tests2.UsageTest.moreThanOneArgument":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":95,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":474,"org.easymock.tests.GenericTest.testBridgedEquals":478,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":406,"org.easymock.tests.UsageExpectAndReturnTest.longType":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":491,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":223,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":280,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":244,"org.easymock.tests.UsageCallCountTest.tooManyCalls":407,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":288,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":231,"org.easymock.tests.MockingTest.testNiceClassMocking":507,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":81,"org.easymock.tests.MockingTest.testClassMocking":502,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":401,"org.easymock.tests2.UsageConstraintsTest.testContains":122,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":277,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":117,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":165,"org.easymock.tests.MockTypeTest.fromEasyMockClass":393,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":496,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":57,"org.easymock.tests.UsageExpectAndReturnTest.object":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":75,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":469,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":12,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":461,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":267,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":510,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":464,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":187,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":250,"org.easymock.tests.MockClassControlTest.testHashCode":484,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":366,"org.easymock.tests2.EasyMockSupportTest.testVerify":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":335,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":286,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":249,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":302,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":355,"org.easymock.tests.UsageVarargTest.varargCharAccepted":468,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":408,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastCall":62,"org.easymock.tests.DefaultClassInstantiatorTest.object":409,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":253,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":365,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":483,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":211,"org.easymock.tests.CapturesMatcherTest.test":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":36,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":89,"org.easymock.tests2.UsageTest.resumeIfFailure":65,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":43,"org.easymock.tests2.StubTest.stubWithReturnValue":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":301,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":236,"org.easymock.samples.SupportTest.voteForRemovals":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":272,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":217,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":237,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":49,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":457,"org.easymock.tests.UsageExpectAndThrowTest.object":215,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":234,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":235,"org.easymock.samples.ConstructorCalledMockTest.testTax":156,"org.easymock.tests.UsageStrictMockTest.range":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":318,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":216,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":93,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":428,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":388,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":161,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests.UsageUnorderedTest.message":203,"org.easymock.tests.UsageVerifyTest.twoReturns":243,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":289,"org.easymock.tests.UsageVarargTest.varargByteAccepted":473,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":338,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":404,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":462,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":385,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":509,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":169,"org.easymock.tests2.UsageConstraintsTest.any":120,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":425,"org.easymock.tests2.StubTest.stub":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":42,"org.easymock.tests.UsageExpectAndThrowTest.longType":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":413,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":424,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":378,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":190,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":292,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":379,"org.easymock.tests2.NameTest.nameForMocksControl":349,"org.easymock.tests2.MockedExceptionTest.testMockedException":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":328,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":209,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":265,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":308,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":94,"org.easymock.tests.MockingTest.testNicePartialClassMocking":264,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":110,"org.easymock.tests2.CaptureTest.testCaptureLast":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":225,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":86,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":503,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":213,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":132,"org.easymock.samples.ExampleTest.removeNonExistingDocument":383,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":422,"org.easymock.tests.UsageStrictMockTest.differentMethods":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":367,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":411,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":281,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":479,"org.easymock.tests.UsageExpectAndThrowTest.floatType":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":329,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":51,"org.easymock.tests.UsageVerifyTest.twoThrows":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":323,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":113,"org.easymock.tests.LimitationsTest.privateConstructor":431,"org.easymock.tests2.UsageConstraintsTest.testNotNull":29,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":233,"org.easymock.tests2.UsageTest.defaultResetToNice":64,"org.easymock.samples.ExampleTest.voteAgainstRemovals":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":186,"org.easymock.tests.UsageVarargTest.differentLength":470,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":291,"org.easymock.tests2.CallbackTest.callback":79,"org.easymock.tests2.UsageConstraintsTest.equals":363,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":359,"org.easymock.tests.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":35,"org.easymock.tests.UsageCallCountTest.tooFewCalls":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":390,"org.easymock.tests.UsageThrowableTest.throwCheckedException":230,"org.easymock.tests.MockingTest.testStrictClassMocking":501,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":275,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":34,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":295,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":427,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":84,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":53,"org.easymock.tests.ObjectMethodsTest.testHashCode":460,"org.easymock.tests2.CompareToTest.testGreateOrEqual":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":17,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests2.NameTest.nameForNiceMock":348,"org.easymock.tests2.DependencyTest.testInterfaceMocking":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":13,"org.easymock.samples.ExampleTest.addDocument":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":339,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.AnswerTest.stubAnswer":52,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":260,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":353,"org.easymock.tests.UsageVarargTest.varargLongAccepted":472,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":189,"org.easymock.tests.UsageExpectAndReturnTest.floatType":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":157,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":128,"org.easymock.tests.UsageThrowableTest.noUpperLimit":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":116,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":313,"org.easymock.tests2.SerializationTest.test":47,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":356,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":172,"org.easymock.tests2.UsageConstraintsTest.testSame":118,"org.easymock.samples.SupportTest.addDocument":380,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":321,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":330,"org.easymock.tests.GenericTest.testPackageScope":239,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":505,"org.easymock.tests2.NameTest.nameForMock":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":183,"org.easymock.tests2.UsageStrictMockTest.differentMethods":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":219,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":458,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":259,"org.easymock.tests2.MockedExceptionTest.testRealException":33,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":447,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":146,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":168,"org.easymock.tests2.NameTest.nameForStrictMock":347,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":352,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":317,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":412,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":91,"org.easymock.tests2.UsageStrictMockTest.range":147,"org.easymock.tests2.UsageConstraintsTest.lessThan":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":14,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":68,"org.easymock.tests2.CaptureTest.testCaptureRightOne":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":334,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":513,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":106,"org.easymock.tests.UsageTest.wrongArguments":397,"org.easymock.tests2.MockBuilderTest.testWithConstructor":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":331,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":184,"org.easymock.tests.UsageVarargTest.varargShortAccepted":471,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":414,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":405,"org.easymock.tests2.UsageConstraintsTest.cmpTo":121,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CaptureTest.testCaptureFromStub":102,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":419,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":278,"org.easymock.tests.UsageTest.unexpectedCallWithArray":273,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":185,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":498,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.samples.ExampleTest.addAndChangeDocument":155,"org.easymock.tests.UsageStrictMockTest.testVerify":500,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":384,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":497,"org.easymock.tests2.CompareToTest.testGreateThan":512,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":492,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":200,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":282,"org.easymock.tests.LimitationsTest.abstractClass":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":201,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":73}}]
