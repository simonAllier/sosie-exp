[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[57,58,59,60],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[61,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[63,64,65,66,67,68,69,11,12,15,18,20,70,71,72,73,74,75,34,36,76,77,78,79,80,81,42,43,44,45,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[110,111,112,113],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[114,115,116,117,118,119,120,121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.Range:36","failures":[122,123,124,125,126,127,63,128,0,1,2,129,130,131,3,4,132,133,134,135,136,137,138,5,139,6,140,141,142,143,144,145,146,147,114,64,148,115,149,116,117,150,151,152,153,154,155,156,157,158,159,160,161,162,65,66,67,68,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,69,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,58,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,59,214,215,216,217,218,60,219,220,221,222,223,224,7,225,226,8,227,228,229,230,231,232,233,234,235,9,236,237,238,239,240,10,241,242,243,11,244,12,13,245,246,14,15,16,247,17,248,249,18,19,250,20,251,252,253,254,118,70,255,119,256,120,121,257,71,72,21,258,259,260,261,262,263,22,23,24,25,264,265,26,27,266,267,268,269,270,271,272,28,273,274,275,276,277,278,279,280,73,281,282,283,284,285,286,74,287,288,289,290,75,29,30,291,31,32,33,34,292,35,293,294,36,37,38,39,295,40,296,297,298,299,300,301,76,302,110,111,303,304,305,306,307,77,78,79,80,308,309,310,311,312,313,314,315,316,112,113,317,318,319,320,321,322,323,324,325,326,327,41,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,81,42,43,44,45,82,83,84,372,85,61,373,374,375,62,376,377,378,46,47,48,379,380,381,382,383,384,385,386,387,86,87,88,89,90,91,92,93,94,95,96,97,98,388,49,389,390,391,392,50,393,394,395,396,99,397,398,399,400,401,402,403,100,404,405,406,407,101,408,409,410,411,102,103,104,412,51,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,52,472,473,474,475,105,106,107,108,109,476,477,478,479,53,54,55,480,56,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[489,490],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[378],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[2,5,11,491,12,13,14,15,16,17,18,19,492,493,20,34,48,49,50],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[417,424,428,433,434],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[12,19,37,40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[268],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:88","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : org.easymock.internal.InjectionPlan.getQualifiedInjections()) {\n    if (!(org.easymock.internal.Injection.isMatched())) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n    } \n}","type":"CtForEachImpl"},"failures":[131,132,144,145,146,147,114,64,148,115,149,116,117,150,251,252,253,254,118,70,255,119,256,120,121,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[494,495,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[423],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[135],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[292],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[302,110,111],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[163,166,167,168,170,173,174,175,178,179,180,181,197,213,12,18,19,20,275,278,281,285,286,288,30,37,39,361,380,382,384,385,386,395,99,397,400,401,402,101,408,409,410,440,474,475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[497,498,499,500,382,99],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[160,162,65,165,166,182,183,184,185,186,187,188,189,190,191,192,193,194,195,58,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,59,214,215,216,217,218,60,219,220,221,243,11,279,73,35,36,303,304,305,306,307,332,333,366,382,383,410,102,465,466,467,468,469,476,477,484,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[375,501,502],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[503],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[122,123,124,125,126,127,63,128,0,1,2,129,130,131,3,3,4,4,132,134,135,136,138,5,139,6,142,143,64,158,159,160,162,65,66,67,68,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,69,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,58,196,197,198,200,201,202,203,204,205,207,208,209,210,211,212,213,59,214,215,216,217,218,60,219,220,221,7,8,9,10,11,12,14,15,16,17,18,19,20,70,71,72,21,258,260,261,262,263,22,23,24,25,265,26,27,267,270,271,272,28,275,276,277,278,279,280,73,281,282,283,284,285,286,74,287,288,289,290,75,29,30,291,31,32,33,34,35,36,37,38,39,296,297,298,299,301,76,303,304,305,306,307,77,78,79,80,308,309,310,311,312,313,314,315,318,323,324,325,326,327,41,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,362,363,364,365,366,81,42,43,44,45,82,83,84,85,46,47,380,381,382,383,384,385,386,387,86,87,88,89,90,91,92,93,94,95,96,97,98,395,396,99,397,398,399,400,401,402,403,100,404,405,406,407,101,408,409,410,102,103,104,413,414,415,440,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,52,473,474,475,105,106,107,108,109,476,477,54,55,56,484,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[201],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[2,5,504,11,491,12,13,14,15,16,17,18,19,493,20,34,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":198,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":395,"org.easymock.tests2.UsageTest.argumentsOrdered":179,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":132,"org.easymock.tests2.DelegateToTest.testReturnException":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":329,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.tests.MockClassControlTest.testToString":43,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":259,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":230,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":335,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":205,"org.easymock.tests2.UsageTest.wrongArguments":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":303,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":79,"org.easymock.samples.ExampleTest.answerVsDelegate":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":482,"org.easymock.tests2.UsageConstraintsTest.testNull":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":31,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":84,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":288,"org.easymock.tests2.CaptureTest.testPrimitive":185,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":307,"org.easymock.tests.UsageTest.moreThanOneArgument":396,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":354,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":325,"org.easymock.tests.UsageTest.argumentsOrdered":401,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":367,"org.easymock.tests.UsageVarargTest.varargIntAccepted":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":465,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":121,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":469,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.ReplayStateInvalidUsageTest.times":95,"org.easymock.tests2.DependencyTest.testClassMocking":140,"org.easymock.tests2.AnswerTest.answer":267,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":68,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":390,"org.easymock.tests2.CaptureTest.testAnd":182,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":284,"org.easymock.tests2.DelegateToTest.testDelegate":138,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":350,"org.easymock.tests.LimitationsTest.mockFinalMethod":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":109,"org.easymock.tests2.DependencyTest.testClassMockingSupport":141,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":186,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":66,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":89,"org.easymock.tests.UsageThrowableTest.throwError":308,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":392,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":444,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":242,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":480,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":90,"org.easymock.tests2.CompareToTest.testLessOrEqual":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":466,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":321,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":14,"org.easymock.tests2.MockBuilderTest.testCreateMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":238,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":149,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":344,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":389,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":77,"org.easymock.tests.UsageOverloadedMethodTest.overloading":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":240,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":211,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":456,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":413,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":501,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":210,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":191,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":358,"org.easymock.tests2.EasyMockSupportClassTest.testAll":7,"org.easymock.tests.MockClassControlTest.testEquals":83,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":352,"org.easymock.tests2.CaptureTest.testCaptureAll":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":67,"org.easymock.tests.MockNameTest.defaultName":334,"org.easymock.tests2.UsageConstraintsTest.testMatches":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":326,"org.easymock.samples.ExampleTest.voteForRemovals":127,"org.easymock.tests.UsageVarargTest.allKinds":366,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":473,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":108,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":314,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":333,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":225,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":441,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":39,"org.easymock.samples.ExampleTest.voteForRemoval":124,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":377,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":295,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":492,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":34,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":41,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":282,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":328,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":133,"org.easymock.tests2.CaptureTest.testCaptureFirst":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":283,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":452,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.CaptureTest.testCapture2_2446744":194,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":19,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":365,"org.easymock.tests.GenericTest.testBridgedEquals":379,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":408,"org.easymock.tests.UsageExpectAndReturnTest.longType":448,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":105,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":73,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":353,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":388,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":218,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":323,"org.easymock.tests.UsageCallCountTest.tooManyCalls":409,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":239,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":313,"org.easymock.tests.MockingTest.testNiceClassMocking":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":23,"org.easymock.tests.MockingTest.testClassMocking":479,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":491,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":100,"org.easymock.tests2.UsageConstraintsTest.testContains":209,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":21,"org.easymock.tests2.UsageConstraintsTest.testFind":200,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":415,"org.easymock.tests.MockTypeTest.fromEasyMockClass":391,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":162,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":380,"org.easymock.tests.UsageExpectAndReturnTest.object":455,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":35,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":287,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":360,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":104,"org.easymock.tests.UsageTest.exactCallCountByLastCall":402,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":461,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":298,"org.easymock.tests.MockClassControlTest.testHashCode":82,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":252,"org.easymock.tests2.EasyMockSupportTest.testVerify":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":233,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":112,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":65,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":359,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":372,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":495,"org.easymock.tests.DefaultClassInstantiatorTest.object":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":147,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":251,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":45,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":341,"org.easymock.tests.CapturesMatcherTest.test":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":462,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":302,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":10,"org.easymock.tests2.UsageTest.resumeIfFailure":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":331,"org.easymock.tests2.StubTest.stubWithReturnValue":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":454,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":432,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":130,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":347,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":438,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":268,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":488,"org.easymock.tests.UsageExpectAndThrowTest.object":345,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":216,"org.easymock.tests2.DelegateToTest.testWrongClass":136,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":484,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":485,"org.easymock.tests.UsageStrictMockTest.range":385,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":156,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":346,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":16,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests2.CaptureTest.testCaptureNone":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":322,"org.easymock.tests.UsageUnorderedTest.message":410,"org.easymock.tests.UsageVerifyTest.twoReturns":475,"org.easymock.tests.UsageVarargTest.varargByteAccepted":364,"org.easymock.tests2.ThreadingTest.testThreadSafe":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":236,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":407,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":412,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests2.CaptureTest.testCapture_2617107":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":306,"org.easymock.tests2.UsageConstraintsTest.any":207,"org.easymock.tests2.StubTest.stub":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":94,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":330,"org.easymock.tests.UsageExpectAndThrowTest.longType":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":375,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":93,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":464,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":146,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests2.NameTest.nameForMocksControl":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":114,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":226,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":399,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":161,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":33,"org.easymock.tests2.CaptureTest.testCaptureLast":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":318,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":204,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":217,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":445,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":343,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":220,"org.easymock.samples.ExampleTest.removeNonExistingDocument":63,"org.easymock.tests.UsageStrictMockTest.differentMethods":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":115,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":91,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":253,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":373,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":278,"org.easymock.tests2.MockBuilderTest.testCreateMockString":20,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":227,"org.easymock.tests.UsageExpectAndThrowTest.floatType":337,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":270,"org.easymock.tests.UsageVerifyTest.twoThrows":474,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":274,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":9,"org.easymock.samples.ExampleTest.voteAgainstRemoval":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":320,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":38,"org.easymock.tests.LimitationsTest.privateConstructor":471,"org.easymock.tests2.UsageConstraintsTest.testNotNull":219,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":315,"org.easymock.tests2.UsageTest.defaultResetToNice":69,"org.easymock.samples.ExampleTest.voteAgainstRemovals":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":145,"org.easymock.tests.UsageVarargTest.differentLength":361,"org.easymock.tests2.CallbackTest.callback":275,"org.easymock.tests2.UsageConstraintsTest.equals":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":293,"org.easymock.tests.UsageTest.openCallCountByLastCall":398,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":503,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":305,"org.easymock.tests.UsageCallCountTest.tooFewCalls":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":80,"org.easymock.tests.UsageThrowableTest.throwCheckedException":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":478,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":477,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":265,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":272,"org.easymock.tests.ObjectMethodsTest.testHashCode":103,"org.easymock.tests2.NameTest.nameForNiceMock":262,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":280,"org.easymock.tests2.DependencyTest.testInterfaceMocking":142,"org.easymock.samples.ExampleTest.addDocument":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":237,"org.easymock.tests2.DelegateToTest.testStubDelegate":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":241,"org.easymock.tests2.AnswerTest.stubAnswer":271,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":383,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":248,"org.easymock.tests.UsageVarargTest.varargLongAccepted":363,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":463,"org.easymock.tests.UsageExpectAndReturnTest.floatType":447,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":120,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":214,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageThrowableTest.noUpperLimit":309,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":196,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":151,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":187,"org.easymock.tests2.SerializationTest.test":139,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":446,"org.easymock.tests2.UsageConstraintsTest.testSame":202,"org.easymock.samples.SupportTest.addDocument":129,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":264,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":228,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":256,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":481,"org.easymock.tests2.NameTest.nameForMock":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":457,"org.easymock.tests2.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":449,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":349,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":443,"org.easymock.tests2.MockedExceptionTest.testRealException":258,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":165,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":304,"org.easymock.tests2.NameTest.nameForStrictMock":261,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":496,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":155,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":215,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":167,"org.easymock.tests2.UsageConstraintsTest.lessThan":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":281,"org.easymock.tests2.CaptureTest.testCaptureRightOne":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":232,"org.easymock.tests2.UsageConstraintsTest.testOr":203,"org.easymock.tests.UsageRangeTest.combination":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":397,"org.easymock.tests2.MockBuilderTest.testWithConstructor":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":229,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":417,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":62,"org.easymock.tests.UsageVarargTest.varargShortAccepted":362,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":101,"org.easymock.tests2.UsageConstraintsTest.cmpTo":208,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":193,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":88,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":13,"org.easymock.tests.UsageTest.unexpectedCallWithArray":99,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":382,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":459,"org.easymock.tests2.CaptureTest.testCapture":489,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":384,"org.easymock.tests2.UsageConstraintsTest.constraints":197,"org.easymock.samples.ExampleTest.addAndChangeDocument":128,"org.easymock.tests.UsageStrictMockTest.testVerify":86,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":131,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":106,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":188,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":467,"org.easymock.tests.LimitationsTest.abstractClass":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":468,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":286,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":356}}]
