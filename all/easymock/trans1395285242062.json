[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[33,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,3,4,101,102,103,104,105,106,5,107,108,6,7,109,110,8,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,9,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,0,1,2,186,187,188,189,190,191,192,193,194,195,196,197,198,10,11,12,199,200,201,202,203,204,13,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,18,19,247,248,20,21,249,250,251,252,253,254,255,256,257,258,259,260,261,261,262,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,33,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,22,23,330,331,332,333,334,335,336,337,338,339,24,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,25,390,391,392,393,394,26,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,29,34,430,431,432,433,30,31,32,434,435,436,437,438,439,440,441,442,443,444,445],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[42,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,66,67,87,93,100,3,4,101,102,103,104,107,6,7,8,111,112,113,115,117,139,140,141,142,143,144,145,146,9,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,184,185,0,1,2,186,187,188,189,190,191,192,195,199,201,202,204,208,209,211,215,216,217,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,254,255,256,257,261,261,262,262,263,265,266,267,268,270,272,274,275,276,278,279,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,305,306,307,313,314,315,316,317,446,447,318,319,320,321,448,328,22,23,331,332,334,335,336,449,337,338,450,339,451,24,340,341,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,383,25,391,393,452,27,400,408,410,417,420,423,424,426,427,428,429,34,431,432,433,32,434,435,437,438,440,441,442,443,444,445],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[359,365,377,453],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[114,118],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(this.org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58,61,80,82,91,92,94,100,4,104,107,6,7,8,111,112,113,141,204,225,226,229,231,232,233,234,236,237,238,239,241,242,243,244,245,246,247,248,249,276,279,282,283,287,288,294,313,314,315,328,22,23,345,349,350,351,354,355,356,357,361,363,365,366,367,368,369,375,376,377,27,427,429,431,432,32,434,440,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[349,368,374,454],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[5,455,456,18,457,458],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:827","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[441,442],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:117","failures":[199,266,426,435,437,440,443,445],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[222,459,460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[331,461,394,438,439,462,463,464,465,466],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[50,150,208,209,211,263,295,297,298,300,316,446,447,318,319,320,321,448,345,25,391,393,452,27,408,410,417,420,438],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[275,276,277,278,285,286,351,352,354,355,356,357,358,359,360,361,370,371,375,376],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[467,468,469,470,100,3,4,107,6,7,9,246,328,22,23,429],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[49,50,51,52,53,57,58,59,60,61,62,63,64,65,66,67,95,96,97,98,99,100,3,4,101,103,104,105,106,5,107,108,6,7,109,110,8,111,112,113,115,116,120,128,130,131,133,136,138,139,140,141,142,143,144,145,146,9,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,211,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,18,19,247,248,20,21,249,250,251,252,253,258,259,260,261,261,262,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,304,306,471,472,473,474,313,314,315,316,317,446,447,318,319,320,321,448,322,323,324,325,326,327,328,329,22,23,330,331,332,333,334,335,336,449,337,338,450,339,451,24,340,341,342,344,345,346,348,349,350,351,352,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,383,475,391,392,393,452,27,28,400,408,410,417,420,423,424,426,427,428,429,29,34,430,431,432,433,30,31,32,434,435,437,438,440,443,444,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[371],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[50,150,208,209,211,263,295,297,298,300,316,446,447,318,319,320,321,448,345,25,391,393,452,27,408,410,417,420,438],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[477],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[40,478,69,101,115,116,117,118,119,120,121,122,123,124,125,126,150,207,208,209,211,259,260,261,261,262,262,263,291,295,296,298,299,300,301,302,304,305,306,307,479,446,447,318,319,321,448,331,333,475,25,480,391,392,393,452,26,27,28,408,410,417,420,438],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[465],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[352],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[481,383,400],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[482],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[478,69,117,263,301,331,475,483,25,480,391,392,393,452,26,27,484,28,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[486],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":352,"org.easymock.tests2.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":245,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":81,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":430,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":264,"org.easymock.tests2.DelegateToTest.testReturnException":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":63,"org.easymock.tests.MockingTest.testPartialClassMocking":208,"org.easymock.tests.MockClassControlTest.testToString":121,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":90,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":152,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":467,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":462,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":359,"org.easymock.tests2.UsageTest.wrongArguments":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":57,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":252,"org.easymock.samples.ExampleTest.answerVsDelegate":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":69,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":213,"org.easymock.tests2.UsageConstraintsTest.testNull":355,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":298,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":24,"org.easymock.tests2.CaptureTest.testPrimitive":278,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":171,"org.easymock.tests.UsageTest.moreThanOneArgument":246,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":44,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageVarargTest.varargIntAccepted":174,"org.easymock.tests.InvocationTest.testEquals":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":49,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":475,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":388,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":53,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":400,"org.easymock.tests.ReplayStateInvalidUsageTest.times":135,"org.easymock.tests2.AnswerTest.answer":440,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":325,"org.easymock.tests2.CaptureTest.testAnd":275,"org.easymock.tests2.UsageTest.strictResetToDefault":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":337,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":48,"org.easymock.tests2.DelegateToTest.testDelegate":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":167,"org.easymock.tests.LimitationsTest.mockFinalMethod":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":54,"org.easymock.tests2.CaptureTest.testCapture1_2446744":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":323,"org.easymock.tests.UsageThrowableTest.throwError":139,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":129,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":422,"org.easymock.samples.PartialClassMockTest.testGetArea":263,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":130,"org.easymock.tests.MockingTest.testInterfaceMocking":210,"org.easymock.tests2.CompareToTest.testLessOrEqual":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":153,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":40,"org.easymock.tests2.UsageTest.niceToStrict":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":71,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":391,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":457,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":161,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":250,"org.easymock.tests.UsageOverloadedMethodTest.overloading":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":365,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":459,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":364,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":284,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":175,"org.easymock.tests2.EasyMockSupportClassTest.testAll":408,"org.easymock.tests.MockClassControlTest.testEquals":125,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":97,"org.easymock.tests2.CaptureTest.testCaptureAll":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":324,"org.easymock.tests.MockNameTest.defaultName":147,"org.easymock.tests2.UsageConstraintsTest.testMatches":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":191,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":127,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests.UsageVarargTest.allKinds":183,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":98,"org.easymock.samples.BasicClassMockTest.testPrintContent":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":145,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":67,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":347,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":466,"org.easymock.tests2.UsageConstraintsTest.greaterThan":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":307,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":224,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":308,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":301,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":427,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":62,"org.easymock.tests2.CaptureTest.testCaptureFirst":288,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":449,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":434,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests2.UsageTest.moreThanOneArgument":429,"org.easymock.tests2.CaptureTest.testCapture2_2446744":287,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":89,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":182,"org.easymock.tests.GenericTest.testBridgedEquals":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":486,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":11,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":95,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":170,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":1,"org.easymock.tests.UsageCallCountTest.tooManyCalls":12,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":144,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":447,"org.easymock.tests.MockingTest.testNiceClassMocking":214,"org.easymock.tests.MockingTest.testClassMocking":206,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":483,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":194,"org.easymock.tests2.UsageConstraintsTest.testContains":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":291,"org.easymock.tests2.UsageConstraintsTest.testFind":354,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":104,"org.easymock.tests.MockTypeTest.fromEasyMockClass":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":437,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":105,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":451,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":463,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":177,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":38,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":76,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":45,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":439,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests.MockClassControlTest.testHashCode":124,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":414,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":322,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":425,"org.easymock.tests.UsageVarargTest.varargCharAccepted":176,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":94,"org.easymock.tests2.UsageTest.openCallCountByLastCall":431,"org.easymock.tests.DefaultClassInstantiatorTest.object":218,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":254,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":36,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":378,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":123,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":420,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":122,"org.easymock.tests2.UsageTest.resumeIfFailure":32,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":65,"org.easymock.tests2.StubTest.stubWithReturnValue":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":461,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":374,"org.easymock.tests2.SerializationTest.testAllMockedMethod":333,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":87,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":458,"org.easymock.samples.SupportTest.voteForRemovals":274,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":164,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":93,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":441,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":43,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":371,"org.easymock.tests2.DelegateToTest.testWrongClass":346,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":185,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ConstructorCalledMockTest.testTax":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":311,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":407,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":137,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":217,"org.easymock.tests2.CaptureTest.testCaptureNone":283,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":16,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":181,"org.easymock.tests2.ThreadingTest.testThreadSafe":313,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":198,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":39,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":91,"org.easymock.tests2.UsageConstraintsTest.any":361,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":134,"org.easymock.tests2.StubTest.stub":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.UsageExpectAndThrowTest.longType":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":92,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":222,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":133,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.tests2.SerializationTest.testClass":331,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":383,"org.easymock.tests.LimitationsTest.mockNativeMethod":150,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":397,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests2.NameTest.nameForMocksControl":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests2.MockedExceptionTest.testMockedException":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":409,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":436,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":211,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":452,"org.easymock.tests.MockingTest.testNicePartialClassMocking":209,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":300,"org.easymock.tests2.CompareToTest.testNotComparable":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":395,"org.easymock.tests2.CaptureTest.testCaptureLast":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":448,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":358,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":372,"org.easymock.tests.MockingTest.testTwoMocks":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":376,"org.easymock.samples.ExampleTest.removeNonExistingDocument":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":131,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":380,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":220,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":315,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":119,"org.easymock.tests.UsageExpectAndThrowTest.floatType":154,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":367,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":443,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":417,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":82,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":215,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":306,"org.easymock.tests.LimitationsTest.privateConstructor":149,"org.easymock.tests2.UsageConstraintsTest.testNotNull":375,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":146,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":289,"org.easymock.tests2.UsageTest.defaultResetToNice":433,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":396,"org.easymock.tests.UsageVarargTest.differentLength":178,"org.easymock.tests2.CallbackTest.callback":426,"org.easymock.tests2.UsageConstraintsTest.equals":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":303,"org.easymock.tests.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":477,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":59,"org.easymock.tests.UsageCallCountTest.tooFewCalls":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":253,"org.easymock.tests.UsageThrowableTest.throwCheckedException":143,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":456,"org.easymock.tests.MockingTest.testStrictClassMocking":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":318,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":320,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":445,"org.easymock.tests2.CompareToTest.testGreateOrEqual":453,"org.easymock.tests.ObjectMethodsTest.testHashCode":37,"org.easymock.tests2.NameTest.nameForNiceMock":473,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":464,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.DelegateToTest.testStubDelegate":345,"org.easymock.tests2.AnswerTest.stubAnswer":444,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":107,"org.easymock.tests.UsageVarargTest.varargLongAccepted":180,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":80,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":438,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":387,"org.easymock.tests.UsageThrowableTest.noUpperLimit":140,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":350,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":309,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":280,"org.easymock.tests2.SerializationTest.test":332,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":460,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.tests2.UsageConstraintsTest.testSame":356,"org.easymock.samples.SupportTest.addDocument":273,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":411,"org.easymock.tests.GenericTest.testPackageScope":115,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":75,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":212,"org.easymock.tests2.NameTest.nameForMock":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":113,"org.easymock.tests2.MockedExceptionTest.testRealException":292,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":84,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":328,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":58,"org.easymock.tests2.NameTest.nameForStrictMock":472,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":299,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":310,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":468,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":221,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":370,"org.easymock.tests.ErrorMessageTest.testGetters":469,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":377,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":382,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":413,"org.easymock.tests2.CaptureTest.testCaptureRightOne":285,"org.easymock.tests2.UsageConstraintsTest.testOr":357,"org.easymock.tests.UsageRangeTest.combination":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":296,"org.easymock.tests.UsageTest.wrongArguments":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":412,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.UsageVarargTest.varargShortAccepted":179,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":10,"org.easymock.tests2.UsageConstraintsTest.cmpTo":362,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":74,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":432,"org.easymock.tests2.CaptureTest.testCaptureFromStub":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":128,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":480,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":108,"org.easymock.tests2.UsageConstraintsTest.constraints":351,"org.easymock.samples.ExampleTest.addAndChangeDocument":272,"org.easymock.tests.UsageStrictMockTest.testVerify":110,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":258,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":96,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":281,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":485,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":51,"org.easymock.tests.LimitationsTest.abstractClass":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":52,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":450,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":173}}]
