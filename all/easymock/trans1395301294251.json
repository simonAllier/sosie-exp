[{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[3,4,5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[15,16,17,18,19,20,21,22,23,24],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[25,26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[27],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[28,29,30,31,32,33,34,11,35,36,37,38,39,40,41,12,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[105,91,100],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[28,30,106,107,108,109,110,111,112,113,114,115,116,117,35,36,37,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,41,134,135,136,137,87,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,54,161,20,56,58,59,60,22,162,163,164,105,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,61,192,193,62,194,63,195,196,197,198,64,65,199,200,66,67,201,202,70,71,72,203,204,205,74,206,207,208,209,210,211,212,213,89,90,91,92,93,96,97,98,100,102,103,214,215,216,217,218,219,220,221,222,223,224,82,225,226,227,228,229,230,231,84,232,233,234,235,236,237,238,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[28,29,30,240,241,242,106,107,243,108,244,245,246,247,248,249,250,251,109,110,111,112,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,3,4,5,6,0,7,282,8,113,114,283,284,285,31,286,287,288,289,290,291,292,293,294,295,296,297,298,115,116,117,299,300,32,301,302,33,34,303,304,11,35,305,36,37,306,307,118,119,120,121,122,308,309,310,311,312,313,123,314,124,125,126,127,128,129,130,131,315,316,132,38,25,317,318,39,40,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,133,41,12,42,134,135,43,44,136,340,341,342,343,344,345,346,347,348,349,137,350,351,352,45,353,354,46,47,48,49,50,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,87,138,371,372,139,373,374,375,376,377,378,379,26,380,381,382,383,51,52,53,384,385,386,387,388,389,390,391,392,393,394,140,395,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,396,397,398,399,400,54,55,401,402,403,404,405,406,407,161,408,409,410,20,21,411,412,413,414,415,416,417,56,57,418,419,420,421,422,423,424,58,425,59,60,426,22,162,427,163,164,105,165,428,166,167,168,169,170,171,27,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,61,192,193,62,194,63,195,196,197,429,198,64,65,199,430,200,66,67,431,432,433,434,435,68,436,201,69,437,438,202,439,70,23,71,440,24,441,72,442,73,443,444,203,445,446,447,448,449,204,205,74,75,206,450,207,208,209,76,77,210,211,212,451,452,453,213,454,455,78,79,80,81,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,214,215,216,217,218,219,456,457,458,220,459,460,221,461,462,463,464,465,466,467,468,469,222,470,471,472,473,474,223,475,476,224,82,225,226,227,228,477,478,229,479,480,83,230,231,84,481,85,482,483,232,233,484,485,486,487,488,489,490,491,234,492,493,494,495,496,235,236,497,237,238,498,239,499,500,501],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[502],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[105,165,166,167,168,169,170,171,27,172,181,182,186,187,89,90,91,92,100,101],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[316,104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[352],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[29,260,117,123,124,125,126,127,128,129,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,133,135,378,26,380,381,393,204,208,214],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","failures":[20,21,22,65,67,431,436,437,23,24,503,442,504,505,456,457,458,220,459,460,221,461,462,463,464,465,466,467,468,469,222,470,471,472,473,474,223,475,476,495,496],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[506,507,508,509,510],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[297,131,315,316,105,165,167,169,170,186,89,90,91,96,97,100,103],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[110,111,112,274,210,104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[4,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[511,512,513,514],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[515,22,162,427],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[242,106,107,108,313,137,350,351,45,48,139,383,516,517,518,20,22,427,198,64,65,199,66,67,68,519,201,69,202,439,70,71,441,72,520,73,203,220,221,222,223,224,82,226,227,228,477,229,83,230,231,84,492,493,495,495,496,496,235],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[521],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[9,10,11,12,13,14],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[3,4,5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[392,407,408,410,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[273,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":165,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.UsageTest.argumentsOrdered":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":267,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":450,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":494,"org.easymock.tests2.DelegateToTest.testReturnException":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":375,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.tests.MockClassControlTest.testToString":51,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":455,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":320,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":15,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.tests2.UsageTest.wrongArguments":75,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":357,"org.easymock.samples.ExampleTest.answerVsDelegate":497,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests2.UsageConstraintsTest.testNull":167,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":245,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":226,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":195,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests.UsageTest.moreThanOneArgument":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":339,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":310,"org.easymock.tests.UsageTest.argumentsOrdered":44,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":247,"org.easymock.tests.UsageVarargTest.varargIntAccepted":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":404,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests.ReplayStateInvalidUsageTest.times":367,"org.easymock.tests2.DependencyTest.testClassMocking":482,"org.easymock.tests2.AnswerTest.answer":212,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":274,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":435,"org.easymock.tests2.CaptureTest.testAnd":89,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":354,"org.easymock.tests2.UsageTest.strictResetToDefault":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":309,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":192,"org.easymock.tests2.DelegateToTest.testDelegate":410,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":335,"org.easymock.tests.LimitationsTest.mockFinalMethod":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":378,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":256,"org.easymock.tests2.DependencyTest.testClassMockingSupport":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":39,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":433,"org.easymock.tests.UsageThrowableTest.throwError":123,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":361,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":47,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":405,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":312,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.samples.PartialClassMockTest.testGetArea":235,"org.easymock.tests.MockingTest.testInterfaceMocking":243,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":362,"org.easymock.tests2.CompareToTest.testLessOrEqual":510,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":34,"org.easymock.tests2.UsageTest.niceToStrict":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":202,"org.easymock.tests2.MockBuilderTest.testCreateMock":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":329,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":381,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":512,"org.easymock.tests.UsageOverloadedMethodTest.overloading":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":393,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":152,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":115,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":289,"org.easymock.tests.MockClassControlTest.testEquals":385,"org.easymock.tests2.EasyMockSupportClassTest.testAll":220,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":337,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":516,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":434,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":254,"org.easymock.tests.MockNameTest.defaultName":38,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":311,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":359,"org.easymock.samples.ExampleTest.voteForRemovals":239,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":28,"org.easymock.samples.BasicClassMockTest.testPrintContent":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":255,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":128,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":423,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":379,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":19,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":110,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":84,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":8,"org.easymock.samples.ExampleTest.voteForRemoval":237,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":481,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":477,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":313,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":191,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":374,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":406,"org.easymock.tests2.CaptureTest.testCaptureFirst":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":61,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":148,"org.easymock.tests2.CaptureTest.testCapture2_2446744":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":74,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":218,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":275,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":296,"org.easymock.tests.GenericTest.testBridgedEquals":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":513,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":252,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":520,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":338,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":348,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testNiceClassMocking":246,"org.easymock.tests.MockingTest.testClassMocking":241,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":519,"org.easymock.tests2.UsageConstraintsTest.testContains":174,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":203,"org.easymock.tests2.UsageConstraintsTest.testFind":166,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":117,"org.easymock.tests.MockTypeTest.fromEasyMockClass":46,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":449,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests.UsageExpectAndReturnTest.object":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":16,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":302,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":521,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":514,"org.easymock.tests.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":262,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":157,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":392,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests.MockClassControlTest.testHashCode":384,"org.easymock.tests2.EasyMockSupportTest.testVerify":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":467,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":432,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":446,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":281,"org.easymock.tests2.CaptureTest.testCaptureMultiple":88,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":280,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests.DefaultClassInstantiatorTest.object":3,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":26,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":468,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":396,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":53,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":326,"org.easymock.tests.CapturesMatcherTest.test":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":223,"org.easymock.tests2.UsageTest.resumeIfFailure":210,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":377,"org.easymock.tests2.StubTest.stubWithReturnValue":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":150,"org.easymock.tests2.SerializationTest.testAllMockedMethod":427,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":273,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":14,"org.easymock.samples.SupportTest.voteForRemovals":234,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":332,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":515,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":279,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":451,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":389,"org.easymock.tests.UsageExpectAndThrowTest.object":330,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":182,"org.easymock.tests2.DelegateToTest.testWrongClass":408,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":87,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":138,"org.easymock.samples.ConstructorCalledMockTest.testTax":495,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":489,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":331,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":456,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":356,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":9,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":285,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":295,"org.easymock.tests2.ThreadingTest.testThreadSafe":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":470,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":492,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":33,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":316,"org.easymock.tests2.UsageConstraintsTest.any":172,"org.easymock.tests2.StubTest.stub":104,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":278,"org.easymock.tests.UsageExpectAndThrowTest.longType":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":425,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests.LimitationsTest.mockNativeMethod":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":351,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":518,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":426,"org.easymock.tests2.NameTest.nameForMocksControl":81,"org.easymock.tests2.MockedExceptionTest.testMockedException":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":460,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":448,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":71,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":228,"org.easymock.tests2.CompareToTest.testCompareEqual":508,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":40,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":183,"org.easymock.tests.MockingTest.testTwoMocks":242,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":328,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":76,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":187,"org.easymock.samples.ExampleTest.removeNonExistingDocument":499,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":5,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":217,"org.easymock.tests2.MockBuilderTest.testCreateMockString":73,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":322,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":411,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":231,"org.easymock.tests.LimitationsTest.privateConstructor":372,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":505,"org.easymock.tests2.UsageConstraintsTest.testNotNull":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":443,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":129,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.UsageVarargTest.differentLength":292,"org.easymock.tests2.CallbackTest.callback":412,"org.easymock.tests2.UsageConstraintsTest.equals":428,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":479,"org.easymock.tests.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":315,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":358,"org.easymock.tests.UsageThrowableTest.throwCheckedException":126,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests.MockingTest.testStrictClassMocking":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":454,"org.easymock.tests2.CompareToTest.testGreateOrEqual":509,"org.easymock.tests.ObjectMethodsTest.testHashCode":301,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":502,"org.easymock.tests2.NameTest.nameForNiceMock":80,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":219,"org.easymock.tests2.DependencyTest.testInterfaceMocking":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":17,"org.easymock.samples.ExampleTest.addDocument":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":161,"org.easymock.tests2.AnswerTest.stubAnswer":213,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":440,"org.easymock.tests.UsageVarargTest.varargLongAccepted":294,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":159,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":20,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":403,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests.UsageThrowableTest.noUpperLimit":314,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":164,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":484,"org.easymock.tests2.SerializationTest.test":162,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":4,"org.easymock.tests2.UsageConstraintsTest.testSame":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":142,"org.easymock.samples.SupportTest.addDocument":491,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":430,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":462,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":402,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":244,"org.easymock.tests2.NameTest.nameForMock":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":442,"org.easymock.tests2.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":480,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":334,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":112,"org.easymock.tests2.MockedExceptionTest.testRealException":445,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":370,"org.easymock.tests2.NameTest.nameForStrictMock":79,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":511,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":447,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":227,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":488,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":181,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":201,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":466,"org.easymock.tests2.CaptureTest.testCaptureRightOne":100,"org.easymock.tests2.UsageConstraintsTest.testOr":169,"org.easymock.tests.UsageRangeTest.combination":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":82,"org.easymock.tests.UsageTest.wrongArguments":42,"org.easymock.tests2.MockBuilderTest.testWithConstructor":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":463,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":258,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":7,"org.easymock.tests.UsageVarargTest.varargShortAccepted":293,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":346,"org.easymock.tests2.UsageConstraintsTest.cmpTo":173,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":452,"org.easymock.tests2.CompareToTest.testLessThan":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":260,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":101,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":360,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":155,"org.easymock.tests2.CaptureTest.testCapture":99,"org.easymock.tests2.UsageConstraintsTest.constraints":105,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":500,"org.easymock.tests.UsageStrictMockTest.testVerify":307,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":501,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests2.CompareToTest.testGreateThan":507,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":253,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":517,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":147,"org.easymock.tests.LimitationsTest.abstractClass":371,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":62,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":287}}]
