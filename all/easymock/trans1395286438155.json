[{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[43,44,45,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[48,49,50,51,52,53,54,44,55,56],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[57,58,59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[47,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[66,67,58,68,69,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,77,78,79,80,71,81,82,83,84,85,86,87,88,0,89,90,91,92,93,94,1,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,2,112,113,114,3,4,115,116,5,6,117,118,119,120,121,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,122,123,28,124,125,126,127,128,129,130,29,30,31,32,33,34,131,132,133,134,135,136,35,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,53,165,166,167,168,169,44,45,170,171,172,173,174,175,176,177,178,179,180,181,182,59,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,36,37,38,39,219,220,40,221,222,223,224,41,225,226,227,228,60,229,230,61,62,231,232,233,234,235,236,237,238,239,240,241,242,42,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,64,260,261,262,263,264,264,265,265,266,267,268,269,270,271,272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[66,67,58,68,69,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[72,82,83,84,85,92,1,97,98,111,7,8,11,13,14,15,16,18,19,20,21,23,24,25,26,27,122,123,28,125,138,139,142,144,145,146,147,149,150,151,152,154,155,156,157,164,165,168,169,170,171,172,174,175,176,177,182,59,183,184,186,187,193,194,219,220,222,273,224,41,226,232,274,234,275,235,236,240,241,242,243,244,245,272],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[75,76,77,82,83,84,85,96,97,98,99,100,101,102,103,104,105,106,107,115,128,129,130,138,139,140,141,142,143,146,147,149,150,151,153,154,155,156,157,161,53,167,168,169,207,208,209,210,211,212,213,214,215,216,217,218,246,248,249,250,251,252,253,254,255,256,257,258,259,64,260,261,262,263,266,267,269,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[276,121,277,278],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[173,174,280,180],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[72,73,74,281,75,76,77,78,79,80,71,81,82,83,84,85,282,283,284,285,286,86,87,88,0,89,90,91,92,57,93,94,1,95,287,288,289,290,291,58,96,292,97,98,293,99,100,101,102,103,104,105,106,107,108,109,110,111,2,112,113,114,3,4,115,116,5,6,117,294,118,119,120,276,121,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,122,68,295,123,28,296,297,124,125,126,127,298,299,300,301,302,303,304,305,306,307,128,129,130,29,30,31,32,33,34,131,132,133,308,309,310,311,312,134,135,277,136,35,278,137,313,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,314,159,160,161,162,163,164,53,165,166,315,316,167,317,168,169,318,44,45,170,171,172,173,174,175,176,177,178,179,280,180,181,182,59,183,184,185,186,187,188,189,190,319,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,320,207,208,209,210,211,212,213,321,322,323,324,325,214,326,215,327,216,217,328,218,63,36,37,38,39,219,220,40,221,222,329,223,273,224,41,225,330,331,226,227,228,60,229,230,61,62,231,232,274,233,234,275,332,235,236,237,238,239,240,241,242,42,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,333,258,334,259,64,260,65,261,262,263,264,264,265,265,266,267,268,269,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.Invocation:99","failures":[82,335,180,204,206,215,263,266,269,270,271,272],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[43,44,45,46],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[336,337],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[338],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[72,73,74,339,340,281,75,76,341,77,342,343,344,78,79,80,71,81,82,83,84,85,282,283,284,285,286,345,346,347,348,349,350,47,351,352,353,354,355,356,357,358,359,86,360,361,362,363,364,87,365,366,336,367,368,369,337,370,88,0,89,90,91,92,371,372,373,374,375,376,377,378,379,380,381,57,93,94,1,95,382,287,288,383,289,290,291,384,58,96,292,97,98,293,385,99,100,101,102,103,104,105,106,107,108,109,110,111,2,112,113,114,3,4,115,116,5,6,117,294,118,119,120,276,121,386,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,27,122,68,295,123,28,296,297,124,409,410,125,411,412,413,414,415,416,417,126,418,127,279,298,419,420,299,300,301,302,303,304,305,306,307,421,422,423,424,425,426,427,428,429,430,431,432,128,129,433,434,130,435,29,30,31,32,33,34,131,132,133,308,436,309,310,311,312,437,438,439,134,440,135,277,136,35,278,137,313,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,441,442,443,444,445,158,314,446,447,448,449,450,159,160,161,162,163,164,451,452,453,454,455,53,54,165,456,457,458,459,460,166,315,461,462,463,464,465,316,466,167,317,168,169,318,44,45,46,170,171,172,173,338,174,175,176,177,178,179,280,180,181,182,59,183,184,185,186,187,188,189,190,319,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,320,207,208,209,210,467,211,212,213,468,321,322,323,324,325,214,326,469,215,327,216,217,470,56,328,218,63,36,37,38,39,471,219,472,220,40,221,222,329,223,273,224,41,225,330,331,226,227,228,60,229,230,61,62,473,474,475,476,477,231,232,274,233,234,275,332,235,236,237,238,239,240,241,242,42,243,478,244,245,246,247,479,480,481,248,482,483,249,484,485,486,487,488,489,490,491,492,250,493,494,495,496,497,251,498,499,252,253,254,255,256,257,333,500,258,501,502,334,259,64,260,503,65,504,505,261,262,506,507,508,509,510,511,512,263,513,514,515,264,265,266,267,268,269,270,516,271,517,272,518],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[281],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[66,67,519,58,122,68,295,296,297,69,520,70,521,222,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":173,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.UsageTest.argumentsOrdered":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":354,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":273,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":515,"org.easymock.tests2.DelegateToTest.testReturnException":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":30,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":309,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":473,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":262,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":408,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":48,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":115,"org.easymock.tests2.UsageTest.wrongArguments":329,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":306,"org.easymock.samples.ExampleTest.answerVsDelegate":268,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":301,"org.easymock.tests2.UsageConstraintsTest.testNull":175,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":343,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":255,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":204,"org.easymock.tests2.CaptureTest.testPrimitive":233,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":117,"org.easymock.tests.UsageTest.moreThanOneArgument":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":26,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":78,"org.easymock.tests.UsageTest.argumentsOrdered":297,"org.easymock.tests.UsageVarargTest.varargIntAccepted":373,"org.easymock.tests.InvocationTest.testEquals":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":508,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":449,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":103,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":392,"org.easymock.tests.ReplayStateInvalidUsageTest.times":429,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.DependencyTest.testClassMocking":504,"org.easymock.tests2.AnswerTest.answer":228,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":324,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":420,"org.easymock.tests2.CaptureTest.testAnd":231,"org.easymock.tests2.UsageTest.strictResetToDefault":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests2.DelegateToTest.testDelegate":164,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":81,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":22,"org.easymock.tests.LimitationsTest.mockFinalMethod":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":286,"org.easymock.tests2.DependencyTest.testClassMockingSupport":505,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":234,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":322,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":423,"org.easymock.tests.UsageThrowableTest.throwError":110,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":300,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":499,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":395,"org.easymock.samples.PartialClassMockTest.testGetArea":266,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":424,"org.easymock.tests.MockingTest.testInterfaceMocking":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":488,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests2.UsageTest.niceToStrict":223,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":290,"org.easymock.tests2.ThreadingTest.testChangeDefault":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":215,"org.easymock.tests2.MockBuilderTest.testCreateMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":495,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":69,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":133,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":409,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":304,"org.easymock.tests.UsageOverloadedMethodTest.overloading":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":183,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":35,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":93,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":237,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":374,"org.easymock.tests.MockClassControlTest.testEquals":437,"org.easymock.tests2.EasyMockSupportClassTest.testAll":248,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":418,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":520,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":24,"org.easymock.tests2.CaptureTest.testCaptureAll":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":323,"org.easymock.tests.MockNameTest.defaultName":294,"org.easymock.tests2.UsageConstraintsTest.testMatches":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":107,"org.easymock.samples.ExampleTest.voteForRemovals":271,"org.easymock.tests.UsageVarargTest.allKinds":57,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.samples.BasicClassMockTest.testPrintContent":514,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":3,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":446,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":34,"org.easymock.tests2.UsageConstraintsTest.greaterThan":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":260,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":396,"org.easymock.samples.ExampleTest.voteForRemoval":269,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":503,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":333,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":388,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":109,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":29,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":227,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests2.UsageTest.moreThanOneArgument":222,"org.easymock.tests2.CaptureTest.testCapture2_2446744":240,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":246,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":381,"org.easymock.tests.GenericTest.testBridgedEquals":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":415,"org.easymock.tests.UsageExpectAndReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":25,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":95,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":104,"org.easymock.tests.UsageCallCountTest.tooManyCalls":416,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":496,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":208,"org.easymock.tests.MockingTest.testNiceClassMocking":344,"org.easymock.tests.MockingTest.testClassMocking":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":410,"org.easymock.tests2.UsageConstraintsTest.testContains":182,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":174,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":1,"org.easymock.tests.MockTypeTest.fromEasyMockClass":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":220,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":49,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":376,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":383,"org.easymock.tests.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":79,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":519,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":154,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":136,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.MockClassControlTest.testHashCode":312,"org.easymock.tests2.EasyMockSupportTest.testVerify":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":490,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":80,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":321,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":471,"org.easymock.tests.UsageVarargTest.varargCharAccepted":375,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":365,"org.easymock.tests2.UsageTest.openCallCountByLastCall":224,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":206,"org.easymock.tests.DefaultClassInstantiatorTest.object":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":131,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":491,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":394,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":259,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.ReplayStateInvalidCallsTest.times":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":118,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":251,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":310,"org.easymock.tests2.UsageTest.resumeIfFailure":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":507,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":32,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":191,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.SerializationTest.testAllMockedMethod":46,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":86,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":70,"org.easymock.samples.SupportTest.voteForRemovals":263,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":19,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":43,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":87,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":60,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":440,"org.easymock.tests.UsageExpectAndThrowTest.object":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":189,"org.easymock.tests2.DelegateToTest.testWrongClass":162,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":398,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":129,"org.easymock.tests.UsageStrictMockTest.range":97,"org.easymock.samples.ConstructorCalledMockTest.testTax":264,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":510,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":479,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":431,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":66,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":390,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":91,"org.easymock.tests2.CaptureTest.testCaptureNone":236,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":452,"org.easymock.tests.UsageUnorderedTest.message":92,"org.easymock.tests.UsageVerifyTest.twoReturns":74,"org.easymock.tests.UsageVarargTest.varargByteAccepted":380,"org.easymock.tests2.ThreadingTest.testThreadSafe":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":493,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":413,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":513,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":274,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":521,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":363,"org.easymock.tests2.UsageConstraintsTest.any":180,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":428,"org.easymock.tests2.StubTest.stub":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":31,"org.easymock.tests.UsageExpectAndThrowTest.longType":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":364,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":427,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":317,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":157,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":458,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":406,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests2.NameTest.nameForMocksControl":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":460,"org.easymock.tests2.MockedExceptionTest.testMockedException":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":483,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":472,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":11,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":217,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":456,"org.easymock.tests2.CaptureTest.testCaptureLast":235,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":121,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":405,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":213,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":190,"org.easymock.tests.MockingTest.testTwoMocks":281,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":402,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":330,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":193,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":455,"org.easymock.samples.ExampleTest.removeNonExistingDocument":517,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":425,"org.easymock.tests.UsageStrictMockTest.differentMethods":98,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":454,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":367,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":245,"org.easymock.tests2.MockBuilderTest.testCreateMockString":63,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":484,"org.easymock.tests.UsageExpectAndThrowTest.floatType":9,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":230,"org.easymock.tests.UsageVerifyTest.twoThrows":73,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":250,"org.easymock.samples.ExampleTest.voteAgainstRemoval":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":355,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":64,"org.easymock.tests.LimitationsTest.privateConstructor":434,"org.easymock.tests2.UsageConstraintsTest.testNotNull":192,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":4,"org.easymock.tests2.UsageTest.defaultResetToNice":225,"org.easymock.samples.ExampleTest.voteAgainstRemovals":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":356,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":457,"org.easymock.tests.UsageVarargTest.differentLength":377,"org.easymock.tests2.CallbackTest.callback":165,"org.easymock.tests2.UsageConstraintsTest.equals":338,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":501,"org.easymock.tests.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":5,"org.easymock.tests.UsageCallCountTest.tooFewCalls":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":307,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":453,"org.easymock.tests.UsageThrowableTest.throwCheckedException":113,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":67,"org.easymock.tests.MockingTest.testStrictClassMocking":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":0,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":430,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":211,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":62,"org.easymock.tests.ObjectMethodsTest.testHashCode":288,"org.easymock.tests2.NameTest.nameForNiceMock":476,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":404,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":247,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":399,"org.easymock.tests2.DependencyTest.testInterfaceMocking":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":50,"org.easymock.samples.ExampleTest.addDocument":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":498,"org.easymock.tests2.DelegateToTest.testStubDelegate":161,"org.easymock.tests2.AnswerTest.stubAnswer":61,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":96,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":470,"org.easymock.tests.UsageVarargTest.varargLongAccepted":379,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.floatType":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":53,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":448,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":187,"org.easymock.tests.UsageThrowableTest.noUpperLimit":111,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":506,"org.easymock.tests2.SerializationTest.test":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":275,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":336,"org.easymock.tests2.UsageConstraintsTest.testSame":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":139,"org.easymock.samples.SupportTest.addDocument":512,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":389,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":485,"org.easymock.tests.GenericTest.testPackageScope":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":447,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":342,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":387,"org.easymock.tests2.NameTest.nameForMock":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":150,"org.easymock.tests2.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":502,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":21,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":85,"org.easymock.tests2.MockedExceptionTest.testRealException":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":357,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":116,"org.easymock.tests2.NameTest.nameForStrictMock":475,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":219,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":256,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":509,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":188,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":214,"org.easymock.tests2.UsageStrictMockTest.range":168,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":393,"org.easymock.tests2.UsageConstraintsTest.lessThan":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":489,"org.easymock.tests2.CaptureTest.testCaptureRightOne":238,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":451,"org.easymock.tests2.UsageConstraintsTest.testOr":177,"org.easymock.tests.UsageRangeTest.combination":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":253,"org.easymock.tests.UsageTest.wrongArguments":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":486,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":346,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":337,"org.easymock.tests.UsageVarargTest.varargShortAccepted":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":414,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":407,"org.easymock.tests2.UsageConstraintsTest.cmpTo":181,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":229,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CaptureTest.testCaptureFromStub":239,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":422,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":326,"org.easymock.tests.UsageTest.unexpectedCallWithArray":68,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":403,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.constraints":172,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":272,"org.easymock.tests.UsageStrictMockTest.testVerify":385,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":518,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":283,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":101,"org.easymock.tests.LimitationsTest.abstractClass":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":201,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":372}}]
