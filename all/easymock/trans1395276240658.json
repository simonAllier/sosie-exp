[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:36","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,1,2,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,3,315,316,317,4,5,318,6,319,320,7,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,8,353,354,9,10,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,11,382,383,384,385,386,387,388,0,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,12,13,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,14,448,449,450,15,16,451,17,452,453,18,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[47,53,65,488],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[47,53,65,488],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[288,292],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[83,84,85,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[83,84,85,489],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[49,298],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[39,40,43,45,46,48,58,63,118,120,128],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,73,74,76,79,80,82,83,84,86,87,88,89,90,91,92,94,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,142,143,144,145,146,147,148,149,150,153,155,156,1,2,157,161,164,174,180,188,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,219,226,228,229,230,231,232,233,235,236,237,241,241,242,242,244,247,248,249,250,251,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,272,273,274,275,287,289,291,294,295,296,297,298,299,300,301,302,303,304,311,312,313,314,3,315,316,317,4,5,318,6,319,320,7,321,322,323,324,325,336,351,352,8,353,354,9,10,369,371,372,373,0,394,396,397,398,399,400,401,402,403,404,405,407,408,409,12,13,410,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,444,445,446,447,14,448,449,450,15,16,451,17,452,453,18,454,455,456,457,458,459,460,462,463,464,465,466,467,468,469,473,474,475,477,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[189,220,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,1,2,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,239,240,241,241,242,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,3,315,316,317,4,5,318,6,319,320,7,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,346,347,348,349,350,351,352,8,353,354,9,10,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,11,382,383,384,385,386,387,388,0,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,12,13,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,14,448,449,450,15,16,451,17,452,453,18,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[89,91,155,1,2,407,408,12,13,411],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[25,29,30,33,39,55,68,79,80,82,87,98,100,153,156,1,2,195,198,199,200,204,205,206,207,229,282,490,293,294,491,492,340,341,342,399,405,407,409,12,13,413,415,416,419,420,421,463,464],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,493,494,495,496,497,498,66,68,69,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,499,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,1,2,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,3,315,316,317,4,5,318,6,319,320,7,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,8,353,354,9,10,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,11,382,383,384,385,386,387,388,0,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,12,13,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,440,441,443,444,445,446,447,14,448,449,450,15,16,451,17,452,453,18,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[522,72,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[523,524,525,526,407,415],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[39,40,43,45,46,48,58,63,118,120,128],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[75,527,528,529,530,531,151],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[532,118,120,121,122,123,124,125,127,533,128,129,131],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[155,1,2,197,399,408,12,13,534,535,536,537,414,462,463,464],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[183,184,185,186,187,188,189,190,191,192,193,194,214,215,216,217,218,219,220,221,222,223,224,225,243,245],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[538,523,539,540,541,524,542,155,1,2,197,525,526,543,492,399,407,408,12,13,414,415,459,460,462,463,464],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[0,459,460],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[83,84,85,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","properties":"properties","key":"value"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":40,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":413,"org.easymock.tests2.UsageTest.argumentsOrdered":205,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":383,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":200,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":243,"org.easymock.tests2.DelegateToTest.testReturnException":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":426,"org.easymock.tests.MockingTest.testPartialClassMocking":474,"org.easymock.tests.MockClassControlTest.testToString":328,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":19,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":311,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":534,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":143,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":521,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":527,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":47,"org.easymock.tests2.UsageTest.wrongArguments":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":300,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":433,"org.easymock.samples.ExampleTest.answerVsDelegate":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":348,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":479,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":33,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":333,"org.easymock.tests2.CaptureTest.testPrimitive":121,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":304,"org.easymock.tests.UsageTest.moreThanOneArgument":414,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":325,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":467,"org.easymock.tests.UsageTest.argumentsOrdered":420,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":8,"org.easymock.tests.UsageVarargTest.varargIntAccepted":278,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":542,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":531,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":224,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":268,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":505,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests.ReplayStateInvalidUsageTest.times":363,"org.easymock.tests2.DependencyTest.testClassMocking":140,"org.easymock.tests2.AnswerTest.answer":208,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":389,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":106,"org.easymock.tests2.CaptureTest.testAnd":118,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":345,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":296,"org.easymock.tests2.DelegateToTest.testDelegate":117,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":10,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":504,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":321,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":404,"org.easymock.tests2.DependencyTest.testClassMockingSupport":141,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":459,"org.easymock.tests2.CaptureTest.testCapture1_2446744":122,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":104,"org.easymock.tests.UsageThrowableTest.throwError":256,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":347,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":225,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":182,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":508,"org.easymock.samples.PartialClassMockTest.testGetArea":244,"org.easymock.tests.MockingTest.testInterfaceMocking":476,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":169,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":312,"org.easymock.tests2.ThreadingTest.testChangeDefault":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":191,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":523,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":5,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":29,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":431,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":173,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":17,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":52,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":127,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":279,"org.easymock.tests2.EasyMockSupportClassTest.testAll":161,"org.easymock.tests.MockClassControlTest.testEquals":332,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":402,"org.easymock.tests2.CaptureTest.testCaptureAll":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":105,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":468,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":355,"org.easymock.samples.ExampleTest.voteForRemovals":253,"org.easymock.tests.UsageVarargTest.allKinds":287,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":462,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":403,"org.easymock.samples.BasicClassMockTest.testPrintContent":240,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":262,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":430,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":221,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":442,"org.easymock.tests2.UsageConstraintsTest.greaterThan":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":295,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":100,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":509,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":443,"org.easymock.samples.ExampleTest.voteForRemoval":250,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":101,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":92,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":501,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":412,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":26,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":131,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":27,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":450,"org.easymock.tests2.CaptureTest.testCapture2_2446744":130,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":110,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":390,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":286,"org.easymock.tests.GenericTest.testBridgedEquals":292,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":341,"org.easymock.tests.UsageExpectAndReturnTest.longType":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":400,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":24,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":324,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":61,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":465,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":423,"org.easymock.tests.UsageCallCountTest.tooManyCalls":342,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":261,"org.easymock.tests.MockingTest.testNiceClassMocking":480,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":231,"org.easymock.tests.MockingTest.testClassMocking":472,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":522,"org.easymock.tests2.UsageConstraintsTest.testContains":51,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":335,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":148,"org.easymock.tests2.UsageConstraintsTest.testFind":42,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests.MockTypeTest.fromEasyMockClass":346,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":405,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":228,"org.easymock.tests.UsageExpectAndReturnTest.object":451,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":528,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":281,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":308,"org.easymock.tests.UsageTest.exactCallCountByLastCall":421,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":269,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":455,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":215,"org.easymock.tests.MockClassControlTest.testHashCode":331,"org.easymock.tests2.EasyMockSupportTest.testVerify":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":171,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":103,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":139,"org.easymock.tests.UsageVarargTest.varargCharAccepted":280,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":435,"org.easymock.tests2.CaptureTest.testCaptureMultiple":532,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests.DefaultClassInstantiatorTest.object":436,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":306,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":186,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":214,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":507,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":98,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":316,"org.easymock.tests.ReplayStateInvalidCallsTest.times":513,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":456,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":422,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":514,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":540,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":180,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":329,"org.easymock.tests2.UsageTest.resumeIfFailure":206,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":428,"org.easymock.tests2.StubTest.stubWithReturnValue":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":75,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":62,"org.easymock.tests2.SerializationTest.testAllMockedMethod":85,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":0,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":524,"org.easymock.samples.SupportTest.voteForRemovals":247,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":319,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":394,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":209,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":271,"org.easymock.tests.UsageExpectAndThrowTest.object":318,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":59,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":511,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":351,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":352,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":241,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":137,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":31,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":6,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":74,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":158,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":432,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":525,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":503,"org.easymock.tests2.CaptureTest.testCaptureNone":126,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":373,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":494,"org.easymock.tests.UsageUnorderedTest.message":399,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":490,"org.easymock.tests.UsageVerifyTest.twoReturns":464,"org.easymock.tests.UsageVarargTest.varargByteAccepted":285,"org.easymock.tests2.ThreadingTest.testThreadSafe":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":175,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":339,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":239,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":120,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":303,"org.easymock.tests2.UsageConstraintsTest.any":49,"org.easymock.tests2.StubTest.stub":144,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndThrowTest.longType":314,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":440,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":361,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests.LimitationsTest.mockNativeMethod":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":458,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":185,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":519,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":157,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":495,"org.easymock.tests2.NameTest.nameForMocksControl":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":187,"org.easymock.tests2.MockedExceptionTest.testMockedException":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":163,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":418,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":477,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":3,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":227,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":76,"org.easymock.tests.MockingTest.testNicePartialClassMocking":475,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":183,"org.easymock.tests2.CaptureTest.testCaptureLast":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":460,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":518,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":237,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":60,"org.easymock.tests.MockingTest.testTwoMocks":473,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":515,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":238,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":4,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":64,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":498,"org.easymock.samples.ExampleTest.removeNonExistingDocument":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":190,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":216,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":497,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":438,"org.easymock.tests2.ConstraintsToStringTest.andToString":541,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":109,"org.easymock.tests2.MockBuilderTest.testCreateMockString":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":165,"org.easymock.tests.UsageExpectAndThrowTest.floatType":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":160,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":211,"org.easymock.tests.UsageVerifyTest.twoThrows":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":152,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":174,"org.easymock.samples.ExampleTest.voteAgainstRemoval":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":371,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":99,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":63,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":263,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":385,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":184,"org.easymock.tests.UsageVarargTest.differentLength":282,"org.easymock.tests2.CallbackTest.callback":229,"org.easymock.tests2.UsageConstraintsTest.equals":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":95,"org.easymock.tests.UsageTest.openCallCountByLastCall":417,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":302,"org.easymock.tests.UsageCallCountTest.tooFewCalls":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":434,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":496,"org.easymock.tests.UsageThrowableTest.throwCheckedException":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":526,"org.easymock.tests.MockingTest.testStrictClassMocking":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":236,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":189,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":232,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":235,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":213,"org.easymock.tests2.CompareToTest.testGreateOrEqual":488,"org.easymock.tests.ObjectMethodsTest.testHashCode":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":530,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":517,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":111,"org.easymock.tests2.NameTest.nameForNiceMock":22,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":512,"org.easymock.tests2.DependencyTest.testInterfaceMocking":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":529,"org.easymock.samples.ExampleTest.addDocument":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":181,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.AnswerTest.stubAnswer":212,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":408,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":77,"org.easymock.tests.UsageVarargTest.varargLongAccepted":284,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":457,"org.easymock.tests.UsageExpectAndReturnTest.floatType":446,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":150,"org.easymock.tests2.ConstraintsToStringTest.orToString":538,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":242,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":223,"org.easymock.tests.UsageThrowableTest.noUpperLimit":257,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":123,"org.easymock.tests2.SerializationTest.test":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":445,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.samples.SupportTest.addDocument":246,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":234,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":502,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":166,"org.easymock.tests.GenericTest.testPackageScope":289,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":222,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":478,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":500,"org.easymock.tests2.NameTest.nameForMock":20,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":452,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":81,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":7,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":297,"org.easymock.tests2.MockedExceptionTest.testRealException":149,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":138,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":543,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":366,"org.easymock.tests2.NameTest.nameForStrictMock":21,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":71,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":136,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":535,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":439,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":58,"org.easymock.tests.ErrorMessageTest.testGetters":536,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":68,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":506,"org.easymock.tests2.UsageConstraintsTest.lessThan":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":218,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":170,"org.easymock.tests2.CaptureTest.testCaptureRightOne":128,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":493,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests.UsageRangeTest.combination":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":416,"org.easymock.tests2.MockBuilderTest.testWithConstructor":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":167,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":375,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":441,"org.easymock.tests.UsageVarargTest.varargShortAccepted":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":340,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":520,"org.easymock.tests2.UsageConstraintsTest.cmpTo":50,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":210,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":377,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.CaptureTest.testCaptureFromStub":129,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":356,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":415,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":516,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":407,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":18,"org.easymock.tests2.CaptureTest.testCapture":533,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":409,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.samples.ExampleTest.addAndChangeDocument":255,"org.easymock.tests2.ConstraintsToStringTest.notToString":539,"org.easymock.tests.UsageStrictMockTest.testVerify":411,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":245,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":406,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":401,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":449,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":267,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":537,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":30,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":277}}]
