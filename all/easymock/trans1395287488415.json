[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:274","failures":[21,22,23,24,25,26,27,28,29,30,31],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[39],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[37,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[41,42,43,44,45,46,47],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[2,3,3,4,4,48,49,5,6,50,51,52,53,7,54,55,56,9,10,57,11,58,59,60,61,62,63,64,12,65,66,67,13,68,69,14,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,15,91,92,93,94,95,96,97,98,99,16,100,101,102,103,104,105,106,107,17,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,18,126,127,19,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[6,141,142,143,144,145,146,147,148,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[150],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[2,3,3,4,4,48,49,5,50,151,51,52,7,54,55,56,10,57,152,11,58,59,60,61,62,63,64,66,67,13,68,72,79,80,81,82,83,84,153,88,15,16,105,17,108,111,112,113,114,116,117,118,126,127,19,130,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[59,60,62,66,68,154,41,155,156,157,158,47,159,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[161,61,162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[21,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,25,154,41,155,182,183,184,185,186,187,188,189,190,191,44,192,193,194,195,129,196,45,46,197,198,199,157,158,47,159],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[17,200,108,201],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[2,3,4,5,6,202,50,203,51,52,204,53,7,54,55,141,56,8,9,10,57,205,11,63,12,67,13,14,70,15,16,105,17,116,117,18,19],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[175,178,179,41,206,207,156,184,187,188,44,45,46,157,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[21,22,23,24,25,28,30,31],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[21,24,25,27,30,31,208],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[209,210,211,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[17,200,108,201],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[2,3,3,4,4,213,21,214,215,216,217,218,219,220,48,49,221,222,223,5,6,224,163,164,165,166,22,225,23,226,227,209,32,228,229,167,168,230,210,231,232,169,170,233,20,234,235,161,236,237,211,238,239,240,241,171,172,242,243,244,245,246,50,51,52,53,7,54,55,56,9,10,57,11,247,248,212,249,250,33,34,35,251,36,252,253,254,38,58,59,255,60,61,62,63,256,64,12,65,66,67,13,68,69,14,257,258,259,260,261,70,71,72,262,263,264,265,266,267,268,269,270,271,272,273,274,173,275,174,175,276,162,176,177,277,178,179,278,180,73,74,279,280,24,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,181,75,78,298,299,300,301,79,80,81,82,302,83,84,303,304,305,306,307,308,309,310,311,312,313,314,315,85,86,87,88,89,90,15,91,92,93,94,95,96,97,98,99,16,100,101,102,103,104,105,106,107,25,26,27,28,29,30,316,317,154,318,41,155,319,17,200,108,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,109,110,111,112,113,363,114,364,365,115,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,116,383,384,117,385,386,31,387,388,389,390,391,206,392,393,394,395,396,397,398,399,182,183,156,184,185,186,187,188,189,118,39,190,191,400,401,402,403,404,405,406,119,120,121,122,123,124,125,44,407,408,409,410,411,412,413,414,192,415,416,417,418,419,18,126,127,19,128,420,421,193,422,423,424,425,426,427,428,429,430,431,432,433,434,208,435,0,436,437,438,439,440,441,442,443,194,444,445,446,447,448,449,450,451,452,453,195,129,130,131,132,133,134,135,136,137,138,139,140,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,196,45,46,483,484,485,197,486,198,487,488,199,489,490,491,492,157,158,493,47,159,494,160,495,496,497],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[19],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":32,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests2.UsageTest.argumentsOrdered":179,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":432,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":162,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":220,"org.easymock.tests2.DelegateToTest.testReturnException":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":478,"org.easymock.tests.MockingTest.testPartialClassMocking":112,"org.easymock.tests.MockClassControlTest.testToString":131,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":224,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":320,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":454,"org.easymock.tests2.UsageTest.wrongArguments":175,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":461,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":117,"org.easymock.tests2.UsageConstraintsTest.testNull":167,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":136,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":312,"org.easymock.tests2.CaptureTest.testPrimitive":249,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":458,"org.easymock.tests.UsageTest.moreThanOneArgument":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":339,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":380,"org.easymock.tests.UsageTest.argumentsOrdered":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":39,"org.easymock.tests.UsageVarargTest.varargIntAccepted":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":463,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":148,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":467,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":286,"org.easymock.tests.ReplayStateInvalidUsageTest.times":374,"org.easymock.tests2.DependencyTest.testClassMocking":73,"org.easymock.tests2.AnswerTest.answer":25,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":246,"org.easymock.tests2.CaptureTest.testAnd":247,"org.easymock.tests2.UsageTest.strictResetToDefault":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":307,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":401,"org.easymock.tests2.DelegateToTest.testDelegate":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":335,"org.easymock.tests.LimitationsTest.mockFinalMethod":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":406,"org.easymock.tests2.DependencyTest.testClassMockingSupport":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":392,"org.easymock.tests2.CaptureTest.testCapture1_2446744":250,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":244,"org.easymock.tests.UsageThrowableTest.throwError":413,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":368,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":384,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":107,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":363,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":464,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":496,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":95,"org.easymock.tests2.UsageTest.niceToStrict":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":102,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":329,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":409,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":483,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":459,"org.easymock.tests.UsageOverloadedMethodTest.overloading":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":99,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":234,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":354,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":20,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":36,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":446,"org.easymock.tests.MockClassControlTest.testEquals":135,"org.easymock.tests2.EasyMockSupportClassTest.testAll":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":127,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":245,"org.easymock.tests2.CaptureTest.testCaptureAll":248,"org.easymock.tests.MockNameTest.defaultName":412,"org.easymock.tests2.UsageConstraintsTest.testMatches":235,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":381,"org.easymock.samples.ExampleTest.voteForRemovals":217,"org.easymock.tests.UsageVarargTest.allKinds":195,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":405,"org.easymock.samples.BasicClassMockTest.testPrintContent":49,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":418,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":270,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":149,"org.easymock.tests2.UsageConstraintsTest.greaterThan":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":397,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":68,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":125,"org.easymock.samples.ExampleTest.voteForRemoval":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":69,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":258,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":118,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":305,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":477,"org.easymock.tests2.CaptureTest.testCaptureFirst":38,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":306,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":350,"org.easymock.tests2.UsageTest.moreThanOneArgument":174,"org.easymock.tests2.CaptureTest.testCapture2_2446744":254,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":57,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":453,"org.easymock.tests.GenericTest.testBridgedEquals":128,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":498,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":488,"org.easymock.tests.UsageExpectAndReturnTest.longType":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":402,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":303,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":338,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":395,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":378,"org.easymock.tests.UsageCallCountTest.tooManyCalls":199,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":417,"org.easymock.tests.MockingTest.testNiceClassMocking":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests.MockingTest.testClassMocking":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":484,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":151,"org.easymock.tests2.UsageConstraintsTest.testContains":233,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":229,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":193,"org.easymock.tests.MockTypeTest.fromEasyMockClass":383,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":23,"org.easymock.tests.UsageExpectAndReturnTest.object":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":311,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":144,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":474,"org.easymock.tests.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":194,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":388,"org.easymock.tests.MockClassControlTest.testHashCode":134,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":264,"org.easymock.tests2.EasyMockSupportTest.testVerify":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":97,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":408,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":447,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":119,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":407,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":472,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":263,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":133,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":326,"org.easymock.tests.CapturesMatcherTest.test":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":105,"org.easymock.tests2.UsageTest.resumeIfFailure":278,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":480,"org.easymock.tests2.StubTest.stubWithReturnValue":301,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":352,"org.easymock.tests2.SerializationTest.testAllMockedMethod":108,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":436,"org.easymock.samples.SupportTest.voteForRemovals":223,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":332,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":201,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":442,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":26,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":330,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":238,"org.easymock.tests2.DelegateToTest.testWrongClass":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":489,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":490,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":298,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":331,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":55,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":497,"org.easymock.tests2.CaptureTest.testCaptureNone":251,"org.easymock.tests.UsageUnorderedTest.message":44,"org.easymock.tests.UsageVerifyTest.twoReturns":46,"org.easymock.tests.UsageVarargTest.varargByteAccepted":452,"org.easymock.tests2.ThreadingTest.testThreadSafe":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":100,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":198,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":475,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":48,"org.easymock.tests2.CaptureTest.testCapture_2617107":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":440,"org.easymock.tests2.UsageConstraintsTest.any":169,"org.easymock.tests2.StubTest.stub":300,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":373,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndThrowTest.longType":323,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":123,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":372,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests.LimitationsTest.mockNativeMethod":139,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":283,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":319,"org.easymock.tests2.NameTest.nameForMocksControl":166,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":90,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":186,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":225,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":56,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":62,"org.easymock.tests2.CaptureTest.testCaptureLast":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":393,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":210,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":239,"org.easymock.tests.MockingTest.testTwoMocks":111,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":328,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.samples.ExampleTest.removeNonExistingDocument":218,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":288,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":265,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":121,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":259,"org.easymock.tests2.MockBuilderTest.testCreateMockString":11,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":322,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":28,"org.easymock.tests.UsageVerifyTest.twoThrows":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":202,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":16,"org.easymock.samples.ExampleTest.voteAgainstRemoval":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":13,"org.easymock.tests.LimitationsTest.privateConstructor":138,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":419,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests2.UsageTest.defaultResetToNice":277,"org.easymock.samples.ExampleTest.voteAgainstRemovals":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":358,"org.easymock.tests.UsageVarargTest.differentLength":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":282,"org.easymock.tests2.CallbackTest.callback":24,"org.easymock.tests2.UsageConstraintsTest.equals":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":12,"org.easymock.tests.UsageTest.openCallCountByLastCall":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":456,"org.easymock.tests.UsageCallCountTest.tooFewCalls":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":462,"org.easymock.tests.UsageThrowableTest.throwCheckedException":416,"org.easymock.tests.MockingTest.testStrictClassMocking":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":411,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":287,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":302,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":30,"org.easymock.tests.ObjectMethodsTest.testHashCode":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":147,"org.easymock.tests2.NameTest.nameForNiceMock":165,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":261,"org.easymock.tests2.DependencyTest.testInterfaceMocking":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":145,"org.easymock.samples.ExampleTest.addDocument":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":106,"org.easymock.tests2.DelegateToTest.testStubDelegate":295,"org.easymock.tests2.AnswerTest.stubAnswer":29,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":158,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":8,"org.easymock.tests.UsageVarargTest.varargLongAccepted":451,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.floatType":345,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.UsageThrowableTest.noUpperLimit":414,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":272,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":227,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":75,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":33,"org.easymock.tests2.SerializationTest.test":200,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":120,"org.easymock.tests2.UsageConstraintsTest.testSame":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":344,"org.easymock.samples.SupportTest.addDocument":222,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":92,"org.easymock.tests.GenericTest.testPackageScope":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":271,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":364,"org.easymock.tests2.NameTest.nameForMock":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":355,"org.easymock.tests2.UsageStrictMockTest.differentMethods":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":334,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":471,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":399,"org.easymock.tests2.MockedExceptionTest.testRealException":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":142,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":208,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":455,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":377,"org.easymock.tests2.NameTest.nameForStrictMock":164,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":53,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":122,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":42,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":211,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":51,"org.easymock.tests2.UsageStrictMockTest.range":41,"org.easymock.tests2.UsageConstraintsTest.lessThan":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":96,"org.easymock.tests2.CaptureTest.testCaptureRightOne":252,"org.easymock.tests2.UsageConstraintsTest.testOr":230,"org.easymock.tests.UsageRangeTest.combination":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageTest.wrongArguments":184,"org.easymock.tests2.MockBuilderTest.testWithConstructor":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":93,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":356,"org.easymock.tests.UsageVarargTest.varargShortAccepted":450,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":124,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":487,"org.easymock.tests2.UsageConstraintsTest.cmpTo":170,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":27,"org.easymock.tests2.CompareToTest.testLessThan":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":253,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":367,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":52,"org.easymock.tests.UsageTest.unexpectedCallWithArray":156,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":157,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":486,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":357,"org.easymock.tests2.CaptureTest.testCapture":37,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":493,"org.easymock.tests2.UsageConstraintsTest.constraints":209,"org.easymock.samples.ExampleTest.addAndChangeDocument":219,"org.easymock.tests.UsageStrictMockTest.testVerify":160,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":221,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":403,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":465,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":153,"org.easymock.tests.LimitationsTest.abstractClass":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":466,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":444,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":309}}]
