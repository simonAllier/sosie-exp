[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[6,7,8],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26,27,28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[29,30,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[32,9,10,11],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,0,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,12,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,6,7,153,154,13,155,156,157,158,159,160,161,162,163,164,165,166,167,3,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,8,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,273,274,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,14,387,15,388,389,16,390,391,17,392,18,19,20,21,393,22,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,23,426,427,428,429,430,431,24,432,433,434,9,10,11,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,25,472,473,474,475,476,477,26,478,479,27,28],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[430,443],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[386],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,70,71,96,97,100,121,122,123,125,127,12,129,130,131,146,147,148,149,151,152,6,7,153,154,13,155,166,167,169,170,173,177,178,180,216,218,227,228,230,249,257,258,260,261,262,263,264,265,266,270,278,279,281,282,284,288,289,290,291,292,295,296,297,298,300,301,302,303,304,305,306,307,310,314,315,316,320,328,330,331,333,345,355,358,368,374,377,378,379,380,382,383,384,385,386,14,15,388,389,16,390,391,17,392,18,19,20,21,393,22,394,395,396,399,405,406,407,408,409,410,411,417,424,425,23,426,427,428,429,430,431,24,432,433,9,10,435,436,437,439,441,442,443,446,447,455,456,457,458,459,460,461,463,466,468,469,25,475,477,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:972","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[35,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,66,0,68,69,70,71,72,74,75,76,77,78,81,88,89,90,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,12,129,130,131,146,147,148,149,150,151,152,6,7,153,154,13,155,156,157,158,159,160,161,162,163,164,165,166,167,3,168,169,170,171,172,173,177,178,180,184,185,186,187,206,223,229,244,245,246,247,248,249,250,251,252,253,254,255,256,257,8,258,259,260,261,262,263,264,265,266,267,268,269,270,273,273,274,274,278,279,280,281,282,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,313,314,315,316,319,320,326,328,329,330,331,332,333,335,336,337,338,345,355,358,368,374,377,378,379,380,382,383,384,385,386,14,387,15,388,389,16,390,391,17,392,18,19,20,21,393,22,394,395,396,397,398,399,400,401,402,405,406,407,408,409,410,411,417,424,425,23,426,427,428,429,430,431,24,432,433,9,10,435,436,437,438,439,440,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,463,466,468,469,25,472,473,474,475,476,477,26,478,479,27,28],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[288,290,298,379,380,385,386,387,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[68,70,71,93,94,2,480,481,167,245,248,249,250,251,257,8,258,328,330,331,482,4,483,484,485,486,437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[66,67,0,68,69,70,71,72,73,75,76,79,81,82,83,84,86,87,98,99,126,150,168,171,172,195,196,197,199,200,201,202,203,204,205,206,208,215,219,223,224,225,251,259,271,272,275,276,277,278,279,281,282,283,284,286,287,289,290,293,294,295,296,301,302,319,322,323,324,325,326,327,328,329,330,331,332,387,15,393,22,426,24,432,433,434,11,438,440,444,445,448,450,463,466,25,479],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[289,290,292,293,294,295,296,301,17,393],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[333,334,487,488,489,490,491,9,492,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,231,232,233,234,235,237,238,239,240,241,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[98,155,157,158,159,160,161,162,214,241,268,269,320,473,474,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[380],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[515],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[33,34,35,36,60,63,124,125,126,127,128,138,139,140,141,142,143,144,145,174,175,176,177,178,180,183,188,189,190,191,192,193,194,259,270,271,272,273,273,274,274,302,303,305,306,307,308,310,311,312,313,314,315,316,317,318,333,334,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,403,404,9,11,451,516,517,452,455,456,457,458,460,461,462,463,464,465,466,467,468,469,470,471,25,472,473,474,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[397,401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[164,165,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[518],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[213,26,27,28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[66,67,0,68,69,70,71,72,73,75,76,79,81,82,83,84,86,87,98,99,126,150,168,171,172,195,196,197,199,200,201,202,203,204,205,206,223,251,259,271,272,275,276,277,278,279,281,282,283,284,286,287,289,290,293,294,295,296,301,302,319,322,323,324,325,326,327,328,329,330,331,332,387,15,393,22,426,24,432,433,434,11,438,440,444,445,448,450,463,466,25,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[519],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[68,70,71,93,94,2,480,481,167,251,257,8,258,328,330,331,482,4,483,484,485,486,437],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":380,"org.easymock.tests2.UsageTest.argumentsOrdered":445,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":217,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":440,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":276,"org.easymock.tests2.DelegateToTest.testReturnException":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":158,"org.easymock.tests.MockingTest.testPartialClassMocking":177,"org.easymock.tests.MockClassControlTest.testToString":140,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":321,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":101,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":358,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":406,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":514,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":487,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":14,"org.easymock.tests2.UsageTest.wrongArguments":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":96,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":186,"org.easymock.samples.ExampleTest.answerVsDelegate":280,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":63,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":182,"org.easymock.tests2.UsageConstraintsTest.testNull":383,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":305,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":145,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":24,"org.easymock.tests2.CaptureTest.testPrimitive":291,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":100,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":120,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests.UsageTest.argumentsOrdered":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":74,"org.easymock.tests.UsageVarargTest.varargIntAccepted":197,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":517,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":422,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":266,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":498,"org.easymock.tests.ReplayStateInvalidUsageTest.times":239,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":345,"org.easymock.tests2.DependencyTest.testClassMocking":403,"org.easymock.tests2.AnswerTest.answer":477,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.CaptureTest.testAnd":288,"org.easymock.tests2.UsageTest.strictResetToDefault":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":427,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":130,"org.easymock.tests2.DelegateToTest.testDelegate":402,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":78,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":497,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":116,"org.easymock.tests.LimitationsTest.mockFinalMethod":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":92,"org.easymock.tests2.DependencyTest.testClassMockingSupport":404,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":93,"org.easymock.tests2.CaptureTest.testCapture1_2446744":292,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.UsageThrowableTest.throwError":149,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":233,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":62,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":501,"org.easymock.samples.PartialClassMockTest.testGetArea":270,"org.easymock.tests.MockingTest.testInterfaceMocking":179,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":122,"org.easymock.tests2.UsageTest.niceToStrict":439,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":363,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":466,"org.easymock.tests2.MockBuilderTest.testCreateMock":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":110,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":184,"org.easymock.tests.UsageOverloadedMethodTest.overloading":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":373,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":390,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":51,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":16,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":297,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":198,"org.easymock.tests.MockClassControlTest.testEquals":144,"org.easymock.tests2.EasyMockSupportClassTest.testAll":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":90,"org.easymock.tests2.CaptureTest.testCaptureAll":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.MockNameTest.defaultName":243,"org.easymock.tests2.UsageConstraintsTest.testMatches":391,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.samples.ExampleTest.voteForRemovals":284,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":91,"org.easymock.samples.BasicClassMockTest.testPrintContent":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":153,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":419,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":316,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":502,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":194,"org.easymock.samples.ExampleTest.voteForRemoval":281,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":408,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":308,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":494,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":435,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":259,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":23,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":397,"org.easymock.tests2.CaptureTest.testCaptureFirst":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":426,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":447,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":47,"org.easymock.tests2.UsageTest.moreThanOneArgument":437,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":410,"org.easymock.tests2.CaptureTest.testCapture2_2446744":300,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":205,"org.easymock.tests.GenericTest.testBridgedEquals":128,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":86,"org.easymock.tests.UsageExpectAndReturnTest.longType":43,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":424,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":119,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":393,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":268,"org.easymock.tests.UsageCallCountTest.tooManyCalls":87,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":456,"org.easymock.tests.MockingTest.testNiceClassMocking":183,"org.easymock.tests.MockingTest.testClassMocking":175,"org.easymock.tests2.UsageConstraintsTest.testContains":389,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":80,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":475,"org.easymock.tests2.UsageConstraintsTest.testFind":382,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":148,"org.easymock.tests.MockTypeTest.fromEasyMockClass":61,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":450,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests.UsageExpectAndReturnTest.object":50,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":488,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":200,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":135,"org.easymock.tests.UsageTest.exactCallCountByLastCall":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":37,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":75,"org.easymock.tests2.ConstraintsToStringTest.findToString":515,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":56,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":195,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests.MockClassControlTest.testHashCode":143,"org.easymock.tests2.EasyMockSupportTest.testVerify":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":365,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":76,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":164,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":339,"org.easymock.tests.UsageVarargTest.varargCharAccepted":199,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":230,"org.easymock.tests2.UsageTest.openCallCountByLastCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":433,"org.easymock.tests.DefaultClassInstantiatorTest.object":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":29,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":163,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":133,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":481,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":500,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":142,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":107,"org.easymock.tests.ReplayStateInvalidCallsTest.times":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":267,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":507,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":484,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":374,"org.easymock.tests2.UsageTest.resumeIfFailure":446,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":516,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":160,"org.easymock.tests2.StubTest.stubWithReturnValue":320,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":492,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":49,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":223,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":278,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":113,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":229,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":26,"org.easymock.tests.UsageExpectAndThrowTest.object":111,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":39,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":20,"org.easymock.tests2.DelegateToTest.testWrongClass":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":504,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":261,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.samples.ConstructorCalledMockTest.testTax":273,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":453,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":430,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":468,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":123,"org.easymock.tests2.CaptureTest.testCaptureNone":296,"org.easymock.tests.UsageUnorderedTest.message":251,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":204,"org.easymock.tests2.ThreadingTest.testThreadSafe":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":369,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":84,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":136,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":271,"org.easymock.tests2.CaptureTest.testCapture_2617107":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":227,"org.easymock.tests2.UsageConstraintsTest.any":15,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":238,"org.easymock.tests2.StubTest.stub":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":159,"org.easymock.tests.UsageExpectAndThrowTest.longType":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":192,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":237,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":417,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests.LimitationsTest.mockNativeMethod":35,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":127,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":512,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests2.NameTest.nameForMocksControl":325,"org.easymock.tests2.MockedExceptionTest.testMockedException":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":357,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":449,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":105,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":469,"org.easymock.tests.MockingTest.testNicePartialClassMocking":178,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":307,"org.easymock.tests2.CaptureTest.testCaptureLast":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":94,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":511,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":461,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":386,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":21,"org.easymock.tests.MockingTest.testTwoMocks":176,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":109,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":444,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":395,"org.easymock.samples.ExampleTest.removeNonExistingDocument":285,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":190,"org.easymock.tests2.ConstraintsToStringTest.andToString":485,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":409,"org.easymock.tests2.MockBuilderTest.testCreateMockString":472,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":138,"org.easymock.tests.UsageExpectAndThrowTest.floatType":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":359,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":479,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":368,"org.easymock.samples.ExampleTest.voteAgainstRemoval":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":218,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":315,"org.easymock.tests.LimitationsTest.privateConstructor":34,"org.easymock.tests2.UsageConstraintsTest.testNotNull":394,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":473,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":154,"org.easymock.tests2.UsageTest.defaultResetToNice":443,"org.easymock.samples.ExampleTest.voteAgainstRemovals":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":219,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.CallbackTest.callback":287,"org.easymock.tests2.UsageConstraintsTest.equals":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":311,"org.easymock.tests.UsageTest.openCallCountByLastCall":169,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":377,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":98,"org.easymock.tests.UsageCallCountTest.tooFewCalls":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":187,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":519,"org.easymock.tests.UsageThrowableTest.throwCheckedException":6,"org.easymock.tests.MockingTest.testStrictClassMocking":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":460,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":155,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":457,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":459,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":28,"org.easymock.tests.ObjectMethodsTest.testHashCode":134,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":510,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":411,"org.easymock.tests2.NameTest.nameForNiceMock":324,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":505,"org.easymock.tests2.DependencyTest.testInterfaceMocking":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":489,"org.easymock.samples.ExampleTest.addDocument":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":370,"org.easymock.tests2.DelegateToTest.testStubDelegate":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.stubAnswer":27,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests.UsageVarargTest.varargLongAccepted":203,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":333,"org.easymock.tests2.ConstraintsToStringTest.orToString":482,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":421,"org.easymock.tests.UsageThrowableTest.noUpperLimit":150,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":18,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":378,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":451,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":293,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":518,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":189,"org.easymock.tests2.UsageConstraintsTest.testSame":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":41,"org.easymock.samples.SupportTest.addDocument":277,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":495,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":360,"org.easymock.tests.GenericTest.testPackageScope":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":420,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":181,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":493,"org.easymock.tests2.NameTest.nameForMock":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":52,"org.easymock.tests2.UsageStrictMockTest.differentMethods":331,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":115,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":132,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":131,"org.easymock.tests2.MockedExceptionTest.testRealException":476,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":220,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":242,"org.easymock.tests2.NameTest.nameForStrictMock":323,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":465,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":448,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":306,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":452,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":191,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":463,"org.easymock.tests2.UsageStrictMockTest.range":330,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":499,"org.easymock.tests2.UsageConstraintsTest.lessThan":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":416,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":215,"org.easymock.tests2.CaptureTest.testCaptureRightOne":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":364,"org.easymock.tests2.UsageConstraintsTest.testOr":385,"org.easymock.tests.UsageRangeTest.combination":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":303,"org.easymock.tests.UsageTest.wrongArguments":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":208,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":193,"org.easymock.tests.UsageVarargTest.varargShortAccepted":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":85,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":513,"org.easymock.tests2.UsageConstraintsTest.cmpTo":388,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":478,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":210,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":442,"org.easymock.tests2.CaptureTest.testCaptureFromStub":299,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":232,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":464,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":509,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":83,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":54,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.UsageConstraintsTest.constraints":379,"org.easymock.samples.ExampleTest.addAndChangeDocument":286,"org.easymock.tests2.ConstraintsToStringTest.notToString":483,"org.easymock.tests.UsageStrictMockTest.testVerify":73,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":275,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":89,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":264,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":46,"org.easymock.tests.LimitationsTest.abstractClass":33,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":429,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":196}}]
