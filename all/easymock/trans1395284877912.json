[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.LastControl:92","failures":[1,2,3,4,5,6,7,8,9],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,1,2,31,32,33,34,3,4,35,5,36,37,38,39,40,41,42,43,44,6,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,7,104,8,105,106,107,108,109,110,111,9,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,10,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[140,141,300,304,305,307,310,343,346,347,375,404,405,444,448,449,451,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[292,316,321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[436,489,490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,1,2,31,32,33,34,3,4,35,5,36,37,38,39,40,41,42,43,44,6,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,7,104,8,105,106,107,108,109,110,111,9,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,10,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[61,491,492,493,494,495,134],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[16,17,18,19,20,21,22,24,25,26,27,2,33,3,4,49,58,60,62,69,70,73,76,85,93,94,95,97,99,100,101,103,7,104,109,110,9,114,125,126,127,128,137,138,139,140,141,142,173,180,181,182,184,185,186,187,191,192,193,196,197,204,214,224,225,228,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,258,259,260,261,262,263,265,266,268,269,270,271,272,275,283,285,286,287,288,289,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,341,342,393,400,402,403,404,405,406,409,410,413,414,417,421,422,423,424,425,426,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,463,464,465,466,467,468,469,470,482,484,485],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[104,105,109,110,111,114],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[61,64,496,497,69,498,491,492,493,499,494,495,500,133,134],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[241,244],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[212],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[501,502,503,504,401,411],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[505],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Find:41","failures":[506],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[12,13,14,15,19,25,26,27,28,5,36,47,48,54,58,66,71,104,8,107,108,109,110,114,136,137,138,139,140,141,142,183,185,189,190,196,214,224,225,228,230,231,232,233,235,236,237,238,240,242,261,262,263,265,266,267,268,269,270,271,272,274,275,287,288,324,327,328,329,331,332,393,394,399,400,401,402,403,404,405,406,407,408,412,415,416,460,461,483,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[69,70,71,507],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[106,113,297,303,309,313,315,345,385,393,409,441,447,453,457,459],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:85","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,1,2,32,33,34,3,4,35,36,37,38,39,40,41,42,43,44,6,45,46,47,48,49,50,51,52,54,58,59,60,62,65,66,68,69,70,71,72,73,74,75,76,77,78,80,83,84,85,86,89,90,91,92,93,94,95,96,97,99,100,101,103,7,104,8,105,106,107,108,109,110,111,9,112,113,114,122,125,126,127,128,129,130,131,132,133,136,137,138,139,140,141,142,146,149,159,165,173,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,204,211,213,214,215,216,217,218,220,221,222,224,225,226,226,227,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,258,259,260,261,262,263,265,266,267,268,269,270,271,272,274,275,279,280,281,282,283,284,285,286,287,288,289,291,292,293,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,341,342,348,349,350,351,352,353,354,355,356,357,358,359,362,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,421,422,423,424,425,426,427,428,429,430,432,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,463,464,465,466,467,468,469,470,475,476,478,482,484,485,487,488],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[391,392,419,420],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[128,129,130,131,132,180,187,241,243,244,245,246,247,248,260,284,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,409,414,421,422,423,424,425,426,464,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[1,2,33,3,4,5,6,49,7,8,9],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[3,36,104,109,110,114,138,249,250,251,252,253,283,284,285,286,287,288,289,341,342,393,402,425],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[16,17,18,19,21,22,25,26,27,2,32,33,34,4,35,36,37,39,40,42,43,44,6,45,46,47,48,49,54,58,66,73,76,84,85,86,103,104,8,105,106,107,108,109,110,111,9,113,114,128,136,137,138,139,140,141,142,180,181,184,185,186,187,189,190,192,193,214,229,232,233,234,235,236,238,240,241,242,243,244,245,246,247,248,259,260,261,262,263,265,266,268,269,270,271,272,279,283,284,286,287,327,329,332,344,345,393,394,399,400,401,402,403,404,405,406,407,409,413,414,415,416,417,463,464,465],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[61,64,69,491,492,493,499,500,133,134],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[433,437],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[197,198],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":409,"org.easymock.tests2.UsageTest.argumentsOrdered":190,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":185,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":228,"org.easymock.tests2.DelegateToTest.testReturnException":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":422,"org.easymock.tests.MockingTest.testPartialClassMocking":475,"org.easymock.tests.MockClassControlTest.testToString":318,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":11,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":153,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":296,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":491,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":35,"org.easymock.tests2.UsageTest.wrongArguments":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":285,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":429,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":338,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":480,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":75,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":25,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":289,"org.easymock.tests.UsageTest.moreThanOneArgument":410,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":315,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":468,"org.easymock.tests.UsageTest.argumentsOrdered":416,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":343,"org.easymock.tests.UsageVarargTest.varargIntAccepted":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":495,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":209,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":253,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests.ReplayStateInvalidUsageTest.times":356,"org.easymock.tests2.DependencyTest.testClassMocking":123,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":92,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":335,"org.easymock.tests2.UsageTest.strictResetToDefault":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":281,"org.easymock.tests2.DelegateToTest.testDelegate":103,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":311,"org.easymock.tests.LimitationsTest.mockFinalMethod":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":398,"org.easymock.tests2.DependencyTest.testClassMockingSupport":124,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":460,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":90,"org.easymock.tests.UsageThrowableTest.throwError":241,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":337,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":210,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":167,"org.easymock.samples.PartialClassMockTest.testGetArea":229,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":365,"org.easymock.tests2.UsageTest.niceToStrict":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":154,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":58,"org.easymock.tests2.MockBuilderTest.testCreateMock":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":176,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":305,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":21,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":392,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":427,"org.easymock.tests.UsageOverloadedMethodTest.overloading":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":158,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":451,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":258,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":489,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":39,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":111,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":264,"org.easymock.tests2.EasyMockSupportClassTest.testAll":146,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":396,"org.easymock.tests2.CaptureTest.testCaptureAll":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":91,"org.easymock.tests.MockNameTest.defaultName":471,"org.easymock.tests2.UsageConstraintsTest.testMatches":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":348,"org.easymock.samples.ExampleTest.voteForRemovals":238,"org.easymock.tests.UsageVarargTest.allKinds":272,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":397,"org.easymock.samples.BasicClassMockTest.testPrintContent":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":247,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":426,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":438,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":86,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":439,"org.easymock.samples.ExampleTest.voteForRemoval":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":87,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":339,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":78,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":408,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":18,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":421,"org.easymock.tests2.CaptureTest.testCaptureFirst":114,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":19,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":192,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":447,"org.easymock.tests2.UsageTest.moreThanOneArgument":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":113,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":66,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":271,"org.easymock.tests.GenericTest.testBridgedEquals":277,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":331,"org.easymock.tests.UsageExpectAndReturnTest.longType":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":394,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":314,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":47,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":466,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.UsageCallCountTest.tooManyCalls":332,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":448,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":246,"org.easymock.tests.MockingTest.testNiceClassMocking":481,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":216,"org.easymock.tests.MockingTest.testClassMocking":473,"org.easymock.tests2.UsageConstraintsTest.testContains":38,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":325,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":131,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":260,"org.easymock.tests.MockTypeTest.fromEasyMockClass":336,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":213,"org.easymock.tests.UsageExpectAndReturnTest.object":450,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":492,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":266,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":293,"org.easymock.tests.UsageTest.exactCallCountByLastCall":417,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":254,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":344,"org.easymock.tests2.ConstraintsToStringTest.findToString":506,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":456,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":484,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":200,"org.easymock.tests.MockClassControlTest.testHashCode":321,"org.easymock.tests2.EasyMockSupportTest.testVerify":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":156,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":391,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":89,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":122,"org.easymock.tests.UsageVarargTest.varargCharAccepted":265,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastCall":186,"org.easymock.tests.DefaultClassInstantiatorTest.object":432,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":27,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":390,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":84,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":457,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":165,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":319,"org.easymock.tests2.UsageTest.resumeIfFailure":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":424,"org.easymock.tests2.StubTest.stubWithReturnValue":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":449,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":48,"org.easymock.tests2.SerializationTest.testAllMockedMethod":71,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":383,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":497,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":232,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":308,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":10,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":194,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":256,"org.easymock.tests.UsageExpectAndThrowTest.object":306,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":45,"org.easymock.tests2.DelegateToTest.testWrongClass":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":341,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":342,"org.easymock.tests.UsageStrictMockTest.range":404,"org.easymock.samples.ConstructorCalledMockTest.testTax":226,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":120,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":307,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":60,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":143,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":428,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":366,"org.easymock.tests.UsageUnorderedTest.message":393,"org.easymock.tests.UsageVerifyTest.twoReturns":465,"org.easymock.tests.UsageVarargTest.varargByteAccepted":270,"org.easymock.tests2.ThreadingTest.testThreadSafe":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":160,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":329,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":224,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":294,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":288,"org.easymock.tests2.UsageConstraintsTest.any":36,"org.easymock.tests2.StubTest.stub":127,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndThrowTest.longType":299,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":436,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":354,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.SerializationTest.testClass":69,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":204,"org.easymock.tests.LimitationsTest.mockNativeMethod":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":459,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":170,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":414,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":478,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":300,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":62,"org.easymock.tests.MockingTest.testNicePartialClassMocking":476,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":168,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":461,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":222,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":46,"org.easymock.tests.MockingTest.testTwoMocks":474,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":304,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":189,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":50,"org.easymock.samples.ExampleTest.removeNonExistingDocument":239,"org.easymock.tests.UsageStrictMockTest.differentMethods":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":175,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":201,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":95,"org.easymock.tests2.MockBuilderTest.testCreateMockString":68,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":150,"org.easymock.tests.UsageExpectAndThrowTest.floatType":298,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":196,"org.easymock.tests.UsageVerifyTest.twoThrows":464,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":135,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":159,"org.easymock.samples.ExampleTest.voteAgainstRemoval":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":85,"org.easymock.tests.LimitationsTest.privateConstructor":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":49,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":248,"org.easymock.tests2.UsageTest.defaultResetToNice":188,"org.easymock.samples.ExampleTest.voteAgainstRemovals":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":169,"org.easymock.tests.UsageVarargTest.differentLength":267,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.UsageConstraintsTest.equals":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":81,"org.easymock.tests.UsageTest.openCallCountByLastCall":413,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":287,"org.easymock.tests.UsageCallCountTest.tooFewCalls":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":430,"org.easymock.tests.UsageThrowableTest.throwCheckedException":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":472,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":174,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":217,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":220,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":198,"org.easymock.tests.ObjectMethodsTest.testHashCode":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":494,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":97,"org.easymock.tests2.NameTest.nameForNiceMock":14,"org.easymock.tests2.DependencyTest.testInterfaceMocking":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":493,"org.easymock.samples.ExampleTest.addDocument":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":166,"org.easymock.tests2.DelegateToTest.testStubDelegate":100,"org.easymock.tests2.AnswerTest.stubAnswer":197,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":402,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":63,"org.easymock.tests.UsageVarargTest.varargLongAccepted":269,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":376,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":458,"org.easymock.tests.UsageExpectAndReturnTest.floatType":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":227,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":208,"org.easymock.tests.UsageThrowableTest.noUpperLimit":242,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":30,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":115,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":107,"org.easymock.tests2.SerializationTest.test":70,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":441,"org.easymock.tests2.UsageConstraintsTest.testSame":34,"org.easymock.samples.SupportTest.addDocument":231,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":219,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":151,"org.easymock.tests.GenericTest.testPackageScope":274,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":207,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":479,"org.easymock.tests2.NameTest.nameForMock":12,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":452,"org.easymock.tests2.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":310,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":290,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":282,"org.easymock.tests2.MockedExceptionTest.testRealException":132,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":496,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":359,"org.easymock.tests2.NameTest.nameForStrictMock":13,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":57,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":119,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":435,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":54,"org.easymock.tests2.UsageStrictMockTest.range":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":155,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":73,"org.easymock.tests.UsageTest.wrongArguments":412,"org.easymock.tests2.MockBuilderTest.testWithConstructor":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":152,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":368,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":437,"org.easymock.tests.UsageVarargTest.varargShortAccepted":268,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":330,"org.easymock.tests2.UsageConstraintsTest.cmpTo":37,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":187,"org.easymock.tests2.CaptureTest.testCaptureFromStub":112,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":55,"org.easymock.tests.UsageTest.unexpectedCallWithArray":411,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":401,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":454,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":403,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.samples.ExampleTest.addAndChangeDocument":240,"org.easymock.tests.UsageStrictMockTest.testVerify":407,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":230,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":400,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":395,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":251,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":446,"org.easymock.tests.LimitationsTest.abstractClass":360,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":22,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":262}}]
