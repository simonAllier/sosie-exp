[{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MocksControl:105","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,2,69,70,71,0,72,73,74,75,76,77,78,1,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,3,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,4,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,227,228,229,230,231,233,234,235,236,237,238],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[388,143,144,354,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[389,390,201,391,392,351],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[393],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[10,394,17,22,23,24,25,26,27,28,29,30,32,33,34,35,37,39,40,41,44,45,48,49,50,51,52,53,54,55,56,57,58,59,61,395,396,397,398,62,399,400,401,402,403,404,405,68,2,406,407,408,409,410,70,71,72,73,76,77,78,1,79,80,81,411,412,82,413,414,415,416,417,418,419,83,84,85,86,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,121,128,129,130,131,132,133,134,135,136,137,138,141,143,144,147,149,150,151,152,154,156,420,420,421,421,422,158,159,160,161,162,163,164,165,170,171,172,3,173,174,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,423,199,200,203,204,207,208,209,210,213,220,221,222,223,224,225,232,424,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,262,263,264,265,266,267,268,269,270,271,288,294,296,297,298,305,306,307,308,4,309,425,426,322,323,324,325,326,327,328,329,330,332,333,335,337,338,339,345,346,347,348,352,354,355,427,428,429,361,362,363,364,365],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[5,6,7,13,16,116,117,118,124,127,148,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[430,111],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[403,431,432,433,434,112],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[435,425,436,426,437],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[438,439],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[35,36,42,43,64,65,66,67,141,143,144,200,202,205,206,225,440,441,442,322,323,324,351,352,354,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[394,17,443,444],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[407,445],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[394,17,443,444],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[435,437],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[446,136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[447,448,449,450,451,452,453],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[35,36,42,43,454,455,456,457,390,458,459,141,143,144,200,202,205,206,225,259,260,322,323,324,352,354,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[33,36,37,38,42,43,44,45,49,53,54,57,61,406,460,410,461,412,417,419,85,101,139,142,143,144,199,201,202,205,206,207,217,218,219,225,316,323,324,462,463,464,465,345,349,351,353,354,355],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[70,0,1,85,86,89,91,92,94,104,109],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[70,0,72,73,74,75,76,78,466,1,79,81],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[438,439],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[143,442,323,324,354],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[412,388],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[394,17,443,444],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,454,389,455,467,457,458,141,143,144,200,225,259,260,322,323,324,331,334,335,336,392,468,465,352,354,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[181,183,197,198,270,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[469],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[470,456,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":282,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":38,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":148,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":427,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":63,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":291,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":239,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":440,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":29,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":449,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":171,"org.easymock.tests2.UsageTest.wrongArguments":36,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":168,"org.easymock.samples.ExampleTest.answerVsDelegate":150,"org.easymock.tests2.UsageConstraintsTest.testNull":89,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":413,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":57,"org.easymock.tests2.CaptureTest.testPrimitive":72,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":174,"org.easymock.tests.UsageTest.moreThanOneArgument":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":258,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":327,"org.easymock.tests.UsageTest.argumentsOrdered":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":361,"org.easymock.tests.UsageVarargTest.varargIntAccepted":312,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":453,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":224,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":371,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":456,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":10,"org.easymock.tests.ReplayStateInvalidUsageTest.times":235,"org.easymock.tests2.AnswerTest.answer":22,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":21,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":34,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":347,"org.easymock.tests2.DelegateToTest.testDelegate":133,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":365,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":259,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":19,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":229,"org.easymock.tests.UsageThrowableTest.throwError":262,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":176,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":463,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":329,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":374,"org.easymock.samples.PartialClassMockTest.testGetArea":422,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":230,"org.easymock.tests.MockingTest.testInterfaceMocking":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":221,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":159,"org.easymock.tests2.UsageTest.niceToStrict":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":240,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":407,"org.easymock.tests2.MockBuilderTest.testCreateMock":460,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":13,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":248,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":53,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":166,"org.easymock.tests.UsageOverloadedMethodTest.overloading":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":99,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":98,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":313,"org.easymock.tests2.EasyMockSupportClassTest.testAll":402,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":436,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":20,"org.easymock.tests2.CaptureTest.testCaptureAll":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":342,"org.easymock.tests.MockNameTest.defaultName":226,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":328,"org.easymock.samples.ExampleTest.voteForRemovals":154,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":469,"org.easymock.tests.UsageVarargTest.allKinds":321,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":343,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":268,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":139,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":309,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":419,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":375,"org.easymock.samples.ExampleTest.voteForRemoval":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":446,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":433,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":367,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":423,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":50,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":128,"org.easymock.tests2.CaptureTest.testCaptureFirst":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":51,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.CaptureTest.testCapture2_2446744":80,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":290,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":320,"org.easymock.tests.GenericTest.testBridgedEquals":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":340,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":445,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":257,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":170,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":471,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":267,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":396,"org.easymock.tests2.UsageConstraintsTest.testContains":97,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":212,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":88,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":165,"org.easymock.tests.MockTypeTest.fromEasyMockClass":175,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":32,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":450,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":315,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":302,"org.easymock.tests.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":296,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":447,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":310,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":117,"org.easymock.tests2.EasyMockSupportTest.testVerify":60,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":470,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":18,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":69,"org.easymock.tests.UsageVarargTest.varargCharAccepted":314,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastCall":39,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":59,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":337,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":300,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":116,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":417,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.ReplayStateInvalidCallsTest.times":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":208,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":380,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":405,"org.easymock.tests2.UsageTest.resumeIfFailure":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests2.SerializationTest.testAllMockedMethod":443,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":288,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":390,"org.easymock.samples.SupportTest.voteForRemovals":147,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":251,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":444,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":294,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":23,"org.easymock.tests.UsageExpectAndThrowTest.object":249,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":377,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.samples.ConstructorCalledMockTest.testTax":420,"org.easymock.tests.UsageStrictMockTest.range":354,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":46,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":250,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":408,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":205,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":391,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":369,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":160,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.UsageUnorderedTest.message":225,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":462,"org.easymock.tests.UsageVerifyTest.twoReturns":324,"org.easymock.tests.UsageVarargTest.varargByteAccepted":319,"org.easymock.tests2.ThreadingTest.testThreadSafe":134,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":216,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":303,"org.easymock.tests2.CaptureTest.testCapture_2617107":0,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":459,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":292,"org.easymock.tests2.UsageConstraintsTest.any":95,"org.easymock.tests2.StubTest.stub":68,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":210,"org.easymock.tests.UsageExpectAndThrowTest.longType":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":233,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.SerializationTest.testClass":394,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests.LimitationsTest.mockNativeMethod":424,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":385,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests2.NameTest.nameForMocksControl":67,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":9,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":204,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":429,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":243,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":411,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":409,"org.easymock.tests.MockingTest.testNicePartialClassMocking":428,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":415,"org.easymock.tests2.CompareToTest.testNotComparable":393,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":5,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":260,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":384,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":247,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.samples.ExampleTest.removeNonExistingDocument":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":231,"org.easymock.tests.UsageStrictMockTest.differentMethods":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":118,"org.easymock.tests2.ConstraintsToStringTest.andToString":457,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":136,"org.easymock.tests2.MockBuilderTest.testCreateMockString":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":241,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":101,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":25,"org.easymock.tests.UsageVerifyTest.twoThrows":323,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":404,"org.easymock.samples.ExampleTest.voteAgainstRemoval":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":418,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":269,"org.easymock.tests2.UsageTest.defaultResetToNice":41,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":284,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests.UsageVarargTest.differentLength":316,"org.easymock.tests2.CallbackTest.callback":61,"org.easymock.tests2.UsageConstraintsTest.equals":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":203,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":3,"org.easymock.tests.UsageCallCountTest.tooFewCalls":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":169,"org.easymock.tests.UsageThrowableTest.throwCheckedException":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":399,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":162,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":11,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":62,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":27,"org.easymock.tests.ObjectMethodsTest.testHashCode":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":452,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":138,"org.easymock.tests2.NameTest.nameForNiceMock":66,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":383,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":378,"org.easymock.tests2.DependencyTest.testInterfaceMocking":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":451,"org.easymock.samples.ExampleTest.addDocument":153,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests2.AnswerTest.stubAnswer":26,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":352,"org.easymock.tests.UsageVarargTest.varargLongAccepted":318,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":281,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":401,"org.easymock.tests2.ConstraintsToStringTest.orToString":454,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":125,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests.UsageThrowableTest.noUpperLimit":263,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":84,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.samples.SupportTest.addDocument":146,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":368,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":232,"org.easymock.tests.GenericTest.testPackageScope":425,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":124,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":359,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":366,"org.easymock.tests2.NameTest.nameForMock":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":253,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":299,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":348,"org.easymock.tests2.MockedExceptionTest.testRealException":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":468,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":172,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":238,"org.easymock.tests2.NameTest.nameForStrictMock":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":414,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":441,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":406,"org.easymock.tests2.UsageStrictMockTest.range":143,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":372,"org.easymock.tests2.UsageConstraintsTest.lessThan":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":120,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":280,"org.easymock.tests2.CaptureTest.testCaptureRightOne":1,"org.easymock.tests2.UsageConstraintsTest.testOr":91,"org.easymock.tests.UsageRangeTest.combination":345,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":412,"org.easymock.tests.UsageTest.wrongArguments":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":273,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":439,"org.easymock.tests.UsageVarargTest.varargShortAccepted":317,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":217,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":386,"org.easymock.tests2.UsageConstraintsTest.cmpTo":96,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":24,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":376,"org.easymock.tests2.CompareToTest.testLessThan":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":275,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.CaptureTest.testCaptureFromStub":79,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":228,"org.easymock.tests.UsageTest.unexpectedCallWithArray":201,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":382,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":351,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests2.CaptureTest.testCapture":466,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":353,"org.easymock.samples.ExampleTest.addAndChangeDocument":156,"org.easymock.tests2.ConstraintsToStringTest.notToString":455,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":157,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":341,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":54,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":311}}]
