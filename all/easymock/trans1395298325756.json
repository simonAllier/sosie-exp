[{"position":"org.easymock.internal.MocksControl:136","failures":[0,1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[3,4,5,7,8,15,18,111,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,112,113,114,115,116,72,117,118],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[119,120,121,122],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[0,123,124,125,126,127,128,129,130,131,132,133,1,2,134,3,4,135,136,137,138,139,140,141,142,143,144,145,146,147,148,5,149,6,150,151,152,153,154,155,156,157,7,8,158,159,160,161,162,163,119,164,165,110,166,120,167,168,169,170,171,172,173,174,175,121,176,177,178,179,122,180,181,9,10,11,12,182,183,13,14,15,16,184,185,17,18,111,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,210,211,212,213,214,215,216,217,218,219,220,221,222,223,44,45,224,46,47,48,49,225,50,51,52,53,54,55,56,57,58,226,227,228,229,230,231,232,233,234,235,236,237,238,59,60,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,61,62,63,276,64,65,66,67,68,69,70,71,277,72,73,74,75,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,76,310,311,312,313,77,314,315,78,79,80,81,82,83,84,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,85,86,87,88,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,89,90,91,92,93,94,95,96,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,97,98,99,100,101,399,102,400,401,103,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,104,105,106,107,108,109,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[229,477],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[157,210,217,61,62,63,276,303,307,308,350,351,352,353,354,355,385,390,422,434,455,482,483,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[161,165,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[135,137,145,110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[236,309,515,428,450,451],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[125,151,153,154,155,363,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[158,160,174,179,516],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[71,76],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[160,173,210,213,214,215,219,220,221,222,45,54,56,232,235,236,237,242,246,247,250,259,65,73,74,75,309,517,518,344,385,387,388,391,392,393,402,519,520,423,425,427,428,429,446,447,448,450,451],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[160,173,14,15,17,18,197,198,210,212,213,214,215,219,220,221,222,45,53,56,58,232,234,235,236,237,238,242,244,246,247,249,250,255,256,257,258,259,269,270,64,65,66,70,71,73,74,75,309,76,312,313,77,314,315,344,91,92,93,385,386,387,388,391,392,393,402,423,425,426,427,428,429,430,440,442,443,446,447,448,449,450,451,453,456,457,458,465,466,509,512,513,514],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.LastControl:70","failures":[0,123,124,125,126,127,128,129,130,131,132,133,1,2,134,3,3,4,4,135,136,137,138,139,140,141,142,143,144,145,146,147,148,158,159,160,161,163,119,164,165,110,166,120,167,168,169,170,171,172,173,174,175,121,176,177,178,179,122,180,181,223,50,231,234,239,240,278,280,309,349,354,410,411,412,413,414,421,422,425,426,480,481,482,483,484,505,506],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,3,4,4,5,6,7,13,14,15,16,17,18,22,25,35,41,44,45,46,47,48,49,50,53,54,55,56,58,63,64,65,66,68,69,70,71,73,74,75,76,77,87,89,90,91,92,93,94,95,96,99,100,101,102,105,106,107,108,109,513],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[521],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[123,134,192,193,194,196,198,199,200,203,264,265,266,268,270,271,272,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[5,149,6,522],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[418,420],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[8,523,524,525,526,527,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[123,124,126,127,128,129,131,132,133,1,2,134,136,137,140,141,142,143,148,6,178,213,215,219,220,233,235,236,237,238,244,250,251,252,253,68,302,309,338,339,340,342,343,345,346,347,348,349,388,391,392,424,425,427,428,429,430,106,109,443,444,445,447,448,465,466,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[8,523,524,525,526,527,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,158,159,160,161,163,119,164,165,110,166,120,167,168,169,170,171,172,173,174,175,121,176,177,178,179,122,180,181,223,50,230,234,278,280,309,349,354,410,411,412,413,414,421,422,425,426,480,481,482,483,484,505,506],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[162],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[123,134,192,198,264,270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[528],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[79,83],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":161,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":385,"org.easymock.tests2.UsageTest.argumentsOrdered":220,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":371,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":215,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":123,"org.easymock.tests2.DelegateToTest.testReturnException":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":351,"org.easymock.tests.MockingTest.testPartialClassMocking":100,"org.easymock.tests.MockClassControlTest.testToString":91,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":254,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":485,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":25,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":240,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":523,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":480,"org.easymock.tests2.UsageTest.wrongArguments":213,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":408,"org.easymock.samples.ExampleTest.answerVsDelegate":125,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":77,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":401,"org.easymock.tests2.UsageConstraintsTest.testNull":119,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":46,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":250,"org.easymock.tests2.CaptureTest.testPrimitive":138,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":504,"org.easymock.tests.UsageTest.moreThanOneArgument":386,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":435,"org.easymock.tests.UsageTest.argumentsOrdered":392,"org.easymock.tests.UsageVarargTest.varargIntAccepted":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":410,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":527,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":414,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":321,"org.easymock.tests.ReplayStateInvalidUsageTest.times":476,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests2.DependencyTest.testClassMocking":59,"org.easymock.tests2.AnswerTest.answer":186,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":263,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":311,"org.easymock.tests2.UsageTest.strictResetToDefault":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":245,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":439,"org.easymock.tests2.DelegateToTest.testDelegate":155,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":500,"org.easymock.tests.LimitationsTest.mockFinalMethod":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":354,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":398,"org.easymock.tests2.DependencyTest.testClassMockingSupport":60,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":465,"org.easymock.tests2.CaptureTest.testCapture1_2446744":139,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":498,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":261,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":470,"org.easymock.tests.UsageThrowableTest.throwError":301,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":313,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":520,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":360,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":43,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":324,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":471,"org.easymock.tests.MockingTest.testInterfaceMocking":399,"org.easymock.tests2.CompareToTest.testLessOrEqual":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":460,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":513,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":30,"org.easymock.tests2.UsageTest.niceToStrict":214,"org.easymock.tests2.ThreadingTest.testChangeDefault":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":200,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":494,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":246,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":310,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":440,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":406,"org.easymock.tests.UsageOverloadedMethodTest.overloading":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":455,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":432,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":292,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":144,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":341,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.MockClassControlTest.testEquals":95,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":106,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":502,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":396,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":262,"org.easymock.tests.MockNameTest.defaultName":514,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":468,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":359,"org.easymock.samples.ExampleTest.voteForRemovals":129,"org.easymock.tests.UsageVarargTest.allKinds":349,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":449,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":397,"org.easymock.samples.BasicClassMockTest.testPrintContent":2,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":307,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":232,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":355,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":403,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":325,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":57,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":49,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":317,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":109,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":243,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":350,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":150,"org.easymock.tests2.CaptureTest.testCaptureFirst":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":244,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":288,"org.easymock.tests2.CaptureTest.testCapture2_2446744":147,"org.easymock.tests2.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":230,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":348,"org.easymock.tests.GenericTest.testBridgedEquals":108,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":447,"org.easymock.tests.UsageExpectAndReturnTest.longType":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":394,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":503,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":507,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":178,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":501,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":356,"org.easymock.tests.UsageCallCountTest.tooManyCalls":448,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":490,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":306,"org.easymock.tests.MockingTest.testNiceClassMocking":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":14,"org.easymock.tests.MockingTest.testClassMocking":98,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":441,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":163,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":434,"org.easymock.tests.MockTypeTest.fromEasyMockClass":312,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":423,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":280,"org.easymock.tests.UsageExpectAndReturnTest.object":291,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":201,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":521,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":524,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":343,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":511,"org.easymock.tests.UsageTest.exactCallCountByLastCall":393,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":436,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":418,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":297,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":454,"org.easymock.tests.MockClassControlTest.testHashCode":94,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":265,"org.easymock.tests2.EasyMockSupportTest.testVerify":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":32,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":463,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":452,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":517,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":260,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":223,"org.easymock.tests.UsageVarargTest.varargCharAccepted":342,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastCall":216,"org.easymock.tests.DefaultClassInstantiatorTest.object":78,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":462,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":509,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":518,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":54,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":93,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":298,"org.easymock.tests.ReplayStateInvalidCallsTest.times":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":415,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":92,"org.easymock.tests2.UsageTest.resumeIfFailure":221,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":353,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":116,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":290,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":377,"org.easymock.samples.SupportTest.voteForRemovals":133,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":497,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":522,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":383,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":187,"org.easymock.tests.UsageExpectAndThrowTest.object":495,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":420,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.DelegateToTest.testWrongClass":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":505,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":506,"org.easymock.tests.UsageStrictMockTest.range":428,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":182,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":496,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":478,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":407,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":461,"org.easymock.tests2.CaptureTest.testCaptureNone":143,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":205,"org.easymock.tests.UsageUnorderedTest.message":309,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":519,"org.easymock.tests.UsageVerifyTest.twoReturns":451,"org.easymock.tests.UsageVarargTest.varargByteAccepted":347,"org.easymock.tests2.ThreadingTest.testThreadSafe":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":36,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":445,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":512,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":1,"org.easymock.tests2.CaptureTest.testCapture_2617107":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageConstraintsTest.any":167,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":475,"org.easymock.tests2.StubTest.stub":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.UsageExpectAndThrowTest.longType":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":474,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":235,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests.LimitationsTest.mockNativeMethod":87,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":194,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":335,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":206,"org.easymock.tests2.NameTest.nameForMocksControl":258,"org.easymock.tests2.MockedExceptionTest.testMockedException":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":24,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":390,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":489,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":102,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":279,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":71,"org.easymock.tests.MockingTest.testNicePartialClassMocking":101,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":48,"org.easymock.tests2.CompareToTest.testCompareEqual":528,"org.easymock.tests2.CaptureTest.testCaptureLast":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":466,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":18,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":334,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.MockingTest.testTwoMocks":99,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":331,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":493,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":180,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":209,"org.easymock.samples.ExampleTest.removeNonExistingDocument":130,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":472,"org.easymock.tests.UsageStrictMockTest.differentMethods":429,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":199,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":266,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":80,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":208,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":229,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":89,"org.easymock.tests.UsageExpectAndThrowTest.floatType":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":26,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":189,"org.easymock.tests.UsageVerifyTest.twoThrows":450,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests.LimitationsTest.privateConstructor":86,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":113,"org.easymock.tests2.UsageConstraintsTest.testNotNull":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":308,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.samples.ExampleTest.voteAgainstRemovals":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":193,"org.easymock.tests.UsageVarargTest.differentLength":344,"org.easymock.tests2.CallbackTest.callback":259,"org.easymock.tests2.UsageConstraintsTest.equals":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":51,"org.easymock.tests.UsageTest.openCallCountByLastCall":389,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":482,"org.easymock.tests.UsageCallCountTest.tooFewCalls":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":409,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":207,"org.easymock.tests.UsageThrowableTest.throwCheckedException":305,"org.easymock.tests.MockingTest.testStrictClassMocking":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":422,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":477,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":185,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":191,"org.easymock.tests.ObjectMethodsTest.testHashCode":510,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":526,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":231,"org.easymock.tests2.NameTest.nameForNiceMock":257,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":333,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":525,"org.easymock.samples.ExampleTest.addDocument":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":37,"org.easymock.tests2.DelegateToTest.testStubDelegate":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.AnswerTest.stubAnswer":190,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":426,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":277,"org.easymock.tests.UsageVarargTest.varargLongAccepted":346,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":370,"org.easymock.tests.UsageExpectAndReturnTest.floatType":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":273,"org.easymock.tests.UsageThrowableTest.noUpperLimit":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":159,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":9,"org.easymock.tests2.SerializationTest.test":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":140,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":79,"org.easymock.tests2.UsageConstraintsTest.testSame":164,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":282,"org.easymock.samples.SupportTest.addDocument":132,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":184,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":318,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":27,"org.easymock.tests.GenericTest.testPackageScope":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":272,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":316,"org.easymock.tests2.NameTest.nameForMock":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":118,"org.easymock.tests2.UsageStrictMockTest.differentMethods":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":499,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":508,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":405,"org.easymock.tests2.MockedExceptionTest.testRealException":276,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":481,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":479,"org.easymock.tests2.NameTest.nameForStrictMock":256,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":67,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":278,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":12,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":121,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":81,"org.easymock.tests.ErrorMessageTest.testGetters":515,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":65,"org.easymock.tests2.UsageStrictMockTest.range":236,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":322,"org.easymock.tests2.UsageConstraintsTest.lessThan":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":268,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":369,"org.easymock.tests2.CaptureTest.testCaptureRightOne":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":31,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":204,"org.easymock.tests2.UsageConstraintsTest.testOr":165,"org.easymock.tests.UsageRangeTest.combination":402,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":388,"org.easymock.tests2.MockBuilderTest.testWithConstructor":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":28,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":362,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":83,"org.easymock.tests.UsageVarargTest.varargShortAccepted":345,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":446,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":336,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":188,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.CaptureTest.testCaptureFromStub":146,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":469,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":66,"org.easymock.tests.UsageTest.unexpectedCallWithArray":387,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":332,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":425,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":444,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":295,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":427,"org.easymock.tests2.UsageConstraintsTest.constraints":160,"org.easymock.samples.ExampleTest.addAndChangeDocument":131,"org.easymock.tests.UsageStrictMockTest.testVerify":431,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":134,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":424,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":395,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":412,"org.easymock.tests.LimitationsTest.abstractClass":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":287,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":247,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":339}}]
