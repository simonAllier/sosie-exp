[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[13,14,15,16,7,17,18,19,20,21,22,23,24,25,26,27,28,10,29,30,31,32,33,34,11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,4,63,13,14,64,1,65,66,67,15,16,68,5,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,2,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,3,168,169,170,171,172,173,174,175,176,177,6,178,179,180,181,182,183,184,185,186,187,188,7,189,17,18,190,191,192,193,194,195,196,197,19,20,21,22,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,23,255,24,256,257,25,26,8,27,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,9,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,28,10,338,29,30,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,34,11,12,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[58,59,60,61,67,70,77,82,121,139,144,183,184,198,203,208,210,225,250,251,252,253,255,312,313,314,315,316,317,318,319,320,321,322,323,331,332,333,340,341,342,343,344,345,346,347,348,359,364,434,447,452,453,454,455,456,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[150,168,174,481],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[161,162],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[435,439],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[128,482,207,483,484,485,486,487,213,214],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[178,181,182,386],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[371],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[62,6,179,182,441,465],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[17,18,29,30,34,368,369],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[37,42,43,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,488,489,482,207,490,491,213,214,492,493,479,480],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[183,184,185,186,244,245,246,247,248,249,259,459],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[4,66,212,248,254,257,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,9,285,286,287,288,289,329,11,377,378,379,383,444,460],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[494],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[128,129,130,495],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[438,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[128,129,130,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[147],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[128,129,130,495],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:633","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,4,63,13,14,64,1,65,66,67,15,16,68,5,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,498,499,500,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,2,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,3,168,169,170,171,172,173,174,175,176,177,6,178,179,180,181,182,183,184,185,186,187,188,7,189,17,18,190,191,192,193,194,195,196,197,19,20,21,22,198,488,199,200,489,201,202,203,204,482,205,206,207,208,209,491,210,211,212,213,214,501,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,23,255,24,256,257,25,26,8,27,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,9,285,286,287,288,289,502,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,28,10,338,29,30,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,34,11,12,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,503,434,435,436,437,438,439,504,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[128,482,207,483,484,485,486,487,213,214],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[435,439],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[505,506,255,507,508,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[482,483,484,485,487,214],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[44,46,54,152,153,156,158,159,161,170,175],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[509,45,56,57,0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[482,483,484,485,510,511,214],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,4,63,13,14,64,1,65,66,67,15,16,68,5,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,498,499,500,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,2,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,3,168,169,170,171,172,173,174,175,176,177,6,178,179,180,181,182,183,184,185,186,187,188,7,189,17,18,190,191,192,193,194,195,196,197,19,20,21,22,198,488,199,200,489,201,202,203,204,482,205,206,207,208,209,491,210,211,212,213,214,501,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,23,255,24,256,257,25,26,8,27,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,9,285,286,287,288,289,502,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,28,10,338,29,30,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,34,11,12,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,503,434,435,436,437,438,439,504,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[512],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":153,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":390,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":1,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":478,"org.easymock.tests2.DelegateToTest.testReturnException":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":245,"org.easymock.tests.MockingTest.testPartialClassMocking":407,"org.easymock.tests.MockClassControlTest.testToString":343,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":197,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":263,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":31,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":483,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":457,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":252,"org.easymock.samples.ExampleTest.answerVsDelegate":465,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":412,"org.easymock.tests2.UsageConstraintsTest.testNull":156,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":79,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":348,"org.easymock.tests2.CaptureTest.testPrimitive":47,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":461,"org.easymock.tests.UsageTest.moreThanOneArgument":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":282,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":293,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":367,"org.easymock.tests.UsageVarargTest.varargIntAccepted":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":511,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":230,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":376,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests.ReplayStateInvalidUsageTest.times":320,"org.easymock.tests2.DependencyTest.testClassMocking":83,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":61,"org.easymock.tests2.CaptureTest.testAnd":44,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":352,"org.easymock.tests2.UsageTest.strictResetToDefault":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":74,"org.easymock.tests2.DelegateToTest.testDelegate":196,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":278,"org.easymock.tests.LimitationsTest.mockFinalMethod":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":456,"org.easymock.tests2.DependencyTest.testClassMockingSupport":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":301,"org.easymock.tests2.CaptureTest.testCapture1_2446744":48,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":59,"org.easymock.tests.UsageThrowableTest.throwError":283,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":314,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":354,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":295,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":111,"org.easymock.samples.PartialClassMockTest.testGetArea":477,"org.easymock.tests.MockingTest.testInterfaceMocking":409,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":315,"org.easymock.tests2.CompareToTest.testLessOrEqual":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":373,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":98,"org.easymock.tests2.UsageTest.niceToStrict":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":264,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":202,"org.easymock.tests2.MockBuilderTest.testCreateMock":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":124,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":272,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":379,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":250,"org.easymock.tests.UsageOverloadedMethodTest.overloading":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":102,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":444,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":425,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":496,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":165,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":53,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":235,"org.easymock.tests2.EasyMockSupportClassTest.testAll":90,"org.easymock.tests.MockClassControlTest.testEquals":347,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":454,"org.easymock.tests2.CaptureTest.testCaptureAll":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":60,"org.easymock.tests.MockNameTest.defaultName":290,"org.easymock.tests2.UsageConstraintsTest.testMatches":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":294,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":312,"org.easymock.samples.ExampleTest.voteForRemovals":469,"org.easymock.tests.UsageVarargTest.allKinds":243,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.samples.BasicClassMockTest.testPrintContent":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":455,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":288,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":249,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":504,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":449,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":147,"org.easymock.samples.ExampleTest.voteForRemoval":466,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":440,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":148,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":139,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":349,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":72,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":244,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":191,"org.easymock.tests2.CaptureTest.testCaptureFirst":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":73,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":5,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":421,"org.easymock.tests2.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.CaptureTest.testCapture2_2446744":56,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":398,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":209,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":242,"org.easymock.tests.GenericTest.testBridgedEquals":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":365,"org.easymock.tests.UsageExpectAndReturnTest.longType":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":452,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":281,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":173,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":309,"org.easymock.tests.UsageCallCountTest.tooManyCalls":366,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":287,"org.easymock.tests.MockingTest.testNiceClassMocking":413,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":36,"org.easymock.tests.MockingTest.testClassMocking":405,"org.easymock.tests2.UsageConstraintsTest.testContains":164,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":359,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":185,"org.easymock.tests2.UsageConstraintsTest.testFind":155,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":329,"org.easymock.tests.MockTypeTest.fromEasyMockClass":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":133,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests.UsageExpectAndReturnTest.object":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":484,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":237,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":494,"org.easymock.tests.UsageTest.exactCallCountByLastCall":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":260,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":430,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":443,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":221,"org.easymock.tests.MockClassControlTest.testHashCode":346,"org.easymock.tests2.EasyMockSupportTest.testVerify":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":100,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":369,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":69,"org.easymock.tests.UsageVarargTest.varargCharAccepted":236,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":503,"org.easymock.tests2.CaptureTest.testCaptureMultiple":509,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastCall":65,"org.easymock.tests.DefaultClassInstantiatorTest.object":434,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":81,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":377,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":119,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":145,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":269,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":431,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":344,"org.easymock.tests2.UsageTest.resumeIfFailure":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":247,"org.easymock.tests2.StubTest.stubWithReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":482,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":423,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":174,"org.easymock.tests2.SerializationTest.testAllMockedMethod":130,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":396,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":473,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":275,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":402,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":178,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":262,"org.easymock.tests.UsageExpectAndThrowTest.object":273,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":171,"org.easymock.tests2.DelegateToTest.testWrongClass":194,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":462,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":463,"org.easymock.samples.ConstructorCalledMockTest.testTax":479,"org.easymock.tests.UsageStrictMockTest.range":29,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":114,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":274,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":204,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests2.CaptureTest.testCaptureNone":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":326,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":241,"org.easymock.tests2.ThreadingTest.testThreadSafe":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":104,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":363,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":475,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":400,"org.easymock.tests2.UsageConstraintsTest.any":162,"org.easymock.tests2.StubTest.stub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":246,"org.easymock.tests.UsageExpectAndThrowTest.longType":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":438,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":318,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":189,"org.easymock.tests2.SerializationTest.testClass":128,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.LimitationsTest.mockNativeMethod":306,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":433,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":118,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":190,"org.easymock.tests2.NameTest.nameForMocksControl":22,"org.easymock.tests2.MockedExceptionTest.testMockedException":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":92,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":410,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":267,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":205,"org.easymock.tests.MockingTest.testNicePartialClassMocking":408,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":116,"org.easymock.tests2.CaptureTest.testCaptureLast":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":302,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":159,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":172,"org.easymock.tests.MockingTest.testTwoMocks":406,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":414,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":271,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":176,"org.easymock.samples.ExampleTest.removeNonExistingDocument":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":123,"org.easymock.tests.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":222,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":436,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":217,"org.easymock.tests2.MockBuilderTest.testCreateMockString":210,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":94,"org.easymock.tests.UsageExpectAndThrowTest.floatType":265,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":180,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":501,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.ExampleTest.voteAgainstRemoval":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":391,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":146,"org.easymock.tests.LimitationsTest.privateConstructor":305,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":493,"org.easymock.tests2.UsageConstraintsTest.testNotNull":175,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":289,"org.easymock.tests2.UsageTest.defaultResetToNice":67,"org.easymock.samples.ExampleTest.voteAgainstRemovals":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":392,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":117,"org.easymock.tests.UsageVarargTest.differentLength":238,"org.easymock.tests2.CallbackTest.callback":62,"org.easymock.tests2.UsageConstraintsTest.equals":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":142,"org.easymock.tests.UsageTest.openCallCountByLastCall":256,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":459,"org.easymock.tests.UsageCallCountTest.tooFewCalls":361,"org.easymock.tests2.ConstraintsToStringTest.nullToString":512,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":253,"org.easymock.tests.UsageThrowableTest.throwCheckedException":286,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":404,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":41,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":37,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":40,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":182,"org.easymock.tests.ObjectMethodsTest.testHashCode":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":510,"org.easymock.tests2.NameTest.nameForNiceMock":21,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":219,"org.easymock.tests2.DependencyTest.testInterfaceMocking":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":485,"org.easymock.samples.ExampleTest.addDocument":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":110,"org.easymock.tests2.DelegateToTest.testStubDelegate":193,"org.easymock.tests2.AnswerTest.stubAnswer":181,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":206,"org.easymock.tests.UsageVarargTest.varargLongAccepted":240,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":432,"org.easymock.tests.UsageExpectAndReturnTest.floatType":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":213,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":480,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":229,"org.easymock.tests.UsageThrowableTest.noUpperLimit":284,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":151,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":112,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":49,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":415,"org.easymock.tests2.UsageConstraintsTest.testSame":157,"org.easymock.samples.SupportTest.addDocument":472,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":39,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":95,"org.easymock.tests.GenericTest.testPackageScope":297,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":411,"org.easymock.tests2.NameTest.nameForMock":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":426,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":418,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":277,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":451,"org.easymock.tests2.MockedExceptionTest.testRealException":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":393,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":458,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":323,"org.easymock.tests2.NameTest.nameForStrictMock":20,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":201,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":437,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":170,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":199,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":99,"org.easymock.tests2.CaptureTest.testCaptureRightOne":54,"org.easymock.tests2.UsageConstraintsTest.testOr":158,"org.easymock.tests.UsageRangeTest.combination":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":96,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":381,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":439,"org.easymock.tests.UsageVarargTest.varargShortAccepted":239,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":364,"org.easymock.tests2.UsageConstraintsTest.cmpTo":163,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":383,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.CaptureTest.testCaptureFromStub":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":313,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":200,"org.easymock.tests.UsageTest.unexpectedCallWithArray":255,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":362,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":428,"org.easymock.tests2.UsageConstraintsTest.constraints":152,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.samples.ExampleTest.addAndChangeDocument":471,"org.easymock.tests.UsageStrictMockTest.testVerify":340,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":474,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":453,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":420,"org.easymock.tests.LimitationsTest.abstractClass":304,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":375,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":233}}]
