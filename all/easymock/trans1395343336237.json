[{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,11,12,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,0,1,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[64,65,66,67,88,176,177,178,179,180,181,240,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[287,0,288,289,290,291,292,293,294,295],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[296,297,298,299],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[237],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[88,127,148,180,300,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[87,301,244,302,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[91,92,97,98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[303,186,304,187,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":92,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.UsageTest.argumentsOrdered":136,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":131,"org.easymock.tests2.StubTest.stubWithReturnValue":88,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":197,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":112,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":70,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":266,"org.easymock.samples.SupportTest.voteForRemovals":4,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":303,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":212,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":140,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":117,"org.easymock.tests.UsageExpectAndThrowTest.object":222,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":21,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":289,"org.easymock.tests2.DelegateToTest.testWrongClass":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":260,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":241,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":170,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":31,"org.easymock.tests2.UsageConstraintsTest.testNull":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":124,"org.easymock.tests2.CaptureTest.testPrimitive":41,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":245,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":283,"org.easymock.tests.UsageTest.moreThanOneArgument":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":263,"org.easymock.tests2.CaptureTest.testCaptureNone":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":146,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":297,"org.easymock.tests.UsageUnorderedTest.message":232,"org.easymock.tests.UsageVerifyTest.twoReturns":149,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":14,"org.easymock.tests.UsageTest.argumentsOrdered":284,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":234,"org.easymock.tests.UsageVarargTest.varargIntAccepted":251,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":244,"org.easymock.tests2.UsageConstraintsTest.any":99,"org.easymock.tests2.StubTest.stub":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":233,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":207,"org.easymock.tests2.AnswerTest.answer":116,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":187,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":128,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests2.MockedExceptionTest.testMockedException":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":79,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":282,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":238,"org.easymock.tests2.DelegateToTest.testDelegate":74,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":216,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":125,"org.easymock.tests.MockingTest.testNicePartialClassMocking":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":227,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":288,"org.easymock.tests2.CaptureTest.testCaptureLast":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":97,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":156,"org.easymock.tests2.CaptureTest.testCapture1_2446744":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":114,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":299,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":301,"org.easymock.tests.UsageThrowableTest.throwError":158,"org.easymock.tests.UsageStrictMockTest.differentMethods":171,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":265,"org.easymock.tests.UsageExpectAndThrowTest.floatType":214,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":105,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":119,"org.easymock.tests.UsageVerifyTest.twoThrows":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":141,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests2.CompareToTest.testLessOrEqual":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":151,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":145,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":213,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":113,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":165,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.UsageTest.defaultResetToNice":134,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":203,"org.easymock.tests2.CallbackTest.callback":30,"org.easymock.tests.UsageTest.openCallCountByLastCall":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":80,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":89,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":243,"org.easymock.tests.UsageCallCountTest.tooFewCalls":183,"org.easymock.tests.UsageOverloadedMethodTest.overloading":247,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":210,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":103,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":34,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":102,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":47,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":298,"org.easymock.tests.UsageThrowableTest.throwCheckedException":162,"org.easymock.tests2.EasyMockSupportClassTest.testAll":139,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.testMatches":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":35,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":264,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":292,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":18,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests2.DependencyTest.testInterfaceMocking":20,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":291,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":164,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests2.AnswerTest.stubAnswer":120,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":294,"org.easymock.tests2.UsageConstraintsTest.greaterThan":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":276,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":15,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":206,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":107,"org.easymock.tests.UsageThrowableTest.noUpperLimit":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":90,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":77,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.UsageConstraintsTest.testSame":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":69,"org.easymock.tests2.CaptureTest.testCaptureFirst":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":78,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":195,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":17,"org.easymock.tests2.UsageTest.moreThanOneArgument":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":305,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":200,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":111,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":143,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":192,"org.easymock.tests.UsageCallCountTest.tooManyCalls":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":278,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":182,"org.easymock.tests2.MockedExceptionTest.testRealException":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":32,"org.easymock.tests2.UsageConstraintsTest.testContains":101,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.UsageConstraintsTest.testFind":93,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":248,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":56,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":63,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests.UsageExpectAndReturnTest.object":198,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":122,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":290,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":253,"org.easymock.tests.UsageTest.exactCallCountByLastCall":285,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":239,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":76,"org.easymock.tests2.CaptureTest.testCaptureRightOne":48,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":296,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":235,"org.easymock.tests2.UsageConstraintsTest.testOr":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":287,"org.easymock.tests.UsageRangeTest.combination":275,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":249,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":201,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":271,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":208,"org.easymock.tests2.UsageConstraintsTest.cmpTo":100,"org.easymock.tests.UsageVarargTest.varargCharAccepted":252,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":300,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":24,"org.easymock.tests2.UsageTest.openCallCountByLastCall":132,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":86,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":270,"org.easymock.tests2.CaptureTest.testCaptureFromStub":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":202,"org.easymock.tests2.UsageConstraintsTest.constraints":91,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":59,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":142,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":167,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":44,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":152,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":194,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":153,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":81}}]
