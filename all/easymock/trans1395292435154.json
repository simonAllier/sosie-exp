[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[10,11,12,2,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,2,24,25,26,27,28,29,30,31,32,33,34,35,36,9,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[10,11,12,2,13,14],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[15,79,80,81,12,82,83,84,85,2,86,87,88,89,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[111,112,113,114,115,116,117],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[102,118,119,120,121,122,123,124,125,126],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Find:41","failures":[129],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[91,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,15,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,18,19,20,21,80,81,82,83,84,165,166,167,168,169,170,2,24,171,86,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,30,193,194,195,196,197,198,199,33,97,34,35,36,9,38,39,40,41,42,43,46,47,200,201,99,100,101,202,203,204,205,102,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,106,107,108,231,232,87,233,234,88,89,235,236,48,237,90,238,239,240,241,242,52,54,57,58,60,61,63,66,69,70,71,72,73,74,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[15,243,80,81,244,82,83,84,24,86,172,245,246,247,248,249,250,14,251,252,253,87,88,89,48,90,238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[15,243,80,81,244,82,83,84,2,24,86,172,254,255,256,257,253,87,88,89,48,90,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[91,130,131,132,133,134,135,136,137,138,139,111,112,140,141,142,258,259,143,144,260,145,261,262,263,264,146,265,266,267,268,147,269,270,271,272,148,149,273,274,150,151,275,152,276,277,278,279,153,280,281,282,283,154,284,285,286,287,155,288,289,290,16,156,291,292,293,294,295,296,297,298,299,300,158,159,18,19,22,243,80,81,244,301,302,303,304,23,305,169,170,24,172,173,306,174,175,176,307,308,309,177,178,179,183,310,311,312,313,314,315,25,26,27,28,29,184,185,186,187,188,189,190,191,192,30,31,32,193,194,196,197,198,199,33,316,97,34,35,36,9,38,39,40,41,42,43,46,317,318,200,201,99,100,101,202,319,320,203,321,204,205,322,323,102,206,207,208,209,210,211,212,213,214,324,215,216,217,218,219,220,221,222,223,224,225,226,227,254,255,256,257,228,325,230,103,106,326,107,108,232,253,233,234,327,328,236,48,238,239,329,330,331,332,240,241,5,333,242,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[131,167,228,229,230],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"position":"org.easymock.internal.RecordState:222","failures":[334,335,245,246],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[296,28],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[91,111,111,112,112,140,141,148,149,92,156,300,93,94,336,174,175,176,193,194,195,197,198,199,95,33,316,96,97,337,201,99,100,101,203,102,207,338,339,340,221,222,223,224,226,227,103,341,104,105,106,326,107,108,342,109,343,110,125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[344,345],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[346,15,155,347,348,349,243,80,81,93,350,351,94,352,353,354,244,12,82,83,84,165,334,335,169,85,355,2,24,171,86,172,173,307,309,177,356,180,181,357,358,359,360,245,246,195,316,337,98,202,209,211,213,214,215,216,220,361,222,223,226,227,254,255,256,257,103,104,105,107,108,342,109,110,231,253,87,233,234,88,89,328,235,362,48,237,90,238,239,242,363,51,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[364,76],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[111,112,365,366,367,201,368,369,99,370,371,372,373,374,375,376,377,378,100,379,380,381,382,383,101,384,385,102,223,227,386,387,388,114,389,123,124,115,117,125,126],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":354,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":363,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":234,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":142,"org.easymock.tests2.DelegateToTest.testReturnException":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":302,"org.easymock.tests.MockingTest.testPartialClassMocking":174,"org.easymock.tests.MockClassControlTest.testToString":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":258,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":118,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":18,"org.easymock.tests2.UsageTest.wrongArguments":87,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":131,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":94,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":197,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":216,"org.easymock.tests2.CaptureTest.testPrimitive":9,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":22,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":272,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":313,"org.easymock.tests.UsageTest.argumentsOrdered":84,"org.easymock.tests.UsageVarargTest.varargIntAccepted":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":25,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":103,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":29,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":249,"org.easymock.tests.ReplayStateInvalidUsageTest.times":8,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests2.AnswerTest.answer":204,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":332,"org.easymock.tests2.CaptureTest.testAnd":34,"org.easymock.tests2.UsageTest.strictResetToDefault":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":289,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":128,"org.easymock.tests2.DelegateToTest.testDelegate":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":245,"org.easymock.tests2.CaptureTest.testCapture1_2446744":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":330,"org.easymock.tests.UsageThrowableTest.throwError":157,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":315,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":385,"org.easymock.samples.PartialClassMockTest.testGetArea":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":26,"org.easymock.tests2.UsageTest.niceToStrict":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":259,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":374,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":106,"org.easymock.tests2.MockBuilderTest.testCreateMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":381,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":264,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":383,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":168,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":64,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":63,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":42,"org.easymock.tests2.EasyMockSupportClassTest.testAll":201,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":270,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":338,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":116,"org.easymock.tests2.CaptureTest.testCaptureAll":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":331,"org.easymock.tests.MockNameTest.defaultName":346,"org.easymock.tests2.UsageConstraintsTest.testMatches":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":314,"org.easymock.samples.ExampleTest.voteForRemovals":135,"org.easymock.tests.UsageVarargTest.allKinds":30,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":243,"org.easymock.samples.BasicClassMockTest.testPrintContent":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":298,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":163,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":122,"org.easymock.tests2.UsageConstraintsTest.greaterThan":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":288,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":337,"org.easymock.samples.ExampleTest.voteForRemoval":132,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":318,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":95,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":231,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":210,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":301,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":211,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":277,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":47,"org.easymock.tests2.CaptureTest.testCapture2_2446744":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":109,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":192,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":151,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":295,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":271,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":343,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":311,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":222,"org.easymock.tests2.UsageConstraintsTest.testContains":62,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":308,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":203,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":310,"org.easymock.tests.MockTypeTest.fromEasyMockClass":350,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":78,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":355,"org.easymock.tests.UsageExpectAndReturnTest.object":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":215,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":119,"org.easymock.tests.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":16,"org.easymock.tests2.ConstraintsToStringTest.findToString":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":126,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":167,"org.easymock.tests2.EasyMockSupportTest.testVerify":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":376,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":329,"org.easymock.tests.UsageVarargTest.varargCharAccepted":187,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":218,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":357,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":101,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":348,"org.easymock.tests2.UsageTest.resumeIfFailure":328,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":304,"org.easymock.tests2.StubTest.stubWithReturnValue":333,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":279,"org.easymock.tests2.SerializationTest.testAllMockedMethod":207,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":7,"org.easymock.samples.SupportTest.voteForRemovals":138,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":266,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":4,"org.easymock.tests.UsageExpectAndThrowTest.object":146,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":70,"org.easymock.tests2.DelegateToTest.testWrongClass":229,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":31,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":32,"org.easymock.samples.ConstructorCalledMockTest.testTax":111,"org.easymock.tests.UsageStrictMockTest.range":86,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":107,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":10,"org.easymock.tests2.CaptureTest.testCaptureNone":41,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":81,"org.easymock.tests.UsageVarargTest.varargByteAccepted":191,"org.easymock.tests2.ThreadingTest.testThreadSafe":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":379,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":179,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":140,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":358,"org.easymock.tests2.CaptureTest.testCapture_2617107":36,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":21,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests2.StubTest.stub":5,"org.easymock.tests.UsageExpectAndThrowTest.longType":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":303,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests.LimitationsTest.mockNativeMethod":193,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":287,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":340,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":239,"org.easymock.tests2.NameTest.nameForMocksControl":257,"org.easymock.tests2.MockedExceptionTest.testMockedException":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":369,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":260,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":108,"org.easymock.tests.MockingTest.testNicePartialClassMocking":175,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":199,"org.easymock.tests2.CaptureTest.testCaptureLast":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":246,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":227,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":71,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":263,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.tests.UsageStrictMockTest.differentMethods":172,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":345,"org.easymock.tests2.ConstraintsToStringTest.andToString":250,"org.easymock.tests2.MockBuilderTest.testCreateMockString":110,"org.easymock.tests.UsageExpectAndThrowTest.floatType":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":205,"org.easymock.tests.UsageVerifyTest.twoThrows":80,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":100,"org.easymock.samples.ExampleTest.voteAgainstRemoval":133,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":388,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":164,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":319,"org.easymock.tests2.UsageTest.defaultResetToNice":327,"org.easymock.samples.ExampleTest.voteAgainstRemovals":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":6,"org.easymock.tests.UsageVarargTest.differentLength":360,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":113,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":20,"org.easymock.tests.UsageCallCountTest.tooFewCalls":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":161,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":11,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":226,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":225,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":323,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":200,"org.easymock.tests2.NameTest.nameForNiceMock":256,"org.easymock.tests2.DependencyTest.testInterfaceMocking":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":120,"org.easymock.samples.ExampleTest.addDocument":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.DelegateToTest.testStubDelegate":325,"org.easymock.tests2.AnswerTest.stubAnswer":322,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests.UsageVarargTest.varargLongAccepted":190,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":112,"org.easymock.tests2.ConstraintsToStringTest.orToString":247,"org.easymock.tests.UsageThrowableTest.noUpperLimit":158,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":68,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":38,"org.easymock.tests2.SerializationTest.test":206,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":274,"org.easymock.samples.SupportTest.addDocument":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":371,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests2.NameTest.nameForMock":254,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":117,"org.easymock.tests2.UsageStrictMockTest.differentMethods":238,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":290,"org.easymock.tests2.MockedExceptionTest.testRealException":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":353,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":19,"org.easymock.tests2.NameTest.nameForStrictMock":255,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":198,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":69,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":104,"org.easymock.tests2.UsageStrictMockTest.range":90,"org.easymock.tests2.UsageConstraintsTest.lessThan":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":209,"org.easymock.tests2.CaptureTest.testCaptureRightOne":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":375,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":344,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":195,"org.easymock.tests.UsageTest.wrongArguments":82,"org.easymock.tests2.MockBuilderTest.testWithConstructor":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":372,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":189,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":356,"org.easymock.tests2.UsageConstraintsTest.cmpTo":61,"org.easymock.tests2.CompareToTest.testLessThan":364,"org.easymock.tests2.CaptureTest.testCaptureFromStub":44,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":105,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":178,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":283,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.samples.ExampleTest.addAndChangeDocument":136,"org.easymock.tests2.ConstraintsToStringTest.notToString":248,"org.easymock.tests.UsageStrictMockTest.testVerify":306,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":139,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":296,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":27,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":276,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":28,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":214}}]
