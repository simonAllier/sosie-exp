[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[48,49,50,51,52,53,54,18,55,56,57,58,59,47,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[64],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[68],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[69,70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[71,71,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[120,121],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[120,122],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[71,71,72,72,123,124,125,126,127,128,129,130,131,132,133,134,135,0,1,2,3,4,136,137,138,139,140,141,142,143,144,145,146,122,147,148,149,150,151,152,153,154,155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[101,156],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[71,71,72,72,73,157,158,159,160,161,16,162,163,164,9,165,166,167,168,77,78,79,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,124,189,190,125,48,126,127,128,191,192,193,194,195,196,197,198,199,200,50,201,202,203,204,205,206,207,208,17,209,210,51,52,53,54,18,55,129,130,131,132,133,211,212,213,214,215,216,217,81,218,219,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,84,134,135,220,221,222,223,224,225,226,227,228,229,230,231,41,232,42,43,44,45,46,136,137,138,139,140,233,234,235,236,47,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,141,261,85,262,69,70,263,264,265,266,86,267,88,89,90,91,92,95,96,97,98,99,101,268,102,103,104,105,269,106,107,270,271,5,272,273,142,143,274,120,144,145,146,122,275,276,277,278,147,67,148,149,279,150,151,280,281,282,283,152,153,154,108,109,284,110,111,112,113,114,115,116,117,118,285,286,287,288,289,290,155,291,292,293,294,295,296,60,61,62,63],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[85,297,86,298,299,300,301,302,303,304,305,306,307],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[71,72,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.LastControl:92","failures":[274,120,145,122,275,121,280,152,286,312,290],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[197,313],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[314,71,72,315,316,73,317,157,158,318,159,319,320,160,321,74,75,322,323,324,325,326,327,328,329,330,331,332,161,16,162,163,164,9,333,165,166,334,335,167,77,78,79,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,336,337,10,124,338,189,339,340,190,125,48,126,127,49,341,128,191,192,193,194,195,196,197,198,199,200,50,201,202,203,204,205,206,208,17,209,210,80,51,52,53,54,18,55,129,130,131,132,133,211,212,213,214,215,342,216,343,344,345,346,217,347,348,81,82,218,219,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,84,134,135,349,220,221,222,223,224,225,226,227,228,229,230,231,41,350,232,42,43,44,45,46,136,137,138,139,140,233,234,235,236,351,352,353,47,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,354,252,253,254,355,255,313,256,257,258,356,357,259,260,358,359,141,360,261,361,362,85,363,364,365,366,262,367,69,70,263,264,265,266,86,267,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,269,106,107,270,271,5,272,273,142,143,274,120,144,145,146,122,275,276,277,278,147,67,148,149,279,150,151,280,281,282,368,283,152,153,154,108,109,284,110,111,112,113,114,115,116,117,118,285,286,369,312,287,288,370,371,372,373,289,290,155,291,374,292,293,294,295,296,60,61,62,63],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[316,157,318,159,320,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[228,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":120,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":65,"org.easymock.tests2.UsageTest.argumentsOrdered":357,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":54,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":313,"org.easymock.tests2.StubTest.stubWithReturnValue":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":298,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":317,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":283,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":178,"org.easymock.tests2.SerializationTest.testAllMockedMethod":87,"org.easymock.tests2.DelegateToTest.testReturnException":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":52,"org.easymock.tests.MockingTest.testPartialClassMocking":77,"org.easymock.samples.SupportTest.voteForRemovals":316,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":68,"org.easymock.tests.MockClassControlTest.testToString":222,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests.UsageExpectAndThrowTest.object":30,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":281,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":302,"org.easymock.tests2.DelegateToTest.testWrongClass":295,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":135,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":276,"org.easymock.tests2.UsageTest.wrongArguments":355,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":71,"org.easymock.tests.UsageStrictMockTest.range":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":204,"org.easymock.samples.ExampleTest.answerVsDelegate":158,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":102,"org.easymock.tests2.UsageConstraintsTest.testNull":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":246,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests2.CaptureTest.testPrimitive":287,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":128,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":334,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":39,"org.easymock.tests.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":203,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":138,"org.easymock.tests2.CaptureTest.testCaptureNone":373,"org.easymock.tests.UsageUnorderedTest.message":349,"org.easymock.tests.UsageVerifyTest.twoReturns":162,"org.easymock.tests.UsageVarargTest.varargByteAccepted":330,"org.easymock.tests2.ThreadingTest.testThreadSafe":270,"org.easymock.tests.UsageTest.argumentsOrdered":335,"org.easymock.tests.UsageVarargTest.varargIntAccepted":324,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":346,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":74,"org.easymock.tests2.CaptureTest.testCapture_2617107":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":129,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":341,"org.easymock.tests2.UsageConstraintsTest.any":277,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":96,"org.easymock.tests2.StubTest.stub":353,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":53,"org.easymock.tests.UsageExpectAndThrowTest.longType":23,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":197,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":360,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":285,"org.easymock.tests2.SerializationTest.testClass":86,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests.ReplayStateInvalidUsageTest.times":199,"org.easymock.tests.LimitationsTest.mockNativeMethod":84,"org.easymock.tests2.AnswerTest.answer":262,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":188,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests2.CaptureTest.testAnd":286,"org.easymock.tests2.UsageTest.strictResetToDefault":253,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":362,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":115,"org.easymock.tests2.NameTest.nameForMocksControl":366,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests2.DelegateToTest.testDelegate":296,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":35,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.CaptureTest.testCaptureLast":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":18,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":168,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":275,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":215,"org.easymock.tests.MockingTest.testTwoMocks":76,"org.easymock.tests2.CaptureTest.testCapture1_2446744":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":28,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":153,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":193,"org.easymock.tests.UsageThrowableTest.throwError":41,"org.easymock.samples.ExampleTest.removeNonExistingDocument":160,"org.easymock.tests.UsageStrictMockTest.differentMethods":339,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":195,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":5,"org.easymock.tests2.MockBuilderTest.testCreateMockString":101,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":220,"org.easymock.tests.UsageExpectAndThrowTest.floatType":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":140,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":279,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":367,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":310,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":90,"org.easymock.samples.PartialClassMockTest.testGetArea":73,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":117,"org.easymock.tests2.UsageTest.niceToStrict":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":21,"org.easymock.tests2.UsageConstraintsTest.testNotNull":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.UsageTest.defaultResetToNice":258,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":157,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":184,"org.easymock.tests.UsageVarargTest.differentLength":327,"org.easymock.tests2.CallbackTest.callback":354,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":311,"org.easymock.tests.UsageTest.openCallCountByLastCall":165,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":29,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":242,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":49,"org.easymock.tests.UsageCallCountTest.tooFewCalls":344,"org.easymock.tests.UsageOverloadedMethodTest.overloading":219,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":17,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":148,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":180,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":67,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":205,"org.easymock.tests.UsageThrowableTest.throwCheckedException":43,"org.easymock.tests.MockClassControlTest.testEquals":226,"org.easymock.tests2.EasyMockSupportClassTest.testAll":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":82,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":37,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":119,"org.easymock.tests2.CaptureTest.testCaptureAll":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":200,"org.easymock.tests2.UsageConstraintsTest.testMatches":149,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":269,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":191,"org.easymock.tests.ObjectMethodsTest.testHashCode":230,"org.easymock.samples.ExampleTest.voteForRemovals":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":306,"org.easymock.tests2.NameTest.nameForNiceMock":365,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests.UsageVarargTest.allKinds":332,"org.easymock.tests2.DependencyTest.testInterfaceMocking":250,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":214,"org.easymock.samples.BasicClassMockTest.testPrintContent":75,"org.easymock.samples.ExampleTest.addDocument":319,"org.easymock.tests2.DelegateToTest.testStubDelegate":294,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":45,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":358,"org.easymock.tests2.AnswerTest.stubAnswer":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":55,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":307,"org.easymock.tests2.UsageConstraintsTest.greaterThan":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests.UsageVarargTest.varargLongAccepted":329,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":118,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":340,"org.easymock.samples.ExampleTest.voteForRemoval":318,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":6,"org.easymock.tests.UsageExpectAndReturnTest.floatType":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":113,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":72,"org.easymock.tests.UsageThrowableTest.noUpperLimit":350,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":80,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":143,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":370,"org.easymock.tests2.SerializationTest.test":267,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":239,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":232,"org.easymock.tests2.UsageConstraintsTest.testSame":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":170,"org.easymock.samples.SupportTest.addDocument":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":51,"org.easymock.tests2.CaptureTest.testCaptureFirst":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":240,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":260,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":176,"org.easymock.tests.GenericTest.testPackageScope":81,"org.easymock.tests2.CaptureTest.testCapture2_2446744":291,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.UsageTest.moreThanOneArgument":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":1,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":331,"org.easymock.tests2.NameTest.nameForMock":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":172,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":181,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":368,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":123,"org.easymock.tests2.UsageStrictMockTest.differentMethods":361,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":173,"org.easymock.tests.UsageCallCountTest.tooManyCalls":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":34,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":343,"org.easymock.tests2.MockedExceptionTest.testRealException":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":25,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":141,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests2.NameTest.nameForStrictMock":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":216,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":144,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":351,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":352,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests.UsageExpectAndReturnTest.object":179,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":280,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":114,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":93,"org.easymock.tests2.UsageStrictMockTest.range":261,"org.easymock.tests2.UsageConstraintsTest.lessThan":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":245,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":303,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":231,"org.easymock.tests.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":305,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":238,"org.easymock.tests2.CaptureTest.testCaptureRightOne":290,"org.easymock.tests2.UsageConstraintsTest.testOr":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":297,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":109,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":185,"org.easymock.tests.UsageTest.wrongArguments":333,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":208,"org.easymock.tests.MockClassControlTest.testHashCode":225,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":221,"org.easymock.tests2.EasyMockSupportTest.testVerify":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":182,"org.easymock.tests.UsageVarargTest.varargShortAccepted":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":217,"org.easymock.tests2.UsageConstraintsTest.cmpTo":278,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":268,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":40,"org.easymock.tests2.UsageTest.openCallCountByLastCall":256,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":248,"org.easymock.tests.DefaultClassInstantiatorTest.object":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":13,"org.easymock.tests2.CaptureTest.testCaptureFromStub":155,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":192,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":94,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":345,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":183,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.tests2.UsageConstraintsTest.constraints":274,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":224,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":116,"org.easymock.samples.ExampleTest.addAndChangeDocument":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":186,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":56,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":314,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":212,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":371,"org.easymock.tests2.UsageTest.resumeIfFailure":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":175,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":132,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":243}}]
