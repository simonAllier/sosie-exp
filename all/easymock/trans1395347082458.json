[{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[3,4,5,6,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:786","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1149","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[9,3,4,10,11,12,13,14,15,16,17,18,19,20,5,21,6,7,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[31,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1305","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9,52,53,34,35,36,37,54,55,56,57,58,44,45,59,51,60,61,61,62,62,63,64,65,66,67,68,69,70,71,72,73,74,75,21,76,77,78,79,80,81],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[82,83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:220","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[86,87,88],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[35,40,42,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"returnValue"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[46,47,48,49,89,90,91,92,93,50,51,94,95,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[97,98,10,52,55,57,59,99,100,101,102,47,92,103,95,104,105,74,106,107,108,109,110,111,112,113,114,115,116,22,26,117],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[118,119,120,121,122,123,60,124,125,106,126,127,128,129,130,107,131,132,133,134,135,108,136,137,138,109,139,110,140,141,142,143,144,145,146,147,148,149,150,151,152,153,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[154],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:124","failures":[155,156,157,158,97,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,86,87,88,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,1,196,98,197,198,9,199,3,4,200,118,201,10,11,202,203,204,119,205,12,13,82,206,52,53,32,33,34,35,36,37,38,39,41,207,54,208,55,56,209,57,58,42,43,210,211,212,44,45,59,99,100,213,214,215,216,217,218,101,102,219,220,221,46,47,48,49,89,90,91,92,103,93,50,51,94,95,222,223,224,225,226,227,228,229,230,231,232,233,120,121,122,123,234,60,61,62,235,236,237,238,239,240,241,242,243,244,245,104,246,247,248,249,250,251,252,253,254,63,124,64,65,66,67,68,255,256,125,257,69,70,71,72,73,258,259,260,106,126,127,128,129,130,107,131,132,133,134,135,108,136,137,138,109,139,110,140,261,262,141,263,264,265,142,143,266,267,268,269,270,5,21,271,6,7,272,96,96,112,273,274,275,276,277,113,278,279,280,281,282,114,283,284,285,115,286,116,287,144,22,8,23,288,145,24,25,289,26,290,291,85,76,77,146,147,78,292,148,149,150,151,152,153,293,294,295,296,297,298,299,300,301,302,303,117,27,28,29,79,80,81,304,305,306,307,308,309,310,311,312,313],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[159,160,314,161,163,164,166,167,86,187,190,191,315,214,215,216,236,316,317,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[155,9,118,206,141,21,289,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:344","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[319],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":33,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":2,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":203,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":280,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":235,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":88,"org.easymock.tests2.DelegateToTest.testReturnException":195,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":149,"org.easymock.tests.MockingTest.testPartialClassMocking":266,"org.easymock.samples.SupportTest.voteForRemovals":239,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":108,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.object":134,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":18,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":218,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.DelegateToTest.testWrongClass":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":295,"org.easymock.samples.ExampleTest.answerVsDelegate":241,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":227,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":163,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":177,"org.easymock.tests2.CaptureTest.testPrimitive":49,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":78,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":294,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":66,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests.UsageUnorderedTest.message":26,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":311,"org.easymock.tests2.ThreadingTest.testThreadSafe":101,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":305,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":251,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":69,"org.easymock.tests2.CaptureTest.testCapture_2617107":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":147,"org.easymock.tests2.UsageConstraintsTest.any":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":162,"org.easymock.tests2.StubTest.stub":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":73,"org.easymock.tests.UsageExpectAndThrowTest.longType":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":150,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":199,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests2.SerializationTest.testClass":86,"org.easymock.tests.LimitationsTest.mockNativeMethod":292,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.ReplayStateInvalidUsageTest.times":111,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":287,"org.easymock.tests2.AnswerTest.answer":155,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":225,"org.easymock.tests2.CaptureTest.testAnd":46,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":189,"org.easymock.tests2.NameTest.nameForMocksControl":17,"org.easymock.tests2.MockedExceptionTest.testMockedException":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":172,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.DelegateToTest.testDelegate":98,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":129,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":181,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":164,"org.easymock.tests.MockingTest.testNicePartialClassMocking":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":138,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":186,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":233,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":301,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":210,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":132,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.tests.UsageThrowableTest.throwError":261,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":219,"org.easymock.tests2.MockBuilderTest.testCreateMockString":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":68,"org.easymock.tests.UsageExpectAndThrowTest.floatType":127,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":209,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":156,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":215,"org.easymock.samples.PartialClassMockTest.testGetArea":236,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":70,"org.easymock.samples.ExampleTest.voteAgainstRemoval":243,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":191,"org.easymock.tests2.UsageTest.niceToStrict":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":126,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":143,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.UsageTest.defaultResetToNice":205,"org.easymock.tests2.MockBuilderTest.testCreateMock":165,"org.easymock.samples.ExampleTest.voteAgainstRemovals":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":105,"org.easymock.tests.UsageVarargTest.differentLength":308,"org.easymock.tests2.CallbackTest.callback":97,"org.easymock.tests.UsageTest.openCallCountByLastCall":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":133,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":146,"org.easymock.tests.UsageCallCountTest.tooFewCalls":249,"org.easymock.tests.UsageOverloadedMethodTest.overloading":303,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":55,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":282,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":208,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":296,"org.easymock.tests.UsageThrowableTest.throwCheckedException":264,"org.easymock.tests2.EasyMockSupportClassTest.testAll":213,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":224,"org.easymock.tests2.CaptureTest.testCaptureAll":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":229,"org.easymock.tests2.UsageConstraintsTest.testMatches":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":67,"org.easymock.samples.ExampleTest.voteForRemovals":245,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":221,"org.easymock.tests2.NameTest.nameForNiceMock":16,"org.easymock.tests.UsageVarargTest.allKinds":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":217,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":300,"org.easymock.samples.BasicClassMockTest.testPrintContent":247,"org.easymock.samples.ExampleTest.addDocument":244,"org.easymock.tests2.DelegateToTest.testStubDelegate":1,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":142,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests2.AnswerTest.stubAnswer":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":153,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.UsageConstraintsTest.greaterThan":57,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":84,"org.easymock.tests.UsageVarargTest.varargLongAccepted":310,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":192,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.samples.ExampleTest.voteForRemoval":242,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":102,"org.easymock.tests.UsageExpectAndReturnTest.floatType":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":187,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests.UsageThrowableTest.noUpperLimit":262,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":58,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests2.SerializationTest.test":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":170,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":273,"org.easymock.tests2.UsageConstraintsTest.testSame":36,"org.easymock.samples.SupportTest.addDocument":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":148,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":171,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":278,"org.easymock.tests.GenericTest.testPackageScope":259,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":220,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":166,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":312,"org.easymock.tests.GenericTest.testBridgedEquals":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":253,"org.easymock.tests2.NameTest.nameForMock":14,"org.easymock.tests.UsageExpectAndReturnTest.longType":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":297,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":114,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":211,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":276,"org.easymock.tests.UsageCallCountTest.tooManyCalls":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":85,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":248,"org.easymock.tests2.MockedExceptionTest.testRealException":123,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":279,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":228,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.NameTest.nameForStrictMock":15,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":122,"org.easymock.tests2.UsageConstraintsTest.testFind":34,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":117,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":185,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":100,"org.easymock.tests.UsageExpectAndReturnTest.object":281,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":19,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":188,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":176,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":307,"org.easymock.tests.UsageTest.exactCallCountByLastCall":289,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":169,"org.easymock.tests2.CaptureTest.testCaptureRightOne":50,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":290,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":182,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":277,"org.easymock.tests2.EasyMockSupportTest.testVerify":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":283,"org.easymock.tests.UsageVarargTest.varargShortAccepted":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":255,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":222,"org.easymock.tests2.UsageConstraintsTest.cmpTo":207,"org.easymock.tests.UsageVarargTest.varargCharAccepted":306,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests2.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":179,"org.easymock.tests2.CaptureTest.testCaptureFromStub":51,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":75,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":314,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":131,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":263,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":284,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":271,"org.easymock.tests2.UsageConstraintsTest.constraints":32,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":190,"org.easymock.samples.ExampleTest.addAndChangeDocument":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":107,"org.easymock.tests.CapturesMatcherTest.test":96,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":286,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":237,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":298,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests2.UsageTest.resumeIfFailure":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":71,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":72,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":304,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":174}}]
