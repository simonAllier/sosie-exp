[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:399","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,9,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,10,118,119,120,11,121,122,123,123,124,124,125],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[126],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[127,128,129,130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[127,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,128,147,148,129,149,150,151,152,153,154,155,156,21,24,34,40,157,158,159,160,161,162,163,45,164,165,166,167,168,0,2,169,170,171,172,173,174,175,176,177,178,48,52,54,56,59,179,180,181,1,182,183,184,185,186,187,62,188,64,189,190,191,192,193,194,195,196,197,198,199,200,67,68,69,70,201,71,72,73,74,202,75,76,77,79,83,84,9,97,203,204,205,206,207,208,209,210,211,212,213,214,215,216,103,104,105,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,5,263,264,265,266,267,268,269,118,270,271,272,273,274,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[162,179,183,207,275,276,277,278,279,280,7,8,230,233,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,263,264,265,266,267,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[301,302,303,304,305,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[21,24,34,40,45,46,307,48,49,52,53,54,56,58,59,308,61,62,63,64,67,68,69,70,71,72,309,73,74,75,76,77,78,79,82,83,84,9,88,97,99,102,103,104,105,107,108,118,119,120,121,122,123,123,124,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[21,24,34,40,45,310,46,307,48,49,52,53,54,56,58,59,308,61,62,63,64,67,68,69,70,71,72,311,309,312,313,73,74,75,76,77,78,79,82,83,84,9,88,97,99,102,103,104,105,107,108,118,119,120,121,122,123,123,124,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[135,136,140,141,152,153,157,159,161,179,181,314,182,183,315,316,186,317,318,319,320,321,207,322,209,211,212,277,213,230,231,323,232,233,324,325,234,326,327,328,329,330,235,240,264,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"minimum"}},{"position":"org.easymock.internal.Range:44","failures":[127,131,132,133,332,134,135,136,137,138,139,333,140,141,142,143,144,145,146,128,147,148,129,149,150,151,152,153,154,12,13,14,334,15,335,336,16,17,155,156,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,157,337,338,339,158,340,341,342,159,343,160,161,344,345,162,346,347,348,349,350,163,351,352,353,354,355,356,43,44,45,357,164,165,166,167,168,0,2,169,170,171,172,173,358,174,175,176,177,178,46,47,48,49,50,51,52,53,54,55,56,359,57,58,59,60,61,179,180,181,314,1,360,182,183,184,315,316,185,186,361,362,187,363,364,317,62,188,63,64,65,66,189,190,191,192,193,365,366,194,195,196,197,367,198,199,368,369,370,371,372,373,200,374,375,376,377,378,379,380,67,68,69,70,381,201,71,72,382,383,384,385,386,387,388,389,73,74,202,75,76,77,78,390,79,80,81,82,83,84,9,85,86,391,318,319,320,321,392,393,394,395,396,397,87,88,89,90,91,92,93,94,95,96,97,98,398,399,400,401,402,403,404,405,406,407,408,409,410,203,204,205,206,207,411,3,412,275,4,208,413,414,415,416,417,276,418,99,419,420,322,209,421,210,211,422,423,212,277,213,214,215,216,278,279,280,100,101,102,103,104,424,105,425,426,106,427,217,428,218,219,429,7,220,221,222,223,224,430,431,432,8,433,434,435,436,437,225,438,226,439,440,441,442,443,444,445,446,227,228,447,229,448,449,450,451,452,453,230,231,454,323,232,233,324,325,234,455,456,457,458,459,460,461,462,463,464,465,466,326,467,327,468,469,328,470,107,471,472,473,474,108,475,476,329,477,478,479,480,481,482,483,484,485,486,330,235,236,237,238,239,240,109,110,111,112,113,114,115,116,117,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,5,6,487,488,489,490,491,492,493,494,495,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,263,496,264,265,266,267,268,269,10,118,119,120,11,497,270,331,271,272,498,273,499,500,501,274,121,122,502,123,124,125],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[46,307,48,49,52,54,56,59,308,61,62,78,107,108,120,125],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[449,238],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests2.UsageTest.argumentsOrdered":316,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":438,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":360,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":502,"org.easymock.tests2.DelegateToTest.testReturnException":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":415,"org.easymock.tests.MockingTest.testPartialClassMocking":103,"org.easymock.tests.MockClassControlTest.testToString":89,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":391,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":281,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageTest.wrongArguments":314,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":457,"org.easymock.samples.ExampleTest.answerVsDelegate":331,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":108,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":426,"org.easymock.tests2.UsageConstraintsTest.testNull":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":75,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":171,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":94,"org.easymock.tests2.CaptureTest.testPrimitive":192,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests.UsageTest.moreThanOneArgument":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":300,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":461,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":491,"org.easymock.tests.UsageTest.argumentsOrdered":325,"org.easymock.tests.UsageVarargTest.varargIntAccepted":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":239,"org.easymock.tests.ReplayStateInvalidUsageTest.times":406,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests2.DependencyTest.testClassMocking":16,"org.easymock.tests2.AnswerTest.answer":157,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":386,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":472,"org.easymock.tests2.CaptureTest.testAnd":189,"org.easymock.tests2.UsageTest.strictResetToDefault":180,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":223,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":495,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":296,"org.easymock.tests.LimitationsTest.mockFinalMethod":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":452,"org.easymock.tests2.DependencyTest.testClassMockingSupport":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":5,"org.easymock.tests2.CaptureTest.testCapture1_2446744":193,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":384,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":400,"org.easymock.tests.UsageThrowableTest.throwError":263,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":474,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":453,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":42,"org.easymock.samples.PartialClassMockTest.testGetArea":125,"org.easymock.tests.MockingTest.testInterfaceMocking":424,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":215,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":29,"org.easymock.tests2.UsageTest.niceToStrict":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":52,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":290,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":0,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":471,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":455,"org.easymock.tests.UsageOverloadedMethodTest.overloading":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":144,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":252,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":196,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":21,"org.easymock.tests.MockClassControlTest.testEquals":93,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":298,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":385,"org.easymock.tests2.CaptureTest.testCaptureAll":190,"org.easymock.tests.MockNameTest.defaultName":410,"org.easymock.tests2.UsageConstraintsTest.testMatches":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":462,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":398,"org.easymock.samples.ExampleTest.voteForRemovals":273,"org.easymock.tests.UsageVarargTest.allKinds":330,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":451,"org.easymock.samples.BasicClassMockTest.testPrintContent":122,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":268,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":418,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":352,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":364,"org.easymock.tests2.UsageConstraintsTest.greaterThan":128,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":117,"org.easymock.samples.ExampleTest.voteForRemoval":271,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":78,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":99,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":166,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":414,"org.easymock.tests2.CaptureTest.testCaptureFirst":199,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":167,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":248,"org.easymock.tests2.UsageTest.moreThanOneArgument":181,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":177,"org.easymock.tests2.CaptureTest.testCapture2_2446744":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":486,"org.easymock.tests.GenericTest.testBridgedEquals":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":469,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":126,"org.easymock.tests.UsageExpectAndReturnTest.longType":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":448,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":299,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":308,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":470,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":489,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":459,"org.easymock.tests.UsageCallCountTest.tooManyCalls":328,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":267,"org.easymock.tests.MockingTest.testNiceClassMocking":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests.MockingTest.testClassMocking":101,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":465,"org.easymock.tests2.UsageConstraintsTest.testContains":142,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":307,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":45,"org.easymock.tests2.UsageConstraintsTest.testFind":134,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":207,"org.easymock.tests.MockTypeTest.fromEasyMockClass":473,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":419,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":389,"org.easymock.tests.UsageExpectAndReturnTest.object":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":170,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":481,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":395,"org.easymock.tests.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":492,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":257,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":412,"org.easymock.tests.MockClassControlTest.testHashCode":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":31,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":493,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":383,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":380,"org.easymock.tests.UsageVarargTest.varargCharAccepted":480,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":109,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":229,"org.easymock.tests2.UsageTest.openCallCountByLastCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":173,"org.easymock.tests.DefaultClassInstantiatorTest.object":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":278,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":32,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":265,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":90,"org.easymock.tests2.UsageTest.resumeIfFailure":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":417,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":250,"org.easymock.tests2.SerializationTest.testAllMockedMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":443,"org.easymock.samples.SupportTest.voteForRemovals":274,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":293,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":447,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":337,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":428,"org.easymock.tests.UsageExpectAndThrowTest.object":291,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":363,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":262,"org.easymock.samples.ConstructorCalledMockTest.testTax":123,"org.easymock.tests.UsageStrictMockTest.range":210,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":335,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":292,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":54,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":18,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":456,"org.easymock.tests2.CaptureTest.testCaptureNone":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":216,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":302,"org.easymock.tests.UsageUnorderedTest.message":240,"org.easymock.tests.UsageVerifyTest.twoReturns":213,"org.easymock.tests.UsageVarargTest.varargByteAccepted":485,"org.easymock.tests2.ThreadingTest.testThreadSafe":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":35,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":327,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":396,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":121,"org.easymock.tests2.CaptureTest.testCapture_2617107":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":227,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":405,"org.easymock.tests2.StubTest.stub":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":228,"org.easymock.tests.UsageExpectAndThrowTest.longType":284,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":114,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":404,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":343,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.SerializationTest.testClass":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":97,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":260,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":371,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":344,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":303,"org.easymock.tests2.NameTest.nameForMocksControl":321,"org.easymock.tests2.MockedExceptionTest.testMockedException":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":23,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":233,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":388,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":285,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":56,"org.easymock.tests.MockingTest.testNicePartialClassMocking":104,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":77,"org.easymock.tests2.CaptureTest.testCaptureLast":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":369,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":6,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":149,"org.easymock.tests.MockingTest.testTwoMocks":102,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":289,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":315,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":153,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":306,"org.easymock.samples.ExampleTest.removeNonExistingDocument":499,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":402,"org.easymock.tests.UsageStrictMockTest.differentMethods":211,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":112,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":305,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":176,"org.easymock.tests2.MockBuilderTest.testCreateMockString":61,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":25,"org.easymock.tests.UsageExpectAndThrowTest.floatType":283,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":66,"org.easymock.tests.UsageVerifyTest.twoThrows":277,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":34,"org.easymock.samples.ExampleTest.voteAgainstRemoval":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.LimitationsTest.privateConstructor":96,"org.easymock.tests2.UsageConstraintsTest.testNotNull":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":269,"org.easymock.tests2.UsageTest.defaultResetToNice":184,"org.easymock.samples.ExampleTest.voteAgainstRemovals":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":256,"org.easymock.tests.UsageVarargTest.differentLength":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":370,"org.easymock.tests2.CallbackTest.callback":368,"org.easymock.tests2.UsageConstraintsTest.equals":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":80,"org.easymock.tests.UsageTest.openCallCountByLastCall":232,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":429,"org.easymock.tests.UsageCallCountTest.tooFewCalls":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":458,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":304,"org.easymock.tests.UsageThrowableTest.throwCheckedException":266,"org.easymock.tests.MockingTest.testStrictClassMocking":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":204,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":407,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":340,"org.easymock.tests.ObjectMethodsTest.testHashCode":394,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":178,"org.easymock.tests2.NameTest.nameForNiceMock":320,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.samples.ExampleTest.addDocument":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":36,"org.easymock.tests2.DelegateToTest.testStubDelegate":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":41,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":209,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":359,"org.easymock.tests.UsageVarargTest.varargLongAccepted":484,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":225,"org.easymock.tests.UsageExpectAndReturnTest.floatType":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":64,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":124,"org.easymock.tests.UsageThrowableTest.noUpperLimit":496,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":147,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":12,"org.easymock.tests2.SerializationTest.test":188,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":365,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":111,"org.easymock.tests2.UsageConstraintsTest.testSame":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":242,"org.easymock.samples.SupportTest.addDocument":501,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":381,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":26,"org.easymock.tests.GenericTest.testPackageScope":118,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":353,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":425,"org.easymock.tests2.NameTest.nameForMock":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":253,"org.easymock.tests2.UsageStrictMockTest.differentMethods":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":245,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":295,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":224,"org.easymock.tests2.MockedExceptionTest.testRealException":357,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":440,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":159,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":219,"org.easymock.tests2.NameTest.nameForStrictMock":319,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":51,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":387,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":15,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":148,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":48,"org.easymock.tests2.UsageStrictMockTest.range":160,"org.easymock.tests2.UsageConstraintsTest.lessThan":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":30,"org.easymock.tests2.CaptureTest.testCaptureRightOne":197,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":301,"org.easymock.tests2.UsageConstraintsTest.testOr":137,"org.easymock.tests.UsageRangeTest.combination":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":323,"org.easymock.tests2.MockBuilderTest.testWithConstructor":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":27,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":254,"org.easymock.tests.UsageVarargTest.varargShortAccepted":483,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":115,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":468,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":8,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests2.CaptureTest.testCaptureFromStub":367,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":399,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":454,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":255,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":421,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.samples.ExampleTest.addAndChangeDocument":500,"org.easymock.tests.UsageStrictMockTest.testVerify":423,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":497,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":420,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":449,"org.easymock.tests2.CompareToTest.testGreateThan":130,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":309,"org.easymock.tests.LimitationsTest.abstractClass":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":247,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":238,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":2}}]
