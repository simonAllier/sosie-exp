[{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[16,17,18,19,20,21,22,23,24,25,26],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[18,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[27,28,29,30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[34,34,35,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:102","sourceCode":"return new org.easymock.internal.Result(org.easymock.IAnswer<?> , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[27,28,29,30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:114","sourceCode":"if (int != int) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[37,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"objs","length":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:85","sourceCode":"return java.util.List<T>.get(0)","type":"CtReturnImpl"},"failures":[24,25,63,64,65,66,67,68,69,26,70,71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[72],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[100,34,35,101,102,103,104,105,106,107,73,108,109,74,110,111,36,112,113,114,115,16,17,116,18,117,19,20,118,119,120,121,122,123,124,125,126,127,22,128,129,130,131,23,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,24,147,25,63,64,65,66,67,148,68,26,70,149,71,150,39,151,152,153,154,155,156,41,157,158,42,159,160,33,161,162,163,164,165,166,80,167,168,0,169,170,171,172,173,174,175,176,177,178,179,180,181,92,182,183,184,185,186,187,188,189,43,190,191,192,44,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,1,216,2,3,217,51,52,53,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,4,31,274,275,276,277,278,279,280,281,282,283,284,285,9,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,10,11,12,333,334,335,336,337,338,339,340,341,342,343,32,13,344,14,15,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[346],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[349,350,351,352],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:39","sourceCode":"if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[17,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[167,172,173,178,210,1,273,275,276,279,10,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:195","failures":[353,354,355,356,138,357,143,145,146,39,41,42,358,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,188,189,44,196,199,201,359,45,46,360,47,361,362,363,364,365,366,367,368],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[22,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[34,35,36,37,369,370,346,371,56,38,372,373,43,44,374,375,359,45,206,46,376,207,360,377,378,47,361,379,380,381,48,208,362,382,363,364,383,209,49,50,51],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[160,33,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[163,164,165,166,187,385,349,350,386,287,387,315,327,328,329,330,331,332],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[37,369,370,346,371,56,372,373,43,44,374],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[388,24,25,63,64,65,66,67,68,69,26,70,71],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[34,35,36,37,346,371,56,38,372,373,389,390,391,40,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[102,182,184,185,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"this","value":"delegateTo","this":"lastResult"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests2.UsageTest.argumentsOrdered":176,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":273,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":81,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":171,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":73,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":328,"org.easymock.tests.MockingTest.testPartialClassMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":47,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":218,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":5,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":57,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":118,"org.easymock.tests2.UsageTest.wrongArguments":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":313,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":320,"org.easymock.samples.ExampleTest.answerVsDelegate":102,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":202,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":317,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":62,"org.easymock.tests.UsageTest.argumentsOrdered":278,"org.easymock.tests.UsageVarargTest.varargIntAccepted":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":322,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":85,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":326,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests2.AnswerTest.answer":210,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":137,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests2.DelegateToTest.testDelegate":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":285,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":135,"org.easymock.tests.UsageThrowableTest.throwError":288,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":367,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":86,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":265,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":389,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":50,"org.easymock.samples.PartialClassMockTest.testGetArea":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":323,"org.easymock.tests2.UsageTest.niceToStrict":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":361,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":140,"org.easymock.tests2.MockBuilderTest.testCreateMock":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":95,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":27,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":227,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":249,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":298,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":68,"org.easymock.tests2.EasyMockSupportClassTest.testAll":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":235,"org.easymock.tests2.CaptureTest.testCaptureAll":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":283,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":264,"org.easymock.samples.ExampleTest.voteForRemovals":106,"org.easymock.tests.UsageVarargTest.allKinds":311,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.samples.BasicClassMockTest.testPrintContent":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":284,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":294,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":332,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.samples.ExampleTest.voteForRemoval":103,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":155,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":280,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":195,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":327,"org.easymock.tests2.CaptureTest.testCaptureFirst":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":196,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":149,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":145,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":349,"org.easymock.tests.UsageCallCountTest.tooManyCalls":339,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":293,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":165,"org.easymock.tests2.UsageConstraintsTest.testFind":116,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":300,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":113,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":342,"org.easymock.tests.UsageExpectAndReturnTest.object":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":58,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":305,"org.easymock.tests.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":37,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":254,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":267,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":76,"org.easymock.tests2.EasyMockSupportTest.testVerify":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":380,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":134,"org.easymock.tests.UsageVarargTest.varargCharAccepted":304,"org.easymock.tests2.CaptureTest.testCaptureMultiple":388,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":215,"org.easymock.tests2.UsageTest.openCallCountByLastCall":172,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":381,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":90,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":75,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":224,"org.easymock.tests.CapturesMatcherTest.test":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":209,"org.easymock.tests2.UsageTest.resumeIfFailure":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":330,"org.easymock.tests2.StubTest.stubWithReturnValue":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.tests2.SerializationTest.testAllMockedMethod":53,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":391,"org.easymock.samples.SupportTest.voteForRemovals":111,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":230,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":54,"org.easymock.tests.UsageExpectAndThrowTest.object":228,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":128,"org.easymock.tests2.DelegateToTest.testWrongClass":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":340,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":341,"org.easymock.samples.ConstructorCalledMockTest.testTax":34,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":188,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":142,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":386,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":319,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":29,"org.easymock.tests2.CaptureTest.testCaptureNone":148,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":309,"org.easymock.tests2.ThreadingTest.testThreadSafe":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":362,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":336,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":108,"org.easymock.tests2.CaptureTest.testCapture_2617107":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":316,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.StubTest.stub":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.UsageExpectAndThrowTest.longType":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":329,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.tests2.SerializationTest.testClass":51,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":80,"org.easymock.tests.LimitationsTest.mockNativeMethod":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":89,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":217,"org.easymock.tests2.NameTest.nameForMocksControl":356,"org.easymock.tests2.MockedExceptionTest.testMockedException":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":376,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":276,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":222,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":260,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":143,"org.easymock.tests.MockingTest.testNicePartialClassMocking":259,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":154,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":44,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":20,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":129,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":226,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":175,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":132,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":94,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":77,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":33,"org.easymock.tests2.MockBuilderTest.testCreateMockString":146,"org.easymock.tests.UsageExpectAndThrowTest.floatType":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":211,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":208,"org.easymock.samples.ExampleTest.voteAgainstRemoval":104,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":370,"org.easymock.tests2.UsageConstraintsTest.testNotNull":23,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":295,"org.easymock.tests2.UsageTest.defaultResetToNice":174,"org.easymock.samples.ExampleTest.voteAgainstRemovals":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":88,"org.easymock.tests.UsageVarargTest.differentLength":306,"org.easymock.tests2.CallbackTest.callback":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":40,"org.easymock.tests.UsageTest.openCallCountByLastCall":275,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":315,"org.easymock.tests.UsageCallCountTest.tooFewCalls":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":321,"org.easymock.tests.UsageThrowableTest.throwCheckedException":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":287,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":93,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":191,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":60,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":162,"org.easymock.tests2.NameTest.nameForNiceMock":355,"org.easymock.tests2.DependencyTest.testInterfaceMocking":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":59,"org.easymock.samples.ExampleTest.addDocument":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":382,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":49,"org.easymock.tests2.AnswerTest.stubAnswer":212,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests.UsageVarargTest.varargLongAccepted":308,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":345,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":35,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":84,"org.easymock.tests.UsageThrowableTest.noUpperLimit":289,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":115,"org.easymock.tests2.SerializationTest.test":52,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests2.UsageConstraintsTest.testSame":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":239,"org.easymock.samples.SupportTest.addDocument":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":377,"org.easymock.tests.GenericTest.testPackageScope":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":83,"org.easymock.tests2.NameTest.nameForMock":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":250,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":390,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":314,"org.easymock.tests2.NameTest.nameForStrictMock":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":153,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":6,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests.ErrorMessageTest.testGetters":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":139,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":348,"org.easymock.tests2.CaptureTest.testCaptureRightOne":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":379,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests.UsageRangeTest.combination":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":39,"org.easymock.tests.UsageTest.wrongArguments":274,"org.easymock.tests2.MockBuilderTest.testWithConstructor":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":378,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":251,"org.easymock.tests.UsageVarargTest.varargShortAccepted":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":337,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests2.CaptureTest.testCaptureFromStub":70,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":357,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":335,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":252,"org.easymock.tests2.CaptureTest.testCapture":69,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.samples.ExampleTest.addAndChangeDocument":107,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":74,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":343,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":282,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":325,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":199,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":302}}]
