[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,52,0,53,54,1,55,56,57,58,59,60,61,62,26,63,64,65,66,27,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,2,83,84,85,86,87,3,4,88,89,90,91,5,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,6,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,7,8,9,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,268,269,10,11,12,13,14,270,271,272,273,15,16,17,18,19,274,275,276,277,20,278,279,280,281,282,283,284,285,286,287,288,21,22,289,290,291,23,292,293,294,295],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[44,296,297,298,299,300,301,302,303,304,305,306,307,308,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[171,172,173,309],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[168,169,178,182,183,185,188,198,202,203,205,208,310,311,312,313,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[171,172,173,309],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[315,316],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[317,318,319,320,231,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[321,317,322,323,324,325,116,6,168,169,326,327,328,225,329,330,320,331,332,230,7,279,280,281,23,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[333,334,335],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[336,337,338,339,116,117,123,124,6,168,169,230,232,235,236,340,279,280,281,291,23,293,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[73,76,98,341,109,158],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:195","failures":[336,337,338,339,73,342,78,80,81,93,100,103,341,343,344,345,346,347,113,348,349,350,351,352,353,354,355,356,357,358,130,359,360,361,362,363,364,137,138,143,147,150,152,365,366,367,368,369,370,371,372,373,374,375,376,377],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[378],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[28,44,74,75,77,78,80,92,94,95,97,107,132,137,138,139,140,141,142,143,157,158,159,160,214,215,216,269,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[171,172,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[49,60,74,79,80,81,93,101,103,114,117,118,119,123,124,125,126,129,145,149,150,153,165,167,168,169,379,374,380,332,226,229,231,232,235,236,237,7,262,280,281,286,287,288,289,291,292,293,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,52,0,53,54,1,55,56,57,58,59,60,61,62,26,63,64,65,66,27,67,68,75,77,78,82,2,83,84,86,87,3,4,88,89,5,92,94,95,97,104,106,107,108,111,113,114,115,116,118,119,120,121,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,152,153,154,155,156,158,159,160,161,162,163,164,166,6,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,226,227,228,229,230,233,234,237,238,7,8,244,245,246,247,248,249,250,251,253,255,256,257,258,259,260,261,263,264,265,266,267,269,10,11,12,13,14,15,16,17,18,19,279,280,281,282,283,284,285,287,288,21,22,290,23,292,293,294,295],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[29,30,44,296,381,382,383,384,297,298,385,386,139,143,387,388,365,366,157,367,389,158,368,390,391,369,370,392,393,394,395,159,371,396,372,373,397,160,398,399,171],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[194,195,202,209,220,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[168,400,280,281,293],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[317,318,319,320,231,291],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[55,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[28,29,30,39,40,44,296,401,73,383,74,342,384,402,75,76,77,297,78,298,79,80,386,81,92,93,95,96,97,98,99,403,404,100,101,102,103,405,341,109,110,111,406,407,137,138,139,140,142,143,388,365,157,389,158,368,390,391,370,392,393,394,159,371,396,372,373,397,160,171,173,408,409,410,214,215,216,411,375,412,238,413,315,414,415,416,316,417,418,252,253,378,419,420,421,422,423,424,425,426,427,428,429,269,430],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[60,96,119],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[82,2,83,84,85,86,87,3,88,89,90,91,5,268],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[413,315,414,415,316,417],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[32,45,46,129,161,162,164,222],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[5,92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[431,432,433,434],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[418,252,253,378,419],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[31,32,33,34,35,36,435,37,38,41,42,43,436,336,337,338,339,45,437,46,47,48,49,50,438,51,24,52,0,53,54,25,1,55,56,57,58,59,60,61,62,26,63,64,65,66,27,67,68,69,70,71,72,82,2,83,84,85,86,87,3,4,88,89,90,91,5,94,104,105,106,107,108,109,110,111,112,343,344,345,346,347,113,348,349,350,351,352,353,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,439,354,355,356,357,358,130,359,360,361,362,363,364,440,131,132,133,441,134,442,443,135,136,141,387,144,145,146,147,148,149,150,151,152,153,154,155,156,161,444,445,162,163,164,165,166,6,167,168,169,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,446,431,432,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,217,218,219,220,221,462,376,377,463,222,326,223,224,327,328,225,329,330,464,465,226,466,227,228,229,230,231,232,233,234,235,236,237,310,467,468,311,312,239,240,241,242,243,7,469,433,434,8,9,470,244,245,246,247,248,249,250,251,254,255,256,471,472,473,474,475,476,477,478,313,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,257,258,259,494,260,261,262,263,264,265,266,267,10,11,12,13,14,270,271,272,273,15,16,17,18,19,495,496,497,498,499,500,501,502,503,274,275,276,277,20,278,279,280,281,504,505,282,283,284,285,286,287,288,21,22,289,290,291,23,292,293,294,295,506,507,508,509],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[299,300,301,306,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[49,50,51,24,52,0,53,54,25,1,26,63,27,67,82,2,83,84,89,90],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[456],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[510],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[511,54,58,68],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[28,29,29,30,30,31,32,33,34,35,36,435,37,38,39,40,41,42,43,44,296,436,336,337,338,339,45,437,46,47,48,49,50,438,51,24,52,0,53,54,25,1,55,56,57,58,59,60,61,62,26,63,64,65,66,27,67,68,69,70,71,72,73,74,342,402,75,76,77,78,298,79,80,81,82,2,83,84,85,86,87,3,4,88,89,90,91,5,92,93,94,95,96,97,98,512,99,403,404,100,101,102,103,405,341,104,105,106,107,108,109,110,111,112,343,344,345,346,347,113,348,349,350,351,352,353,114,115,116,117,118,119,120,121,122,123,124,125,126,513,514,127,128,129,439,354,355,356,357,358,130,359,360,361,362,363,364,440,131,132,133,441,134,406,407,442,443,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,388,365,366,157,367,389,158,368,390,391,369,370,392,393,394,395,159,371,396,372,373,397,160,398,399,161,444,445,162,163,164,165,166,6,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,446,431,432,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,408,409,410,214,215,447,216,448,449,411,450,451,452,453,454,455,456,457,458,459,460,461,217,218,219,220,221,375,462,376,412,377,463,222,326,223,224,327,328,225,329,330,464,465,226,466,227,228,229,230,231,232,233,234,235,236,237,238,310,467,468,311,312,239,240,241,242,243,413,315,414,415,416,316,417,7,469,433,434,8,9,470,244,245,246,247,248,249,250,251,418,252,253,378,419,254,255,256,471,472,473,474,475,476,477,478,313,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,257,258,259,494,260,261,262,263,264,265,266,267,420,421,422,423,424,425,426,427,428,429,269,430,10,11,12,13,14,270,271,272,273,15,16,17,18,19,495,496,497,498,499,500,501,502,503,274,275,276,277,20,278,279,280,281,504,505,282,283,284,285,286,287,288,21,22,289,290,291,23,292,293,294,295,506,507,508,509],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":50,"org.easymock.tests2.UsageTest.argumentsOrdered":124,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":480,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":119,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":38,"org.easymock.tests2.DelegateToTest.testReturnException":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":275,"org.easymock.tests.MockingTest.testPartialClassMocking":214,"org.easymock.tests.MockClassControlTest.testToString":422,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":174,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":158,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":340,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":302,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":54,"org.easymock.tests2.UsageTest.wrongArguments":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":10,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":272,"org.easymock.samples.ExampleTest.answerVsDelegate":32,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":412,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":449,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":427,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":193,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":219,"org.easymock.tests.UsageTest.argumentsOrdered":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":310,"org.easymock.tests.UsageVarargTest.varargIntAccepted":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":485,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":352,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":19,"org.easymock.tests.ReplayStateInvalidUsageTest.times":458,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.DependencyTest.testClassMocking":513,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":314,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":487,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":72,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":227,"org.easymock.tests2.DelegateToTest.testDelegate":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":189,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":243,"org.easymock.tests2.DependencyTest.testClassMockingSupport":514,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":329,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":512,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":70,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":452,"org.easymock.tests.UsageThrowableTest.throwError":244,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":376,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":353,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":221,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":399,"org.easymock.samples.PartialClassMockTest.testGetArea":28,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":453,"org.easymock.tests.MockingTest.testInterfaceMocking":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":508,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":503,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":175,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":335,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":75,"org.easymock.tests2.MockBuilderTest.testCreateMock":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":372,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":183,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":317,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":434,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":504,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":270,"org.easymock.tests.UsageOverloadedMethodTest.overloading":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":58,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":254,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":57,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":494,"org.easymock.tests.MockClassControlTest.testEquals":426,"org.easymock.tests2.EasyMockSupportClassTest.testAll":157,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":191,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":241,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":59,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":220,"org.easymock.samples.ExampleTest.voteForRemovals":36,"org.easymock.tests.UsageVarargTest.allKinds":267,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":279,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":242,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":250,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":165,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":349,"org.easymock.tests2.UsageConstraintsTest.greaterThan":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":103,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":417,"org.easymock.samples.ExampleTest.voteForRemoval":33,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":405,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":105,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":377,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":98,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":238,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":274,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":440,"org.easymock.tests2.CaptureTest.testCaptureFirst":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":201,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":488,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":266,"org.easymock.tests.GenericTest.testBridgedEquals":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":287,"org.easymock.tests.UsageExpectAndReturnTest.longType":197,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":239,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":465,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":217,"org.easymock.tests.UsageCallCountTest.tooManyCalls":288,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":249,"org.easymock.tests.MockingTest.testNiceClassMocking":411,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":138,"org.easymock.tests.MockingTest.testClassMocking":409,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":505,"org.easymock.tests2.UsageConstraintsTest.testContains":56,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":111,"org.easymock.tests2.UsageConstraintsTest.testFind":51,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":256,"org.easymock.tests.MockTypeTest.fromEasyMockClass":462,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":46,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":289,"org.easymock.tests.UsageExpectAndReturnTest.object":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":303,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":501,"org.easymock.tests.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":495,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":467,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":296,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":257,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests.MockClassControlTest.testHashCode":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":344,"org.easymock.tests2.EasyMockSupportTest.testVerify":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":393,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":468,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":433,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":69,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":380,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":439,"org.easymock.tests.UsageVarargTest.varargCharAccepted":260,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":493,"org.easymock.tests2.UsageTest.openCallCountByLastCall":120,"org.easymock.tests.DefaultClassInstantiatorTest.object":413,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":469,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":499,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":394,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":343,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":424,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":180,"org.easymock.tests.CapturesMatcherTest.test":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":446,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":323,"org.easymock.tests2.UsageTest.resumeIfFailure":125,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":277,"org.easymock.tests2.StubTest.stubWithReturnValue":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":297,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":486,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":300,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":318,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":418,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":186,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":309,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":492,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":444,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":497,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":63,"org.easymock.tests2.DelegateToTest.testWrongClass":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":22,"org.easymock.samples.ConstructorCalledMockTest.testTax":29,"org.easymock.tests.UsageStrictMockTest.range":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":442,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":509,"org.easymock.tests2.CaptureTest.testCaptureNone":4,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":379,"org.easymock.tests.UsageVerifyTest.twoReturns":281,"org.easymock.tests.UsageVarargTest.varargByteAccepted":265,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":285,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":502,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests2.CaptureTest.testCapture_2617107":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":490,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":13,"org.easymock.tests2.UsageConstraintsTest.any":1,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":457,"org.easymock.tests2.StubTest.stub":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageExpectAndThrowTest.longType":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":416,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":456,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.SerializationTest.testClass":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests.LimitationsTest.mockNativeMethod":269,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":213,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests2.NameTest.nameForMocksControl":339,"org.easymock.tests2.MockedExceptionTest.testMockedException":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":389,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":437,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":178,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":216,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests2.CaptureTest.testCaptureLast":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":143,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":64,"org.easymock.tests.MockingTest.testTwoMocks":410,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.samples.ExampleTest.removeNonExistingDocument":435,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":454,"org.easymock.tests.UsageStrictMockTest.differentMethods":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":345,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":414,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":106,"org.easymock.tests2.ConstraintsToStringTest.andToString":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":420,"org.easymock.tests.UsageExpectAndThrowTest.floatType":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":368,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":401,"org.easymock.tests.UsageVerifyTest.twoThrows":280,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":159,"org.easymock.samples.ExampleTest.voteAgainstRemoval":34,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":481,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests.LimitationsTest.privateConstructor":429,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":382,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":251,"org.easymock.tests2.UsageTest.defaultResetToNice":122,"org.easymock.samples.ExampleTest.voteAgainstRemovals":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":209,"org.easymock.tests.UsageVarargTest.differentLength":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.UsageConstraintsTest.equals":438,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":403,"org.easymock.tests.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":273,"org.easymock.tests.UsageThrowableTest.throwCheckedException":248,"org.easymock.tests.MockingTest.testStrictClassMocking":408,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":320,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":9,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":459,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":141,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests2.CompareToTest.testGreateOrEqual":511,"org.easymock.tests.ObjectMethodsTest.testHashCode":500,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":108,"org.easymock.tests2.NameTest.nameForNiceMock":338,"org.easymock.tests2.DependencyTest.testInterfaceMocking":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":304,"org.easymock.samples.ExampleTest.addDocument":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.DelegateToTest.testStubDelegate":132,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":23,"org.easymock.tests.UsageVarargTest.varargLongAccepted":264,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndReturnTest.floatType":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":44,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":30,"org.easymock.tests2.ConstraintsToStringTest.orToString":321,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":62,"org.easymock.tests.UsageThrowableTest.noUpperLimit":245,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":406,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":86,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":315,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":195,"org.easymock.samples.SupportTest.addDocument":42,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":390,"org.easymock.tests.GenericTest.testPackageScope":252,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":350,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":448,"org.easymock.tests2.NameTest.nameForMock":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":386,"org.easymock.tests2.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":188,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":498,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":228,"org.easymock.tests2.MockedExceptionTest.testRealException":112,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":443,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":331,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":483,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":11,"org.easymock.tests2.NameTest.nameForStrictMock":337,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":407,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":26,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":74,"org.easymock.tests2.UsageStrictMockTest.range":168,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":347,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":392,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.UsageConstraintsTest.testOr":0,"org.easymock.tests.UsageRangeTest.combination":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":232,"org.easymock.tests2.MockBuilderTest.testWithConstructor":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":391,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":421,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":207,"org.easymock.tests.UsageVarargTest.varargShortAccepted":263,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":286,"org.easymock.tests2.UsageConstraintsTest.cmpTo":55,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":474,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":451,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":342,"org.easymock.tests.UsageTest.unexpectedCallWithArray":231,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":208,"org.easymock.tests2.UsageConstraintsTest.constraints":49,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":37,"org.easymock.tests2.ConstraintsToStringTest.notToString":322,"org.easymock.tests.UsageStrictMockTest.testVerify":506,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":41,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":240,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":17,"org.easymock.tests.LimitationsTest.abstractClass":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":18,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":258}}]
