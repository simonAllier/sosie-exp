[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75,76,77,78,6,79,80,81,82,83,84,22,85,25,86,87,88,89,90,91,92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[94,95,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[12,121],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[55,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[133],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,56,57,58,59,60,61,62,63,65,66,67,68,69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[6,7,9,10,13,15,16,17,18,19,20,21,134,25,27,28,31,32,33,34,40,42,43,45,46,52,53,54],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[135,136,137,138],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[139,76,140,141,142,143,144,145,146,147,148,149,150,151,22,152,153,23,24,154,85,155,156,27,42,45,54,57,63,64,69,157],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,34,38,57,63,64,69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:74","sourceCode":"java.lang.Object = java.lang.reflect.Field.get(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[30,35,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[158,159,160,161,136,162,163,164,165,166,167,168,169,170,171,172,173,174,175,125,126,129],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[97,176,176,177,177,178,179,158,98,180,181,182,183,184,185,186,139,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,4,203,204,73,74,75,205,76,206,207,208,209,210,211,212,77,78,213,214,160,215,216,217,218,219,220,221,222,223,224,225,140,226,227,228,229,230,141,231,232,233,234,235,142,236,237,238,143,239,144,240,241,242,5,6,243,79,80,244,245,246,247,248,249,250,251,7,8,9,10,11,12,13,252,2,253,254,255,256,257,258,145,259,260,3,261,262,263,264,265,81,266,267,82,83,84,268,269,270,271,272,14,273,15,16,17,18,19,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,161,294,295,296,146,147,297,298,299,300,301,148,302,303,304,305,306,149,307,308,309,150,310,151,311,312,313,314,315,20,21,22,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,152,336,337,338,153,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,133,371,372,373,374,375,376,377,378,379,23,380,24,121,134,381,382,383,384,385,386,387,388,389,390,391,392,154,393,394,85,395,396,397,398,399,400,401,402,403,404,405,406,25,407,86,87,408,409,410,411,412,413,414,415,416,417,418,419,420,421,136,137,138,422,423,424,162,425,426,427,428,429,430,163,431,432,164,433,434,166,435,168,169,170,436,172,437,438,439,440,441,155,156,442,26,443,27,28,29,30,444,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,445,446,447,448,449,450,175,55,122,123,124,125,126,127,128,99,100,101,102,103,451,104,105,106,107,108,109,130,132,452,453,56,57,58,59,60,61,62,63,64,65,66,67,68,69,110,111,112,113,114,454,115,116,117,118,119,120,455,456,457,458,459,157,460,461,462,463],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests2.UsageTest.argumentsOrdered":402,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":334,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":397,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":98,"org.easymock.tests2.DelegateToTest.testReturnException":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":270,"org.easymock.tests.MockingTest.testPartialClassMocking":219,"org.easymock.tests.MockClassControlTest.testToString":318,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":411,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":147,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":36,"org.easymock.tests2.UsageTest.wrongArguments":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":9,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":263,"org.easymock.samples.ExampleTest.answerVsDelegate":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":160,"org.easymock.tests2.UsageConstraintsTest.testNull":32,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":387,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":13,"org.easymock.tests.UsageTest.moreThanOneArgument":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":373,"org.easymock.tests.UsageTest.argumentsOrdered":211,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":367,"org.easymock.tests.UsageVarargTest.varargIntAccepted":194,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":19,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":454,"org.easymock.tests.ReplayStateInvalidUsageTest.times":145,"org.easymock.tests2.AnswerTest.answer":412,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":421,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests2.UsageTest.strictResetToDefault":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":378,"org.easymock.tests2.DelegateToTest.testDelegate":157,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":309,"org.easymock.tests.LimitationsTest.mockFinalMethod":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":278,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":77,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":419,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":253,"org.easymock.tests.UsageThrowableTest.throwError":359,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":434,"org.easymock.samples.PartialClassMockTest.testGetArea":158,"org.easymock.tests.MockingTest.testInterfaceMocking":221,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":247,"org.easymock.tests2.UsageTest.niceToStrict":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":297,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":358,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":168,"org.easymock.tests2.MockBuilderTest.testCreateMock":172,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":117,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":89,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":304,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":191,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":235,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":295,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":41,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":195,"org.easymock.tests2.EasyMockSupportClassTest.testAll":423,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":420,"org.easymock.tests2.CaptureTest.testCaptureAll":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":276,"org.easymock.tests.MockNameTest.defaultName":203,"org.easymock.tests2.UsageConstraintsTest.testMatches":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":374,"org.easymock.samples.ExampleTest.voteForRemovals":185,"org.easymock.tests.UsageVarargTest.allKinds":4,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":73,"org.easymock.samples.BasicClassMockTest.testPrintContent":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":365,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":405,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":273,"org.easymock.tests2.UsageConstraintsTest.greaterThan":45,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":377,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":127,"org.easymock.samples.ExampleTest.voteForRemoval":182,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":352,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":175,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":393,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":383,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":269,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":455,"org.easymock.tests2.CaptureTest.testCaptureFirst":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":330,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":404,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":231,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":26,"org.easymock.tests2.CaptureTest.testCapture2_2446744":68,"org.easymock.tests2.UsageTest.moreThanOneArgument":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":340,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":202,"org.easymock.tests.GenericTest.testBridgedEquals":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":289,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":274,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":381,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":50,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":204,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":371,"org.easymock.tests.UsageCallCountTest.tooManyCalls":290,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":364,"org.easymock.tests.MockingTest.testNiceClassMocking":225,"org.easymock.tests.MockingTest.testClassMocking":217,"org.easymock.tests2.UsageConstraintsTest.testContains":40,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":283,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":462,"org.easymock.tests2.UsageConstraintsTest.testFind":31,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":146,"org.easymock.tests.MockTypeTest.fromEasyMockClass":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":241,"org.easymock.tests.UsageExpectAndReturnTest.object":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":118,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":197,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":356,"org.easymock.tests.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":249,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":410,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":143,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":192,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":100,"org.easymock.tests.MockClassControlTest.testHashCode":321,"org.easymock.tests2.EasyMockSupportTest.testVerify":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":428,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":190,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":418,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":437,"org.easymock.tests.UsageVarargTest.varargCharAccepted":196,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageTest.openCallCountByLastCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":94,"org.easymock.tests.DefaultClassInstantiatorTest.object":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":189,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":354,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":429,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":113,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":125,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":148,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":164,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":91,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":319,"org.easymock.tests2.UsageTest.resumeIfFailure":403,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":272,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":233,"org.easymock.tests2.SerializationTest.testAllMockedMethod":138,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":153,"org.easymock.samples.SupportTest.voteForRemovals":179,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":149,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":135,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":344,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":413,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":251,"org.easymock.tests.UsageExpectAndThrowTest.object":305,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":48,"org.easymock.tests2.DelegateToTest.testWrongClass":458,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":20,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":21,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.UsageStrictMockTest.range":79,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":452,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":306,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":422,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":210,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":262,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":248,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":75,"org.easymock.tests.UsageVarargTest.varargByteAccepted":201,"org.easymock.tests2.ThreadingTest.testThreadSafe":155,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":287,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":187,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":357,"org.easymock.tests2.CaptureTest.testCapture_2617107":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageConstraintsTest.any":38,"org.easymock.tests2.StubTest.stub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":271,"org.easymock.tests.UsageExpectAndThrowTest.longType":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":343,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":257,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":407,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":451,"org.easymock.tests2.SerializationTest.testClass":136,"org.easymock.tests.LimitationsTest.mockNativeMethod":314,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":112,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":408,"org.easymock.tests2.MockedExceptionTest.testMockedException":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":424,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":300,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":380,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":445,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":171,"org.easymock.tests.MockingTest.testNicePartialClassMocking":220,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":110,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":78,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":35,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":49,"org.easymock.tests.MockingTest.testTwoMocks":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":303,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":401,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":53,"org.easymock.samples.ExampleTest.removeNonExistingDocument":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":116,"org.easymock.tests.UsageStrictMockTest.differentMethods":80,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":101,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":348,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":442,"org.easymock.tests2.ConstraintsToStringTest.andToString":92,"org.easymock.tests2.MockBuilderTest.testCreateMockString":174,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.floatType":298,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":44,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":415,"org.easymock.tests.UsageVerifyTest.twoThrows":74,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":163,"org.easymock.samples.ExampleTest.voteAgainstRemoval":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":126,"org.easymock.tests.LimitationsTest.privateConstructor":313,"org.easymock.tests2.UsageConstraintsTest.testNotNull":52,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":460,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":366,"org.easymock.tests2.UsageTest.defaultResetToNice":400,"org.easymock.samples.ExampleTest.voteAgainstRemovals":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":152,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":111,"org.easymock.tests.UsageVarargTest.differentLength":198,"org.easymock.tests2.CallbackTest.callback":154,"org.easymock.tests2.UsageConstraintsTest.equals":444,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":122,"org.easymock.tests.UsageTest.openCallCountByLastCall":208,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":11,"org.easymock.tests.UsageCallCountTest.tooFewCalls":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":439,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":264,"org.easymock.tests.UsageThrowableTest.throwCheckedException":363,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":70,"org.easymock.tests.MockingTest.testStrictClassMocking":216,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":441,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":438,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":115,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":440,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":417,"org.easymock.tests.ObjectMethodsTest.testHashCode":355,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":443,"org.easymock.tests2.DependencyTest.testInterfaceMocking":391,"org.easymock.samples.ExampleTest.addDocument":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":431,"org.easymock.tests2.DelegateToTest.testStubDelegate":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.stubAnswer":416,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests.UsageVarargTest.varargLongAccepted":200,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":144,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":409,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests2.ConstraintsToStringTest.orToString":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":107,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":82,"org.easymock.tests.UsageThrowableTest.noUpperLimit":360,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":130,"org.easymock.tests2.SerializationTest.test":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":347,"org.easymock.tests2.UsageConstraintsTest.testSame":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.samples.SupportTest.addDocument":178,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":425,"org.easymock.tests.GenericTest.testPackageScope":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":106,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":142,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":308,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":379,"org.easymock.tests2.MockedExceptionTest.testRealException":463,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":71,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":3,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":435,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":132,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":349,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":166,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":427,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests.UsageRangeTest.combination":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":446,"org.easymock.tests.UsageTest.wrongArguments":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":426,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":325,"org.easymock.tests.UsageVarargTest.varargShortAccepted":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":351,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":288,"org.easymock.tests2.UsageConstraintsTest.cmpTo":39,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":399,"org.easymock.tests2.CaptureTest.testCaptureFromStub":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":2,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":167,"org.easymock.tests.UsageTest.unexpectedCallWithArray":206,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":237,"org.easymock.tests2.CaptureTest.testCapture":1,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":243,"org.easymock.samples.ExampleTest.addAndChangeDocument":139,"org.easymock.tests2.ConstraintsToStringTest.notToString":90,"org.easymock.tests.UsageStrictMockTest.testVerify":245,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":97,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":275,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":141,"org.easymock.tests.LimitationsTest.abstractClass":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":18,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":193}}]
