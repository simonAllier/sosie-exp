[{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[0],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,0,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[24,26,27,120,121,127,128,328,329,330,331,332,333,334,335,336,337,338,175,176,178,179,212,213,214,339,340,341,342,343,344,345,346,347,257,258,259,262,263,314,348,349,326,327],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[165,167],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[350],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,0,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,351,351,220,221,222,226,229,230,231,232,233,234,235,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[224,248,253],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[352,155,353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[87,88,354,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[26,27,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[90,355,356,357,143,358,359,360,361,362],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,351],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[363,364,365,366,367],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[368,369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[118,125,131,132,133,134,160,202,203,204,205,206,207,213,216,222,256,261,284,285,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,317,318,319,320,321,322,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[352,155,353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[370,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":37,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":256,"org.easymock.tests2.UsageTest.argumentsOrdered":128,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":353,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":123,"org.easymock.tests2.StubTest.stubWithReturnValue":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":356,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":56,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":191,"org.easymock.tests2.SerializationTest.testAllMockedMethod":145,"org.easymock.tests2.DelegateToTest.testReturnException":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":203,"org.easymock.tests.MockingTest.testPartialClassMocking":217,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":336,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.MockClassControlTest.testToString":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":294,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":147,"org.easymock.tests.UsageExpectAndThrowTest.object":304,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":53,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":358,"org.easymock.tests2.DelegateToTest.testWrongClass":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":282,"org.easymock.tests2.UsageTest.wrongArguments":121,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":163,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":136,"org.easymock.tests2.UsageConstraintsTest.testNull":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":255,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":313,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":262,"org.easymock.tests.UsageTest.moreThanOneArgument":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":246,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":162,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":169,"org.easymock.tests2.CaptureTest.testCaptureNone":68,"org.easymock.tests.UsageUnorderedTest.message":314,"org.easymock.tests.UsageVerifyTest.twoReturns":214,"org.easymock.tests.UsageVarargTest.varargByteAccepted":273,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests.UsageTest.argumentsOrdered":263,"org.easymock.tests.UsageVarargTest.varargIntAccepted":267,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":232,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":372,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":276,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":338,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":285,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":112,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":243,"org.easymock.tests2.StubTest.stub":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":280,"org.easymock.tests.UsageExpectAndThrowTest.longType":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":204,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":242,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests2.SerializationTest.testClass":143,"org.easymock.tests.ReplayStateInvalidUsageTest.times":244,"org.easymock.tests.LimitationsTest.mockNativeMethod":226,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":201,"org.easymock.tests2.AnswerTest.answer":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":32,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests2.NameTest.nameForMocksControl":153,"org.easymock.tests2.MockedExceptionTest.testMockedException":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests2.DelegateToTest.testDelegate":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":298,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":219,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":309,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":340,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":293,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":339,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":127,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":58,"org.easymock.tests.UsageThrowableTest.throwError":315,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":238,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":240,"org.easymock.tests.UsageStrictMockTest.differentMethods":179,"org.easymock.tests2.ConstraintsToStringTest.andToString":335,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.MockBuilderTest.testCreateMockString":117,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":248,"org.easymock.tests.UsageExpectAndThrowTest.floatType":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":171,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":50,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":75,"org.easymock.tests.UsageVerifyTest.twoThrows":213,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":148,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":277,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":295,"org.easymock.tests2.UsageTest.niceToStrict":122,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":322,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":115,"org.easymock.tests2.UsageTest.defaultResetToNice":126,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":197,"org.easymock.tests.UsageVarargTest.differentLength":270,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":344,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":303,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":161,"org.easymock.tests.UsageCallCountTest.tooFewCalls":230,"org.easymock.tests.UsageOverloadedMethodTest.overloading":221,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":325,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":48,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":139,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":47,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":164,"org.easymock.tests.UsageThrowableTest.throwCheckedException":319,"org.easymock.tests.MockClassControlTest.testEquals":254,"org.easymock.tests2.EasyMockSupportClassTest.testAll":146,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":343,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":291,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":31,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":216,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":141,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":138,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":245,"org.easymock.tests2.UsageConstraintsTest.testMatches":49,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":140,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":170,"org.easymock.tests.ObjectMethodsTest.testHashCode":224,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":95,"org.easymock.tests2.NameTest.nameForNiceMock":152,"org.easymock.tests.UsageVarargTest.allKinds":275,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":292,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testStubDelegate":155,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":321,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests2.AnswerTest.stubAnswer":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":207,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":362,"org.easymock.tests2.UsageConstraintsTest.greaterThan":51,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests.UsageVarargTest.varargLongAccepted":272,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":200,"org.easymock.tests.UsageExpectAndReturnTest.floatType":184,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":84,"org.easymock.tests2.ConstraintsToStringTest.orToString":328,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageThrowableTest.noUpperLimit":316,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":0,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":281,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":35,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests2.SerializationTest.test":144,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":317,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":183,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":202,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":352,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":189,"org.easymock.tests.GenericTest.testPackageScope":165,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":72,"org.easymock.tests2.UsageTest.moreThanOneArgument":120,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":234,"org.easymock.tests2.NameTest.nameForMock":150,"org.easymock.tests.UsageExpectAndReturnTest.longType":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":289,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":194,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":310,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":186,"org.easymock.tests.UsageCallCountTest.tooManyCalls":235,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":229,"org.easymock.tests2.MockedExceptionTest.testRealException":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":299,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":283,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":247,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":137,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":354,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":228,"org.easymock.tests2.UsageConstraintsTest.testContains":46,"org.easymock.tests2.NameTest.nameForStrictMock":151,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":133,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":222,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":82,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":21,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests.UsageExpectAndReturnTest.object":192,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":52,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":359,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":269,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":225,"org.easymock.tests.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":361,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":346,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":355,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":79,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":324,"org.easymock.tests.UsageTest.wrongArguments":259,"org.easymock.tests.MockClassControlTest.testHashCode":253,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":249,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":195,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":323,"org.easymock.tests.UsageVarargTest.varargShortAccepted":271,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":29,"org.easymock.tests2.UsageConstraintsTest.cmpTo":45,"org.easymock.tests.UsageVarargTest.varargCharAccepted":268,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":368,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":23,"org.easymock.tests2.UsageTest.openCallCountByLastCall":124,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests.DefaultClassInstantiatorTest.object":172,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":371,"org.easymock.tests2.CaptureTest.testCaptureFromStub":71,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":237,"org.easymock.tests.UsageTest.unexpectedCallWithArray":258,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":318,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":231,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":196,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":252,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests2.UsageConstraintsTest.constraints":36,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":300,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests2.ConstraintsToStringTest.notToString":330,"org.easymock.tests.CapturesMatcherTest.test":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":199,"org.easymock.tests.UsageStrictMockTest.testVerify":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":370,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":333,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":149,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":290,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests2.UsageTest.resumeIfFailure":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":188,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":279,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102}}]
