[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[1],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[3,4,5,6],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[9,10],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,3,4,125,126,5,6,127,128,129,130,131,132,133,134,135,136,9,137,138,139,10,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,2,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,8,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,7,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[490,491,492,493,494,323,324,354,380,383],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,85,86,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,127,128,129,130,131,137,138,140,142,143,147,148,149,151,152,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,183,184,185,186,187,188,189,190,192,193,194,205,206,207,208,209,210,213,215,216,217,218,219,220,234,235,236,237,238,239,240,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,269,270,8,271,272,273,274,275,277,280,281,282,283,286,287,288,289,291,292,293,295,296,297,298,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,7,322,323,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,377,378,379,381,384,385,387,388,391,392,393,394,395,396,397,398,399,401,402,408,415,416,417,418,419,420,421,423,424,426,427,428,430,434,437,447,453,466,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[495,496,357,358,359,360,361,362,363,364,366,497,367,368,369,370],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[276,498,499,500,501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,3,4,125,126,5,6,127,128,129,130,131,132,133,134,135,136,9,137,138,139,10,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,2,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,8,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,7,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[502,354,355,356],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[23,23,24,24,278,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[74,75,76,77,79,81],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[504,490,491,492,493,505,494,323,324,354,380,383,506],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[273,313,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[33,37,38,40,43,96,100,101,103,106,140,141,142,143,149,167,183,186,188,190,192,193,194,234,255,257,260,261,268,296,297,300,302,303,309,312,313,315,7,334,338,339,342,353,385,415,417,419,421,423,479,480,481,482,486,487,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[409,467],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[23,24,278,372,503,386],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[304],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[75,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[226,273,313,482],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[490,491,492,493,494,323,324,354,380,383],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[316],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[12,13,14,15,16,17,18,19,20,21,22,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,3,4,126,5,6,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,2,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,215,216,217,218,219,220,221,222,223,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,7,322,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[507,508,185,256,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[295,297,511],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[185,188,189,256,419,420],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[316],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[137,139,10],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":298,"org.easymock.tests2.UsageTest.argumentsOrdered":487,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":343,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":59,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":482,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":206,"org.easymock.tests.MockingTest.testPartialClassMocking":85,"org.easymock.tests.MockClassControlTest.testToString":177,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":456,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":29,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":305,"org.easymock.tests2.UsageTest.wrongArguments":480,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":127,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":153,"org.easymock.samples.ExampleTest.answerVsDelegate":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":246,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":90,"org.easymock.tests2.UsageConstraintsTest.testNull":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":272,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":182,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":342,"org.easymock.tests2.CaptureTest.testPrimitive":360,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":48,"org.easymock.tests.UsageTest.moreThanOneArgument":255,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":132,"org.easymock.tests.UsageTest.argumentsOrdered":261,"org.easymock.tests.UsageVarargTest.varargIntAccepted":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":249,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":328,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":253,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":408,"org.easymock.tests.ReplayStateInvalidUsageTest.times":228,"org.easymock.tests2.DependencyTest.testClassMocking":473,"org.easymock.tests2.AnswerTest.answer":388,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":397,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":243,"org.easymock.tests2.CaptureTest.testAnd":357,"org.easymock.tests2.UsageTest.strictResetToDefault":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":337,"org.easymock.tests2.DelegateToTest.testDelegate":430,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":44,"org.easymock.tests.LimitationsTest.mockFinalMethod":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":219,"org.easymock.tests2.DependencyTest.testClassMockingSupport":474,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":155,"org.easymock.tests2.CaptureTest.testCapture1_2446744":361,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":395,"org.easymock.tests.UsageThrowableTest.throwError":166,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":223,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":245,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":472,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":455,"org.easymock.samples.PartialClassMockTest.testGetArea":28,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":0,"org.easymock.tests.MockingTest.testInterfaceMocking":87,"org.easymock.tests2.CompareToTest.testLessOrEqual":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":145,"org.easymock.tests2.UsageTest.niceToStrict":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":30,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":204,"org.easymock.tests2.ThreadingTest.testChangeDefault":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":377,"org.easymock.tests2.MockBuilderTest.testCreateMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":38,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":338,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":151,"org.easymock.tests.UsageOverloadedMethodTest.overloading":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":446,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":266,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":311,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":310,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":366,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":115,"org.easymock.tests2.EasyMockSupportClassTest.testAll":434,"org.easymock.tests.MockClassControlTest.testEquals":181,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":217,"org.easymock.tests2.CaptureTest.testCaptureAll":358,"org.easymock.tests.MockNameTest.defaultName":195,"org.easymock.tests2.UsageConstraintsTest.testMatches":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":164,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":221,"org.easymock.samples.ExampleTest.voteForRemovals":20,"org.easymock.tests.UsageVarargTest.allKinds":123,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":192,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":218,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":468,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":494,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":80,"org.easymock.tests2.UsageConstraintsTest.greaterThan":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":141,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":283,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":81,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":399,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":284,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":247,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":275,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":477,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":174,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":335,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":205,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":336,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":489,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":99,"org.easymock.tests2.UsageTest.moreThanOneArgument":479,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":401,"org.easymock.tests2.CaptureTest.testCapture2_2446744":369,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":67,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":122,"org.easymock.tests.GenericTest.testBridgedEquals":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":239,"org.easymock.tests.UsageExpectAndReturnTest.longType":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":215,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":47,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":150,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":3,"org.easymock.tests.UsageCallCountTest.tooManyCalls":240,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests.MockingTest.testNiceClassMocking":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":287,"org.easymock.tests.MockingTest.testClassMocking":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":233,"org.easymock.tests2.UsageConstraintsTest.testContains":309,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":348,"org.easymock.tests2.UsageConstraintsTest.testFind":300,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests.MockTypeTest.fromEasyMockClass":244,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":352,"org.easymock.tests.UsageExpectAndReturnTest.object":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":117,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":202,"org.easymock.tests.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":54,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":133,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":324,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":108,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":265,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":462,"org.easymock.tests.MockClassControlTest.testHashCode":180,"org.easymock.tests2.EasyMockSupportTest.testVerify":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":444,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":134,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":5,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":394,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":422,"org.easymock.tests.UsageVarargTest.varargCharAccepted":116,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":73,"org.easymock.tests2.CaptureTest.testCaptureMultiple":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":72,"org.easymock.tests2.UsageTest.openCallCountByLastCall":483,"org.easymock.tests.DefaultClassInstantiatorTest.object":74,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":126,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":445,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":461,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":179,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":35,"org.easymock.tests.CapturesMatcherTest.test":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":453,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":178,"org.easymock.tests2.UsageTest.resumeIfFailure":488,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":208,"org.easymock.tests2.StubTest.stubWithReturnValue":424,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":380,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":320,"org.easymock.tests2.SerializationTest.testAllMockedMethod":356,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":65,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":464,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":41,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":71,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":389,"org.easymock.tests.UsageExpectAndThrowTest.object":39,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":198,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":317,"org.easymock.tests2.DelegateToTest.testWrongClass":428,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":158,"org.easymock.tests.UsageStrictMockTest.range":188,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":331,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":286,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":431,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":230,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":146,"org.easymock.tests2.CaptureTest.testCaptureNone":365,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":499,"org.easymock.tests.UsageUnorderedTest.message":220,"org.easymock.tests.UsageVerifyTest.twoReturns":194,"org.easymock.tests.UsageVarargTest.varargByteAccepted":121,"org.easymock.tests2.ThreadingTest.testThreadSafe":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":448,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":237,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":203,"org.easymock.tests2.CaptureTest.testCapture_2617107":359,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":69,"org.easymock.tests2.UsageConstraintsTest.any":307,"org.easymock.tests2.StubTest.stub":423,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageExpectAndThrowTest.longType":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":207,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":78,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":226,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":418,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":466,"org.easymock.tests2.SerializationTest.testClass":354,"org.easymock.tests.LimitationsTest.mockNativeMethod":213,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":421,"org.easymock.tests2.NameTest.nameForMocksControl":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.MockedExceptionTest.testMockedException":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":436,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":33,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":88,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":351,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":381,"org.easymock.tests.MockingTest.testNicePartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":504,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests2.CompareToTest.testCompareEqual":1,"org.easymock.tests2.CaptureTest.testCaptureLast":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":293,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":304,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":318,"org.easymock.tests.MockingTest.testTwoMocks":84,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":37,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":486,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":7,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":189,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":463,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":76,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":400,"org.easymock.tests2.MockBuilderTest.testCreateMockString":387,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":438,"org.easymock.tests.UsageExpectAndThrowTest.floatType":31,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":391,"org.easymock.tests.UsageVerifyTest.twoThrows":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":325,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":447,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":60,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":282,"org.easymock.tests.LimitationsTest.privateConstructor":212,"org.easymock.tests2.UsageConstraintsTest.testNotNull":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":346,"org.easymock.tests2.UsageTest.defaultResetToNice":485,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.UsageVarargTest.differentLength":118,"org.easymock.tests2.CallbackTest.callback":353,"org.easymock.tests2.UsageConstraintsTest.equals":299,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":278,"org.easymock.tests.UsageTest.openCallCountByLastCall":258,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":129,"org.easymock.tests.UsageCallCountTest.tooFewCalls":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":154,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":82,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":160,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":288,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":291,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":393,"org.easymock.tests.ObjectMethodsTest.testHashCode":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":505,"org.easymock.tests2.NameTest.nameForNiceMock":459,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":402,"org.easymock.tests2.DependencyTest.testInterfaceMocking":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.DelegateToTest.testStubDelegate":427,"org.easymock.tests2.AnswerTest.stubAnswer":392,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":186,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":382,"org.easymock.tests.UsageVarargTest.varargLongAccepted":120,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":110,"org.easymock.tests.UsageExpectAndReturnTest.floatType":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":323,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":470,"org.easymock.tests.UsageThrowableTest.noUpperLimit":167,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":267,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":296,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":326,"org.easymock.tests2.SerializationTest.test":355,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":362,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":11,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":93,"org.easymock.tests2.UsageConstraintsTest.testSame":302,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":290,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":439,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":53,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":469,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":89,"org.easymock.tests2.NameTest.nameForMock":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":104,"org.easymock.tests2.UsageStrictMockTest.differentMethods":420,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":386,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":279,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":43,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":143,"org.easymock.tests2.MockedExceptionTest.testRealException":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":332,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":506,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":231,"org.easymock.tests2.NameTest.nameForStrictMock":458,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":376,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":350,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":273,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":330,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":77,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":373,"org.easymock.tests2.UsageStrictMockTest.range":419,"org.easymock.tests2.UsageConstraintsTest.lessThan":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":443,"org.easymock.tests2.CaptureTest.testCaptureRightOne":367,"org.easymock.tests2.UsageConstraintsTest.testOr":303,"org.easymock.tests.UsageRangeTest.combination":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":8,"org.easymock.tests.UsageTest.wrongArguments":257,"org.easymock.tests2.MockBuilderTest.testWithConstructor":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":440,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":50,"org.easymock.tests.UsageVarargTest.varargShortAccepted":119,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":79,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":238,"org.easymock.tests2.UsageConstraintsTest.cmpTo":308,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":52,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":484,"org.easymock.tests2.CaptureTest.testCaptureFromStub":368,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":222,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":374,"org.easymock.tests.UsageTest.unexpectedCallWithArray":256,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":185,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":236,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":106,"org.easymock.tests2.CaptureTest.testCapture":497,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":187,"org.easymock.tests2.UsageConstraintsTest.constraints":297,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageStrictMockTest.testVerify":191,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":216,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":251,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":98,"org.easymock.tests.LimitationsTest.abstractClass":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":252,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":339}}]
