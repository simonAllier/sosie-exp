[{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:144","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:351","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54,55],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[14,17,18,28,34,37,38,39,40,42,44,45,50,52],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,4,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,6,118,119,120,121,122,123,124,125,126,127,7,8,128,9,129,130,131,132,133,134,135,136,0,137,2,138,139,3,140,10,141,142,143,144,145,146,147,148,149,150,11,151,12,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,13,175,176,14,15,16,177,178,179,17,18,19,20,180,181,182,183,21,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,22,222,223,224,23,24,225,226,25,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,26,261,262,27,28,29,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,31,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,32,351,352,353,354,35,355,356,357,36,358,37,38,359,360,39,40,41,361,362,363,54,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,42,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,55,420,421,422,423,424,425,426,427,428,429,430,43,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,44,45,478,479,480,481,482,483,46,47,48,484,485,49,486,50,487,51,52,53,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[57,58,58,59,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,82,83,84,85,86,4,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,6,120,121,122,123,127,7,129,130,131,132,133,134,135,136,0,137,2,138,139,3,140,10,141,142,143,144,145,147,148,149,150,11,151,12,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,13,175,176,14,15,16,177,178,179,17,18,19,20,182,183,21,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,208,209,210,211,214,215,217,218,221,22,222,224,23,225,25,227,228,229,230,233,235,236,238,239,242,243,244,245,246,248,251,252,253,254,255,256,257,258,259,260,26,261,262,27,28,29,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,340,342,344,345,346,347,348,349,350,32,351,352,353,354,35,355,356,357,36,358,37,38,359,360,39,40,41,361,362,363,54,364,365,366,367,368,369,370,372,373,374,375,376,377,379,42,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,55,420,421,422,423,424,425,426,427,428,429,430,43,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,44,45,478,479,480,481,482,483,46,47,48,484,485,49,486,50,487,51,52,53,488,489,490,491,492],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[492],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[373,377],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[418],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,82,84,85,86,4,87,89,90,91,92,93,94,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,6,121,122,123,125,7,8,9,129,130,131,132,133,134,135,136,0,137,2,138,139,3,140,10,141,142,143,144,145,147,150,11,151,12,154,155,156,157,158,159,160,161,162,168,13,175,176,14,15,16,177,178,179,17,18,19,20,182,183,21,190,198,199,200,202,210,211,212,213,214,215,217,218,219,221,22,222,223,224,23,24,225,226,25,227,228,229,233,236,246,252,255,258,259,260,26,261,262,27,28,29,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,313,314,316,332,333,334,335,336,345,347,348,32,35,356,357,36,358,37,38,359,360,39,40,41,361,366,367,368,369,370,42,383,384,386,387,388,389,390,391,392,393,395,396,399,400,401,425,426,427,429,430,43,431,432,433,434,435,446,448,449,450,451,452,453,454,455,456,457,458,459,460,461,471,472,473,474,475,476,477,44,45,480,481,482,483,46,47,48,484,485,49,486,50,487,51,52,53,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[60,61,62,63,64,65,67,68,69,70,71,72,73,82,83,84,85,86,4,87,89,90,91,92,93,94,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,129,130,131,132,133,134,135,136,0,137,2,138,139,3,140,10,141,142,143,144,147,12],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[60,61,62,63,64,65,67,68,69,70,71,72,73,87,90,92,93,109,121,123,125,129,130,136,0,2,3,10,143,151,154,155,156,158,168,13,175,176,15,16,177,178,19,20,182,183,21,190,198,199,200,202,210,211,221,22,222,223,224,23,24,226,25,227,228,255,258,259,261,262,27,28,29,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,332,333,334,335,336,345,347,348,36,358,359,360,41,42,383,386,387,388,389,390,391,392,393,396,399,400,401,425,426,427,429,430,431,432,433,434,435,448,449,450,451,452,457,458,459,460,461,471,472,473,474,475,476,477,44,45,484,485,486,487,51,52,53,488],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[57,60,62,63,65,73,74,6,121,123,125,8,140,10,141,142,143,144,147,11,151,12,157,182,183,199,212,213,214,215,217,218,219,233,236,246,252,262,28,29,290,291,292,293,294,295,298,299,301,302,303,305,306,307,308,309,313,314,316,332,333,334,335,35,355,356,357,446,448,457,458,459,460,461,484,485,487,52,53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[90,95,104,109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[494],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[495,496,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[87,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[146],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[498,111],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:471","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[226,247],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[498,111],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[418],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[60,61,62,63,64,65,67,68,69,70,71,72,73,82,84,85,86,4,87,89,90,91,92,93,94,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,129,130,131,132,133,134,135,136,0,137,2,138,139,3,140,10,141,142,143,144,147,154,155,156,157,158,159,160,161,162,168,13,175,176,15,16,177,178,17,19,20,182,183,21,190,198,199,200,202,210,211,212,215,217,221,22,222,223,224,23,24,226,25,227,228,229,233,255,258,259,260,261,262,27,28,29,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,332,333,334,335,336,345,347,348,35,356,357,36,358,359,360,39,41,361,363,54,42,383,384,386,387,388,389,390,391,392,393,395,396,398,399,400,401,425,426,427,429,430,431,432,433,434,435,442,443,446,448,449,450,451,452,457,458,459,460,461,465,468,471,472,473,474,475,476,477,44,45,480,481,482,483,47,48,484,485,486,487,51,52,53,488],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[264,265,266,499],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[61,197,198,199,200,201,202,347],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[500],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":87,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.UsageTest.argumentsOrdered":18,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":412,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":16,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":68,"org.easymock.tests2.DelegateToTest.testReturnException":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":472,"org.easymock.tests.MockingTest.testPartialClassMocking":313,"org.easymock.tests.MockClassControlTest.testToString":438,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":77,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":240,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":267,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":448,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":455,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":342,"org.easymock.tests2.UsageConstraintsTest.testNull":90,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":142,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":25,"org.easymock.tests2.CaptureTest.testPrimitive":132,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":452,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":286,"org.easymock.tests.UsageTest.moreThanOneArgument":358,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":334,"org.easymock.tests.UsageTest.argumentsOrdered":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":205,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":461,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests.ReplayStateInvalidUsageTest.times":328,"org.easymock.tests2.DependencyTest.testClassMocking":180,"org.easymock.tests2.AnswerTest.answer":255,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":115,"org.easymock.tests2.CaptureTest.testAnd":129,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":339,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":224,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":356,"org.easymock.tests2.DelegateToTest.testDelegate":202,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":282,"org.easymock.tests.LimitationsTest.mockFinalMethod":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":370,"org.easymock.tests2.DependencyTest.testClassMockingSupport":181,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":351,"org.easymock.tests2.CaptureTest.testCapture1_2446744":133,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":113,"org.easymock.tests.UsageThrowableTest.throwError":386,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":322,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":341,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":174,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":254,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.MockingTest.testInterfaceMocking":315,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":458,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":491,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":470,"org.easymock.tests2.UsageTest.niceToStrict":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":121,"org.easymock.tests2.MockBuilderTest.testCreateMock":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":249,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":193,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":276,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":23,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":382,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":453,"org.easymock.tests.UsageOverloadedMethodTest.overloading":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":251,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":348,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":301,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":428,"org.easymock.tests.MockClassControlTest.testEquals":442,"org.easymock.tests2.EasyMockSupportClassTest.testAll":233,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":396,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":284,"org.easymock.tests2.CaptureTest.testCaptureAll":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":368,"org.easymock.tests.MockNameTest.defaultName":385,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":335,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests.UsageVarargTest.allKinds":435,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":477,"org.easymock.samples.BasicClassMockTest.testPrintContent":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":369,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":392,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":170,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":201,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":355,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":12,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":379,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":155,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":361,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":222,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":471,"org.easymock.tests2.CaptureTest.testCaptureFirst":3,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":223,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":20,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":297,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":157,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":55,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":434,"org.easymock.tests.GenericTest.testBridgedEquals":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":47,"org.easymock.tests.UsageExpectAndReturnTest.longType":293,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":366,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":285,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":107,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":332,"org.easymock.tests.UsageCallCountTest.tooManyCalls":48,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":195,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":391,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":213,"org.easymock.tests.MockingTest.testNiceClassMocking":319,"org.easymock.tests.MockingTest.testClassMocking":311,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":479,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":161,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":401,"org.easymock.tests.MockTypeTest.fromEasyMockClass":340,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":84,"org.easymock.tests.UsageExpectAndReturnTest.object":300,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":194,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":226,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":430,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":468,"org.easymock.tests.UsageTest.exactCallCountByLastCall":41,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":75,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":425,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":306,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":347,"org.easymock.tests.MockClassControlTest.testHashCode":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":164,"org.easymock.tests2.EasyMockSupportTest.testVerify":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":243,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":54,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":112,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":33,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":184,"org.easymock.tests.UsageVarargTest.varargCharAccepted":429,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":371,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":228,"org.easymock.tests.DefaultClassInstantiatorTest.object":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":380,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":466,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":188,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":163,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":440,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":11,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":273,"org.easymock.tests.CapturesMatcherTest.test":500,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":287,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":252,"org.easymock.tests2.UsageTest.resumeIfFailure":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":337,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":474,"org.easymock.tests2.StubTest.stubWithReturnValue":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":124,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":299,"org.easymock.tests2.SerializationTest.testAllMockedMethod":266,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":418,"org.easymock.samples.SupportTest.voteForRemovals":73,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":279,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":423,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":256,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":464,"org.easymock.tests.UsageExpectAndThrowTest.object":277,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":484,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":485,"org.easymock.tests.UsageStrictMockTest.range":52,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":208,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":278,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":123,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":230,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":492,"org.easymock.tests2.CaptureTest.testCaptureNone":0,"org.easymock.tests.UsageUnorderedTest.message":42,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":30,"org.easymock.tests.UsageVerifyTest.twoReturns":45,"org.easymock.tests.UsageVarargTest.varargByteAccepted":433,"org.easymock.tests2.ThreadingTest.testThreadSafe":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":247,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":483,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":469,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":69,"org.easymock.tests2.CaptureTest.testCapture_2617107":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":353,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":421,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests2.StubTest.stub":210,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndThrowTest.longType":270,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":326,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":27,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests2.SerializationTest.testClass":264,"org.easymock.tests.LimitationsTest.mockNativeMethod":446,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":187,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests2.NameTest.nameForMocksControl":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":189,"org.easymock.tests2.MockedExceptionTest.testMockedException":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":235,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":360,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":271,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":316,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":125,"org.easymock.tests.MockingTest.testNicePartialClassMocking":314,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":144,"org.easymock.tests2.CompareToTest.testNotComparable":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":495,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":185,"org.easymock.tests2.CaptureTest.testCaptureLast":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":352,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":93,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":312,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":275,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.samples.ExampleTest.removeNonExistingDocument":66,"org.easymock.tests.UsageStrictMockTest.differentMethods":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":192,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":165,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":374,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":156,"org.easymock.tests2.MockBuilderTest.testCreateMockString":9,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":237,"org.easymock.tests.UsageExpectAndThrowTest.floatType":269,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":232,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":258,"org.easymock.tests.UsageVerifyTest.twoThrows":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":76,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":246,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":151,"org.easymock.tests.LimitationsTest.privateConstructor":445,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":393,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":159,"org.easymock.tests2.UsageTest.defaultResetToNice":179,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":186,"org.easymock.tests.UsageVarargTest.differentLength":43,"org.easymock.tests2.CallbackTest.callback":21,"org.easymock.tests2.UsageConstraintsTest.equals":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":148,"org.easymock.tests.UsageTest.openCallCountByLastCall":359,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":450,"org.easymock.tests.UsageCallCountTest.tooFewCalls":481,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":456,"org.easymock.tests.UsageThrowableTest.throwCheckedException":390,"org.easymock.tests.MockingTest.testStrictClassMocking":310,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":214,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":217,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":260,"org.easymock.tests2.CompareToTest.testGreateOrEqual":493,"org.easymock.tests.ObjectMethodsTest.testHashCode":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":158,"org.easymock.tests2.NameTest.nameForNiceMock":80,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":248,"org.easymock.tests2.DelegateToTest.testStubDelegate":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":253,"org.easymock.tests2.AnswerTest.stubAnswer":259,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":487,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":126,"org.easymock.tests.UsageVarargTest.varargLongAccepted":432,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.floatType":292,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests.UsageThrowableTest.noUpperLimit":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":172,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":203,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":134,"org.easymock.tests2.SerializationTest.test":265,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":373,"org.easymock.tests2.UsageConstraintsTest.testSame":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":291,"org.easymock.samples.SupportTest.addDocument":72,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":216,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":238,"org.easymock.tests.GenericTest.testPackageScope":395,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":171,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":317,"org.easymock.tests2.NameTest.nameForMock":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":128,"org.easymock.tests2.UsageStrictMockTest.differentMethods":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":281,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":357,"org.easymock.tests2.MockedExceptionTest.testRealException":162,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":449,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":331,"org.easymock.tests2.NameTest.nameForStrictMock":79,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":120,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":143,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":207,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":6,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests2.UsageConstraintsTest.lessThan":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":22,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":242,"org.easymock.tests2.UsageConstraintsTest.testOr":92,"org.easymock.tests.UsageRangeTest.combination":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":10,"org.easymock.tests.UsageTest.wrongArguments":38,"org.easymock.tests2.MockBuilderTest.testWithConstructor":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":239,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":303,"org.easymock.tests.UsageVarargTest.varargShortAccepted":431,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":46,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":257,"org.easymock.tests2.CompareToTest.testLessThan":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.CaptureTest.testCaptureFromStub":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":321,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":118,"org.easymock.tests.UsageTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":304,"org.easymock.tests2.CaptureTest.testCapture":1,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":51,"org.easymock.samples.ExampleTest.addAndChangeDocument":67,"org.easymock.tests.UsageStrictMockTest.testVerify":489,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":71,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":367,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":459,"org.easymock.tests.LimitationsTest.abstractClass":444,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":460,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":24}}]
