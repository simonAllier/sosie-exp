[{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,13,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,0,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[183,184,185,58,186,187,188,189,190,191,66,192,193,194,151],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[160,161],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[195,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[1,1,2,2,4,114,197,182,198],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[199,200,201,202,203,204,198],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[92,93,205,94,99,206,159,160,161,162,163,164,165,166,207,0,175,176,179,180],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[183,184,185,58,186,187,188,189,191,66,192,193,194,151],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[92,205,99,159,160,162,164,165,207,175,179],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[208,209,112,210,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[14,1,1,2,2,22,23,24,25,26,30,31,37,38,39,40,41,68,69,70,212,213,214,74,75,78,79,80,81,82,84,85,87,105,107,108,109,110,113,129,130,131,132,133,134,135,136,137,138,139,140,141,182],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[183,215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[183,215,217,185,58,66,151],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[183,184,185,58,186,187,188,189,190,191,66,192,193,194,151],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[218,114,115,219],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:54","sourceCode":"return new org.easymock.internal.Result(new ThrowingAnswer() , true)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[220,221,222],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[223,224,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,48,52,53,246,247,59,62,248,249,250,251,252,253,254,73,255,256,111,257,13,146,155],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[258,259,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[3,262,20,263,264,265,266,267,268,269,270,271,272,273,81,82,83,85,86,87,88,5,91,274,107,111,219,129,132,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[276,264],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[259,261,277],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[183,46,245,54,55,246,247,56,252,191,65,74,75,76,77,78,278,79,80,88,92,93,205,94,95,279,280,96,97,98,99,206,100,101,105,150,157,158,159,160,161,162,163,164,165,166,207,0,167,168,169,170,171,172,173,174,175,176,177,281,178,179,180,181,282,283,284],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests2.UsageTest.argumentsOrdered":194,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":59,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":223,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":178,"org.easymock.tests2.SerializationTest.testAllMockedMethod":219,"org.easymock.tests2.DelegateToTest.testReturnException":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":249,"org.easymock.tests.MockingTest.testPartialClassMocking":68,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":276,"org.easymock.tests.MockClassControlTest.testToString":266,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":261,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":237,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":225,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":108,"org.easymock.tests.UsageExpectAndThrowTest.object":235,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.DelegateToTest.testWrongClass":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests2.UsageTest.wrongArguments":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":54,"org.easymock.tests.UsageStrictMockTest.range":66,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":272,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":129,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":85,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":139,"org.easymock.tests2.CaptureTest.testPrimitive":94,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":244,"org.easymock.tests.UsageTest.moreThanOneArgument":60,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":188,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":84,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":260,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.UsageUnorderedTest.message":183,"org.easymock.tests.UsageVerifyTest.twoReturns":58,"org.easymock.tests2.ThreadingTest.testThreadSafe":102,"org.easymock.tests.UsageTest.argumentsOrdered":189,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":247,"org.easymock.tests2.UsageConstraintsTest.any":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":250,"org.easymock.tests.UsageExpectAndThrowTest.longType":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":220,"org.easymock.tests2.SerializationTest.testClass":114,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.LimitationsTest.mockNativeMethod":81,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":12,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":41,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":207,"org.easymock.tests2.CaptureTest.testAnd":92,"org.easymock.tests2.UsageTest.strictResetToDefault":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":5,"org.easymock.tests2.MockedExceptionTest.testMockedException":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":229,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":70,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":140,"org.easymock.tests.MockingTest.testNicePartialClassMocking":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":240,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":87,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":252,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":135,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":165,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests2.CaptureTest.testCapture1_2446744":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":233,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":180,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":195,"org.easymock.tests.UsageThrowableTest.throwError":47,"org.easymock.tests.UsageStrictMockTest.differentMethods":67,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":104,"org.easymock.tests2.MockBuilderTest.testCreateMockString":11,"org.easymock.tests.UsageExpectAndThrowTest.floatType":227,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":172,"org.easymock.tests.UsageVerifyTest.twoThrows":185,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":109,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":226,"org.easymock.tests2.UsageTest.niceToStrict":144,"org.easymock.tests2.ThreadingTest.testChangeDefault":196,"org.easymock.tests2.UsageConstraintsTest.testNotNull":179,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":53,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":138,"org.easymock.tests2.MockBuilderTest.testCreateMock":8,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":37,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":4,"org.easymock.tests.UsageTest.openCallCountByLastCall":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":234,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":246,"org.easymock.tests.UsageOverloadedMethodTest.overloading":72,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":254,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":170,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":221,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":169,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.UsageThrowableTest.throwCheckedException":50,"org.easymock.tests.MockClassControlTest.testEquals":269,"org.easymock.tests2.EasyMockSupportClassTest.testAll":107,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":242,"org.easymock.tests2.CaptureTest.testCaptureAll":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.testMatches":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":214,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":202,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":106,"org.easymock.tests.UsageVarargTest.allKinds":278,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":57,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":201,"org.easymock.samples.BasicClassMockTest.testPrintContent":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":136,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":52,"org.easymock.tests2.AnswerTest.stubAnswer":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests2.UsageConstraintsTest.greaterThan":173,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":43,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":91,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":103,"org.easymock.tests.UsageExpectAndReturnTest.floatType":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":40,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":182,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":174,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":265,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":158,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":279,"org.easymock.tests2.SerializationTest.test":115,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":197,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":222,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":23,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":224,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":190,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":29,"org.easymock.tests.GenericTest.testPackageScope":20,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":143,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":141,"org.easymock.tests.GenericTest.testBridgedEquals":264,"org.easymock.tests.UsageExpectAndReturnTest.longType":25,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":34,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":281,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":9,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":45,"org.easymock.tests2.MockedExceptionTest.testRealException":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":230,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":130,"org.easymock.tests2.UsageConstraintsTest.testContains":168,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":111,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":86,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":284,"org.easymock.tests.UsageExpectAndReturnTest.object":32,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":215,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":137,"org.easymock.tests2.UsageStrictMockTest.range":151,"org.easymock.tests2.UsageConstraintsTest.lessThan":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":200,"org.easymock.tests.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests2.UsageConstraintsTest.testOr":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":198,"org.easymock.tests.UsageRangeTest.combination":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":38,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":209,"org.easymock.tests.UsageTest.wrongArguments":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":35,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":208,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":282,"org.easymock.tests2.UsageConstraintsTest.cmpTo":167,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests.UsageTest.unexpectedCallWithArray":186,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":49,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":191,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":36,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":268,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":110,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":280,"org.easymock.tests2.UsageTest.resumeIfFailure":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":28,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":77,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122}}]
