[{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[13],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,6,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,7,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,8,265,266,267,268,269,270,0,1,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,3,303,304,305,306,307,308,309,310,311,312,313,314,315,316,5,317,318,319,320,321,322,323,324,325,326,327,328,329,330,13,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,9,388,10,11,12,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[21,490,491,229,492,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[494,389,390,391],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"expected"}},{"position":"org.easymock.internal.RecordState:85","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,93,94,96,100,101,102,103,104,6,106,108,109,110,111,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,163,164,165,166,167,168,171,173,174,175,176,177,178,179,180,181,182,183,184,186,217,218,219,220,222,223,224,227,228,229,230,231,232,233,234,235,236,237,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,8,265,266,267,268,269,270,0,0,1,1,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,294,295,296,298,301,302,303,306,307,308,309,310,311,312,313,314,316,318,319,320,321,324,325,326,327,329,330,13,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,380,9,388,10,12,389,390,391,392,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,423,426,436,442,450,457,458,459,460,461,462,463,464,465,467,468,469,470,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[347,349,366,368],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[22,25,26,88,100,111,117,120,123,145,146,148,149,150,151,152,227,229,230,232,233,278,279,280,284,285,302,324,325,326,327,329,13,331,332,333,335,337,338,339,340,341,342,343,344,345,346,348,350,351,356,374,396,397,398,399,400,401,403,404,405,406,457,459,461,462,465,476,477,478,479,480,481,482,483,485,486,487,488,489],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,495,495,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,88,89,93,94,96,100,102,103,104,6,106,109,110,111,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,163,164,165,166,167,168,171,217,218,219,220,227,228,229,230,231,232,233,234,236,237,256,257,258,259,260,261,262,263,264,8,265,266,267,268,270,0,1,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,294,295,296,298,301,302,303,306,307,308,309,310,311,312,313,314,316,318,319,320,321,324,325,326,327,329,330,13,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,380,9,388,10,12,389,390,391,392,395,396,397,398,399,400,401,402,403,404,405,406,407,423,426,436,442,450,457,458,459,460,461,462,463,464,465,467,468,469,470,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[158,162],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[326,327,330,331,332,334,344,349,476,478,486],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[31,36,158,161,262,0,0,1,1,288,290,291,293,294,296,298,299,300,302,303,314,5,319,320,323,362,389,392,393,426,436,442],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[186,187,191],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,22,25,26,496,109,116,123,124,229,232,278,284,285,461],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[497],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,34,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,6,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,193,194,195,7,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,8,265,266,267,268,269,270,0,0,1,1,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,290,293,294,295,296,300,301,306,307,308,309,310,311,312,313,314,316,5,317,318,319,320,321,322,324,325,326,327,328,329,330,13,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,9,388,10,11,12,389,390,391,392,393,395,396,397,399,400,402,404,405,406,407,408,413,417,418,419,420,423,425,426,428,429,432,433,434,435,436,438,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,469,470,472,473,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[326,327,330,331,332,334,344,349,476,478,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[14,15,16,17,18,19,20,22,23,24,25,26,27,29,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,86,88,89,93,94,96,100,101,102,103,104,6,106,108,110,111,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,159,160,161,163,164,165,166,167,168,171,209,215,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,256,257,258,259,260,261,262,263,264,8,265,266,267,268,270,0,0,1,1,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,290,294,296,298,302,306,307,308,309,310,311,312,313,316,319,320,321,324,325,326,327,329,330,13,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,362,363,364,365,366,368,369,370,371,372,373,374,380,387,9,388,10,11,12,389,390,391,392,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,423,426,436,442,450,457,458,459,460,461,462,463,464,465,467,468,469,470,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[232,233,461,462],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[19,24,120,123,147,275,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[332],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[40,41,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[19,20,22,23,24,25,26,27,76,112,116,118,121,122,123,124,147,167,229,230,231,232,233,275,277,278,281,282,284,285,287,330,335,341,349,352,356,374,388,409,410,411,412,459,460,461,462,465,477,478,480,481,482,483,484,489],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[21,22,25,26,496,109,116,123,124,229,232,278,284,285,461],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[256],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":327,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.UsageTest.argumentsOrdered":285,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":203,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":280,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":263,"org.easymock.tests2.DelegateToTest.testReturnException":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":164,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.tests.MockClassControlTest.testToString":250,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":408,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":426,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":45,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":307,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":117,"org.easymock.tests2.UsageTest.wrongArguments":278,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":219,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":36,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":98,"org.easymock.tests2.UsageConstraintsTest.testNull":330,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":311,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":404,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":255,"org.easymock.tests2.CaptureTest.testPrimitive":479,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":121,"org.easymock.tests.UsageTest.moreThanOneArgument":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":64,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":16,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":242,"org.easymock.tests.UsageVarargTest.varargIntAccepted":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":256,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":260,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":450,"org.easymock.tests.ReplayStateInvalidUsageTest.times":181,"org.easymock.tests2.DependencyTest.testClassMocking":304,"org.easymock.tests2.AnswerTest.answer":352,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":361,"org.easymock.tests2.CaptureTest.testAnd":476,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":33,"org.easymock.tests2.UsageTest.strictResetToDefault":276,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":102,"org.easymock.tests2.DelegateToTest.testDelegate":12,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":60,"org.easymock.tests.LimitationsTest.mockFinalMethod":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":157,"org.easymock.tests2.DependencyTest.testClassMockingSupport":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":113,"org.easymock.tests2.CaptureTest.testCapture1_2446744":480,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":359,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":175,"org.easymock.tests.UsageThrowableTest.throwError":145,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":35,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":18,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":444,"org.easymock.samples.PartialClassMockTest.testGetArea":262,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":176,"org.easymock.tests.MockingTest.testInterfaceMocking":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":46,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":226,"org.easymock.tests2.UsageTest.niceToStrict":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":194,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":294,"org.easymock.tests2.MockBuilderTest.testCreateMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":54,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":400,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":32,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":106,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":110,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":338,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":485,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":68,"org.easymock.tests2.EasyMockSupportClassTest.testAll":423,"org.easymock.tests.MockClassControlTest.testEquals":254,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":62,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":498,"org.easymock.tests2.CaptureTest.testCaptureAll":477,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":360,"org.easymock.tests.MockNameTest.defaultName":87,"org.easymock.tests2.UsageConstraintsTest.testMatches":340,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":17,"org.easymock.samples.ExampleTest.voteForRemovals":268,"org.easymock.tests.UsageVarargTest.allKinds":76,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":151,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":168,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":192,"org.easymock.tests2.UsageConstraintsTest.greaterThan":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":321,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":193,"org.easymock.samples.ExampleTest.voteForRemoval":265,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":322,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":37,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":314,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":77,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":275,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":397,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":163,"org.easymock.tests2.CaptureTest.testCaptureFirst":489,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":398,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":132,"org.easymock.tests2.CaptureTest.testCapture2_2446744":488,"org.easymock.tests2.UsageTest.moreThanOneArgument":277,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":211,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":302,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":75,"org.easymock.tests.GenericTest.testBridgedEquals":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":85,"org.easymock.tests.UsageExpectAndReturnTest.longType":128,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":63,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":241,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":14,"org.easymock.tests.UsageCallCountTest.tooManyCalls":86,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":468,"org.easymock.tests.MockingTest.testNiceClassMocking":99,"org.easymock.tests.MockingTest.testClassMocking":91,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":79,"org.easymock.tests2.UsageConstraintsTest.testContains":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":364,"org.easymock.tests2.UsageConstraintsTest.testFind":329,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":112,"org.easymock.tests.MockTypeTest.fromEasyMockClass":34,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":227,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":368,"org.easymock.tests.UsageExpectAndReturnTest.object":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":316,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":403,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":70,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":224,"org.easymock.tests.UsageTest.exactCallCountByLastCall":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":28,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":393,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":141,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":65,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":6,"org.easymock.tests.MockClassControlTest.testHashCode":253,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":376,"org.easymock.tests2.EasyMockSupportTest.testVerify":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":433,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":358,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":466,"org.easymock.tests.UsageVarargTest.varargCharAccepted":69,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":185,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":216,"org.easymock.tests2.UsageTest.openCallCountByLastCall":281,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":406,"org.easymock.tests.DefaultClassInstantiatorTest.object":186,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":42,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":222,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":434,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":375,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":252,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":51,"org.easymock.tests.CapturesMatcherTest.test":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":442,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":251,"org.easymock.tests2.UsageTest.resumeIfFailure":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":166,"org.easymock.tests2.StubTest.stubWithReturnValue":465,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":297,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":348,"org.easymock.tests2.SerializationTest.testAllMockedMethod":391,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":209,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":274,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":57,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":215,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":353,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":30,"org.easymock.tests.UsageExpectAndThrowTest.object":55,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":345,"org.easymock.tests2.DelegateToTest.testWrongClass":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":232,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":418,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":56,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":420,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":183,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":218,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests2.CaptureTest.testCaptureNone":484,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":240,"org.easymock.tests.UsageUnorderedTest.message":116,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":497,"org.easymock.tests.UsageVerifyTest.twoReturns":124,"org.easymock.tests.UsageVarargTest.varargByteAccepted":74,"org.easymock.tests2.ThreadingTest.testThreadSafe":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":437,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":83,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":225,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":271,"org.easymock.tests2.CaptureTest.testCapture_2617107":478,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":213,"org.easymock.tests2.UsageConstraintsTest.any":335,"org.easymock.tests2.StubTest.stub":464,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":214,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":190,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":179,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":460,"org.easymock.tests2.SerializationTest.testClass":389,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":380,"org.easymock.tests.LimitationsTest.mockNativeMethod":171,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":144,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":463,"org.easymock.tests2.NameTest.nameForMocksControl":412,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.MockedExceptionTest.testMockedException":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":425,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":49,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":367,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":308,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":298,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":313,"org.easymock.tests2.CaptureTest.testCaptureLast":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":474,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":332,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":346,"org.easymock.tests.MockingTest.testTwoMocks":92,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":53,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":350,"org.easymock.samples.ExampleTest.removeNonExistingDocument":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":177,"org.easymock.tests.UsageStrictMockTest.differentMethods":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":377,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":188,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":371,"org.easymock.tests2.MockBuilderTest.testCreateMockString":303,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":427,"org.easymock.tests.UsageExpectAndThrowTest.floatType":47,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":394,"org.easymock.tests.UsageVerifyTest.twoThrows":123,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":436,"org.easymock.samples.ExampleTest.voteAgainstRemoval":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":238,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":320,"org.easymock.tests.LimitationsTest.privateConstructor":170,"org.easymock.tests2.UsageConstraintsTest.testNotNull":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":362,"org.easymock.tests2.UsageTest.defaultResetToNice":283,"org.easymock.samples.ExampleTest.voteAgainstRemovals":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.UsageVarargTest.differentLength":71,"org.easymock.tests2.CallbackTest.callback":374,"org.easymock.tests2.UsageConstraintsTest.equals":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":119,"org.easymock.tests.UsageCallCountTest.tooFewCalls":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":470,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":220,"org.easymock.tests.UsageThrowableTest.throwCheckedException":149,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":90,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":473,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":89,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":469,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":472,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":357,"org.easymock.tests.ObjectMethodsTest.testHashCode":223,"org.easymock.tests2.NameTest.nameForNiceMock":411,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":373,"org.easymock.tests2.DependencyTest.testInterfaceMocking":306,"org.easymock.samples.ExampleTest.addDocument":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.DelegateToTest.testStubDelegate":388,"org.easymock.tests2.AnswerTest.stubAnswer":356,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":230,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":73,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":143,"org.easymock.tests.UsageExpectAndReturnTest.floatType":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":392,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests.UsageThrowableTest.noUpperLimit":146,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":343,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":325,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":413,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":481,"org.easymock.tests2.SerializationTest.test":390,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":126,"org.easymock.tests2.UsageConstraintsTest.testSame":13,"org.easymock.samples.SupportTest.addDocument":273,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":471,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":428,"org.easymock.tests.GenericTest.testPackageScope":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":97,"org.easymock.tests2.NameTest.nameForMock":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":137,"org.easymock.tests2.UsageStrictMockTest.differentMethods":462,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":129,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":59,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":103,"org.easymock.tests2.MockedExceptionTest.testRealException":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":206,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":118,"org.easymock.tests2.NameTest.nameForStrictMock":410,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":293,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":366,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":312,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":417,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":189,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":290,"org.easymock.tests2.UsageStrictMockTest.range":461,"org.easymock.tests2.UsageConstraintsTest.lessThan":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":379,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":201,"org.easymock.tests2.CaptureTest.testCaptureRightOne":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":432,"org.easymock.tests2.UsageConstraintsTest.testOr":331,"org.easymock.tests.UsageRangeTest.combination":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":309,"org.easymock.tests.UsageTest.wrongArguments":22,"org.easymock.tests2.MockBuilderTest.testWithConstructor":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":429,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":195,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":191,"org.easymock.tests.UsageVarargTest.varargShortAccepted":72,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":84,"org.easymock.tests2.UsageConstraintsTest.cmpTo":336,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":196,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":282,"org.easymock.tests2.CaptureTest.testCaptureFromStub":487,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":174,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":291,"org.easymock.tests.UsageTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":229,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":82,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":2,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":139,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":231,"org.easymock.tests2.UsageConstraintsTest.constraints":326,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests.UsageStrictMockTest.testVerify":235,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":261,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":154,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":258,"org.easymock.tests.LimitationsTest.abstractClass":169,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":131,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":401,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":66}}]
