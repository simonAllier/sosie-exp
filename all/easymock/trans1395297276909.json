[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:114","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[1,2,3,4,236,5,237,238,239,240,6,241,7,242,8,9,243,244,10,11,12,245,13,14,15,246,247,248,16,17,249,250,251,252,253,18,254,255,256,257,258,259,260,261,262,263,264,265,266,267,19,20,268,21,22,23,24,25,269,270,26,271,27,28,272,29,30,31,273,32,274,33,34,35,275,276,36,37,38,39,277,40,41,278,279,42,43,44,45,46,47,48,49,50,51,52,280,53,54,55,56,57,58,281,59,60,61,62,63,64,65,66,67,68,69,70,282,71,72,73,74,283,284,285,75,286,287,76,288,289,290,291,292,293,294,295,296,77,297,298,299,300,301,78,302,303,304,79,305,306,307,308,309,80,81,82,310,83,311,312,313,314,315,316,317,318,319,320,321,84,322,323,324,325,326,327,85,86,87,88,328,329,330,331,332,89,90,91,92,333,93,94,95,334,96,335,336,97,98,99,100,337,338,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,339,119,120,121,122,123,124,125,340,126,341,342,127,343,128,344,345,346,129,347,130,131,348,349,350,351,352,353,132,133,134,135,136,137,138,139,140,141,354,142,143,144,145,146,147,355,356,357,358,359,360,361,362,363,148,149,150,151,152,364,153,154,155,156,157,158,365,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,0,179,400,401,235,402,403,404,180,405,181,182,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,183,184,429,430,185,186,431,432,187,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,188,189,190,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,191,473,192,193,474,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,475,476,219,477,220,221,222,223,224,225,226,227,228,229,478,479,480,230,231,481,232,482,483,484,233,234,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[488,66],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[8,9,305,489,315,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[490,58,63,74],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[52,57,68],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[1,2,3,4,236,5,237,238,239,240,6,241,7,242,8,8,9,9,243,244,10,11,12,245,13,14,15,246,247,248,16,17,249,250,251,252,253,18,254,255,256,257,258,259,260,264,265,266,267,19,20,268,21,22,23,24,25,269,270,26,271,27,28,272,29,30,31,273,32,274,33,34,35,275,276,36,37,38,39,277,40,41,278,279,42,43,44,45,46,47,48,49,50,51,52,280,53,54,55,56,57,58,281,59,60,61,62,63,64,65,66,67,68,69,70,282,71,72,73,74,283,284,285,75,286,287,76,288,289,290,291,292,293,294,295,296,77,297,298,299,300,301,78,302,303,304,79,306,307,309,80,81,82,83,312,313,314,316,317,318,319,320,321,84,322,323,324,325,326,327,85,86,87,88,328,329,330,331,332,89,90,91,92,93,94,95,96,335,336,97,98,99,100,337,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,339,119,120,121,122,123,124,125,340,126,341,342,127,343,128,344,345,346,129,347,130,131,348,349,350,351,352,353,132,133,134,135,136,137,138,139,140,141,354,142,143,144,145,146,147,355,356,357,358,359,360,361,362,363,148,149,150,151,152,364,153,154,155,156,157,158,365,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,399,0,179,400,401,235,402,403,404,180,405,181,182,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,424,425,426,427,428,183,184,429,430,185,186,431,432,187,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,188,189,190,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,191,473,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,475,476,219,477,220,221,222,223,224,225,226,227,228,229,478,479,480,230,231,481,232,482,483,484,233,234,485,486,487],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[239,240,6,8,8,9,9,14,246,491,75,76,77,78,79,306,307,80,81,82,83,313,314,316,87,89,90,91,92,94,95,100,119,120,122,123,124,125,126,127,343,128,344,364,179,400,401,219,480,230,231,232],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[14,15,246,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[27,273,275,276,350,493,404,181,429,430,431,432,442,221,222],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[27,28,127,181,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.RecordState:317","failures":[352,353,356,357],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[27,273,275,276,350,493,404,181,429,430,431,432,442,221,222],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[20,21,26,38,39,277,40,41,278,279,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,281,59,60,61,62,63,64,65,66,67,68,69,70,282,71,72,73,74,304,105,126,132,133,134,135,136,157,377,404,180,442,214,215,216,217,218,228,229,233,234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[2,20,268,21,96,97,98],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[490,58,63,74],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[494,495,496,497,498,310,337],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[6,14,79,499,306,307,80,81,82,83,313,314,500,316,125,401,421,426],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[501,502,503,504,404,429],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:85","sourceCode":"return java.util.List<T>.get(0)","type":"CtReturnImpl"},"failures":[38,277,40,41,278,279,42,44,505,45,46,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,10,12,245,13,130,451],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[8,9,506,507,508,509,510,511,512,513,305,308,310,315,91,95,334,100,337,514],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[8,9,14,305,308,310,312,489,315,515,516,517,100,337,341],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[254,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[501,502,503,504,404,429],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[89,92,119,122,123,124,126,390,235],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[19,29,34,85,86,87,88,131,134,135,141,142,143,144,145,146,147,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,183,186,190,221,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[103,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[1,2,3,4,236,5,237,238,239,240,6,241,7,242,8,8,9,9,243,244,10,11,12,245,13,14,15,246,16,17,249,250,251,252,253,18,254,255,256,257,258,259,260,264,265,266,267,19,20,268,21,22,23,24,25,269,270,26,271,27,28,272,29,30,31,273,32,274,33,34,35,275,276,36,37,38,39,277,40,41,278,279,42,43,44,45,46,47,48,49,50,51,52,280,53,54,55,56,57,58,281,59,60,61,62,63,64,65,66,67,68,69,70,282,71,72,73,74,283,75,287,76,289,290,293,294,295,296,77,298,301,78,302,303,304,306,309,80,81,82,312,313,317,318,319,320,321,84,322,323,324,325,326,327,85,86,87,88,328,91,92,93,94,96,335,336,97,98,99,100,337,101,102,103,104,105,106,107,108,109,111,112,114,116,117,118,339,119,120,121,122,123,124,125,126,341,342,127,343,128,344,345,129,347,130,131,348,349,350,351,352,353,132,133,134,135,136,137,138,139,140,141,354,142,143,144,145,146,147,355,356,357,358,359,360,361,362,363,148,149,150,151,152,364,153,154,155,156,157,158,365,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,399,0,179,400,401,235,402,403,404,180,405,181,182,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,424,426,428,183,184,429,430,185,186,431,432,187,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,188,189,190,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,191,473,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,475,476,219,477,220,221,222,223,224,225,226,227,228,229,478,479,480,230,231,481,232,482,483,484,233,234,485,486,487],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[2,20,21,96,336,97,99,101,129,462],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests2.UsageTest.argumentsOrdered":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":459,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":243,"org.easymock.tests2.DelegateToTest.testReturnException":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":154,"org.easymock.tests.MockingTest.testPartialClassMocking":230,"org.easymock.tests.MockClassControlTest.testToString":385,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":328,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":159,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":132,"org.easymock.tests2.UsageTest.wrongArguments":273,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":139,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":426,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":483,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":122,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":136,"org.easymock.tests.UsageTest.moreThanOneArgument":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":178,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":150,"org.easymock.tests.UsageTest.argumentsOrdered":432,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":378,"org.easymock.tests.UsageVarargTest.varargIntAccepted":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":326,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":218,"org.easymock.tests.ReplayStateInvalidUsageTest.times":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":18,"org.easymock.tests2.DependencyTest.testClassMocking":247,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":25,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":423,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":192,"org.easymock.tests2.DelegateToTest.testDelegate":13,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":382,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":174,"org.easymock.tests.LimitationsTest.mockFinalMethod":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":227,"org.easymock.tests2.DependencyTest.testClassMockingSupport":248,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":358,"org.easymock.tests2.CaptureTest.testCapture1_2446744":41,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":23,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":410,"org.easymock.tests.UsageThrowableTest.throwError":141,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":425,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":474,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":152,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":515,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":303,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.MockingTest.testInterfaceMocking":481,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":362,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":160,"org.easymock.tests2.UsageTest.niceToStrict":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":80,"org.easymock.tests2.MockBuilderTest.testCreateMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":256,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":168,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":422,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":357,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":433,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":510,"org.easymock.tests.UsageOverloadedMethodTest.overloading":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":301,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":369,"org.easymock.tests.MockClassControlTest.testEquals":389,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":400,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":176,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":491,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":225,"org.easymock.tests.MockNameTest.defaultName":365,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":151,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":377,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":226,"org.easymock.samples.BasicClassMockTest.testPrintContent":240,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":146,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":158,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":323,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":398,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":473,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":344,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":399,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":103,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":345,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":364,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":153,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":37,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":201,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":105,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.UsageTest.moreThanOneArgument":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":467,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":314,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":376,"org.easymock.tests.GenericTest.testBridgedEquals":235,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":511,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":508,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":440,"org.easymock.tests.UsageExpectAndReturnTest.longType":197,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":223,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":177,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":420,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.UsageCallCountTest.tooManyCalls":441,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":145,"org.easymock.tests.MockingTest.testNiceClassMocking":484,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":90,"org.easymock.tests.MockingTest.testClassMocking":479,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":434,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":87,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":190,"org.easymock.tests.MockTypeTest.fromEasyMockClass":424,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":21,"org.easymock.tests.UsageExpectAndReturnTest.object":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":371,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":446,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":512,"org.easymock.tests.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":485,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":337,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":366,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":130,"org.easymock.tests.MockClassControlTest.testHashCode":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":318,"org.easymock.tests2.EasyMockSupportTest.testVerify":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":294,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":380,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":129,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":22,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":304,"org.easymock.tests.UsageVarargTest.varargCharAccepted":370,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":391,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":392,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":355,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":444,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":252,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":317,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":165,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":351,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":78,"org.easymock.tests2.UsageTest.resumeIfFailure":36,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":156,"org.easymock.tests2.StubTest.stubWithReturnValue":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":310,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":246,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":465,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":517,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":171,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":471,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":335,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":487,"org.easymock.tests.UsageExpectAndThrowTest.object":169,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DelegateToTest.testWrongClass":12,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":233,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":234,"org.easymock.tests.UsageStrictMockTest.range":181,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":265,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":89,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":170,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":82,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":431,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":138,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":363,"org.easymock.tests.UsageUnorderedTest.message":442,"org.easymock.tests.UsageVerifyTest.twoReturns":222,"org.easymock.tests.UsageVarargTest.varargByteAccepted":375,"org.easymock.tests2.ThreadingTest.testThreadSafe":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":297,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":438,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":447,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":239,"org.easymock.tests2.CaptureTest.testCapture_2617107":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":135,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":415,"org.easymock.tests2.StubTest.stub":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndThrowTest.longType":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":155,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":396,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":414,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":271,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests.LimitationsTest.mockNativeMethod":219,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":251,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests2.NameTest.nameForMocksControl":332,"org.easymock.tests2.MockedExceptionTest.testMockedException":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":287,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":163,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":232,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":268,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":83,"org.easymock.tests.MockingTest.testNicePartialClassMocking":231,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":124,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":249,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":359,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":480,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":167,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.samples.ExampleTest.removeNonExistingDocument":237,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":319,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":394,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":104,"org.easymock.tests2.MockBuilderTest.testCreateMockString":316,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests.UsageExpectAndThrowTest.floatType":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":288,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":285,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":97,"org.easymock.tests.UsageVerifyTest.twoThrows":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":338,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":77,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":361,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests.LimitationsTest.privateConstructor":476,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":507,"org.easymock.tests2.UsageConstraintsTest.testNotNull":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":147,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":85,"org.easymock.tests2.UsageTest.defaultResetToNice":35,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":250,"org.easymock.tests.UsageVarargTest.differentLength":372,"org.easymock.tests2.CallbackTest.callback":101,"org.easymock.tests2.UsageConstraintsTest.equals":280,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":341,"org.easymock.tests.UsageTest.openCallCountByLastCall":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":134,"org.easymock.tests.UsageCallCountTest.tooFewCalls":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":140,"org.easymock.tests.UsageThrowableTest.throwCheckedException":144,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":478,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":229,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":254,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":93,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":99,"org.easymock.tests2.CompareToTest.testGreateOrEqual":490,"org.easymock.tests.ObjectMethodsTest.testHashCode":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":106,"org.easymock.tests2.NameTest.nameForNiceMock":331,"org.easymock.tests2.DependencyTest.testInterfaceMocking":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":298,"org.easymock.tests2.DelegateToTest.testStubDelegate":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.AnswerTest.stubAnswer":98,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":180,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":311,"org.easymock.tests.UsageVarargTest.varargLongAccepted":374,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.floatType":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":100,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":325,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageThrowableTest.noUpperLimit":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":260,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":393,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":195,"org.easymock.samples.SupportTest.addDocument":241,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":333,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":289,"org.easymock.tests.GenericTest.testPackageScope":179,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":324,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":482,"org.easymock.tests2.NameTest.nameForMock":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":206,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":315,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":173,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":443,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":193,"org.easymock.tests2.MockedExceptionTest.testRealException":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":462,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":133,"org.easymock.tests2.NameTest.nameForStrictMock":330,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":514,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":123,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":264,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":395,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":306,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":293,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":120,"org.easymock.tests.UsageTest.wrongArguments":430,"org.easymock.tests2.MockBuilderTest.testWithConstructor":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":290,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":207,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":397,"org.easymock.tests.UsageVarargTest.varargShortAccepted":373,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":439,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":409,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":307,"org.easymock.tests.UsageTest.unexpectedCallWithArray":429,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":437,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":489,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":208,"org.easymock.tests2.CaptureTest.testCapture":505,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":405,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.samples.ExampleTest.addAndChangeDocument":238,"org.easymock.tests.UsageStrictMockTest.testVerify":407,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":242,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":403,"org.easymock.tests2.CompareToTest.testGreateThan":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":224,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":216,"org.easymock.tests.LimitationsTest.abstractClass":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":217,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":367}}]
