[{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[2,3,4],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[5,6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[24,25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,6,8,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,13,79,80,81,82,83,84,85,19,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,24,111,112,113,114,115,116,26,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,23,169,170,171,172,173,174,175,27,28,176,177,178,29,30,179,180,181,182,1,183,184,185,186,187,32,188,189,190,191,192,193,194],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33,34,196,35,36,197,37,198,199,200,38,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,39,40,41,225,42,226,5,6,7,8,9,227,10,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,228,229,230,231,232,233,234,235,236,2,3,237,238,239,4,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,68,262,69,70,71,72,73,74,75,76,263,264,77,78,12,13,265,266,267,268,269,270,79,80,14,15,81,82,16,17,83,271,272,273,274,275,276,277,278,279,280,281,84,282,283,284,18,85,285,19,86,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,90,91,92,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,93,94,95,96,97,351,352,353,354,355,356,357,358,359,360,361,362,363,364,0,98,99,365,366,100,367,368,369,370,101,102,103,104,105,106,371,372,107,373,374,108,109,110,375,376,24,111,25,112,113,377,378,114,115,116,26,379,117,118,119,120,121,122,123,380,381,124,382,125,383,384,385,386,126,387,388,389,390,391,127,392,393,394,128,395,129,396,397,398,130,399,132,400,133,134,135,136,137,138,139,140,141,142,143,144,401,402,403,404,405,406,145,407,408,409,410,411,412,146,147,149,150,413,414,415,416,417,418,419,420,153,421,422,423,424,154,425,426,155,427,156,157,428,158,429,430,431,432,433,159,160,161,20,162,434,163,164,165,21,22,166,167,435,436,168,437,23,169,438,439,440,441,442,443,444,170,171,445,172,446,447,448,449,450,173,451,452,453,454,455,456,174,175,27,28,457,176,177,178,29,30,179,31,180,181,182,1,183,184,185,186,187,32,188,189,458,190,191,192,193,459,460,461,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[78,12,13,80,84,85,86,286,370,161,168,169,438],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:189","failures":[10,242,243,244,245,246,247,248,249,250,12,13,79,14,15,16,17,83,283,18,285,19,86,371,374,135,137,138,140,141,145,424,427,156,157,158,429,159,20,162,434,165,21,22,167,435,437,23,169,439,440,441,442,173,27],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[463],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[196,277,392,129,399],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[108,376,125,154,158],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[10,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,228,229,230,231,232,233,234,235,2,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,68,262,69,70,71,72,73,74,75,76,263,264,77,78,12,13,79,80,14,15,81,82,16,17,83,271,272,273,274,275,276,277,278,279,280,281,84,282,283,284,18,85,285,19,86,286,287,290,87,88,89,311,317,319,320,321,322,323,324,325,326,327,90,91,92,328,329,330,331,332,334,335,336,339,340,341,342,343,344,345,346,347,348,349,350,93,94,95,96,97,351,352,353,354,355,356,358,359,360,361,362,363,364,0,98,99,100,368,369,101,102,103,104,105,106,371,107,374,108,109,110,24,111,25,112,113,377,378,114,115,116,26,379,117,118,119,120,121,122,124,125,126,127,392,393,394,128,395,129,396,397,398,130,399,131,132,400,133,134,135,136,137,138,139,140,141,142,143,144,401,145,146,147,148,149,150,151,152,415,416,417,418,419,420,153,421,422,423,424,154,155,427,156,157,428,158,429,159,160,161,20,162,434,163,164,165,21,22,166,167,435,436,168,437,23,169,438,439,440,441,442,445,172,173,174,175,27,28,176,177,178,29,30,179,31,180,181,182,1,183,184,185,186,187,32,188,189,458,190,191,192,193,460,462,194],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[5],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[464,464,465,465,130],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[466,131,132,400],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[464,465,380,381,467,124,468,382,125,383,384,469,470,385,471,472,386,473,126,387,388,389,390,391,127,474,475,131,148,152,413,476,477,478,479,480,481,482,483,194,484],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[305,419,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[298,351,352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[209,213,214,216,219,78,12,13,80,84,85,86,286,370,161,168,169,438],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[87,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[195,186],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[10,485,486,487,488,489,490,11,78,12,13,80,14,15,16,17,278,281,84,282,18,85,19,86,368,369,491,492,493,494,495,496,497,498,499,500,501,161,20,21,22,168,23,169,185],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[153],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[10,78,12,13,80,15,16,17,18,85,19,86,415,416,417,418,161,20,21,22,168,23,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[33,34,196,35,36,197,37,198,199,200,38,201,464,464,465,465,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,6,7,10,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,228,235,2,242,243,244,245,246,247,248,249,250,254,255,256,257,258,259,260,261,68,262,69,70,71,72,73,74,75,76,263,264,77,78,12,13,79,80,14,15,81,82,16,17,83,271,272,273,274,275,276,277,278,279,280,84,282,283,284,18,85,285,19,86,286,287,87,88,89,319,320,321,322,323,324,325,326,327,90,91,92,328,329,330,331,332,334,335,336,339,340,341,342,343,344,345,346,347,348,349,350,93,94,95,96,97,354,355,356,358,359,360,361,362,363,364,0,98,99,100,369,101,102,103,104,105,106,371,107,374,108,109,110,24,111,25,112,113,377,378,114,115,116,26,379,117,118,119,120,121,122,123,124,125,126,127,392,393,394,128,395,129,398,130,399,131,132,400,133,134,135,136,137,138,139,140,141,142,143,144,401,145,146,147,148,149,150,151,152,415,416,417,418,420,153,421,423,424,154,155,427,156,157,428,158,429,159,160,161,20,162,434,163,164,165,21,22,166,167,435,436,168,437,23,169,438,439,440,441,442,170,171,445,172,173,174,175,27,28,176,177,178,29,30,179,180,181,182,1,183,184,185,186,187,32,188,189,458,190,191,192,193,459,460,462,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[33,34,196,35,36,197,37,198,199,200,38,201,464,465,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,39,40,41,225,42,226,5,6,7,8,9,227,10,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,228,229,230,231,232,233,234,235,2,3,237,238,239,4,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,68,262,69,70,71,72,73,74,75,76,263,264,77,78,12,13,265,502,503,266,267,268,269,270,79,80,14,15,81,82,16,17,83,271,272,273,274,275,276,277,278,279,280,281,84,282,283,284,18,85,285,19,86,286,287,288,289,290,87,88,291,89,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,90,91,92,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,93,94,95,96,97,351,352,353,354,355,356,357,358,359,360,361,362,363,364,0,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,98,99,365,366,100,367,368,369,370,526,527,528,529,530,531,101,102,103,104,105,106,371,372,107,532,373,374,108,109,110,375,376,24,111,25,112,113,377,378,114,115,116,26,379,117,118,119,533,120,121,122,123,380,381,467,124,468,382,125,383,384,469,470,385,471,472,386,473,126,387,388,389,390,391,127,474,475,392,393,394,128,395,129,396,397,398,130,399,131,132,400,133,134,135,136,137,138,139,140,141,142,143,144,401,402,403,404,405,406,145,407,408,409,410,411,412,146,147,148,149,534,150,151,152,413,414,415,416,417,418,419,420,153,421,422,423,424,154,425,426,155,427,156,157,535,481,428,158,429,430,536,537,431,432,433,159,160,161,20,162,434,163,164,165,21,22,166,167,435,436,168,437,23,169,438,439,440,441,442,443,444,170,171,445,172,446,447,448,449,450,173,451,452,453,454,455,456,174,175,27,28,457,176,177,178,29,30,179,31,180,181,182,1,183,184,185,186,187,32,188,189,458,190,191,192,193,459,460,461,462,194,484],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[188],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":28,"org.easymock.tests2.UsageTest.argumentsOrdered":22,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":305,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":434,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":204,"org.easymock.tests2.DelegateToTest.testReturnException":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":272,"org.easymock.tests.MockingTest.testPartialClassMocking":87,"org.easymock.tests.MockClassControlTest.testToString":256,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":414,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":205,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":171,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":525,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":179,"org.easymock.tests2.UsageTest.wrongArguments":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":75,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":268,"org.easymock.tests2.UsageConstraintsTest.testNull":177,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":261,"org.easymock.tests2.CaptureTest.testPrimitive":112,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":77,"org.easymock.tests.UsageTest.moreThanOneArgument":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":224,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":330,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":230,"org.easymock.tests.UsageVarargTest.varargIntAccepted":356,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":93,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":537,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":97,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":509,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":495,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":145,"org.easymock.tests.ReplayStateInvalidUsageTest.times":347,"org.easymock.tests2.DependencyTest.testClassMocking":443,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":442,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":503,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":65,"org.easymock.tests2.DelegateToTest.testDelegate":423,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":234,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":508,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":220,"org.easymock.tests.LimitationsTest.mockFinalMethod":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":250,"org.easymock.tests2.DependencyTest.testClassMockingSupport":444,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":368,"org.easymock.tests2.CaptureTest.testCapture1_2446744":113,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":440,"org.easymock.tests.UsageThrowableTest.throwError":68,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":341,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":267,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":332,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":512,"org.easymock.samples.PartialClassMockTest.testGetArea":33,"org.easymock.tests.MockingTest.testInterfaceMocking":291,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":94,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":385,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":206,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":338,"org.easymock.tests2.ThreadingTest.testChangeDefault":533,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":155,"org.easymock.tests2.MockBuilderTest.testCreateMock":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":214,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":502,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":183,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":54,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":90,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":116,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":357,"org.easymock.tests2.EasyMockSupportClassTest.testAll":124,"org.easymock.tests.MockClassControlTest.testEquals":260,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":7,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":441,"org.easymock.tests2.CaptureTest.testCaptureAll":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":248,"org.easymock.tests.MockNameTest.defaultName":227,"org.easymock.tests2.UsageConstraintsTest.testMatches":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":331,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":339,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests.UsageVarargTest.allKinds":0,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":78,"org.easymock.samples.BasicClassMockTest.testPrintContent":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":249,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":73,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":276,"org.easymock.tests2.UsageConstraintsTest.greaterThan":186,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":64,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":110,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":513,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":241,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":120,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":375,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":371,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":505,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":235,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":271,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":419,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":50,"org.easymock.tests2.UsageTest.moreThanOneArgument":161,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":122,"org.easymock.tests2.CaptureTest.testCapture2_2446744":117,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":313,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":364,"org.easymock.tests.GenericTest.testBridgedEquals":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":326,"org.easymock.tests.UsageExpectAndReturnTest.longType":46,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":223,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":458,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":328,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":486,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":147,"org.easymock.tests.MockingTest.testNiceClassMocking":294,"org.easymock.tests.MockingTest.testClassMocking":289,"org.easymock.tests2.UsageConstraintsTest.testContains":182,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":320,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":128,"org.easymock.tests2.UsageConstraintsTest.testFind":176,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":92,"org.easymock.tests.MockTypeTest.fromEasyMockClass":266,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":462,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndReturnTest.object":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":336,"org.easymock.tests.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":225,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":231,"org.easymock.tests2.ConstraintsToStringTest.findToString":463,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":490,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":59,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":447,"org.easymock.tests.MockClassControlTest.testHashCode":259,"org.easymock.tests2.EasyMockSupportTest.testVerify":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":472,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":494,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":439,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":459,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":236,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":318,"org.easymock.tests2.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.DefaultClassInstantiatorTest.object":2,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":351,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":334,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":446,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":511,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":108,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":211,"org.easymock.tests.ReplayStateInvalidCallsTest.times":517,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":60,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":518,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":127,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":257,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":265,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":536,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":274,"org.easymock.tests2.StubTest.stubWithReturnValue":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":480,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":52,"org.easymock.tests2.SerializationTest.testAllMockedMethod":400,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":311,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":38,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":217,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":466,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":317,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":396,"org.easymock.tests.UsageExpectAndThrowTest.object":215,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":226,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":188,"org.easymock.tests2.DelegateToTest.testWrongClass":421,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":515,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":98,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":99,"org.easymock.samples.ConstructorCalledMockTest.testTax":464,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":432,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":216,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":156,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":485,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":507,"org.easymock.tests2.CaptureTest.testCaptureNone":115,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":41,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":527,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":363,"org.easymock.tests2.ThreadingTest.testThreadSafe":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":387,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":324,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":202,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":337,"org.easymock.tests2.CaptureTest.testCapture_2617107":25,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":501,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":370,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageConstraintsTest.any":180,"org.easymock.tests2.StubTest.stub":445,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageExpectAndThrowTest.longType":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":239,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":437,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests2.SerializationTest.testClass":131,"org.easymock.tests.LimitationsTest.mockNativeMethod":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":62,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":404,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":523,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":438,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":528,"org.easymock.tests2.NameTest.nameForMocksControl":418,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":406,"org.easymock.tests2.MockedExceptionTest.testMockedException":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":382,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":461,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":209,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":157,"org.easymock.tests.MockingTest.testNicePartialClassMocking":88,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":402,"org.easymock.tests2.CaptureTest.testCaptureLast":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":369,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":522,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":152,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":189,"org.easymock.tests.MockingTest.testTwoMocks":290,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":519,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":213,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":192,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":531,"org.easymock.samples.ExampleTest.removeNonExistingDocument":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests.UsageStrictMockTest.differentMethods":86,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":448,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":530,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":237,"org.easymock.tests2.ConstraintsToStringTest.andToString":498,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":121,"org.easymock.tests2.MockBuilderTest.testCreateMockString":429,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":254,"org.easymock.tests.UsageExpectAndThrowTest.floatType":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":398,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":126,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests.LimitationsTest.privateConstructor":366,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":477,"org.easymock.tests2.UsageConstraintsTest.testNotNull":191,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":393,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":74,"org.easymock.tests2.UsageTest.defaultResetToNice":165,"org.easymock.samples.ExampleTest.voteAgainstRemovals":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":403,"org.easymock.tests.UsageVarargTest.differentLength":360,"org.easymock.tests2.CallbackTest.callback":392,"org.easymock.tests2.UsageConstraintsTest.equals":457,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":532,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":488,"org.easymock.tests.UsageTest.openCallCountByLastCall":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":263,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":529,"org.easymock.tests.UsageThrowableTest.throwCheckedException":71,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":487,"org.easymock.tests.MockingTest.testStrictClassMocking":288,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":148,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":150,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":399,"org.easymock.tests.ObjectMethodsTest.testHashCode":335,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":521,"org.easymock.tests2.NameTest.nameForNiceMock":417,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":123,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":516,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.samples.ExampleTest.addDocument":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.DelegateToTest.testStubDelegate":153,"org.easymock.tests2.AnswerTest.stubAnswer":130,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":85,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":535,"org.easymock.tests.UsageVarargTest.varargLongAccepted":362,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":304,"org.easymock.tests.UsageExpectAndReturnTest.floatType":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":194,"org.easymock.tests2.ConstraintsToStringTest.orToString":491,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":187,"org.easymock.tests.UsageThrowableTest.noUpperLimit":262,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":175,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":430,"org.easymock.tests2.SerializationTest.test":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":3,"org.easymock.tests2.UsageConstraintsTest.testSame":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":44,"org.easymock.samples.SupportTest.addDocument":200,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":534,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":506,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":384,"org.easymock.tests.GenericTest.testPackageScope":6,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":292,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":504,"org.easymock.tests2.NameTest.nameForMock":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":483,"org.easymock.tests2.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":219,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":66,"org.easymock.tests2.MockedExceptionTest.testRealException":395,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":270,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":489,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests2.NameTest.nameForStrictMock":416,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":426,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":460,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":431,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":154,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":510,"org.easymock.tests2.UsageConstraintsTest.lessThan":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":471,"org.easymock.tests2.CaptureTest.testCaptureRightOne":26,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":526,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.MockBuilderTest.testWithConstructor":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":469,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":296,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":4,"org.easymock.tests.UsageVarargTest.varargShortAccepted":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":325,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":524,"org.easymock.tests2.UsageConstraintsTest.cmpTo":181,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":397,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":298,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":164,"org.easymock.tests2.CaptureTest.testCaptureFromStub":379,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":340,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":425,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":520,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":323,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":57,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.samples.ExampleTest.addAndChangeDocument":199,"org.easymock.tests2.ConstraintsToStringTest.notToString":493,"org.easymock.tests.UsageStrictMockTest.testVerify":287,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":201,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests2.CompareToTest.testGreateThan":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":49,"org.easymock.tests.LimitationsTest.abstractClass":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":96,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":355}}]
