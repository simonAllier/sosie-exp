[{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[46,47],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[2,49,5,8,9,50,51,52,53,54,55,56,57,58,59,60,61,25,26,62,63,64,65,66,67,68,69,70,71,30,31,32,33,72,35,36,73,74,75,76,37,39,77,41,42],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[78,79,80,81],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[5,8,9,25,26,82,68,83,84,30,31,32,33,35,36,37,39,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[86,87,88,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[90,90,91,91,92,93,94,78,80,95,96,97,98,99,16,100,101,102,103,46,17,18,19,104,20,105,106,107,108,109,110,21,111,22,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,47,139,140],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:93","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[141],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[142,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[137],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[61,25,26,39,77,41,42,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[90,90,91,91,145,146,147,148,149,150,94,151,0,78,79,95,96,97,98,152,153,154,155,1,156,157,158,159,160,161,162,163,164,165,166,167,168,2,169,170,85,141,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,3,195,196,48,197,198,199,200,201,4,202,49,6,203,204,205,10,11,206,12,207,208,209,13,14,210,211,15,212,213,16,101,103,46,18,104,20,214,105,106,107,109,21,111,22,113,114,115,116,215,117,118,216,217,218,119,219,220,221,120,222,61,25,26,86,223,224,225,122,123,124,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,70,27,246,247,248,134,136,249,250,251,252,138,253,254,255,87,256,29,71,257,258,34,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,72,35,36,282,283,284,285,286,287,142,288,289,143,290,291,292,293,140,294,295,296,75,297,298,299,300,301,302,89,303,304,305,37,77,41,42,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[1,156,157,158,159,160,161,162,323,163,85,141,173,174,182,183,324,184,189,190],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[325,326],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[90,90,91,91,92,93,94,78,80,327,328,329,330,331,95,332,333,96,334,335,336,337,338,339,340,341,342,97,343,344,345,346,347,98,348,349,99,350,16,100,351,101,102,103,46,352,17,18,353,19,104,20,105,106,107,108,109,354,355,110,21,111,22,356,112,113,114,115,116,117,118,357,119,358,220,221,120,359,360,361,362,363,364,365,366,367,121,122,123,124,368,125,126,127,128,129,130,131,132,133,369,134,135,136,137,138,47,139,370,371,140,372],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[49,61,26,373,374,71,263,267,268,270,273,72,35,36,75,77,42,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[175,376],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[86],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[99,102,108,112,220],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[377],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[182,183,324,184,185,378,379,186,188,189,190,191,192,380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[381],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[142,143],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[48,198],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[382],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[164,109,383],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":156,"org.easymock.tests2.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":382,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":7,"org.easymock.tests2.StubTest.stubWithReturnValue":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":235,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":172,"org.easymock.tests2.SerializationTest.testAllMockedMethod":80,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":307,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":302,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":58,"org.easymock.samples.SupportTest.voteForRemovals":151,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":369,"org.easymock.tests.MockClassControlTest.testToString":128,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":249,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":259,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":89,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":96,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":177,"org.easymock.tests.UsageExpectAndThrowTest.object":269,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":217,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":141,"org.easymock.tests2.DelegateToTest.testWrongClass":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":251,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":253,"org.easymock.tests2.UsageTest.wrongArguments":5,"org.easymock.samples.ConstructorCalledMockTest.testTax":90,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.samples.ExampleTest.answerVsDelegate":146,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":113,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":139,"org.easymock.tests2.UsageConstraintsTest.testNull":158,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":270,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":133,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":278,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":284,"org.easymock.tests2.CaptureTest.testCaptureNone":187,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":83,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests2.ThreadingTest.testThreadSafe":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":312,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":343,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":88,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":59,"org.easymock.tests2.CaptureTest.testCapture_2617107":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":297,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":60,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":102,"org.easymock.tests2.UsageConstraintsTest.any":163,"org.easymock.tests2.StubTest.stub":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":308,"org.easymock.tests.UsageExpectAndThrowTest.longType":262,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":363,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":54,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":24,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests2.SerializationTest.testClass":78,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":218,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":245,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":136,"org.easymock.tests2.AnswerTest.answer":176,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":323,"org.easymock.tests2.CaptureTest.testAnd":182,"org.easymock.tests2.UsageTest.strictResetToDefault":202,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests2.MockedExceptionTest.testMockedException":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":209,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":258,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":316,"org.easymock.tests2.DelegateToTest.testDelegate":201,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":263,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":124,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":274,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests.LimitationsTest.mockFinalMethod":372,"org.easymock.tests2.CompareToTest.testCompareEqual":383,"org.easymock.tests2.CaptureTest.testCaptureLast":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":70,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":161,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":171,"org.easymock.tests.MockingTest.testTwoMocks":121,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":69,"org.easymock.tests2.CaptureTest.testCapture1_2446744":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":267,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":174,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":361,"org.easymock.tests2.ConstraintsToStringTest.andToString":57,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":3,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":84,"org.easymock.tests2.MockBuilderTest.testCreateMockString":19,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.tests.UsageExpectAndThrowTest.floatType":261,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":179,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":97,"org.easymock.samples.PartialClassMockTest.testGetArea":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":298,"org.easymock.samples.ExampleTest.voteAgainstRemoval":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":282,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":260,"org.easymock.tests2.UsageTest.niceToStrict":6,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":125,"org.easymock.tests.LimitationsTest.privateConstructor":371,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":325,"org.easymock.tests2.UsageConstraintsTest.testNotNull":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":293,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":220,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":326,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.UsageTest.defaultResetToNice":205,"org.easymock.tests2.MockBuilderTest.testCreateMock":17,"org.easymock.samples.ExampleTest.voteAgainstRemovals":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":345,"org.easymock.tests.UsageVarargTest.differentLength":28,"org.easymock.tests2.CallbackTest.callback":0,"org.easymock.tests2.UsageConstraintsTest.equals":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":65,"org.easymock.tests.UsageTest.openCallCountByLastCall":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":268,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":51,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":154,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":255,"org.easymock.tests.UsageOverloadedMethodTest.overloading":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":342,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":296,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":167,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":116,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":166,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":188,"org.easymock.tests.UsageThrowableTest.throwCheckedException":290,"org.easymock.tests2.EasyMockSupportClassTest.testAll":95,"org.easymock.tests.MockClassControlTest.testEquals":132,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":135,"org.easymock.tests.MockingTest.testStrictClassMocking":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":276,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":64,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":56,"org.easymock.tests2.CaptureTest.testCaptureAll":183,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":225,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":115,"org.easymock.tests2.UsageConstraintsTest.testMatches":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":215,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":320,"org.easymock.samples.ExampleTest.voteForRemovals":149,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":196,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.samples.BasicClassMockTest.testPrintContent":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":292,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests2.AnswerTest.stubAnswer":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":311,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":200,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":377,"org.easymock.tests2.UsageConstraintsTest.greaterThan":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":246,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":22,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":375,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":365,"org.easymock.samples.ExampleTest.voteForRemoval":147,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":356,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":244,"org.easymock.tests.UsageExpectAndReturnTest.floatType":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":119,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":91,"org.easymock.tests2.ConstraintsToStringTest.orToString":50,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":155,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":327,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":378,"org.easymock.tests2.SerializationTest.test":79,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":352,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":207,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":227,"org.easymock.tests2.UsageConstraintsTest.testSame":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":306,"org.easymock.tests2.CaptureTest.testCaptureFirst":192,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":208,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":335,"org.easymock.tests.GenericTest.testPackageScope":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":195,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.CaptureTest.testCapture2_2446744":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":315,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":18,"org.easymock.tests.GenericTest.testBridgedEquals":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":44,"org.easymock.tests.UsageExpectAndReturnTest.longType":229,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":206,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":238,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":275,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":230,"org.easymock.tests.UsageCallCountTest.tooManyCalls":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":273,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":248,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":346,"org.easymock.tests2.MockedExceptionTest.testRealException":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":234,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":264,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":254,"org.easymock.tests.MockingTest.testNiceClassMocking":368,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":114,"org.easymock.tests.MockingTest.testClassMocking":367,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":350,"org.easymock.tests2.UsageConstraintsTest.testContains":165,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":120,"org.easymock.tests2.UsageConstraintsTest.testFind":157,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":281,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":351,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":153,"org.easymock.tests.UsageExpectAndReturnTest.object":236,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":328,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":362,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":16,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":224,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":339,"org.easymock.tests2.CaptureTest.testCaptureRightOne":189,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":313,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":67,"org.easymock.tests2.UsageConstraintsTest.testOr":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":358,"org.easymock.tests.UsageRangeTest.combination":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":20,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":295,"org.easymock.tests.UsageTest.wrongArguments":31,"org.easymock.tests.MockClassControlTest.testHashCode":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":336,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":340,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":53,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":314,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":294,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":43,"org.easymock.tests2.UsageConstraintsTest.cmpTo":164,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":178,"org.easymock.tests2.CompareToTest.testLessThan":376,"org.easymock.tests2.UsageTest.openCallCountByLastCall":203,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":204,"org.easymock.tests.DefaultClassInstantiatorTest.object":359,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":303,"org.easymock.tests2.CaptureTest.testCaptureFromStub":190,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":100,"org.easymock.tests.UsageTest.unexpectedCallWithArray":30,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":266,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":240,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":21,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":40,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":265,"org.easymock.samples.ExampleTest.addAndChangeDocument":150,"org.easymock.tests2.ConstraintsToStringTest.notToString":52,"org.easymock.tests.CapturesMatcherTest.test":380,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":243,"org.easymock.tests.UsageStrictMockTest.testVerify":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":285,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":98,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":129,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":379,"org.easymock.tests2.UsageTest.resumeIfFailure":10,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":299,"org.easymock.tests.LimitationsTest.abstractClass":370,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":232,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":300,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":14}}]
