[{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,2,3,84,85,4,5,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,6,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,7,8,163,164,165,166,167,168,169,9,170,171,10,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,11,223,224,225,226,227,12,13,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,14,299,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[275,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[61,82,301,7,220,272],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[302],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[303,304,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[193,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[199,205,217,306],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[176,188,189,230,233,234],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[190,192,307],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[308,101,309,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[2,9,170,10,172,174,312,313,314,315,316,297,14,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,16,17,18,317,19,20,21,22,23,24,25,26,27,28,318,29,30,319,31,32,33,34,35,36,37,38,39,40,41,42,43,320,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,2,3,84,85,4,5,86,87,88,89,321,90,91,92,93,94,95,96,97,322,98,323,324,325,326,327,99,100,308,101,309,310,311,328,329,330,301,331,332,333,334,335,336,337,338,339,340,341,342,102,343,344,345,346,347,103,348,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,349,350,351,352,353,354,355,356,357,358,6,144,145,146,147,148,359,149,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,150,151,152,153,154,155,156,157,158,159,160,161,379,380,381,382,383,384,385,386,387,388,162,7,8,163,164,165,166,167,168,169,9,170,171,10,172,173,174,389,175,176,177,178,179,180,390,181,391,391,392,392,182,183,184,185,393,394,395,312,186,313,396,314,397,398,399,400,401,315,402,403,316,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,187,435,436,188,437,189,190,191,192,193,438,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,220,221,222,11,223,224,225,226,227,12,13,228,229,456,457,458,459,230,231,232,233,234,235,236,237,238,239,460,461,462,463,464,240,241,465,466,467,468,469,242,243,244,245,246,247,248,249,250,251,252,253,254,470,255,256,257,258,471,472,473,474,475,259,260,476,477,478,479,480,481,482,483,261,262,263,264,265,266,267,268,269,270,271,272,484,485,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,486,295,296,297,298,14,299,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[73,326,352,353,355,389,395,186,313,314,409,412,422,428,431,432,433,434,187,435,436,442,446,448,450,453,481,269,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[487,488,281,282,283,284,285,286,287,288,290,489,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:434","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[413,245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[163,164],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[83,3,4,5,6,490,491,492,162,7,8,9,170,10,172,222,11,12,13,255,256,257,258,297,14,299],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:83","failures":[38,47,61,82,83,3,84,85,4,5,86,97,6,145,148,162,7,8,9,170,171,10,172,195,201,207,215,220,222,11,225,226,12,13,229,230,234,255,256,257,258,265,272,277,282,283,285,286,287,288,289,294,297,298,14,299],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[493],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[342,103,147,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:117","failures":[63,176,188,189,230,233,235,265],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[308,311],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[36,37,38,45,47,48,49,50,51,52,61,63,65,66,68,70,71,72,73,74,75,76,77,82,83,84,85,86,326,99,100,101,329,335,339,343,344,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,352,353,355,144,145,148,149,150,151,152,153,162,7,8,170,10,172,389,175,176,177,178,180,185,395,312,186,313,396,314,399,402,403,316,409,412,422,428,431,432,433,434,187,435,436,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,442,446,448,450,453,220,221,222,223,225,226,227,228,229,230,234,235,240,242,243,244,245,246,247,248,249,250,251,252,253,259,481,263,265,266,267,268,269,270,272,273,274,276,277,278,280,281,282,283,284,285,288,289,290,291,293,294,297,14,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":193,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":337,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":224,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":182,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":58,"org.easymock.tests.MockingTest.testPartialClassMocking":352,"org.easymock.tests.MockClassControlTest.testToString":382,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":470,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":104,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":490,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":144,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":55,"org.easymock.samples.ExampleTest.answerVsDelegate":176,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":319,"org.easymock.tests2.UsageConstraintsTest.testNull":195,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":357,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":313,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":251,"org.easymock.tests2.CaptureTest.testPrimitive":284,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":123,"org.easymock.tests.UsageTest.moreThanOneArgument":83,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":156,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":163,"org.easymock.tests.UsageTest.argumentsOrdered":5,"org.easymock.tests.UsageVarargTest.varargIntAccepted":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":72,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":76,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests.ReplayStateInvalidUsageTest.times":375,"org.easymock.tests2.DependencyTest.testClassMocking":484,"org.easymock.tests2.AnswerTest.answer":230,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":239,"org.easymock.tests2.CaptureTest.testAnd":281,"org.easymock.tests2.UsageTest.strictResetToDefault":221,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":155,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":246,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":167,"org.easymock.tests2.DelegateToTest.testDelegate":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":119,"org.easymock.tests.LimitationsTest.mockFinalMethod":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":81,"org.easymock.tests2.DependencyTest.testClassMockingSupport":485,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":160,"org.easymock.tests2.CaptureTest.testCapture1_2446744":285,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":237,"org.easymock.tests.UsageThrowableTest.throwError":45,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":369,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":30,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":430,"org.easymock.samples.PartialClassMockTest.testGetArea":389,"org.easymock.tests.MockingTest.testInterfaceMocking":354,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":370,"org.easymock.tests2.CompareToTest.testLessOrEqual":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":73,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":105,"org.easymock.tests2.UsageTest.niceToStrict":223,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":446,"org.easymock.tests2.MockBuilderTest.testCreateMock":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":113,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":53,"org.easymock.tests.UsageOverloadedMethodTest.overloading":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":421,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":66,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":135,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":36,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":204,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":290,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":321,"org.easymock.tests2.EasyMockSupportClassTest.testAll":409,"org.easymock.tests.MockClassControlTest.testEquals":386,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":238,"org.easymock.tests2.CaptureTest.testCaptureAll":282,"org.easymock.tests.MockNameTest.defaultName":44,"org.easymock.tests2.UsageConstraintsTest.testMatches":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":157,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":367,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests.UsageVarargTest.allKinds":97,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":162,"org.easymock.samples.BasicClassMockTest.testPrintContent":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":80,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":51,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":279,"org.easymock.tests2.UsageConstraintsTest.greaterThan":208,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":151,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":316,"org.easymock.samples.ExampleTest.voteForRemoval":177,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":404,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":267,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":397,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":388,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":220,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":244,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":57,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":275,"org.easymock.tests2.CaptureTest.testCaptureFirst":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":245,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":131,"org.easymock.tests2.UsageTest.moreThanOneArgument":222,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":269,"org.easymock.tests2.CaptureTest.testCapture2_2446744":293,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":344,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":96,"org.easymock.tests.GenericTest.testBridgedEquals":311,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":24,"org.easymock.tests.UsageExpectAndReturnTest.longType":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":77,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":122,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":159,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":27,"org.easymock.tests.UsageCallCountTest.tooManyCalls":25,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":432,"org.easymock.tests.MockingTest.testNiceClassMocking":358,"org.easymock.tests.MockingTest.testClassMocking":350,"org.easymock.tests2.UsageConstraintsTest.testContains":203,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":317,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":263,"org.easymock.tests2.UsageConstraintsTest.testFind":194,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":38,"org.easymock.tests.MockTypeTest.fromEasyMockClass":29,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":189,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests.UsageExpectAndReturnTest.object":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":250,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":91,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":42,"org.easymock.tests.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":164,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":482,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":140,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":65,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":461,"org.easymock.tests.MockClassControlTest.testHashCode":385,"org.easymock.tests2.EasyMockSupportTest.testVerify":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":419,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":16,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":236,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":486,"org.easymock.tests.UsageVarargTest.varargCharAccepted":90,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":359,"org.easymock.tests2.CaptureTest.testCaptureMultiple":488,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastCall":225,"org.easymock.tests.DefaultClassInstantiatorTest.object":149,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":15,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":40,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":420,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":460,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":402,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":110,"org.easymock.tests.CapturesMatcherTest.test":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":141,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":428,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":383,"org.easymock.tests2.UsageTest.resumeIfFailure":228,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":60,"org.easymock.tests2.StubTest.stubWithReturnValue":272,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":449,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":214,"org.easymock.tests2.SerializationTest.testAllMockedMethod":439,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":102,"org.easymock.samples.SupportTest.voteForRemovals":185,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":116,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":103,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":231,"org.easymock.tests.UsageExpectAndThrowTest.object":114,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":323,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":211,"org.easymock.tests2.DelegateToTest.testWrongClass":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":70,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":71,"org.easymock.samples.ConstructorCalledMockTest.testTax":391,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":458,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":406,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":4,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":54,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":35,"org.easymock.tests2.CaptureTest.testCaptureNone":289,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":493,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":95,"org.easymock.tests2.ThreadingTest.testThreadSafe":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":423,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":22,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":393,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageConstraintsTest.any":201,"org.easymock.tests2.StubTest.stub":271,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":374,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":28,"org.easymock.tests.UsageExpectAndThrowTest.longType":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":363,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":373,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":298,"org.easymock.tests2.SerializationTest.testClass":218,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.LimitationsTest.mockNativeMethod":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":143,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.NameTest.nameForMocksControl":258,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests2.MockedExceptionTest.testMockedException":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":411,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":437,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":108,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":355,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":395,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":450,"org.easymock.tests.MockingTest.testNicePartialClassMocking":353,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":314,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests2.CaptureTest.testCaptureLast":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":436,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":212,"org.easymock.tests.MockingTest.testTwoMocks":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":112,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":216,"org.easymock.samples.ExampleTest.removeNonExistingDocument":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageStrictMockTest.differentMethods":172,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":462,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":361,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":268,"org.easymock.tests2.MockBuilderTest.testCreateMockString":455,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":413,"org.easymock.tests.UsageExpectAndThrowTest.floatType":106,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":483,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":422,"org.easymock.samples.ExampleTest.voteAgainstRemoval":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":403,"org.easymock.tests.LimitationsTest.privateConstructor":325,"org.easymock.tests2.UsageConstraintsTest.testNotNull":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":52,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":261,"org.easymock.tests2.UsageTest.defaultResetToNice":227,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":339,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.UsageVarargTest.differentLength":92,"org.easymock.tests2.CallbackTest.callback":265,"org.easymock.tests2.UsageConstraintsTest.equals":438,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":400,"org.easymock.tests.UsageTest.openCallCountByLastCall":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":146,"org.easymock.tests.UsageCallCountTest.tooFewCalls":20,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":56,"org.easymock.tests.UsageThrowableTest.throwCheckedException":49,"org.easymock.tests.MockingTest.testStrictClassMocking":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":435,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":260,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":376,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":187,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":235,"org.easymock.tests.ObjectMethodsTest.testHashCode":41,"org.easymock.tests2.CompareToTest.testGreateOrEqual":306,"org.easymock.tests2.NameTest.nameForNiceMock":257,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":270,"org.easymock.tests2.DependencyTest.testInterfaceMocking":273,"org.easymock.samples.ExampleTest.addDocument":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.DelegateToTest.testStubDelegate":277,"org.easymock.tests2.AnswerTest.stubAnswer":234,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":170,"org.easymock.tests.UsageVarargTest.varargLongAccepted":94,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":336,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":142,"org.easymock.tests.UsageExpectAndReturnTest.floatType":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":481,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests.UsageThrowableTest.noUpperLimit":46,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":209,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":191,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":456,"org.easymock.tests2.SerializationTest.test":219,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":286,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":125,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.samples.SupportTest.addDocument":184,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":414,"org.easymock.tests.GenericTest.testPackageScope":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":356,"org.easymock.tests2.NameTest.nameForMock":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":454,"org.easymock.tests2.UsageStrictMockTest.differentMethods":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":128,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":118,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":264,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":0,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":145,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":378,"org.easymock.tests2.NameTest.nameForStrictMock":256,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":445,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":305,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":457,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":491,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":210,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":442,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":418,"org.easymock.tests2.CaptureTest.testCaptureRightOne":291,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":312,"org.easymock.tests.UsageTest.wrongArguments":3,"org.easymock.tests2.MockBuilderTest.testWithConstructor":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":415,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":381,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":329,"org.easymock.tests.UsageVarargTest.varargShortAccepted":93,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":23,"org.easymock.tests2.UsageConstraintsTest.cmpTo":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests2.CaptureTest.testCaptureFromStub":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":368,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":443,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":138,"org.easymock.tests2.CaptureTest.testCapture":489,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.UsageConstraintsTest.constraints":192,"org.easymock.samples.ExampleTest.addAndChangeDocument":181,"org.easymock.tests.UsageStrictMockTest.testVerify":174,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":183,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":78,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":130,"org.easymock.tests.LimitationsTest.abstractClass":324,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":75,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":492,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":248}}]
