[{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[4],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[8,9],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,4,8,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,5,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[265,16,17,18,20,21,22,23,24,25,36,37,38,39,40,41,42,43,49,50,53,54,57,68,69,71,266,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,121,123,124,125,126,135,137,141,143,144,267,147,149,150,152,268,154,155,156,157,158,159,160,269,162,270,271,272,273,274,275,163,164,276,277,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,4,8,185,186,187,188,189,190,191,192,193,194,278,197,279,280,199,201,202,203,205,207,208,209,212,213,216,281,282,283,284,285,286,287,288,289,290,291,292,293,294,226,229,232,233,234,235,236,238,239,295,241,243,244,246,247,250,251,252,253,255,256,260,262,263],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[296,297,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[34,37,38,39,40,41,42,43,69,70,116,117,118,119,120,121,141,176,179,244,250,251,256,260],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[299,300,301,193,302,303,304,305,306,307,226,308,309],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[67,174,310,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[12,13,14,15,311,312,265,16,17,18,19,20,21,22,23,24,25,34,313,314,315,37,38,39,40,41,42,43,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,134,135,136,137,139,140,141,142,143,144,145,267,147,148,149,150,151,152,153,316,317,318,268,319,320,154,155,156,157,158,159,160,162,271,272,273,274,275,163,164,276,277,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,4,8,185,186,187,188,310,189,190,191,192,193,194,195,197,279,280,201,202,203,204,205,206,207,208,210,211,213,214,215,216,217,281,282,283,284,285,286,287,288,290,291,292,293,321,294,226,229,231,232,233,234,235,236,238,239,295,240,241,242,5,243,244,245,246,247,248,249,250,251,252,253,255,256,259,260,261,262,263,264],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[10,12,13,14,15,311,312,265,16,17,18,19,20,21,22,23,24,25,34,313,314,315,36,37,38,39,40,41,42,43,44,49,50,52,53,54,55,56,57,58,59,60,61,62,322,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,323,123,124,125,126,134,135,136,137,324,325,138,139,140,141,142,143,144,145,146,267,147,148,149,150,151,152,153,316,317,318,268,319,320,154,155,156,157,158,159,160,269,162,270,271,272,273,274,275,163,164,276,277,165,166,167,168,169,170,171,172,173,174,175,176,177,178,326,179,180,181,182,183,184,4,8,185,186,187,188,310,189,190,191,192,193,194,195,278,197,279,280,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,281,282,283,284,285,286,287,288,289,290,291,292,293,321,222,223,224,225,294,226,229,231,232,233,234,235,236,237,238,239,295,240,241,242,5,243,244,245,246,247,248,249,250,251,252,253,255,256,258,259,260,261,262,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[327,328,329,330,68,331,332,71,72,266,333,334,335,336,113,114,115,337,323,338,339,340,341,342,343,344,133,345,346,347,348,349,350,134,267,299,299,300,300,319,320,154,155,157,158,159,351,160,301,352,161,269,162,270,353,354,355,356,357,271,358,359,272,360,361,362,363,364,365,366,367,368,273,369,370,371,372,373,274,374,375,275,163,164,276,165,166,193,195,196,278,376,377,197,198,279,280,306,378,199,200,379,380,226,308,227,228,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[381,193,194],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[382,136,137,143,262],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:155","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[67,140,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[193,194,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[315,230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:155","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[383,384,385,12,386,387,388,389,390,391,265,16,17,18,19,20,21,22,23,24,25,30,31,32,33,34,35,313,314,315,36,37,38,39,40,41,42,43,49,50,53,54,57,392,68,69,70,71,266,393,394,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,395,132,134,135,136,137,1,324,325,2,3,141,143,144,267,147,148,149,150,152,153,299,299,300,300,268,154,155,156,157,158,159,160,269,162,270,271,272,273,274,275,163,164,276,277,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,4,8,185,186,187,188,189,190,191,192,193,194,278,197,279,280,199,201,202,203,205,207,208,209,212,213,214,396,397,215,216,217,281,282,283,284,285,286,287,288,289,290,291,292,293,294,226,227,228,229,230,231,232,233,234,235,236,237,238,239,295,398,240,241,242,399,5,243,244,246,247,250,251,252,253,254,255,256,260,262,263],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[381,193,194,195],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[328,400,401,345,346,347,164,165,279,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[172,173],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[402,403,51,52,55,56,116,136,137,140,143,204,210,211,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[304,404,308,405,406,407,408,409,410,411],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":172,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests2.UsageTest.argumentsOrdered":211,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":292,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":206,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":316,"org.easymock.tests2.DelegateToTest.testReturnException":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":31,"org.easymock.tests.MockingTest.testPartialClassMocking":113,"org.easymock.tests.MockClassControlTest.testToString":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":73,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":272,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":405,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":117,"org.easymock.tests2.UsageTest.wrongArguments":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":28,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":328,"org.easymock.tests2.UsageConstraintsTest.testNull":174,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":291,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":350,"org.easymock.tests2.CaptureTest.testPrimitive":246,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":121,"org.easymock.tests.UsageTest.moreThanOneArgument":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":1,"org.easymock.tests.UsageTest.argumentsOrdered":56,"org.easymock.tests.UsageVarargTest.varargIntAccepted":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":410,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":196,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":43,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":294,"org.easymock.tests2.AnswerTest.answer":214,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":221,"org.easymock.tests2.CaptureTest.testAnd":243,"org.easymock.tests2.UsageTest.strictResetToDefault":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":286,"org.easymock.tests2.DelegateToTest.testDelegate":5,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":3,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":88,"org.easymock.tests.LimitationsTest.mockFinalMethod":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":48,"org.easymock.tests2.CaptureTest.testCapture1_2446744":247,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":219,"org.easymock.tests.UsageThrowableTest.throwError":18,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":375,"org.easymock.samples.PartialClassMockTest.testGetArea":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":390,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":400,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":74,"org.easymock.tests2.UsageTest.niceToStrict":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":296,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":197,"org.easymock.tests2.MockBuilderTest.testCreateMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":82,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":26,"org.easymock.tests.UsageOverloadedMethodTest.overloading":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":373,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":183,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":104,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":182,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":252,"org.easymock.tests2.EasyMockSupportClassTest.testAll":271,"org.easymock.tests.MockClassControlTest.testEquals":349,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":220,"org.easymock.tests2.CaptureTest.testCaptureAll":244,"org.easymock.tests2.UsageConstraintsTest.testMatches":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":130,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":67,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":47,"org.easymock.samples.BasicClassMockTest.testPrintContent":320,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":24,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":411,"org.easymock.tests2.UsageConstraintsTest.greaterThan":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":124,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":270,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":343,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":233,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":351,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":134,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":201,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":284,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":30,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":398,"org.easymock.tests2.CaptureTest.testCaptureFirst":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":285,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":203,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":235,"org.easymock.tests2.CaptureTest.testCapture2_2446744":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":199,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":66,"org.easymock.tests.GenericTest.testBridgedEquals":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":44,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":282,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":7,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":91,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":395,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":127,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":163,"org.easymock.tests.MockingTest.testNiceClassMocking":337,"org.easymock.tests.MockingTest.testClassMocking":335,"org.easymock.tests2.UsageConstraintsTest.testContains":181,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":11,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":6,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":229,"org.easymock.tests2.UsageConstraintsTest.testFind":173,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":17,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":168,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests.UsageExpectAndReturnTest.object":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":406,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":62,"org.easymock.tests.UsageTest.exactCallCountByLastCall":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":69,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":109,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":58,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":314,"org.easymock.tests.MockClassControlTest.testHashCode":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":366,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":325,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":257,"org.easymock.tests.UsageVarargTest.varargCharAccepted":61,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":297,"org.easymock.tests.DefaultClassInstantiatorTest.object":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":383,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":403,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":269,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":79,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":110,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":274,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":346,"org.easymock.tests2.UsageTest.resumeIfFailure":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":33,"org.easymock.tests2.StubTest.stubWithReturnValue":238,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":102,"org.easymock.tests2.SerializationTest.testAllMockedMethod":195,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":393,"org.easymock.samples.SupportTest.voteForRemovals":268,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":85,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":381,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":394,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":396,"org.easymock.tests.UsageExpectAndThrowTest.object":83,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":187,"org.easymock.tests2.DelegateToTest.testWrongClass":242,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":38,"org.easymock.tests.UsageStrictMockTest.range":143,"org.easymock.samples.ConstructorCalledMockTest.testTax":299,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":279,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":391,"org.easymock.tests2.CaptureTest.testCaptureNone":251,"org.easymock.tests.UsageUnorderedTest.message":116,"org.easymock.tests.UsageVerifyTest.twoReturns":137,"org.easymock.tests.UsageVarargTest.varargByteAccepted":65,"org.easymock.tests2.ThreadingTest.testThreadSafe":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":369,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":15,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":319,"org.easymock.tests2.CaptureTest.testCapture_2617107":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":120,"org.easymock.tests2.UsageConstraintsTest.any":179,"org.easymock.tests2.StubTest.stub":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":32,"org.easymock.tests.UsageExpectAndThrowTest.longType":76,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":341,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.tests2.SerializationTest.testClass":193,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":112,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":266,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests2.NameTest.nameForMocksControl":225,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":359,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":77,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":280,"org.easymock.tests.MockingTest.testNicePartialClassMocking":114,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests2.CaptureTest.testCaptureLast":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":132,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":166,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":188,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":81,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":210,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":191,"org.easymock.tests.UsageStrictMockTest.differentMethods":144,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":122,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":339,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":234,"org.easymock.tests2.MockBuilderTest.testCreateMockString":200,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":344,"org.easymock.tests.UsageExpectAndThrowTest.floatType":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":215,"org.easymock.tests.UsageVerifyTest.twoThrows":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":273,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":389,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":162,"org.easymock.tests.LimitationsTest.privateConstructor":330,"org.easymock.tests2.UsageConstraintsTest.testNotNull":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":25,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":108,"org.easymock.tests.UsageVarargTest.differentLength":322,"org.easymock.tests2.CallbackTest.callback":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":301,"org.easymock.tests.UsageTest.openCallCountByLastCall":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":119,"org.easymock.tests.UsageCallCountTest.tooFewCalls":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":29,"org.easymock.tests.UsageThrowableTest.throwCheckedException":22,"org.easymock.tests.MockingTest.testStrictClassMocking":334,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":164,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":277,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":409,"org.easymock.tests2.NameTest.nameForNiceMock":224,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":236,"org.easymock.tests2.DependencyTest.testInterfaceMocking":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":407,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":370,"org.easymock.tests2.DelegateToTest.testStubDelegate":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.stubAnswer":216,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":141,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":305,"org.easymock.tests.UsageVarargTest.varargLongAccepted":64,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":111,"org.easymock.tests.UsageExpectAndReturnTest.floatType":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":226,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":300,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":185,"org.easymock.tests.UsageThrowableTest.noUpperLimit":19,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":170,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":379,"org.easymock.tests2.SerializationTest.test":194,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":248,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":338,"org.easymock.tests2.UsageConstraintsTest.testSame":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":94,"org.easymock.samples.SupportTest.addDocument":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":361,"org.easymock.tests.GenericTest.testPackageScope":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":2,"org.easymock.tests2.NameTest.nameForMock":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":105,"org.easymock.tests2.UsageStrictMockTest.differentMethods":263,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":87,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":126,"org.easymock.tests2.MockedExceptionTest.testRealException":230,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":402,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":404,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":118,"org.easymock.tests2.NameTest.nameForStrictMock":223,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":377,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":167,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":380,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":186,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":340,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":278,"org.easymock.tests2.UsageStrictMockTest.range":262,"org.easymock.tests2.UsageConstraintsTest.lessThan":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":0,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":283,"org.easymock.tests2.CaptureTest.testCaptureRightOne":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":365,"org.easymock.tests2.UsageConstraintsTest.testOr":176,"org.easymock.tests.UsageRangeTest.combination":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":155,"org.easymock.tests.UsageTest.wrongArguments":52,"org.easymock.tests2.MockBuilderTest.testWithConstructor":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":362,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":106,"org.easymock.tests.UsageVarargTest.varargShortAccepted":63,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":342,"org.easymock.tests2.UsageConstraintsTest.cmpTo":180,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":397,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":254,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":376,"org.easymock.tests.UsageTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":107,"org.easymock.tests2.UsageConstraintsTest.constraints":171,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.samples.ExampleTest.addAndChangeDocument":153,"org.easymock.tests.UsageStrictMockTest.testVerify":146,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":317,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":45,"org.easymock.tests2.CompareToTest.testGreateThan":9,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":99,"org.easymock.tests.LimitationsTest.abstractClass":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":42,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":288,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":382}}]
