[{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,21,33,34,35,36,37,22,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[39,32,40,41],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[42,43,44,45,46,47,48,49,50,26,51,52,53,53,54,54,55,56,57,58,59,27,60,61,28,29,62,63,64,65,66,67,68,32,41,69,70,71,72,73,74,75,33,76,34,77,35,36,78,37,38,79],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[80,81,82,83,84,85,86,87,88,6,89,90,91,92,93,94,95,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[98,99],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[42,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,80,0,123,81,82,124,125,126,127,128,129,130,131,132,133,134,1,2,3,4,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,43,44,45,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,5,174,175,176,177,178,179,180,181,182,183,184,185,186,86,187,188,87,88,189,47,48,49,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,6,207,208,209,210,211,212,89,90,50,7,8,9,10,11,12,13,213,214,215,26,51,52,53,53,54,54,216,217,218,219,220,221,222,223,224,225,226,99,227,14,228,229,230,231,232,15,16,233,234,235,236,17,55,56,237,57,58,59,60,28,29,62,238,239,240,241,242,243,244,245,18,246,93,94,247,63,248,65,66,67,68,249,250,251,252,253,254,255,19,256,257,258,20,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,32,40,41,302,303,304,95,305,306,307,308,309,96,97,310,311,312,313,69,70,71,72,314,73,74,33,34,35,36,37,315,316,79,317,318,319,320,321,322,323],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[36],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[227,228,234,251,252,19,256,258,267],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[227,228,234,251,252,254,19,256,258,267,272],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[285],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[39,32,40,41],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[322,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[42,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,0,81,82,1,2,135,156,157,158,43,45,159,160,161,162,163,164,165,166,168,169,170,171,172,173,5,185,186,187,188,189,47,48,49,325,326,327,328,329,206,212,90,7,8,9,10,11,12,13,26,219,220,222,223,225,227,14,229,230,15,16,233,234,236,17,55,56,237,57,58,59,60,28,29,62,239,18,93,94,63,248,65,66,67,68,249,250,251,252,253,254,255,19,256,257,20,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,277,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,32,40,302,303,304,305,307,308,309,310,311,69,70,71,72,314,73,74,33,34,35,36,37,79,318,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,0,123,81,82,124,1,2,3,4,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,44,163,164,165,166,167,168,169,170,171,172,173,5,176,177,178,179,180,181,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,203,204,205,6,207,208,209,210,211,212,89,90,7,8,9,10,11,12,13,51,52,216,217,218,219,220,221,222,223,224,225,226,99,227,14,15,16,234,17,56,58,29,238,239,245,18,246,93,94,247,248,252,254,19,256,272,276,277,278,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,297,298,299,300,32,40,302,303,304,305,306,307,308,310,311,34,35,36,318,321,322],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[100,157,175],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[80,0,81,82,186,86,87,88,206,6,212,89,90,240,241,242,243,18,93,94,304,95,96,97],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[39,32,40,41],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[330,331,332],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[2,3,4,200,227,14,228,15,16,234,17,251,252,254,19,256,272],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[227,228,234,251,252,254,19,256,258,267,272],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[42,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,0,81,82,1,2,135,156,157,158,43,45,159,160,161,162,163,164,165,166,168,169,170,171,172,173,5,185,186,187,188,189,47,48,49,325,326,327,328,329,206,212,90,7,8,9,10,11,12,13,26,219,220,222,223,225,227,14,229,230,15,16,233,234,236,17,55,56,237,57,58,59,60,28,29,62,239,18,93,94,63,248,65,66,67,68,249,250,251,252,253,254,255,19,256,257,20,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,277,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,32,40,302,303,304,305,307,308,309,310,311,69,70,71,72,314,73,74,33,34,35,36,37,79,318,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[249,251,265,271,334],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[80,81,84,85,86,87,88,335,6,89,90,93,95,96,97],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[336,7,337,227,14,228,229,230,231,232,15,16,233,338,234,235,236,17,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[3,4,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,165,168,172,173,174,176,177,178,179,180,181,185,188,205,239,302,308,315,316,79,317],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[201],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[42,100,101,102,103,104,105,106,109,110,112,113,114,116,117,118,119,120,0,81,82,1,157,159,160,161,162,175,47,48,49,207,208,209,210,7,8,9,10,11,12,13,26,219,220,222,223,225,55,56,237,57,58,59,60,28,29,62,18,93,94,63,65,66,67,68,277,281,282,286,69,70,71,72,314,73,74,33,34,35,36,37],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":252,"org.easymock.tests2.UsageTest.argumentsOrdered":97,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":306,"org.easymock.tests2.StubTest.stubWithReturnValue":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":271,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":217,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":110,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.samples.SupportTest.voteForRemovals":219,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":148,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":39,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":202,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":136,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":319,"org.easymock.tests.UsageExpectAndThrowTest.object":146,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":282,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":268,"org.easymock.tests2.DelegateToTest.testWrongClass":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":7,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":257,"org.easymock.tests2.UsageTest.wrongArguments":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":1,"org.easymock.tests.UsageStrictMockTest.range":81,"org.easymock.samples.ConstructorCalledMockTest.testTax":53,"org.easymock.samples.ExampleTest.answerVsDelegate":221,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":69,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":24,"org.easymock.tests2.UsageConstraintsTest.testNull":254,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":147,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":298,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests2.CaptureTest.testPrimitive":229,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":135,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":155,"org.easymock.tests.UsageTest.moreThanOneArgument":186,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":209,"org.easymock.tests2.CaptureTest.testCaptureNone":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":158,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":91,"org.easymock.tests.UsageVerifyTest.twoReturns":90,"org.easymock.tests.UsageVarargTest.varargByteAccepted":198,"org.easymock.tests2.ThreadingTest.testThreadSafe":283,"org.easymock.tests.UsageTest.argumentsOrdered":88,"org.easymock.tests.UsageVarargTest.varargIntAccepted":192,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":132,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":51,"org.easymock.tests2.CaptureTest.testCapture_2617107":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":4,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":77,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests2.StubTest.stub":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":328,"org.easymock.tests.UsageExpectAndThrowTest.longType":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":248,"org.easymock.tests.LimitationsTest.mockNativeMethod":42,"org.easymock.tests2.AnswerTest.answer":318,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":258,"org.easymock.tests2.CaptureTest.testAnd":227,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":31,"org.easymock.tests2.UsageTest.strictResetToDefault":303,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":61,"org.easymock.tests2.NameTest.nameForMocksControl":243,"org.easymock.tests2.MockedExceptionTest.testMockedException":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":188,"org.easymock.tests2.DelegateToTest.testDelegate":280,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":324,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":140,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":151,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":59,"org.easymock.tests2.CaptureTest.testCaptureLast":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":256,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":74,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":269,"org.easymock.tests.MockingTest.testTwoMocks":46,"org.easymock.tests2.CaptureTest.testCapture1_2446744":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":144,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":273,"org.easymock.tests.UsageThrowableTest.throwError":166,"org.easymock.tests.UsageStrictMockTest.differentMethods":82,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":285,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":92,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":211,"org.easymock.tests.UsageExpectAndThrowTest.floatType":138,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":264,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":321,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":67,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests2.CompareToTest.testLessOrEqual":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":10,"org.easymock.samples.ExampleTest.voteAgainstRemoval":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":326,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":157,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests2.UsageTest.niceToStrict":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":137,"org.easymock.tests2.UsageConstraintsTest.testNotNull":272,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":332,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.UsageTest.defaultResetToNice":309,"org.easymock.tests2.MockBuilderTest.testCreateMock":78,"org.easymock.samples.ExampleTest.voteAgainstRemovals":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":116,"org.easymock.tests.UsageVarargTest.differentLength":195,"org.easymock.tests2.CallbackTest.callback":99,"org.easymock.tests.UsageTest.openCallCountByLastCall":187,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":145,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":294,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":249,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":3,"org.easymock.tests.UsageCallCountTest.tooFewCalls":130,"org.easymock.tests.UsageOverloadedMethodTest.overloading":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":262,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":261,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":233,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests2.EasyMockSupportClassTest.testAll":65,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":44,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":153,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":64,"org.easymock.tests2.CaptureTest.testCaptureAll":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":73,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":174,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.testMatches":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":314,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":210,"org.easymock.samples.ExampleTest.voteForRemovals":225,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":287,"org.easymock.tests2.NameTest.nameForNiceMock":242,"org.easymock.tests.UsageVarargTest.allKinds":200,"org.easymock.tests2.DependencyTest.testInterfaceMocking":281,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":212,"org.easymock.samples.BasicClassMockTest.testPrintContent":52,"org.easymock.samples.ExampleTest.addDocument":224,"org.easymock.tests2.DelegateToTest.testStubDelegate":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":244,"org.easymock.tests2.AnswerTest.stubAnswer":322,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":0,"org.easymock.tests2.UsageConstraintsTest.greaterThan":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":160,"org.easymock.tests.UsageVarargTest.varargLongAccepted":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":325,"org.easymock.samples.ExampleTest.voteForRemoval":222,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":284,"org.easymock.tests.UsageExpectAndReturnTest.floatType":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":119,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":27,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":54,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":266,"org.easymock.tests.UsageThrowableTest.noUpperLimit":167,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":250,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":50,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":231,"org.easymock.tests2.SerializationTest.test":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":291,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":168,"org.easymock.tests2.UsageConstraintsTest.testSame":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":102,"org.easymock.samples.SupportTest.addDocument":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":275,"org.easymock.tests2.CaptureTest.testCaptureFirst":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":292,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":311,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":108,"org.easymock.tests.GenericTest.testPackageScope":43,"org.easymock.tests2.UsageTest.moreThanOneArgument":304,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":286,"org.easymock.tests2.CaptureTest.testCapture2_2446744":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":333,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":199,"org.easymock.tests2.NameTest.nameForMock":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":133,"org.easymock.tests.UsageExpectAndReturnTest.longType":104,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":289,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":154,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":270,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":175,"org.easymock.tests2.UsageStrictMockTest.differentMethods":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":152,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":105,"org.easymock.tests.UsageCallCountTest.tooManyCalls":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":162,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":129,"org.easymock.tests2.MockedExceptionTest.testRealException":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":109,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":2,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.testContains":260,"org.easymock.tests2.NameTest.nameForStrictMock":241,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":21,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":79,"org.easymock.tests2.UsageConstraintsTest.testFind":253,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":165,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":312,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":313,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests.UsageExpectAndReturnTest.object":111,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":60,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":93,"org.easymock.tests2.UsageConstraintsTest.lessThan":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":297,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":194,"org.easymock.tests.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":5,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":290,"org.easymock.tests2.CaptureTest.testCaptureRightOne":234,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":126,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests.UsageRangeTest.combination":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":117,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":190,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":204,"org.easymock.tests.UsageTest.wrongArguments":86,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":25,"org.easymock.tests2.EasyMockSupportTest.testVerify":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":114,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":203,"org.easymock.tests.UsageVarargTest.varargShortAccepted":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":183,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":83,"org.easymock.tests2.UsageConstraintsTest.cmpTo":259,"org.easymock.tests.UsageVarargTest.varargCharAccepted":193,"org.easymock.tests2.CaptureTest.testCaptureMultiple":337,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":320,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastCall":307,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":330,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":182,"org.easymock.tests2.CaptureTest.testCaptureFromStub":235,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":76,"org.easymock.tests.UsageTest.unexpectedCallWithArray":85,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":143,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":115,"org.easymock.tests2.CaptureTest.testCapture":338,"org.easymock.tests2.UsageConstraintsTest.constraints":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.samples.ExampleTest.addAndChangeDocument":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":142,"org.easymock.tests.CapturesMatcherTest.test":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":118,"org.easymock.tests.UsageStrictMockTest.testVerify":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":213,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":68,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests2.UsageTest.resumeIfFailure":310,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":11,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":107,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":295,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":191}}]
