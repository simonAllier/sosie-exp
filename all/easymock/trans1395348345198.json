[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,1,97,98,99,100,101,3,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,6,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,7,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,8,173,174,175,176,177,9,178,179,180,181,182,183,10,11,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[237],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[12,238,239,13,14,15,17,19,20,22,23,240,25,26,27,28,29,241,242,243,244,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,245,60,246,247,248,61,62,64,65,68,69,70,71,72,73,74,249,250,251,252,253,254,255,256,257,258,259,260,261,75,76,77,78,262,79,80,81,263,82,83,84,85,87,89,90,264,93,94,95,265,96,1,266,267,97,98,99,100,101,3,102,103,104,105,106,268,107,5,108,269,270,271,271,272,272,273,109,110,111,112,114,115,116,117,118,119,6,120,121,122,123,124,125,126,127,128,274,275,131,133,134,136,276,137,277,138,139,278,279,280,281,282,283,141,142,143,144,145,284,285,286,287,146,147,148,149,150,151,152,153,154,7,155,156,157,158,0,170,171,172,8,173,174,175,176,177,9,178,179,180,181,182,183,10,11,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,214,288,289,290,291,292,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[293,294,130,295,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[297],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[298],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[299,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[238,302],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[84,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[38,304,52,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:227","sourceCode":"net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[158,159,0,305],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[306,186],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[307,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[293,294,99,130,131,295,296,151,309,209,210,211,212,213,214,288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[12,13,14,15,310,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,311,312,313,314,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,315,245,60,316,317,248,318,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,319,320,321,322,83,84,85,86,87,88,89,90,264,91,92,93,94,95,96,1,97,98,99,100,101,3,102,103,104,105,323,106,4,268,107,5,108,109,110,111,112,113,114,324,115,116,117,118,119,6,120,121,122,123,124,125,126,127,128,325,129,130,131,132,133,134,135,326,327,328,329,330,136,137,277,138,139,331,332,333,334,335,140,336,337,338,339,340,341,342,141,142,143,144,145,343,146,147,148,149,150,151,152,153,154,7,155,156,157,344,345,346,347,348,158,159,160,161,162,163,164,349,165,166,167,168,169,350,351,352,170,171,172,8,173,174,175,176,177,9,178,179,180,181,182,183,10,11,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,309,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,353,354,231,232,233,234,355,235,236,356,357,358,359,360,361,362,363],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[152,222,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[99,364,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[365,91,212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"o"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[35,36,37,38,39,40,41,42,304,43,52,53,57,58,61,62,63,64,71,72],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[246,366],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[17,19,20,28,241,242,243,244,245,60,246,247,248,80,95,265,96,1,266,267,97,98,101,3,102,103,104,105,106,268,107,5,108,269,270,273,109,111,112,114,116,117,118,119,6,131,133,134,137,277,138,139,141,146,154,7,155,156,170,171,172,8,173,174,177,9,179,180,181,183,10,11,184,185,216,217,228,229,230],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[367],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[17,19,20,311,312,313,314,85,86,91,92,368,306,369,130,131,133,134,151,152,153,186,208,209,212,213],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:50","failures":[22,370,371,372,373,374,375,241,376,377,242,378,379,380,381,382,383,384,385,386,243,387,388,389,390,391,244,392,393,394,395,396,397,398,399,95,400,1,98,2,271,272],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[401],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[320,120,328,154,172,173,184,185,189,191,205,206,216],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[35,36,38,40,41,304,52,57,61,63,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":36,"org.easymock.tests2.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":260,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":88,"org.easymock.tests2.DelegateToTest.testReturnException":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":121,"org.easymock.tests.MockingTest.testPartialClassMocking":228,"org.easymock.tests.MockClassControlTest.testToString":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":242,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":368,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":269,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":146,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":329,"org.easymock.samples.ExampleTest.answerVsDelegate":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":366,"org.easymock.tests2.UsageConstraintsTest.testNull":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":259,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests.UsageTest.moreThanOneArgument":208,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":155,"org.easymock.tests.UsageTest.argumentsOrdered":213,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":288,"org.easymock.tests.UsageVarargTest.varargIntAccepted":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":116,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":6,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.ReplayStateInvalidUsageTest.times":339,"org.easymock.tests2.AnswerTest.answer":12,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":7,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":254,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":348,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.UsageThrowableTest.throwError":218,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":393,"org.easymock.samples.PartialClassMockTest.testGetArea":270,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":401,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":293,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":327,"org.easymock.tests.UsageOverloadedMethodTest.overloading":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":144,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":47,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":126,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":46,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":300,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests2.EasyMockSupportClassTest.testAll":241,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":346,"org.easymock.tests2.UsageConstraintsTest.testMatches":48,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":332,"org.easymock.samples.ExampleTest.voteForRemovals":114,"org.easymock.tests.UsageVarargTest.allKinds":169,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":237,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":347,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":224,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":125,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":263,"org.easymock.tests2.UsageConstraintsTest.greaterThan":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":5,"org.easymock.samples.ExampleTest.voteForRemoval":111,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":26,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":323,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":136,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":252,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":120,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":253,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":176,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.UsageTest.moreThanOneArgument":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":248,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":168,"org.easymock.tests.GenericTest.testBridgedEquals":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":235,"org.easymock.tests.UsageExpectAndReturnTest.longType":8,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":344,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":55,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":282,"org.easymock.tests.UsageCallCountTest.tooManyCalls":236,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":223,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.testContains":45,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":354,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":77,"org.easymock.tests2.UsageConstraintsTest.testFind":37,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":128,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":31,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":258,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":164,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":352,"org.easymock.tests.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":226,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":400,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":10,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":143,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":384,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageVarargTest.varargCharAccepted":163,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":16,"org.easymock.tests2.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":261,"org.easymock.tests.DefaultClassInstantiatorTest.object":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":278,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":268,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.CapturesMatcherTest.test":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":11,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":244,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":359,"org.easymock.tests2.UsageTest.resumeIfFailure":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":123,"org.easymock.tests2.StubTest.stubWithReturnValue":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":56,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":274,"org.easymock.samples.SupportTest.voteForRemovals":273,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":294,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":275,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":238,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":53,"org.easymock.tests2.DelegateToTest.testWrongClass":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":216,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":217,"org.easymock.tests.UsageStrictMockTest.range":133,"org.easymock.samples.ConstructorCalledMockTest.testTax":271,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":246,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":295,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":287,"org.easymock.tests.UsageUnorderedTest.message":186,"org.easymock.tests.UsageVerifyTest.twoReturns":153,"org.easymock.tests.UsageVarargTest.varargByteAccepted":167,"org.easymock.tests2.ThreadingTest.testThreadSafe":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":387,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":234,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":149,"org.easymock.tests2.UsageConstraintsTest.any":43,"org.easymock.tests2.StubTest.stub":99,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":283,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":337,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":249,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":185,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":0,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":21,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.MockedExceptionTest.testMockedException":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":377,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":230,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":247,"org.easymock.tests.MockingTest.testNicePartialClassMocking":229,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":215,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":98,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":41,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":54,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":58,"org.easymock.samples.ExampleTest.removeNonExistingDocument":324,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":140,"org.easymock.tests.UsageStrictMockTest.differentMethods":134,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":27,"org.easymock.tests2.MockBuilderTest.testCreateMockString":318,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":13,"org.easymock.tests.UsageVerifyTest.twoThrows":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":243,"org.easymock.samples.ExampleTest.voteAgainstRemoval":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":107,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":371,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":225,"org.easymock.tests2.UsageTest.defaultResetToNice":264,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests.UsageVarargTest.differentLength":349,"org.easymock.tests2.CallbackTest.callback":32,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":148,"org.easymock.tests.UsageCallCountTest.tooFewCalls":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":330,"org.easymock.tests.UsageThrowableTest.throwCheckedException":222,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":227,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":1,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":267,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":15,"org.easymock.tests.ObjectMethodsTest.testHashCode":351,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":29,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":108,"org.easymock.samples.ExampleTest.addDocument":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.AnswerTest.stubAnswer":14,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":131,"org.easymock.tests.UsageVarargTest.varargLongAccepted":166,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.floatType":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":272,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":51,"org.easymock.tests.UsageThrowableTest.noUpperLimit":219,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":34,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":171,"org.easymock.tests2.UsageConstraintsTest.testSame":39,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":379,"org.easymock.tests.GenericTest.testPackageScope":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":291,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":399,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":78,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":147,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":342,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":52,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":306,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":245,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":251,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.testOr":40,"org.easymock.tests.UsageRangeTest.combination":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":3,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests2.MockBuilderTest.testWithConstructor":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":380,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.UsageVarargTest.varargShortAccepted":165,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":355,"org.easymock.tests2.UsageConstraintsTest.cmpTo":44,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":239,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":333,"org.easymock.tests.UsageTest.unexpectedCallWithArray":309,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":130,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":233,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests2.CaptureTest.testCapture":307,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.samples.ExampleTest.addAndChangeDocument":115,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":345,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":175,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":119,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":256,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":369}}]
