[{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[10,11,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[55,56,57,58,59,60],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[61,62,63,64,65,66,67,68,69,70],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[72,73,74,75,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,76,42,43,45,46,47,48,49,50,77,78,79,80,51,81,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[68,82,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[68,82,83,85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:344","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[68,82,83,85],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[87,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[89,90,91],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[68,82,83,85],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[92,93],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[95,96,97,98,99,100,101,102,103,104,105,106,74,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,68,83,69,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,147,148,148,149],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[150,151],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[55,56,57,58,59,60],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,95,96,175,97,98,99,100,176,101,177,178,102,103,104,105,179,106,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,92,93,197,198,199,200,201,72,73,74,75,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,107,220,108,109,221,222,110,111,112,61,113,223,62,114,115,224,116,225,226,227,228,229,230,231,232,233,234,235,236,237,15,16,238,239,240,241,242,243,17,244,245,246,247,248,249,250,251,252,253,254,152,255,256,257,258,94,259,260,261,71,87,262,263,264,0,265,266,267,268,269,270,271,272,273,117,118,119,120,274,275,121,122,276,277,278,1,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,123,296,297,124,298,299,300,153,301,302,303,304,305,125,306,307,308,309,310,126,311,312,68,82,83,69,70,313,314,315,10,316,11,317,12,318,319,320,2,321,322,18,3,4,323,324,325,326,327,328,329,330,5,331,332,333,334,6,335,336,337,338,339,127,128,129,130,340,341,131,342,343,344,345,346,132,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,133,370,371,134,135,136,137,372,373,374,375,376,138,377,378,379,380,139,381,86,382,383,384,385,386,387,388,389,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,390,391,392,393,394,395,396,397,398,399,400,401,402,76,403,404,405,406,407,408,409,410,411,412,413,42,414,415,416,417,418,419,7,420,421,422,423,424,425,426,427,428,429,430,43,431,44,45,46,47,48,49,432,433,434,435,436,8,437,438,13,50,439,440,441,77,78,79,80,51,81,442,443,444,445,446,447,448,449,450,451,452,52,453,59,454,455,53,456,457,458,459,460,140,141,142,461,143,462,463,464,144,465,466,60,9,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,150,485,486,487,151,488,489,490,491,54,492,14,493,494,495,496,497,498,145,146,147,148,149,499,500,501,502],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[177,220,503,504,224,147,148],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[280,385,42,414,505,506,468],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[240,245,246,280,507,385,42,414,441,59,454,456,457,60,468],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[317,322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[202,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[168,95,96,175,97,98,99,101,103,104,105,180,181,182,183,184,185,186,187,188,189,190,191,92,197,198,199,200,201,74,204,205,206,207,209,210,213,214,215,216,218,219,108,110,112,113,115,230,15,16,238,239,241,243,17,244,247,248,249,250,251,252,254,152,255,256,257,258,259,260,261,71,87,262,263,264,0,265,266,267,269,270,271,272,117,118,119,120,275,121,122,1,280,281,123,124,125,126,68,82,69,316,326,328,335,336,338,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,133,134,136,372,373,374,375,376,383,384,402,413,414,43,44,45,46,47,48,49,433,434,435,436,440,442,443,52,453,455,53,458,141,142,143,9,468,469,476,478,479,482,490,491,54,492,493,494,496,149,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[152,94,265,270],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[315,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[239,1,281,282,320,413,42,414,440,453,9,469,470],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":252,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.UsageTest.argumentsOrdered":246,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":327,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":242,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":502,"org.easymock.tests2.DelegateToTest.testReturnException":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":78,"org.easymock.tests.MockingTest.testPartialClassMocking":141,"org.easymock.tests.MockClassControlTest.testToString":128,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":154,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":153,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":63,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":478,"org.easymock.tests2.UsageTest.wrongArguments":240,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":388,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":139,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":463,"org.easymock.tests2.UsageConstraintsTest.testNull":152,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":97,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":189,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":131,"org.easymock.tests2.CaptureTest.testPrimitive":209,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":482,"org.easymock.tests.UsageTest.moreThanOneArgument":453,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":405,"org.easymock.tests.UsageTest.argumentsOrdered":457,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":408,"org.easymock.tests.UsageVarargTest.varargIntAccepted":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":372,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":288,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":376,"org.easymock.tests.ReplayStateInvalidUsageTest.times":427,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests2.DependencyTest.testClassMocking":202,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":162,"org.easymock.tests2.CaptureTest.testAnd":206,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":378,"org.easymock.tests2.UsageTest.strictResetToDefault":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":404,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":184,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":412,"org.easymock.tests2.DelegateToTest.testDelegate":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":419,"org.easymock.tests2.DependencyTest.testClassMockingSupport":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":318,"org.easymock.tests2.CaptureTest.testCapture1_2446744":210,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":160,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":421,"org.easymock.tests.UsageThrowableTest.throwError":43,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":380,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":432,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":407,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":312,"org.easymock.samples.PartialClassMockTest.testGetArea":149,"org.easymock.tests.MockingTest.testInterfaceMocking":461,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":373,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":383,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests2.UsageTest.niceToStrict":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":89,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":110,"org.easymock.tests2.MockBuilderTest.testCreateMock":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":55,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":377,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":444,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":386,"org.easymock.tests.UsageOverloadedMethodTest.overloading":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":310,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":50,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":490,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":358,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":71,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":215,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":393,"org.easymock.tests2.EasyMockSupportClassTest.testAll":123,"org.easymock.tests.MockClassControlTest.testEquals":341,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":135,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":417,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":161,"org.easymock.tests2.CaptureTest.testCaptureAll":207,"org.easymock.tests.MockNameTest.defaultName":367,"org.easymock.tests2.UsageConstraintsTest.testMatches":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":406,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":7,"org.easymock.samples.ExampleTest.voteForRemovals":496,"org.easymock.tests.UsageVarargTest.allKinds":401,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":418,"org.easymock.samples.BasicClassMockTest.testPrintContent":146,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":48,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":81,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":317,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":67,"org.easymock.tests2.UsageConstraintsTest.greaterThan":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":105,"org.easymock.samples.ExampleTest.voteForRemoval":493,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":489,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":179,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":381,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":100,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":144,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":182,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":77,"org.easymock.tests2.CaptureTest.testCaptureFirst":219,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":183,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":248,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":354,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests2.CaptureTest.testCapture2_2446744":218,"org.easymock.tests2.UsageTest.moreThanOneArgument":239,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":334,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":400,"org.easymock.tests.GenericTest.testBridgedEquals":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":451,"org.easymock.tests.UsageExpectAndReturnTest.longType":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":415,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":8,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":268,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":403,"org.easymock.tests.UsageCallCountTest.tooManyCalls":452,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":47,"org.easymock.tests.MockingTest.testNiceClassMocking":464,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":118,"org.easymock.tests.MockingTest.testClassMocking":460,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":445,"org.easymock.tests2.UsageConstraintsTest.testContains":261,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":254,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":54,"org.easymock.tests.MockTypeTest.fromEasyMockClass":379,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":465,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":285,"org.easymock.tests.UsageExpectAndReturnTest.object":357,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":188,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":395,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":64,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":345,"org.easymock.tests.UsageTest.exactCallCountByLastCall":458,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":409,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":70,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":164,"org.easymock.tests.MockClassControlTest.testHashCode":340,"org.easymock.tests2.EasyMockSupportTest.testVerify":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":303,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":273,"org.easymock.tests.UsageVarargTest.varargCharAccepted":394,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":483,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastCall":243,"org.easymock.tests.DefaultClassInstantiatorTest.object":484,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":191,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":19,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":343,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":228,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":163,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":130,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":472,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":126,"org.easymock.tests2.UsageTest.resumeIfFailure":247,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":80,"org.easymock.tests2.StubTest.stubWithReturnValue":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":61,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":356,"org.easymock.tests2.SerializationTest.testAllMockedMethod":83,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":332,"org.easymock.samples.SupportTest.voteForRemovals":501,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":56,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":85,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":337,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":194,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":477,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":266,"org.easymock.tests2.DelegateToTest.testWrongClass":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":442,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":443,"org.easymock.tests.UsageStrictMockTest.range":468,"org.easymock.samples.ConstructorCalledMockTest.testTax":147,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":291,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":112,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":456,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":387,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":384,"org.easymock.tests2.CaptureTest.testCaptureNone":214,"org.easymock.tests.UsageUnorderedTest.message":385,"org.easymock.tests.UsageVerifyTest.twoReturns":414,"org.easymock.tests.UsageVarargTest.varargByteAccepted":399,"org.easymock.tests2.ThreadingTest.testThreadSafe":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":306,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":449,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":145,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":346,"org.easymock.tests2.CaptureTest.testCapture_2617107":208,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageConstraintsTest.any":259,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":426,"org.easymock.tests2.StubTest.stub":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":336,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":487,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":425,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests2.SerializationTest.testClass":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":133,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":227,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.NameTest.nameForMocksControl":158,"org.easymock.tests2.MockedExceptionTest.testMockedException":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":297,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":113,"org.easymock.tests.MockingTest.testNicePartialClassMocking":142,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":99,"org.easymock.tests2.CaptureTest.testCaptureLast":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":319,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":257,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":267,"org.easymock.tests.MockingTest.testTwoMocks":140,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":276,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":245,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":271,"org.easymock.samples.ExampleTest.removeNonExistingDocument":497,"org.easymock.tests.UsageStrictMockTest.differentMethods":469,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":232,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":165,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":485,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":199,"org.easymock.tests2.MockBuilderTest.testCreateMockString":116,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":339,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":298,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":295,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":196,"org.easymock.tests.UsageVerifyTest.twoThrows":42,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":313,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":125,"org.easymock.samples.ExampleTest.voteAgainstRemoval":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":328,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.LimitationsTest.privateConstructor":369,"org.easymock.tests2.UsageConstraintsTest.testNotNull":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":49,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests2.UsageTest.defaultResetToNice":244,"org.easymock.samples.ExampleTest.voteAgainstRemovals":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":362,"org.easymock.tests.UsageVarargTest.differentLength":396,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":226,"org.easymock.tests2.CallbackTest.callback":314,"org.easymock.tests2.UsageConstraintsTest.equals":253,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":177,"org.easymock.tests.UsageTest.openCallCountByLastCall":455,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":480,"org.easymock.tests.UsageCallCountTest.tooFewCalls":447,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":389,"org.easymock.tests.UsageThrowableTest.throwCheckedException":46,"org.easymock.tests.MockingTest.testStrictClassMocking":459,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":76,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":231,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":428,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":275,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":93,"org.easymock.tests2.CompareToTest.testGreateOrEqual":88,"org.easymock.tests.ObjectMethodsTest.testHashCode":344,"org.easymock.tests2.NameTest.nameForNiceMock":157,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests2.DependencyTest.testInterfaceMocking":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":65,"org.easymock.samples.ExampleTest.addDocument":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":311,"org.easymock.tests2.DelegateToTest.testStubDelegate":316,"org.easymock.tests2.AnswerTest.stubAnswer":92,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":223,"org.easymock.tests.UsageVarargTest.varargLongAccepted":398,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndReturnTest.floatType":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":69,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":148,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests.UsageThrowableTest.noUpperLimit":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":172,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":0,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":250,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":286,"org.easymock.tests2.SerializationTest.test":82,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":211,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":150,"org.easymock.tests2.UsageConstraintsTest.testSame":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":348,"org.easymock.samples.SupportTest.addDocument":500,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":274,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":299,"org.easymock.tests.GenericTest.testPackageScope":134,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":3,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":171,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":462,"org.easymock.tests2.NameTest.nameForMock":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":359,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":224,"org.easymock.tests2.UsageStrictMockTest.differentMethods":281,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":351,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":436,"org.easymock.tests2.MockedExceptionTest.testRealException":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":292,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":479,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":430,"org.easymock.tests2.NameTest.nameForStrictMock":156,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":91,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":98,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":290,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":486,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":265,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":280,"org.easymock.tests2.UsageConstraintsTest.lessThan":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":325,"org.easymock.tests2.CaptureTest.testCaptureRightOne":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":302,"org.easymock.tests2.UsageConstraintsTest.testOr":256,"org.easymock.tests.UsageRangeTest.combination":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.UsageTest.wrongArguments":454,"org.easymock.tests2.MockBuilderTest.testWithConstructor":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":300,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":360,"org.easymock.tests.UsageVarargTest.varargShortAccepted":397,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":151,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":450,"org.easymock.tests2.UsageConstraintsTest.cmpTo":260,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":18,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.CaptureTest.testCaptureFromStub":217,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":420,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":109,"org.easymock.tests.UsageTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":448,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":361,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":467,"org.easymock.tests2.UsageConstraintsTest.constraints":251,"org.easymock.samples.ExampleTest.addAndChangeDocument":498,"org.easymock.tests.UsageStrictMockTest.testVerify":471,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":499,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":416,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":353,"org.easymock.tests.LimitationsTest.abstractClass":368,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":375,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":506,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":186}}]
