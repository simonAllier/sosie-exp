[{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[313,143],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[103,104,105,314],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[42,44,52,127,128,132,133,135,145],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[6,8,9,11,14,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"failures":[33,35,36,38,39,40,41,60,61,67,68,170,171,173,174,197,198,220,221,224,225,251,252,253,254],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[337,338,170,339,340,341],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[157,159],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[313,143],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[342,343,27,344,345,108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[346,347,348,349,350],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,351],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MocksControl:189","failures":[342,23,31,34,35,36,56,57,352,353,354,58,61,62,63,66,67,68,70,73,75,76,78,79,344,345,86,87,88,355,106,127,168,170,172,173,174,356,357,358,359,360,219,339,221,224,225,226,361,362,363,364,251,253,254],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[103,104,105,314],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,2,4,5,16,17,19,20,21,342,22,23,24,25,26,29,344,365,84,366,85,345,86,87,367,88,368,355,369,370,371,89,90,91,92,93,95,96,103,105,107,108,109,110,164,165,166,167,372,373,374,273,274,275,276,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[375],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[376,377,378,379,380,381,382,89,383,103],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[2,6,8,9,11,14,16,17,18,19,20,21,22,24,25,26,29,33,35,36,42,43,45,46,49,50,51,52,54,55,56,58,59,60,62,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,101,103,104,106,107,108,109,110,113,116,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,162,165,166,167,171,173,174,177,178,181,182,183,219,220,222,223,226,228,229,230,231,234,235,236,252,254,255,257,258,259,260,261,262,268,269,270,271,272,274,276,284,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[139],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,0,1,1,2,4,5,16,17,19,20,21,342,22,23,24,25,26,29,344,365,84,366,85,345,86,87,367,88,368,355,369,370,371,89,90,91,92,93,95,96,103,105,107,108,109,110,164,165,166,167,372,373,374,273,274,275,276,284],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[17,343,384,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[116],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":128,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.UsageTest.argumentsOrdered":68,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":281,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":63,"org.easymock.tests2.StubTest.stubWithReturnValue":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":302,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests2.SerializationTest.testAllMockedMethod":105,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":279,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":232,"org.easymock.tests.MockingTest.testPartialClassMocking":165,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":338,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":375,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":384,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":211,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":314,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":199,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":108,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":98,"org.easymock.tests.UsageExpectAndThrowTest.object":209,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":378,"org.easymock.tests2.DelegateToTest.testWrongClass":117,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":326,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":183,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":134,"org.easymock.tests2.UsageTest.wrongArguments":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":363,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":78,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":90,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":210,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":80,"org.easymock.tests2.CaptureTest.testPrimitive":45,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":181,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests.UsageTest.moreThanOneArgument":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":362,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":18,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":265,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":287,"org.easymock.tests2.CaptureTest.testCaptureNone":50,"org.easymock.tests.UsageUnorderedTest.message":251,"org.easymock.tests.UsageVerifyTest.twoReturns":254,"org.easymock.tests.UsageVarargTest.varargByteAccepted":245,"org.easymock.tests2.ThreadingTest.testThreadSafe":120,"org.easymock.tests.UsageTest.argumentsOrdered":225,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":192,"org.easymock.tests.UsageVarargTest.varargIntAccepted":239,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":189,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":345,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests2.StubTest.stub":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":280,"org.easymock.tests.UsageExpectAndThrowTest.longType":202,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":34,"org.easymock.tests2.SerializationTest.testClass":103,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests.LimitationsTest.mockNativeMethod":284,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":312,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":276,"org.easymock.tests2.AnswerTest.answer":97,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":354,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":371,"org.easymock.tests2.CaptureTest.testAnd":42,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":334,"org.easymock.tests2.UsageTest.strictResetToDefault":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":23,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":37,"org.easymock.tests2.NameTest.nameForMocksControl":41,"org.easymock.tests2.MockedExceptionTest.testMockedException":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":75,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":196,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":203,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":16,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":319,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":87,"org.easymock.tests.MockingTest.testNicePartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":214,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.CaptureTest.testCaptureLast":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":198,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":333,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":360,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.MockingTest.testTwoMocks":164,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":197,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":330,"org.easymock.tests2.CaptureTest.testCapture1_2446744":46,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":207,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":151,"org.easymock.tests.UsageThrowableTest.throwError":255,"org.easymock.tests.UsageStrictMockTest.differentMethods":174,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":347,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":122,"org.easymock.tests2.MockBuilderTest.testCreateMockString":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":267,"org.easymock.tests.UsageExpectAndThrowTest.floatType":201,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":100,"org.easymock.tests.UsageVerifyTest.twoThrows":253,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":109,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":269,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":286,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":200,"org.easymock.tests2.UsageTest.niceToStrict":62,"org.easymock.tests2.UsageConstraintsTest.testNotNull":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":262,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":27,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":85,"org.easymock.tests2.MockBuilderTest.testCreateMock":367,"org.easymock.tests2.UsageTest.defaultResetToNice":66,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":308,"org.easymock.tests.UsageVarargTest.differentLength":242,"org.easymock.tests2.CallbackTest.callback":111,"org.easymock.tests.UsageTest.openCallCountByLastCall":222,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":208,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":250,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":361,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":187,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":304,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":93,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":364,"org.easymock.tests.UsageThrowableTest.throwCheckedException":259,"org.easymock.tests2.EasyMockSupportClassTest.testAll":107,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":275,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":216,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":353,"org.easymock.tests2.CaptureTest.testCaptureAll":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":292,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":95,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":94,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":266,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":184,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":332,"org.easymock.tests2.NameTest.nameForNiceMock":40,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":124,"org.easymock.tests.UsageVarargTest.allKinds":247,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":327,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":252,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":380,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":359,"org.easymock.samples.BasicClassMockTest.testPrintContent":5,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":261,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.AnswerTest.stubAnswer":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":283,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":118,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":382,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":229,"org.easymock.tests.UsageVarargTest.varargLongAccepted":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":324,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":350,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":311,"org.easymock.tests.UsageExpectAndReturnTest.floatType":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":89,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":316,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.UsageThrowableTest.noUpperLimit":256,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":273,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":47,"org.easymock.tests2.SerializationTest.test":104,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":73,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":294,"org.easymock.tests2.UsageConstraintsTest.testSame":131,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":278,"org.easymock.tests2.CaptureTest.testCaptureFirst":55,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":74,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":317,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":70,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":300,"org.easymock.tests.GenericTest.testPackageScope":274,"org.easymock.tests2.UsageTest.moreThanOneArgument":60,"org.easymock.tests2.CaptureTest.testCapture2_2446744":54,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":195,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":88,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":315,"org.easymock.tests2.NameTest.nameForMock":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":190,"org.easymock.tests.UsageExpectAndReturnTest.longType":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":356,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":71,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":217,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":227,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":215,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":231,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":186,"org.easymock.tests2.MockedExceptionTest.testRealException":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":204,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":91,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":365,"org.easymock.tests2.NameTest.nameForStrictMock":39,"org.easymock.tests2.UsageConstraintsTest.testContains":138,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":129,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":156,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests.UsageExpectAndReturnTest.object":303,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":348,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":84,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":321,"org.easymock.tests2.UsageConstraintsTest.lessThan":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":379,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":241,"org.easymock.tests.UsageTest.exactCallCountByLastCall":226,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":381,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":72,"org.easymock.tests2.CaptureTest.testCaptureRightOne":52,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":193,"org.easymock.tests2.UsageConstraintsTest.testOr":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":383,"org.easymock.tests.UsageRangeTest.combination":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":309,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":17,"org.easymock.tests.UsageTest.wrongArguments":221,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":159,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":374,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":298,"org.easymock.tests2.EasyMockSupportTest.testVerify":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":306,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":194,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":249,"org.easymock.tests.UsageVarargTest.varargShortAccepted":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":57,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":335,"org.easymock.tests2.UsageConstraintsTest.cmpTo":137,"org.easymock.tests.UsageVarargTest.varargCharAccepted":240,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":99,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":325,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":32,"org.easymock.tests2.UsageTest.openCallCountByLastCall":64,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":65,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":82,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":248,"org.easymock.tests2.CaptureTest.testCaptureFromStub":53,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":366,"org.easymock.tests.UsageTest.unexpectedCallWithArray":339,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":258,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":307,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests2.UsageConstraintsTest.constraints":127,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":205,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.CapturesMatcherTest.test":351,"org.easymock.tests.ReplayStateInvalidCallsTest.times":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":310,"org.easymock.tests.UsageStrictMockTest.testVerify":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":288,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":110,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":357,"org.easymock.tests2.CompareToTest.testGreateThan":313,"org.easymock.tests2.UsageTest.resumeIfFailure":69,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":48,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":271,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":77}}]
