[{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:62","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.add(new org.easymock.internal.matchers.Equals(java.lang.Object))","type":"CtInvocationImpl"},"failures":[27,28,29,30,3,31,4,5,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,10,11,63,64,65,66,12,13,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,15,104,16,17,105,106,107,108,109,110,18,111,112,113,114,115,19,20,21,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,22,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,23,24,173,174,25,26,175,176,177,178,179,180,181,182,183,184,185,186,187,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:87","sourceCode":"return new java.lang.IllegalArgumentException(((java.lang.Object + \" isn\\'t of type \") + java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[189,190,191,192,193,194],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[195,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[198,199,200,201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[202,203,204,205,206,207,208,209,44],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[210],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:220","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[33,34,211],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,11,12,13,212,213,214,215,14,216,217,218,23,219,24,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[30,3,31,4,5,32,33,6,203,220,48,52,54,62,10,11,64,12,13,221,222,212,223,224,225,226,213,227,214,228,215,69,71,229,73,230,103,14,15,16,17,105,231,107,108,109,110,18,232,216,233,217,234,235,218,236,19,20,21,127,22,152,23,219,24,173,25,26,237,176,177,178],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[205],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[61,66,70,98,102,238,239,240,241,109,114,20,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,180,182,183,184,185,186,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[8,242,243],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[244,245,246,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[3,247,248,249,250,251,204,252,253,254,220,255,207,256,257,258,259,260,260,261,261,89,90,91,92,93,15,111,112,115,116,117,118,119,120,178,179,188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[190,191,192,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5,10,222,212,223,226,227,228,15,16,17,107,110,18,232,217,235,236,19,20,21,22,23,176,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[208,262,209,263,264,265,266,267,268,44,259,269,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[27,28,29,272,273,30,3,31,4,5,32,33,34,211,35,36,37,38,198,39,274,275,276,277,278,279,40,247,248,202,203,249,250,251,204,205,280,281,282,252,283,253,254,284,220,255,207,285,286,287,288,256,257,258,244,289,41,245,42,43,290,291,292,208,262,209,263,264,265,266,267,293,268,44,259,269,270,45,46,47,48,49,50,51,52,294,53,54,55,56,295,296,297,298,299,57,58,59,60,300,301,302,303,61,62,10,11,63,64,65,66,304,12,13,67,68,221,305,306,307,308,309,310,311,69,70,312,71,229,313,72,314,246,315,242,316,73,230,74,75,317,76,260,261,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,318,103,14,15,104,16,17,105,319,320,321,322,323,324,325,326,327,106,108,109,232,111,112,113,114,115,19,20,21,116,117,118,119,120,328,329,330,331,332,333,121,122,123,124,125,126,334,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,22,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,23,219,24,173,174,25,26,175,178,179,180,181,182,183,184,185,186,187,188,335,336,337,338,339,340,341,342,343,344,345,271,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[346,208,262,209,263,264,265,266,267,268,347,44,259,269,270,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[348,6,71,243],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[4,5,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,11,12,13,212,213,214,215,14,216,217,218,23,219,24,25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":203,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":97,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":64,"org.easymock.tests2.StubTest.stubWithReturnValue":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":288,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":141,"org.easymock.tests2.SerializationTest.testAllMockedMethod":211,"org.easymock.tests2.DelegateToTest.testReturnException":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":95,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":349,"org.easymock.tests.MockingTest.testPartialClassMocking":336,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":214,"org.easymock.samples.SupportTest.voteForRemovals":78,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":164,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":152,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":201,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":285,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":75,"org.easymock.tests2.DelegateToTest.testWrongClass":59,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":179,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":280,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":111,"org.easymock.samples.ConstructorCalledMockTest.testTax":260,"org.easymock.tests.UsageStrictMockTest.range":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":81,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":305,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":189,"org.easymock.tests2.UsageConstraintsTest.testNull":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":163,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":42,"org.easymock.tests2.CaptureTest.testPrimitive":263,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":115,"org.easymock.tests.UsageTest.moreThanOneArgument":23,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":171,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":118,"org.easymock.tests2.CaptureTest.testCaptureNone":293,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":129,"org.easymock.tests2.ThreadingTest.testThreadSafe":36,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":237,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageVarargTest.varargIntAccepted":124,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":342,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":87,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":228,"org.easymock.tests2.CaptureTest.testCapture_2617107":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":89,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":215,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":114,"org.easymock.tests2.UsageConstraintsTest.any":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":245,"org.easymock.tests2.StubTest.stub":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":96,"org.easymock.tests.UsageExpectAndThrowTest.longType":155,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":225,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":31,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":45,"org.easymock.tests.LimitationsTest.mockNativeMethod":327,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.AnswerTest.answer":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":151,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":303,"org.easymock.tests2.CaptureTest.testAnd":208,"org.easymock.tests2.UsageTest.strictResetToDefault":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":242,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":32,"org.easymock.tests2.NameTest.nameForMocksControl":9,"org.easymock.tests2.MockedExceptionTest.testMockedException":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":117,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":50,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":197,"org.easymock.tests2.DelegateToTest.testDelegate":60,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":338,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":312,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":43,"org.easymock.tests.MockingTest.testNicePartialClassMocking":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":167,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":314,"org.easymock.tests2.CaptureTest.testCaptureLast":267,"org.easymock.tests2.CompareToTest.testCompareEqual":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":311,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":332,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":176,"org.easymock.tests2.CaptureTest.testCapture1_2446744":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":257,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.ConstraintsToStringTest.andToString":227,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":38,"org.easymock.tests2.MockBuilderTest.testCreateMockString":292,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":120,"org.easymock.tests.UsageExpectAndThrowTest.floatType":154,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":284,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":28,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":276,"org.easymock.samples.PartialClassMockTest.testGetArea":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":90,"org.easymock.samples.ExampleTest.voteAgainstRemoval":83,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":73,"org.easymock.tests2.UsageTest.niceToStrict":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":153,"org.easymock.tests2.UsageConstraintsTest.testNotNull":256,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":187,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":193,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":41,"org.easymock.tests2.UsageTest.defaultResetToNice":304,"org.easymock.tests2.MockBuilderTest.testCreateMock":290,"org.easymock.samples.ExampleTest.voteAgainstRemovals":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":147,"org.easymock.tests.UsageVarargTest.differentLength":334,"org.easymock.tests2.CallbackTest.callback":40,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":234,"org.easymock.tests.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":161,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":51,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":113,"org.easymock.tests.UsageCallCountTest.tooFewCalls":340,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":190,"org.easymock.tests.UsageOverloadedMethodTest.overloading":101,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":253,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":308,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":143,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":283,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":268,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":184,"org.easymock.tests2.EasyMockSupportClassTest.testAll":274,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":217,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":302,"org.easymock.tests2.CaptureTest.testCaptureAll":262,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":335,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":310,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":307,"org.easymock.tests2.UsageConstraintsTest.testMatches":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":309,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":119,"org.easymock.tests.ObjectMethodsTest.testHashCode":0,"org.easymock.samples.ExampleTest.voteForRemovals":85,"org.easymock.tests2.NameTest.nameForNiceMock":8,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":39,"org.easymock.tests.UsageVarargTest.allKinds":131,"org.easymock.tests2.DependencyTest.testInterfaceMocking":74,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":331,"org.easymock.samples.BasicClassMockTest.testPrintContent":88,"org.easymock.samples.ExampleTest.addDocument":84,"org.easymock.tests2.DelegateToTest.testStubDelegate":58,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":186,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":273,"org.easymock.tests2.AnswerTest.stubAnswer":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":99,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":230,"org.easymock.tests.UsageVarargTest.varargLongAccepted":128,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.samples.ExampleTest.voteForRemoval":82,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":37,"org.easymock.tests.UsageExpectAndReturnTest.floatType":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":221,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":261,"org.easymock.tests2.ConstraintsToStringTest.orToString":222,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":255,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageThrowableTest.noUpperLimit":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":323,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":248,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":265,"org.easymock.tests2.SerializationTest.test":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":48,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":182,"org.easymock.tests2.UsageConstraintsTest.testSame":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":133,"org.easymock.samples.SupportTest.addDocument":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":94,"org.easymock.tests2.CaptureTest.testCaptureFirst":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":49,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":139,"org.easymock.tests.GenericTest.testPackageScope":333,"org.easymock.tests2.CaptureTest.testCapture2_2446744":269,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":198,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":195,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":130,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":191,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":344,"org.easymock.tests2.NameTest.nameForMock":6,"org.easymock.tests.UsageExpectAndReturnTest.longType":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":328,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":170,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":287,"org.easymock.tests2.UsageStrictMockTest.differentMethods":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":136,"org.easymock.tests.UsageCallCountTest.tooManyCalls":345,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":326,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":339,"org.easymock.tests2.MockedExceptionTest.testRealException":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":140,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":235,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":306,"org.easymock.tests2.UsageConstraintsTest.testContains":252,"org.easymock.tests2.NameTest.nameForStrictMock":7,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":298,"org.easymock.tests2.UsageConstraintsTest.testFind":249,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":72,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":318,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":279,"org.easymock.tests.UsageExpectAndReturnTest.object":142,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":315,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":289,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":53,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":126,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":192,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":44,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":200,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":218,"org.easymock.tests2.UsageConstraintsTest.testOr":204,"org.easymock.tests.UsageRangeTest.combination":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":148,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":108,"org.easymock.tests.MockClassControlTest.testHashCode":2,"org.easymock.tests2.EasyMockSupportTest.testVerify":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":145,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":224,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":106,"org.easymock.tests.UsageVarargTest.varargShortAccepted":127,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":300,"org.easymock.tests2.UsageConstraintsTest.cmpTo":282,"org.easymock.tests.UsageVarargTest.varargCharAccepted":125,"org.easymock.tests2.CaptureTest.testCaptureMultiple":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":238,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":30,"org.easymock.tests2.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":239,"org.easymock.tests2.CaptureTest.testCaptureFromStub":259,"org.easymock.tests.UsageTest.unexpectedCallWithArray":219,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":159,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":146,"org.easymock.tests2.CaptureTest.testCapture":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":316,"org.easymock.tests2.UsageConstraintsTest.constraints":202,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.samples.ExampleTest.addAndChangeDocument":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":158,"org.easymock.tests2.ConstraintsToStringTest.notToString":223,"org.easymock.tests.CapturesMatcherTest.test":271,"org.easymock.tests.UsageStrictMockTest.testVerify":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":149,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":277,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":226,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":329,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":266,"org.easymock.tests2.UsageTest.resumeIfFailure":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":92,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":52,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":123}}]
