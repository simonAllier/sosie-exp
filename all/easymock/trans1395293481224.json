[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,0,130,131,132,133,134,135,136,137,138,139,140,141,142,10,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,8,188,189,190,191,192,193,194,195,196,197,9,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[11,13,14,15,17,28,31,41,47,50,51,52,53,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,118,119,120,121,122,123,124,126,127,128,0,130,131,132,133,134,135,136,137,138,140,10,143,144,145,148,151,152,153,154,155,156,157,163,170,171,172,173,174,175,176,177,178,179,180,181,182,185,186,187,189,191,195,196,197,198,201,202,204,205,206,207,208,209,210,211,217,224,225,226,227,230,231,232,238,239,243,244,245,246,247,248,249,250,251,252,256,257,259,266,267,268,269,270,271,272,273,274,275,276,277,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,383,391,392,393,394,395,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,425,426,429,430,431,432,433,434,435,436,437,446,448,449,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[52,53,56,58,59,61,71,76,92,94,102],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[65,357,409],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[81,82,88,89,112,113,114,115,207,209,210,267,269,272,273,321,322,323,409,410,412,413,495,496,497,429],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[0,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,130,131,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[0,1,2,3,4,499,5,7,187,8,9,200,500],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[141,190,501,203,480,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[18,19,20,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,121,122,123,124,127,128,0,131,132,133,135,136,137,138,140,141,142,10,143,144,145,146,147,154,155,156,183,184,187,8,189,191,192,194,195,196,197,198,200,201,202,204,253,254,255,256,257,259,262,281,282,283,284,320,383,384,385,386,387,388,390,424,425,426,427,428,430,431,432,433,434,435,436,437,438,443,480,480,481,481,484,485,494],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[236],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[122,123,127,128,133,10,145,147,189,191,192,197,198,201,202,204,234,430,432,433,434,435,438,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,368],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[62,179,181,195,502,324,483,488,489,491,493,494],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[503,60,66,78],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:221","sourceCode":"return T","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[504,505,268,409,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[508,92,93,94,95,96,97,98,99,100,101,509,102,103,104,105,106,510,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[81,82,88,89,207,209,210,511,512,513,514,505,515,516,267,269,272,273,321,322,323,401,402,410,412,413,429],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,130,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[143,144,517,518,519,195],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[368],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[81,82,88,89,112,113,114,115,207,209,210,267,269,272,273,321,322,323,409,410,412,413,495],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[79,86,120,154,155,156,157,266,271,277,286,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,322,328,329,330,331,332,333,416,418,419,420,421,422,423,449,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[322,420,421],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,520,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,0,130,131,132,133,134,135,136,137,138,139,140,141,142,10,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,8,189,191,192,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,521,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[544],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[11,13,14,15,17,28,31,41,47,50,51,52,53,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,118,119,120,121,122,123,124,126,127,128,0,130,131,132,133,134,135,136,137,140,10,144,148,151,152,153,154,155,156,157,163,170,171,172,173,174,175,176,177,178,179,180,181,182,185,186,187,189,195,196,197,198,202,204,205,206,207,208,209,210,211,217,224,225,226,227,238,239,243,244,245,246,247,248,249,250,251,252,256,257,259,266,267,268,269,270,271,272,273,274,276,277,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,337,338,340,343,345,346,347,348,350,351,353,354,355,356,357,391,392,393,394,395,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,425,426,429,431,451,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,480,481,481,482,483,484,485,486,487,488,489,490,491,493,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[545],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":53,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":544,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":368,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":84,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":478,"org.easymock.tests2.DelegateToTest.testReturnException":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":329,"org.easymock.tests.MockingTest.testPartialClassMocking":256,"org.easymock.tests.MockClassControlTest.testToString":432,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":111,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":291,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":495,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":543,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":473,"org.easymock.tests2.UsageTest.wrongArguments":82,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":487,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":443,"org.easymock.tests2.UsageConstraintsTest.testNull":56,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":135,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":437,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests2.CaptureTest.testPrimitive":95,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":477,"org.easymock.tests.UsageTest.moreThanOneArgument":267,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":310,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":393,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":396,"org.easymock.tests.UsageTest.argumentsOrdered":273,"org.easymock.tests.UsageVarargTest.varargIntAccepted":348,"org.easymock.tests.InvocationTest.testEquals":502,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":248,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":252,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":527,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":513,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests.ReplayStateInvalidUsageTest.times":342,"org.easymock.tests2.DependencyTest.testClassMocking":183,"org.easymock.tests2.AnswerTest.answer":148,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":227,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":440,"org.easymock.tests2.CaptureTest.testAnd":92,"org.easymock.tests2.UsageTest.strictResetToDefault":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":10,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":326,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":400,"org.easymock.tests2.DelegateToTest.testDelegate":17,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":526,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":306,"org.easymock.tests.LimitationsTest.mockFinalMethod":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":247,"org.easymock.tests2.DependencyTest.testClassMockingSupport":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":401,"org.easymock.tests2.CaptureTest.testCapture1_2446744":96,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":225,"org.easymock.tests.UsageThrowableTest.throwError":416,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":336,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":442,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":223,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":49,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":530,"org.easymock.samples.PartialClassMockTest.testGetArea":494,"org.easymock.tests.MockingTest.testInterfaceMocking":258,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":36,"org.easymock.tests2.UsageTest.niceToStrict":83,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":292,"org.easymock.tests2.ThreadingTest.testChangeDefault":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":195,"org.easymock.tests2.MockBuilderTest.testCreateMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":166,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":300,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":439,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":406,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":40,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":449,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":464,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":545,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":65,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":349,"org.easymock.tests.MockClassControlTest.testEquals":436,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":426,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":308,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":517,"org.easymock.tests2.CaptureTest.testCaptureAll":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":245,"org.easymock.tests.MockNameTest.defaultName":237,"org.easymock.tests2.UsageConstraintsTest.testMatches":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":394,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":334,"org.easymock.samples.ExampleTest.voteForRemovals":491,"org.easymock.tests.UsageVarargTest.allKinds":357,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":321,"org.easymock.samples.BasicClassMockTest.testPrintContent":485,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":246,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":422,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":205,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":333,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":145,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":531,"org.easymock.samples.ExampleTest.voteForRemoval":488,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":390,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":146,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":138,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":523,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":328,"org.easymock.tests2.CaptureTest.testCaptureFirst":105,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":460,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":104,"org.easymock.tests2.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":356,"org.easymock.tests.GenericTest.testBridgedEquals":428,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":318,"org.easymock.tests.UsageExpectAndReturnTest.longType":456,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":309,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":74,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":391,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":264,"org.easymock.tests.UsageCallCountTest.tooManyCalls":319,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":421,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":122,"org.easymock.tests.MockingTest.testNiceClassMocking":262,"org.easymock.tests.MockingTest.testClassMocking":254,"org.easymock.tests2.UsageConstraintsTest.testContains":64,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":312,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":156,"org.easymock.tests2.UsageConstraintsTest.testFind":55,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":277,"org.easymock.tests.MockTypeTest.fromEasyMockClass":441,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":407,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":118,"org.easymock.tests.UsageExpectAndReturnTest.object":463,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":351,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":232,"org.easymock.tests.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":397,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":469,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":346,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":448,"org.easymock.tests.MockClassControlTest.testHashCode":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":213,"org.easymock.tests2.EasyMockSupportTest.testVerify":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":38,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":398,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":405,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":224,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":228,"org.easymock.tests.UsageVarargTest.varargCharAccepted":350,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":382,"org.easymock.tests2.CaptureTest.testCaptureMultiple":508,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests.DefaultClassInstantiatorTest.object":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":404,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":298,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":519,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":419,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":212,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":529,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":297,"org.easymock.tests.CapturesMatcherTest.test":510,"org.easymock.tests.ReplayStateInvalidCallsTest.times":535,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":470,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":536,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests2.UsageTest.resumeIfFailure":90,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":331,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":462,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":75,"org.easymock.tests2.SerializationTest.testAllMockedMethod":131,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":374,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":483,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":303,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":380,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":149,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":242,"org.easymock.tests.UsageExpectAndThrowTest.object":301,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":72,"org.easymock.tests2.DelegateToTest.testWrongClass":15,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":533,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":238,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":239,"org.easymock.samples.ConstructorCalledMockTest.testTax":480,"org.easymock.tests.UsageStrictMockTest.range":412,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":23,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":25,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":525,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":280,"org.easymock.tests.UsageUnorderedTest.message":429,"org.easymock.tests.UsageVerifyTest.twoReturns":323,"org.easymock.tests.UsageVarargTest.varargByteAccepted":355,"org.easymock.tests2.ThreadingTest.testThreadSafe":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":42,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":316,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":484,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":233,"org.easymock.tests2.CaptureTest.testCapture_2617107":94,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":516,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageConstraintsTest.any":62,"org.easymock.tests2.StubTest.stub":119,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.UsageExpectAndThrowTest.longType":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":379,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":387,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":340,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":208,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests.LimitationsTest.mockNativeMethod":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":472,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":427,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":518,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":541,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":211,"org.easymock.tests2.NameTest.nameForMocksControl":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests2.MockedExceptionTest.testMockedException":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":30,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":117,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":295,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":198,"org.easymock.tests.MockingTest.testNicePartialClassMocking":257,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests2.CaptureTest.testCaptureLast":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":402,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":540,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":59,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":73,"org.easymock.tests.MockingTest.testTwoMocks":255,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":537,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":453,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":299,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":77,"org.easymock.samples.ExampleTest.removeNonExistingDocument":492,"org.easymock.tests.UsageStrictMockTest.differentMethods":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":165,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":214,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":521,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":385,"org.easymock.tests2.ConstraintsToStringTest.andToString":514,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests2.MockBuilderTest.testCreateMockString":204,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":32,"org.easymock.tests.UsageExpectAndThrowTest.floatType":293,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":188,"org.easymock.tests.UsageVerifyTest.twoThrows":322,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":369,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":144,"org.easymock.tests.LimitationsTest.privateConstructor":282,"org.easymock.tests2.UsageConstraintsTest.testNotNull":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":423,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":154,"org.easymock.tests2.UsageTest.defaultResetToNice":87,"org.easymock.samples.ExampleTest.voteAgainstRemovals":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests.UsageVarargTest.differentLength":352,"org.easymock.tests2.CallbackTest.callback":11,"org.easymock.tests2.UsageConstraintsTest.equals":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":141,"org.easymock.tests.UsageTest.openCallCountByLastCall":270,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":475,"org.easymock.tests.UsageCallCountTest.tooFewCalls":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":420,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":253,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":164,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":123,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":126,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":153,"org.easymock.tests2.CompareToTest.testGreateOrEqual":503,"org.easymock.tests.ObjectMethodsTest.testHashCode":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":539,"org.easymock.tests2.NameTest.nameForNiceMock":114,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":534,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":43,"org.easymock.tests2.DelegateToTest.testStubDelegate":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":410,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":199,"org.easymock.tests.UsageVarargTest.varargLongAccepted":354,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":367,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":471,"org.easymock.tests.UsageExpectAndReturnTest.floatType":455,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":187,"org.easymock.tests2.ConstraintsToStringTest.orToString":511,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":481,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageThrowableTest.noUpperLimit":417,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":221,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":18,"org.easymock.tests2.SerializationTest.test":130,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":97,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":454,"org.easymock.tests2.UsageConstraintsTest.testSame":57,"org.easymock.samples.SupportTest.addDocument":482,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":125,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":524,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":33,"org.easymock.tests.GenericTest.testPackageScope":425,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":220,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":260,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":522,"org.easymock.tests2.NameTest.nameForMock":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":465,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":203,"org.easymock.tests2.UsageStrictMockTest.differentMethods":210,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":457,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":305,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":229,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":327,"org.easymock.tests2.MockedExceptionTest.testRealException":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":445,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":500,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":371,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":474,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":345,"org.easymock.tests2.NameTest.nameForStrictMock":113,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":116,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":136,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":22,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":386,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":71,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":191,"org.easymock.tests2.UsageStrictMockTest.range":209,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":528,"org.easymock.tests2.UsageConstraintsTest.lessThan":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":366,"org.easymock.tests2.CaptureTest.testCaptureRightOne":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":37,"org.easymock.tests2.UsageConstraintsTest.testOr":58,"org.easymock.tests.UsageRangeTest.combination":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":133,"org.easymock.tests.UsageTest.wrongArguments":269,"org.easymock.tests2.MockBuilderTest.testWithConstructor":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":34,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":359,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":388,"org.easymock.tests.UsageVarargTest.varargShortAccepted":353,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":317,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":542,"org.easymock.tests2.UsageConstraintsTest.cmpTo":63,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":150,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":532,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":361,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":103,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":335,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":192,"org.easymock.tests.UsageTest.unexpectedCallWithArray":268,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":538,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":409,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":315,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":467,"org.easymock.tests2.CaptureTest.testCapture":509,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":411,"org.easymock.tests2.UsageConstraintsTest.constraints":52,"org.easymock.samples.ExampleTest.addAndChangeDocument":493,"org.easymock.tests2.ConstraintsToStringTest.notToString":512,"org.easymock.tests.UsageStrictMockTest.testVerify":415,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":479,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":244,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":459,"org.easymock.tests.LimitationsTest.abstractClass":281,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":251,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":497,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":176,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":347}}]
