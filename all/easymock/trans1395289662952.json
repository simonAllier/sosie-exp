[{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[13,0,2,3,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[19,20,21,22],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[23,24,25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[29,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[41,38,42,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,23,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,29,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,26,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,13,0,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,1,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,7,8,247,248,249,250,251,252,253,254,255,256,257,258,259,260,32,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,19,279,280,281,6,20,282,283,284,285,286,287,288,289,290,291,292,21,2,293,3,4,294,295,296,297,5,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,38,42,43,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,12,338,339,340,341,342,343,344,345,346,347,14,348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[245,351,352,246,7,8,247,353,354,32,33,355,356,357,266,358,359,267,360,361,362,363,364,365,366,367,368,268,369,370,371,372,373,269,374,375,38,43,376,377,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[33,34,35,36,379,380,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[66,23,69,70,71,80,81,82,114,381,382,148,26,150,153,154,155,169,190,197,198,383,384,223,239,7,247,254,257,258,259,272,283,302,306,307,310,314,317,318,319,323,324,325,326,337,341,342,343],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[278],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[32,33,34,35,36,386,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[387,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[210,211,32,33,355,356,357,266,358,359,267,360,361,362,363,364,365,366,367,368,268,369,370,371,372,373,269,374,375,38,331,335,389,390,391,39,40,392,393,394,395],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:61","sourceCode":"org.easymock.internal.MocksBehavior.lastBehaviorList().addExpected(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result, org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,23,68,69,70,71,72,73,396,397,74,76,77,78,79,81,82,88,89,90,29,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,129,130,131,132,133,134,135,136,137,138,139,140,146,148,149,150,151,152,153,154,155,156,157,158,164,165,166,167,168,169,170,171,172,173,174,13,0,187,188,190,196,197,198,199,200,201,202,203,204,205,206,207,208,209,212,213,214,215,216,1,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,245,7,8,247,248,249,250,251,252,253,254,255,256,257,258,259,260,32,265,266,267,268,269,270,271,272,273,274,275,276,277,278,19,398,279,280,281,6,20,282,283,284,285,286,287,288,289,290,291,292,21,2,293,3,4,294,295,296,297,5,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,38,42,43,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,12,339,340,342,346,14,348,349,350],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[46,47,54,61,194,201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:280","sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n            org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[399],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterfaces":"actualTypeArguments","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[136,137,197],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[400,200,401,224,225,226,227,228,229,230,231,232,233,402,234,235,236,237,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[41,38,42,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":273,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":148,"org.easymock.tests2.UsageTest.argumentsOrdered":324,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":311,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":319,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":213,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":143,"org.easymock.tests.MockingTest.testPartialClassMocking":156,"org.easymock.tests.MockClassControlTest.testToString":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":92,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":267,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":88,"org.easymock.tests2.UsageTest.wrongArguments":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":161,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests2.UsageConstraintsTest.testNull":275,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":241,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":128,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":310,"org.easymock.tests2.CaptureTest.testPrimitive":227,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":91,"org.easymock.tests.UsageTest.moreThanOneArgument":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":111,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":193,"org.easymock.tests.UsageTest.argumentsOrdered":154,"org.easymock.tests.UsageVarargTest.varargIntAccepted":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":380,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":206,"org.easymock.tests.ReplayStateInvalidUsageTest.times":183,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests2.DependencyTest.testClassMocking":387,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":31,"org.easymock.tests2.AnswerTest.answer":14,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":264,"org.easymock.tests2.CaptureTest.testAnd":224,"org.easymock.tests2.UsageTest.strictResetToDefault":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":305,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":87,"org.easymock.tests2.DependencyTest.testClassMockingSupport":388,"org.easymock.tests2.CaptureTest.testCapture1_2446744":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":262,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":177,"org.easymock.tests.UsageThrowableTest.throwError":132,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":195,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":375,"org.easymock.samples.PartialClassMockTest.testGetArea":207,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":93,"org.easymock.tests2.UsageTest.niceToStrict":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":44,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":12,"org.easymock.tests2.MockBuilderTest.testCreateMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":101,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":27,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":159,"org.easymock.tests.UsageOverloadedMethodTest.overloading":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":373,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":20,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":57,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":6,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":17,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":233,"org.easymock.tests.MockClassControlTest.testEquals":127,"org.easymock.tests2.EasyMockSupportClassTest.testAll":266,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":109,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":85,"org.easymock.tests2.CaptureTest.testCaptureAll":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":263,"org.easymock.tests2.UsageConstraintsTest.testMatches":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":194,"org.easymock.samples.ExampleTest.voteForRemovals":220,"org.easymock.tests.UsageVarargTest.allKinds":174,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":86,"org.easymock.samples.BasicClassMockTest.testPrintContent":209,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":138,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":37,"org.easymock.tests2.UsageConstraintsTest.greaterThan":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":247,"org.easymock.samples.ExampleTest.voteForRemoval":217,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":244,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":199,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":314,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":303,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":142,"org.easymock.tests2.CaptureTest.testCaptureFirst":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":304,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":326,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":53,"org.easymock.tests2.CaptureTest.testCapture2_2446744":236,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":298,"org.easymock.tests2.UsageTest.moreThanOneArgument":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":342,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":173,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":81,"org.easymock.tests.UsageExpectAndReturnTest.longType":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":83,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":110,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":191,"org.easymock.tests.UsageCallCountTest.tooManyCalls":82,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":330,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":11,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":75,"org.easymock.tests2.UsageConstraintsTest.testContains":281,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":346,"org.easymock.tests2.UsageConstraintsTest.testFind":274,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":131,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":328,"org.easymock.tests.UsageExpectAndReturnTest.object":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":309,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":35,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":120,"org.easymock.tests.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":140,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":396,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":33,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":62,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":0,"org.easymock.tests.MockClassControlTest.testHashCode":126,"org.easymock.tests2.EasyMockSupportTest.testVerify":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":366,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":397,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":261,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":381,"org.easymock.tests.UsageVarargTest.varargCharAccepted":167,"org.easymock.tests2.CaptureTest.testCaptureMultiple":401,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":255,"org.easymock.tests2.UsageTest.openCallCountByLastCall":320,"org.easymock.tests.DefaultClassInstantiatorTest.object":163,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":312,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":118,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":382,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":135,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":98,"org.easymock.tests.CapturesMatcherTest.test":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":63,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":269,"org.easymock.tests2.UsageTest.resumeIfFailure":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":145,"org.easymock.tests2.StubTest.stubWithReturnValue":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":290,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":28,"org.easymock.samples.SupportTest.voteForRemovals":215,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":104,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":41,"org.easymock.tests.UsageExpectAndThrowTest.object":102,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":287,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":201,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.samples.ConstructorCalledMockTest.testTax":210,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":339,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":185,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":160,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":24,"org.easymock.tests2.CaptureTest.testCaptureNone":232,"org.easymock.tests.UsageUnorderedTest.message":190,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":383,"org.easymock.tests.UsageVerifyTest.twoReturns":198,"org.easymock.tests.UsageVarargTest.varargByteAccepted":172,"org.easymock.tests2.ThreadingTest.testThreadSafe":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":369,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":79,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":208,"org.easymock.tests2.CaptureTest.testCapture_2617107":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":29,"org.easymock.tests2.UsageConstraintsTest.any":279,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":182,"org.easymock.tests2.StubTest.stub":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":144,"org.easymock.tests.UsageExpectAndThrowTest.longType":95,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":181,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":300,"org.easymock.tests.LimitationsTest.mockNativeMethod":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":65,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":10,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests2.NameTest.nameForMocksControl":253,"org.easymock.tests2.MockedExceptionTest.testMockedException":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":359,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":152,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":96,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":340,"org.easymock.tests.MockingTest.testNicePartialClassMocking":157,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":243,"org.easymock.tests2.CaptureTest.testCaptureLast":231,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":278,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":335,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":288,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":100,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":323,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":292,"org.easymock.samples.ExampleTest.removeNonExistingDocument":221,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":179,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":5,"org.easymock.tests2.MockBuilderTest.testCreateMockString":343,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":121,"org.easymock.tests.UsageExpectAndThrowTest.floatType":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":348,"org.easymock.tests.UsageVerifyTest.twoThrows":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":268,"org.easymock.samples.ExampleTest.voteAgainstRemoval":218,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":8,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":395,"org.easymock.tests2.UsageConstraintsTest.testNotNull":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":344,"org.easymock.tests2.UsageTest.defaultResetToNice":322,"org.easymock.samples.ExampleTest.voteAgainstRemovals":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":61,"org.easymock.tests.UsageVarargTest.differentLength":169,"org.easymock.tests2.CallbackTest.callback":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":351,"org.easymock.tests.UsageTest.openCallCountByLastCall":151,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":90,"org.easymock.tests.UsageCallCountTest.tooFewCalls":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":162,"org.easymock.tests.UsageThrowableTest.throwCheckedException":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":141,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":334,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":331,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":333,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":350,"org.easymock.tests.ObjectMethodsTest.testHashCode":119,"org.easymock.tests2.CompareToTest.testGreateOrEqual":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":379,"org.easymock.tests2.NameTest.nameForNiceMock":252,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":299,"org.easymock.tests2.DependencyTest.testInterfaceMocking":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":36,"org.easymock.samples.ExampleTest.addDocument":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":370,"org.easymock.tests2.DelegateToTest.testStubDelegate":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.stubAnswer":349,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests.UsageVarargTest.varargLongAccepted":171,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests.UsageExpectAndReturnTest.floatType":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":211,"org.easymock.tests.UsageThrowableTest.noUpperLimit":133,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":376,"org.easymock.tests2.SerializationTest.test":42,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":229,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":18,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":47,"org.easymock.tests2.UsageConstraintsTest.testSame":276,"org.easymock.samples.SupportTest.addDocument":214,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":361,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests2.NameTest.nameForMock":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":393,"org.easymock.tests2.UsageStrictMockTest.differentMethods":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":117,"org.easymock.tests2.MockedExceptionTest.testRealException":347,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":385,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":256,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":89,"org.easymock.tests2.NameTest.nameForStrictMock":251,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":242,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":378,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":337,"org.easymock.tests2.UsageStrictMockTest.range":258,"org.easymock.tests2.UsageConstraintsTest.lessThan":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":302,"org.easymock.tests2.CaptureTest.testCaptureRightOne":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":365,"org.easymock.tests2.UsageConstraintsTest.testOr":277,"org.easymock.tests.UsageRangeTest.combination":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":239,"org.easymock.tests.UsageTest.wrongArguments":150,"org.easymock.tests2.MockBuilderTest.testWithConstructor":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":362,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":59,"org.easymock.tests.UsageVarargTest.varargShortAccepted":170,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":16,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":80,"org.easymock.tests2.UsageConstraintsTest.cmpTo":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":30,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests2.CaptureTest.testCaptureFromStub":235,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":176,"org.easymock.tests.UsageTest.unexpectedCallWithArray":26,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":78,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":60,"org.easymock.tests2.CaptureTest.testCapture":402,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.UsageConstraintsTest.constraints":272,"org.easymock.samples.ExampleTest.addAndChangeDocument":222,"org.easymock.tests.UsageStrictMockTest.testVerify":73,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":212,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":84,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":204,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":52,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":205,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":307}}]
