[{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[13,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,0,1,2,3,95,4,5,96,97,98,99,100,60,61,62,101,102,103,104,105,106,107,108,109,110,111,112,67,113,114,115,116,17,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,6,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,7,159],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[160,161,162,163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,98,99,181,64,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[197,198],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[199,200,201,164,165,166,167,168,169,170,19,20,171,21,22,23,24,25,26,202,203,204,205,206,207,27,208,70,209,210,28,211,212,213,172,214,215,216,217,218,219,220,221,222,72,73,76,77,78,79,80,81,82,83,223,224,225,226,227,15,228,229,230,231,232,233,29,234,30,31,32,33,34,35,235,86,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,236,237,238,239,240,241,242,243,244,245,246,173,174,175,56,176,177,178,179,180,247,248,249,250,251,252,253,254,255,256,257,57,258,259,91,92,93,0,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,58,280,281,282,283,59,284,285,286,287,288,289,290,291,96,97,98,98,99,99,100,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,181,314,315,60,61,62,63,316,64,101,102,317,103,104,105,106,107,110,111,112,67,318,319,320,321,322,323,324,16,325,17,117,118,119,326,120,121,327,328,329,330,331,332,182,333,334,335,336,122,337,123,338,339,340,341,342,343,344,197,345,346,347,348,349,350,351,352,353,183,184,354,355,185,186,187,188,356,357,358,359,189,360,190,191,361,192,193,362,363,364,365,366,194,195,196,367,124,126,130,131,132,133,135,136,138,368,141,143,151,157,369,370,371,372,65,373,374,375,18,376,377,66,198,378,379,380,381,382,383,158,384,385,386,387],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[228,104,361,376],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[158,388,8,9,10,11,12,389],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[390,122,337,123],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[71,72,73,74,75],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[304,305,307,308,309,310,311,315,361,365],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[391,392,118,121,393,125,128,6,394,137,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[20,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[395,257,294,350,352,396,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[397,303,305,306,307,308,309,310,312,398,313,181,315],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[68,69,70,72,73,74,77,86,90,91,92,93,96,97,98,98,99,99,100,62,101,102,103,104,105,106,107,110,111,112,67,17,117,118,119,120,121,122,123,124,399,126,127,130,131,132,133,135,136,400,138,141,143,151,157,158,401],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[165,86,91,92,93,100,101,317,103,105,16,17,117,118,119,326,120,121,351,126,130,132,133,136,141,143,151,157,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[389],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[355],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[174,179,260,261,268,275],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[402,199,200,201,403,404,13,405,14,406,407,408,409,410,164,165,166,167,168,160,161,411,169,170,19,20,171,21,22,23,24,25,26,68,412,413,414,415,69,416,417,418,419,395,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,202,203,204,205,206,207,27,208,70,209,210,28,211,212,213,172,214,215,216,217,218,219,220,221,222,71,72,73,74,75,76,77,78,79,80,81,82,83,223,224,225,226,227,15,228,229,230,231,232,233,29,234,30,31,32,33,34,35,235,441,84,85,86,87,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,236,237,238,442,239,240,241,242,243,244,245,246,173,174,443,444,445,175,56,176,177,178,179,180,247,248,249,250,251,252,253,254,255,256,162,257,57,163,258,259,88,89,90,91,92,446,93,447,448,94,449,450,451,452,453,0,1,2,3,95,4,454,5,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,58,280,281,282,283,59,284,285,286,287,288,289,290,455,456,457,458,291,96,97,98,99,100,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,181,314,315,60,61,62,63,316,64,101,102,317,103,104,105,106,459,107,108,109,110,111,112,67,113,114,460,318,319,320,321,115,461,462,463,116,464,465,322,323,324,16,325,17,117,118,119,466,326,120,121,393,327,328,329,330,331,332,182,333,334,335,336,122,337,123,338,339,340,341,342,343,344,197,345,346,347,348,349,467,350,351,352,396,353,183,184,354,355,468,185,186,187,188,356,357,469,358,359,189,360,190,191,361,192,193,362,363,364,365,366,194,195,196,470,471,472,473,474,367,475,476,477,478,479,480,124,125,126,127,128,129,130,131,132,6,133,481,134,135,136,137,138,482,483,484,485,486,368,487,488,489,490,491,492,139,140,493,141,494,142,143,144,145,146,495,147,148,149,150,496,151,152,153,154,155,156,157,497,498,499,500,369,370,371,372,65,373,374,375,18,376,377,66,198,378,379,380,381,382,501,383,158,7,159,384,502,503,385,386,387],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[257,294,350,352,353],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[444,456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[213,504,505,281,506,507],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,389],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[68,69,71,74,98,99,100,60,106,108,111,112,114,122,124,125,126,127,128,129,130,131,132,6,133,481,134,135,136,137,138,143,151,157,158,7,159],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[70,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,0,1,2,3,95,4,5,96,97,61,62,101,102,103,104,105,107,109,110,67,113,114,115,116,17,119,123,139,141,142,144,145,147,150,152,153,156],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":355,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.UsageTest.argumentsOrdered":379,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":427,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":376,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":292,"org.easymock.tests2.DelegateToTest.testReturnException":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":22,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.tests.MockClassControlTest.testToString":78,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":460,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":495,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":36,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageTest.wrongArguments":375,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":492,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":294,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":69,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":448,"org.easymock.tests2.UsageConstraintsTest.testNull":186,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":346,"org.easymock.tests2.CaptureTest.testPrimitive":306,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":55,"org.easymock.tests.UsageTest.moreThanOneArgument":280,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":406,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.UsageVarargTest.varargIntAccepted":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":462,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests.ReplayStateInvalidUsageTest.times":230,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":368,"org.easymock.tests2.DependencyTest.testClassMocking":499,"org.easymock.tests2.AnswerTest.answer":384,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":330,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":413,"org.easymock.tests2.CaptureTest.testAnd":303,"org.easymock.tests2.UsageTest.strictResetToDefault":373,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":342,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":410,"org.easymock.tests2.DelegateToTest.testDelegate":353,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":51,"org.easymock.tests.LimitationsTest.mockFinalMethod":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":206,"org.easymock.tests2.DependencyTest.testClassMockingSupport":500,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":160,"org.easymock.tests2.CaptureTest.testCapture1_2446744":307,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":328,"org.easymock.tests.UsageThrowableTest.throwError":29,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":225,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":415,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":498,"org.easymock.samples.PartialClassMockTest.testGetArea":100,"org.easymock.tests.MockingTest.testInterfaceMocking":446,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":451,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":37,"org.easymock.tests2.UsageTest.niceToStrict":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":130,"org.easymock.tests2.MockBuilderTest.testCreateMock":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":489,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":45,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":343,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":412,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":457,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":190,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":57,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":271,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":360,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":312,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":442,"org.easymock.tests2.EasyMockSupportClassTest.testAll":141,"org.easymock.tests.MockClassControlTest.testEquals":82,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":204,"org.easymock.tests2.CaptureTest.testCaptureAll":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":329,"org.easymock.tests.MockNameTest.defaultName":441,"org.easymock.tests2.UsageConstraintsTest.testMatches":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":223,"org.easymock.samples.ExampleTest.voteForRemovals":298,"org.easymock.tests.UsageVarargTest.allKinds":246,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":207,"org.easymock.samples.BasicClassMockTest.testPrintContent":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":205,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":34,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":26,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":454,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":389,"org.easymock.tests2.UsageConstraintsTest.greaterThan":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":494,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":5,"org.easymock.samples.ExampleTest.voteForRemoval":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":113,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":463,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":106,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":70,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":340,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":21,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":467,"org.easymock.tests2.CaptureTest.testCaptureFirst":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":341,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":381,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":267,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":16,"org.easymock.tests2.CaptureTest.testCapture2_2446744":314,"org.easymock.tests2.UsageTest.moreThanOneArgument":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":136,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":245,"org.easymock.tests.GenericTest.testBridgedEquals":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":254,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":202,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":338,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":458,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":52,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":176,"org.easymock.tests.UsageCallCountTest.tooManyCalls":255,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":33,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testNiceClassMocking":94,"org.easymock.tests.MockingTest.testClassMocking":89,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":399,"org.easymock.tests2.UsageConstraintsTest.testContains":189,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":248,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":185,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":28,"org.easymock.tests.MockTypeTest.fromEasyMockClass":414,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":383,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":9,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":240,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":201,"org.easymock.tests.UsageTest.exactCallCountByLastCall":286,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":407,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":257,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.MockClassControlTest.testHashCode":81,"org.easymock.tests2.EasyMockSupportTest.testVerify":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":149,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":408,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":456,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":327,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":371,"org.easymock.tests.UsageVarargTest.varargCharAccepted":239,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":453,"org.easymock.tests2.CaptureTest.testCaptureMultiple":397,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastCall":377,"org.easymock.tests.DefaultClassInstantiatorTest.object":0,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":455,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":42,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":79,"org.easymock.tests2.UsageTest.resumeIfFailure":380,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":24,"org.easymock.tests2.StubTest.stubWithReturnValue":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":366,"org.easymock.tests2.SerializationTest.testAllMockedMethod":123,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":433,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":507,"org.easymock.samples.SupportTest.voteForRemovals":302,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":48,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":390,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":439,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":502,"org.easymock.tests.UsageExpectAndThrowTest.object":46,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":14,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":363,"org.easymock.tests2.DelegateToTest.testWrongClass":352,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":174,"org.easymock.samples.ConstructorCalledMockTest.testTax":98,"org.easymock.tests.UsageStrictMockTest.range":215,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":464,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":232,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":452,"org.easymock.tests2.CaptureTest.testCaptureNone":311,"org.easymock.tests.UsageUnorderedTest.message":235,"org.easymock.tests.UsageVerifyTest.twoReturns":208,"org.easymock.tests.UsageVarargTest.varargByteAccepted":244,"org.easymock.tests2.ThreadingTest.testThreadSafe":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":152,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":252,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":403,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":96,"org.easymock.tests2.CaptureTest.testCapture_2617107":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":20,"org.easymock.tests2.UsageConstraintsTest.any":358,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":229,"org.easymock.tests2.StubTest.stub":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndThrowTest.longType":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":23,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":95,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":228,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.tests2.SerializationTest.testClass":122,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":367,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":484,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests2.NameTest.nameForMocksControl":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":486,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":142,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":501,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":40,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":93,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":482,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":388,"org.easymock.tests2.CaptureTest.testCaptureLast":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":121,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":356,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":364,"org.easymock.tests.MockingTest.testTwoMocks":90,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":44,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":378,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":195,"org.easymock.samples.ExampleTest.removeNonExistingDocument":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":488,"org.easymock.tests.UsageStrictMockTest.differentMethods":216,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":227,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":2,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":138,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":144,"org.easymock.tests.UsageExpectAndThrowTest.floatType":38,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":159,"org.easymock.tests.UsageVerifyTest.twoThrows":27,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":151,"org.easymock.samples.ExampleTest.voteAgainstRemoval":296,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests.LimitationsTest.privateConstructor":85,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":392,"org.easymock.tests2.UsageConstraintsTest.testNotNull":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":35,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests2.UsageTest.defaultResetToNice":198,"org.easymock.samples.ExampleTest.voteAgainstRemovals":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":483,"org.easymock.tests.UsageVarargTest.differentLength":241,"org.easymock.tests2.CallbackTest.callback":372,"org.easymock.tests2.UsageConstraintsTest.equals":468,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":108,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":19,"org.easymock.tests.UsageCallCountTest.tooFewCalls":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":32,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":487,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":326,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":387,"org.easymock.tests.ObjectMethodsTest.testHashCode":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":11,"org.easymock.tests2.NameTest.nameForNiceMock":320,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":325,"org.easymock.tests2.DependencyTest.testInterfaceMocking":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":10,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":497,"org.easymock.tests2.DelegateToTest.testStubDelegate":351,"org.easymock.tests2.AnswerTest.stubAnswer":386,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":172,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":481,"org.easymock.tests.UsageVarargTest.varargLongAccepted":243,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":158,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":193,"org.easymock.tests.UsageThrowableTest.noUpperLimit":234,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":115,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":308,"org.easymock.tests2.SerializationTest.test":337,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests2.UsageConstraintsTest.testSame":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.samples.SupportTest.addDocument":301,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":466,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":145,"org.easymock.tests.GenericTest.testPackageScope":72,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":447,"org.easymock.tests2.NameTest.nameForMock":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":272,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":137,"org.easymock.tests2.UsageStrictMockTest.differentMethods":335,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":50,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":402,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":222,"org.easymock.tests2.MockedExceptionTest.testRealException":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":430,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":170,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":233,"org.easymock.tests2.NameTest.nameForStrictMock":319,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":129,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":116,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":3,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":126,"org.easymock.tests2.UsageStrictMockTest.range":334,"org.easymock.tests2.UsageConstraintsTest.lessThan":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":148,"org.easymock.tests2.CaptureTest.testCaptureRightOne":313,"org.easymock.tests2.UsageConstraintsTest.testOr":188,"org.easymock.tests.UsageRangeTest.combination":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":282,"org.easymock.tests2.MockBuilderTest.testWithConstructor":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":146,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":273,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":4,"org.easymock.tests.UsageVarargTest.varargShortAccepted":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":253,"org.easymock.tests2.UsageConstraintsTest.cmpTo":359,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.CaptureTest.testCaptureFromStub":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":224,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":127,"org.easymock.tests.UsageTest.unexpectedCallWithArray":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":251,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests2.CaptureTest.testCapture":398,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.tests2.UsageConstraintsTest.constraints":354,"org.easymock.samples.ExampleTest.addAndChangeDocument":300,"org.easymock.tests.UsageStrictMockTest.testVerify":218,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":291,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":203,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":309,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests.LimitationsTest.abstractClass":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":344}}]
