[{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[11],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[18,19,20,21,22,16,23,17,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[43,44,44,45,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[46,47],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[53,54,38,55,20,21,56,57,58,59,60,48,26,61,30,31,49,62],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[12,13,14,15],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[63,64,65,66,67,53,54,68,69,70,71,72,73,74,75,76,77,78,79,33,80,81,82,83,84,34,85,86,87,88,89,90,91,37,92,11,93,42,94,95,96,19,97,20,21,98,99,100,101,102,56,103,104,105,57,58,106,107,108,16,109,60,110,111,112,113,114,115,116,117,26,27,28,118,119,120,121,29,122,30,31,123,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[125,99,126,127,101,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[129,130,94,100,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[132,133,134],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[43,135],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[12,3,6,136,137,138,139,140,141],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[77,142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:217","failures":[143,12,13,14,144,145,146,147,63,148,149,150,43,135,151,152,153,154,64,65,18,155,66,67,53,54,156,68,69,157,70,71,72,158,159,160,73,74,161,162,75,163,164,165,76,166,167,0,168,169,170,1,171,172,173,174,175,176,177,178,179,77,78,180,181,182,183,184,185,186,187,188,189,32,79,33,190,80,81,82,83,84,191,34,192,85,86,193,87,194,195,88,196,197,198,199,89,90,91,200,201,35,36,202,37,203,38,39,204,40,92,205,206,207,208,209,11,210,55,41,211,212,93,213,42,214,47,215,216,217,218,219,50,129,220,130,221,94,222,223,224,225,226,95,96,19,97,20,21,98,227,125,228,99,100,126,127,229,101,230,231,232,44,44,45,45,233,234,235,236,237,238,239,240,241,102,56,242,243,244,245,246,247,103,104,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,105,22,271,272,57,58,106,107,108,273,274,275,276,277,59,278,279,280,281,282,283,284,285,128,286,287,16,132,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,109,60,110,111,112,113,114,115,323,324,325,142,326,327,328,329,330,331,332,333,334,335,116,336,337,338,339,340,341,342,343,344,117,345,346,347,348,349,350,351,352,353,354,355,26,27,28,356,357,358,359,360,361,362,131,363,364,365,366,367,368,369,370,371,372,373,374,61,375,376,377,119,120,121,29,122,30,31,123,124,378,379,380,381,382,49,62,383,384],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","type":"type","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[32,33,34,35,36,38,39,40,41],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[3,6,137,138,139,385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[274,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[129,130,94,100,131],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[386,387,388],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[64,78,105,389,334,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[64,54,78,56,248,105,58,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,109,110,111,112,113,114,115,334,27,363],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[390,210],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:124","failures":[143,12,13,14,144,145,146,147,63,150,43,135,151,152,153,154,64,65,18,155,66,67,53,54,156,68,69,157,70,71,72,158,159,160,73,74,161,162,75,163,164,165,76,166,167,0,168,169,170,1,171,172,173,174,175,77,78,180,181,182,183,184,185,186,187,188,32,79,33,190,80,81,82,83,84,191,34,192,85,86,193,87,194,195,88,196,197,198,199,89,90,91,200,201,35,36,202,37,203,38,39,204,92,205,206,207,208,209,11,210,55,41,211,212,93,213,42,214,47,215,216,217,218,219,129,220,130,94,222,223,224,225,226,95,96,19,97,20,21,98,227,125,228,99,100,126,127,229,101,231,232,44,45,233,234,235,239,240,241,102,56,242,243,244,245,247,103,104,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,105,22,271,272,57,58,106,107,108,59,278,279,280,281,282,283,284,285,128,286,287,16,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,109,60,110,111,112,113,114,115,323,324,330,331,332,333,334,335,116,336,337,338,339,340,341,342,343,344,117,345,346,26,27,28,356,357,358,359,360,361,131,363,366,370,371,372,373,374,61,376,377,391,391,119,120,121,29,122,30,31,123,379,380,381],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:972","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[211],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[392,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":36,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":105,"org.easymock.tests2.UsageTest.argumentsOrdered":69,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":51,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":67,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":228,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":331,"org.easymock.tests.MockingTest.testPartialClassMocking":379,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":52,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":326,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":301,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":23,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":137,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":204,"org.easymock.tests2.UsageTest.wrongArguments":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":100,"org.easymock.tests2.UsageConstraintsTest.testNull":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":195,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":75,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.CaptureTest.testPrimitive":190,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":249,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":320,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":358,"org.easymock.tests.UsageTest.argumentsOrdered":107,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":337,"org.easymock.tests.InvocationTest.testEquals":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":284,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":287,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests.ReplayStateInvalidUsageTest.times":296,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":147,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests2.UsageTest.strictResetToDefault":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":376,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":384,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":374,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":321,"org.easymock.tests2.CaptureTest.testCapture1_2446744":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":145,"org.easymock.tests.UsageThrowableTest.throwError":109,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":360,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":9,"org.easymock.samples.PartialClassMockTest.testGetArea":233,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":237,"org.easymock.tests2.UsageTest.niceToStrict":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":302,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":388,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":182,"org.easymock.tests2.MockBuilderTest.testCreateMock":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":310,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":208,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":363,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":261,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":207,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":191,"org.easymock.tests2.EasyMockSupportClassTest.testAll":172,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":146,"org.easymock.tests2.CaptureTest.testCaptureAll":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":372,"org.easymock.tests2.UsageConstraintsTest.testMatches":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":359,"org.easymock.samples.ExampleTest.voteForRemovals":101,"org.easymock.tests.UsageVarargTest.allKinds":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":26,"org.easymock.samples.BasicClassMockTest.testPrintContent":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":373,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":114,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":95,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":385,"org.easymock.tests2.UsageConstraintsTest.greaterThan":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":375,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":91,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":197,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":64,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":270,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":330,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":50,"org.easymock.tests2.CaptureTest.testCaptureFirst":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":159,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":70,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":257,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests2.CaptureTest.testCapture2_2446744":85,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":282,"org.easymock.tests.UsageExpectAndReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":370,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":319,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":356,"org.easymock.tests.UsageCallCountTest.tooManyCalls":283,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":167,"org.easymock.tests2.UsageConstraintsTest.testContains":206,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":277,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":217,"org.easymock.tests2.UsageConstraintsTest.testFind":202,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":56,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":154,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":119,"org.easymock.tests.UsageExpectAndReturnTest.object":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":138,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":339,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":329,"org.easymock.tests.UsageTest.exactCallCountByLastCall":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":239,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":131,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":165,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":62,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":144,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":189,"org.easymock.tests.UsageVarargTest.varargCharAccepted":338,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":96,"org.easymock.tests2.UsageTest.openCallCountByLastCall":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":164,"org.easymock.tests.DefaultClassInstantiatorTest.object":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":367,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":307,"org.easymock.tests.CapturesMatcherTest.test":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":175,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.UsageTest.resumeIfFailure":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":333,"org.easymock.tests2.StubTest.stubWithReturnValue":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":259,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":325,"org.easymock.samples.SupportTest.voteForRemovals":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":313,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":142,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":148,"org.easymock.tests.UsageExpectAndThrowTest.object":311,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":211,"org.easymock.tests2.DelegateToTest.testWrongClass":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":324,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":30,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":312,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":184,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests2.CaptureTest.testCaptureNone":84,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":238,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":28,"org.easymock.tests.UsageVarargTest.varargByteAccepted":343,"org.easymock.tests2.ThreadingTest.testThreadSafe":222,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":280,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":234,"org.easymock.tests2.CaptureTest.testCapture_2617107":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":248,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests2.StubTest.stub":77,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.UsageExpectAndThrowTest.longType":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":294,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":97,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests.LimitationsTest.mockNativeMethod":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":269,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests2.NameTest.nameForMocksControl":179,"org.easymock.tests2.MockedExceptionTest.testMockedException":216,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":305,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":185,"org.easymock.tests.MockingTest.testNicePartialClassMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":196,"org.easymock.tests2.CaptureTest.testCaptureLast":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":1,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":212,"org.easymock.tests.MockingTest.testTwoMocks":378,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":309,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":68,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":214,"org.easymock.samples.ExampleTest.removeNonExistingDocument":230,"org.easymock.tests.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":292,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":224,"org.easymock.tests2.MockBuilderTest.testCreateMockString":188,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.floatType":303,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":11,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":150,"org.easymock.tests.UsageVerifyTest.twoThrows":27,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":174,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":236,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":10,"org.easymock.tests2.UsageConstraintsTest.testNotNull":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":115,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":215,"org.easymock.tests2.UsageTest.defaultResetToNice":156,"org.easymock.samples.ExampleTest.voteAgainstRemovals":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":265,"org.easymock.tests.UsageVarargTest.differentLength":340,"org.easymock.tests2.CallbackTest.callback":76,"org.easymock.tests.UsageTest.openCallCountByLastCall":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":104,"org.easymock.tests.UsageCallCountTest.tooFewCalls":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests.UsageThrowableTest.throwCheckedException":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":169,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":135,"org.easymock.tests.ObjectMethodsTest.testHashCode":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":140,"org.easymock.tests2.NameTest.nameForNiceMock":178,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":226,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":139,"org.easymock.samples.ExampleTest.addDocument":229,"org.easymock.tests2.DelegateToTest.testStubDelegate":220,"org.easymock.tests2.AnswerTest.stubAnswer":43,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":29,"org.easymock.tests.UsageVarargTest.varargLongAccepted":342,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests.UsageExpectAndReturnTest.floatType":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":171,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests.UsageThrowableTest.noUpperLimit":60,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":201,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":81,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":133,"org.easymock.tests2.UsageConstraintsTest.testSame":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":251,"org.easymock.samples.SupportTest.addDocument":227,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":293,"org.easymock.tests.GenericTest.testPackageScope":345,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":383,"org.easymock.tests2.NameTest.nameForMock":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":377,"org.easymock.tests2.MockedExceptionTest.testRealException":218,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":103,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":299,"org.easymock.tests2.NameTest.nameForStrictMock":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":41,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":17,"org.easymock.tests.ErrorMessageTest.testGetters":24,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":181,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":72,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests.UsageRangeTest.combination":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":272,"org.easymock.tests2.MockBuilderTest.testWithConstructor":4,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":263,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":134,"org.easymock.tests.UsageVarargTest.varargShortAccepted":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":281,"org.easymock.tests2.UsageConstraintsTest.cmpTo":205,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":149,"org.easymock.tests2.CompareToTest.testLessThan":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests2.CaptureTest.testCaptureFromStub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":289,"org.easymock.tests.UsageTest.unexpectedCallWithArray":271,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":279,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":264,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.samples.ExampleTest.addAndChangeDocument":231,"org.easymock.tests.UsageStrictMockTest.testVerify":124,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":232,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests2.CompareToTest.testGreateThan":390,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":371,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":286,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":74,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":336}}]
