[{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[21],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[41,42],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,0,74,75,76,77,78,1,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,42,97,98,99,100,101,102,103,104,105,106,2,107,3,108,4,109,110,111,112,113,114,115,116,117,118,119,120,121,18,122,19,123,124,125,126,127,5,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,26,167,168,169,170,171,27,28,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,29,264,265,6,7,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,30,352,353,354,355,356,357,358,359,360,361,32,33,362,363,34,35,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,36,385,386,387,8,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,9,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,10,11,430,12,13,431,14,15,16,17,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,37,38,475,476,477,478,479,480,481,482,483,484,485,486,487,39,488,489,40,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[194],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:52","failures":[47,64,65,66,67,76,77,81,82,95,96,164,166,26,169,170,27,28,173,197,254,262,29,264,360,361,33,362,363,34,35,364,367,368,36,392,404,429,432,433,474,37,38,478,480,483,39,488,40,490],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,0,74,75,76,77,78,1,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,42,97,98,99,100,101,103,104,106,2,107,3,4,109,110,111,112,114,115,116,117,118,119,120,121,18,122,19,123,124,125,126,127,5,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,26,167,168,169,170,171,27,28,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,29,264,265,6,7,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,30,352,353,354,355,356,357,358,359,360,361,32,33,362,363,34,35,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,384,36,385,386,387,8,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,9,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,10,11,430,12,13,431,14,15,16,17,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,37,38,475,476,477,478,479,480,481,482,483,484,485,486,487,39,488,489,40,490,491,492,493,494,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:45","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[44,44,45,45,71,72,75,76,77,78,83,85,86,88,89,95,96,42,124,206,262,333,334,335,336,337,355,8,405,409,410,419,424,445,446,449,454,455,456,457,458,484,485,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[496,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[6,7,266,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[73,0,76,78,1,80,90,95,115,117,123],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[74],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[378,382],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[255],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[157,166,26,27,28,185,203,262,29,264,341,345,352,353,361,32,33,34,35,36,389,463,466,474,37,38,39,488,40,490],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[377,378,379,380,382,384],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[29,264,40,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[199,200,201],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).endsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,0,74,75,76,77,78,1,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,42,97,98,99,100,101,103,104,106,2,107,3,4,109,110,111,112,114,115,116,117,118,119,120,121,18,122,19,123,124,125,126,498,499,500,501,502,503,127,5,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,504,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,26,167,168,169,170,171,27,28,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,29,264,265,6,7,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,30,352,353,354,355,356,357,358,359,360,361,32,33,362,363,34,35,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,384,36,385,386,387,8,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,9,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,10,11,430,12,13,431,14,15,16,17,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,468,469,470,471,472,473,474,37,38,475,476,477,478,479,480,481,482,483,484,485,486,487,39,488,489,40,490,491,492,493,494,495],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[527,528,529,530,32,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[531,527,532,533,534,535,536,537,528,538,539,166,26,27,28,262,29,264,347,350,351,30,352,353,529,540,530,541,542,31,361,32,33,34,35,36,474,37,38,39,488,40,490],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[543],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[544],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":360,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":415,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":168,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":54,"org.easymock.tests2.DelegateToTest.testReturnException":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":469,"org.easymock.tests.MockingTest.testPartialClassMocking":314,"org.easymock.tests.MockClassControlTest.testToString":435,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":63,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":239,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":267,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":177,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":526,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":445,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":452,"org.easymock.samples.ExampleTest.answerVsDelegate":47,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":343,"org.easymock.tests2.UsageConstraintsTest.testNull":76,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":319,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":129,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":225,"org.easymock.tests2.CaptureTest.testPrimitive":118,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":449,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":286,"org.easymock.tests.UsageTest.moreThanOneArgument":361,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":335,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":11,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":538,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":454,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":162,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":200,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":458,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":510,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":534,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":329,"org.easymock.tests2.DependencyTest.testClassMocking":174,"org.easymock.tests2.AnswerTest.answer":254,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":100,"org.easymock.tests2.CaptureTest.testAnd":115,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":340,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":358,"org.easymock.tests2.DelegateToTest.testDelegate":197,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":370,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":509,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":282,"org.easymock.tests.LimitationsTest.mockFinalMethod":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":472,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":375,"org.easymock.tests2.DependencyTest.testClassMockingSupport":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":352,"org.easymock.tests2.CaptureTest.testCapture1_2446744":119,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":98,"org.easymock.tests.UsageThrowableTest.throwError":390,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":323,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":342,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":163,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":253,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":513,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.MockingTest.testInterfaceMocking":316,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":494,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":467,"org.easymock.tests2.UsageTest.niceToStrict":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":268,"org.easymock.tests2.ThreadingTest.testChangeDefault":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":2,"org.easymock.tests2.MockBuilderTest.testCreateMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":248,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":188,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":527,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":276,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":387,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":450,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":23,"org.easymock.tests.UsageOverloadedMethodTest.overloading":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":250,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":85,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":349,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":21,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":19,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests.MockClassControlTest.testEquals":439,"org.easymock.tests2.EasyMockSupportClassTest.testAll":232,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":400,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":536,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":284,"org.easymock.tests2.CaptureTest.testCaptureAll":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":373,"org.easymock.tests.MockNameTest.defaultName":389,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":336,"org.easymock.samples.ExampleTest.voteForRemovals":51,"org.easymock.tests.UsageVarargTest.allKinds":432,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":474,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":374,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":396,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":159,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":196,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":357,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":140,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":514,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":384,"org.easymock.samples.ExampleTest.voteForRemoval":48,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":144,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":141,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":132,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":506,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":365,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":218,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":468,"org.easymock.tests2.CaptureTest.testCaptureFirst":126,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":219,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":173,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":298,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":17,"org.easymock.tests.GenericTest.testBridgedEquals":402,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":482,"org.easymock.tests.UsageExpectAndReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":371,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":285,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":483,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":540,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":395,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":208,"org.easymock.tests.MockingTest.testNiceClassMocking":320,"org.easymock.tests.MockingTest.testClassMocking":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":476,"org.easymock.tests2.UsageConstraintsTest.testContains":83,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":150,"org.easymock.tests2.UsageConstraintsTest.testFind":75,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":404,"org.easymock.tests.MockTypeTest.fromEasyMockClass":341,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":486,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":70,"org.easymock.tests.UsageExpectAndReturnTest.object":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":224,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":13,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":25,"org.easymock.tests.UsageTest.exactCallCountByLastCall":364,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":542,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":61,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":348,"org.easymock.tests.MockClassControlTest.testHashCode":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":153,"org.easymock.tests2.EasyMockSupportTest.testVerify":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":242,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":533,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":386,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":97,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":179,"org.easymock.tests.UsageVarargTest.varargCharAccepted":12,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":376,"org.easymock.tests2.CaptureTest.testCaptureMultiple":543,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastCall":169,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":227,"org.easymock.tests.DefaultClassInstantiatorTest.object":377,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":385,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":463,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":393,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":183,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":152,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":512,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":273,"org.easymock.tests.ReplayStateInvalidCallsTest.times":518,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":287,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":519,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":535,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":251,"org.easymock.tests2.UsageTest.resumeIfFailure":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":471,"org.easymock.tests2.StubTest.stubWithReturnValue":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":300,"org.easymock.tests2.SerializationTest.testAllMockedMethod":266,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":421,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":528,"org.easymock.samples.SupportTest.voteForRemovals":59,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":279,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":427,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":255,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":461,"org.easymock.tests.UsageExpectAndThrowTest.object":277,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":195,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":516,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":484,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":485,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":203,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":278,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":3,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":451,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":529,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":508,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":495,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":499,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":38,"org.easymock.tests.UsageVarargTest.varargByteAccepted":16,"org.easymock.tests2.ThreadingTest.testThreadSafe":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":246,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":480,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":466,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":117,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":539,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":425,"org.easymock.tests2.UsageConstraintsTest.any":81,"org.easymock.tests2.StubTest.stub":205,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":328,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndThrowTest.longType":270,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":327,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":443,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":182,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":524,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":500,"org.easymock.tests2.NameTest.nameForMocksControl":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":184,"org.easymock.tests2.MockedExceptionTest.testMockedException":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":234,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":363,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":271,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":127,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":4,"org.easymock.tests.MockingTest.testNicePartialClassMocking":315,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":180,"org.easymock.tests2.CaptureTest.testCaptureLast":18,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":353,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":523,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":214,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.MockingTest.testTwoMocks":313,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":520,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":275,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":503,"org.easymock.samples.ExampleTest.removeNonExistingDocument":52,"org.easymock.tests.UsageStrictMockTest.differentMethods":490,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":187,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":325,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":154,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":502,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":379,"org.easymock.tests2.ConstraintsToStringTest.andToString":537,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":145,"org.easymock.tests2.MockBuilderTest.testCreateMockString":114,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":236,"org.easymock.tests.UsageExpectAndThrowTest.floatType":269,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":231,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":257,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":62,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":245,"org.easymock.samples.ExampleTest.voteAgainstRemoval":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.LimitationsTest.privateConstructor":442,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":397,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":148,"org.easymock.tests2.UsageTest.defaultResetToNice":171,"org.easymock.samples.ExampleTest.voteAgainstRemovals":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":306,"org.easymock.tests.UsageVarargTest.differentLength":431,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":181,"org.easymock.tests2.CallbackTest.callback":178,"org.easymock.tests2.UsageConstraintsTest.equals":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":135,"org.easymock.tests.UsageTest.openCallCountByLastCall":362,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":447,"org.easymock.tests.UsageCallCountTest.tooFewCalls":478,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":453,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":501,"org.easymock.tests.UsageThrowableTest.throwCheckedException":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":530,"org.easymock.tests.MockingTest.testStrictClassMocking":311,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":186,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":209,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":212,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":259,"org.easymock.tests.ObjectMethodsTest.testHashCode":464,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":522,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests2.NameTest.nameForNiceMock":66,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":517,"org.easymock.tests2.DependencyTest.testInterfaceMocking":176,"org.easymock.samples.ExampleTest.addDocument":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":247,"org.easymock.tests2.DelegateToTest.testStubDelegate":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":252,"org.easymock.tests2.AnswerTest.stubAnswer":258,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":488,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":109,"org.easymock.tests.UsageVarargTest.varargLongAccepted":15,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.floatType":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.tests2.ConstraintsToStringTest.orToString":531,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":161,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":72,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":198,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":120,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":378,"org.easymock.tests2.UsageConstraintsTest.testSame":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":292,"org.easymock.samples.SupportTest.addDocument":58,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":211,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":507,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":237,"org.easymock.tests.GenericTest.testPackageScope":399,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":160,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":505,"org.easymock.tests2.NameTest.nameForMock":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":113,"org.easymock.tests2.UsageStrictMockTest.differentMethods":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":281,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":359,"org.easymock.tests2.MockedExceptionTest.testRealException":151,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":204,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":541,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":418,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":446,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":332,"org.easymock.tests2.NameTest.nameForStrictMock":65,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":22,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":130,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":202,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":496,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":380,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":103,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":511,"org.easymock.tests2.UsageConstraintsTest.lessThan":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":217,"org.easymock.tests2.CaptureTest.testCaptureRightOne":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":241,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":498,"org.easymock.tests2.UsageConstraintsTest.testOr":78,"org.easymock.tests.UsageRangeTest.combination":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":5,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":238,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":304,"org.easymock.tests.UsageVarargTest.varargShortAccepted":14,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":382,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":481,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":525,"org.easymock.tests2.UsageConstraintsTest.cmpTo":82,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":256,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":515,"org.easymock.tests2.CompareToTest.testLessThan":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests2.CaptureTest.testCaptureFromStub":124,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":322,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":104,"org.easymock.tests.UsageTest.unexpectedCallWithArray":32,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":521,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":305,"org.easymock.tests2.CaptureTest.testCapture":20,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":489,"org.easymock.tests2.UsageConstraintsTest.constraints":73,"org.easymock.samples.ExampleTest.addAndChangeDocument":53,"org.easymock.tests2.ConstraintsToStringTest.notToString":532,"org.easymock.tests.UsageStrictMockTest.testVerify":492,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":57,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":487,"org.easymock.tests2.CompareToTest.testGreateThan":544,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":372,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":456,"org.easymock.tests.LimitationsTest.abstractClass":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":457,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":222}}]
