[{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[25,253,254,255,256,257,138,258,259,260,261,262,192,194,195],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[2,3,5,6,7,9,10,11,12,13,14,15,16,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,79,80,81,82,83,84,85,88,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,144,145,146,174,175,176,177,178,180,181,182,183,186,187,188,193,195,196,198,199,200,201,202,203,209,210,211,212,213,215,216,224,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[74,77,78,263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[264],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[265,266,267,268,269,270],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[74,77,78,263],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[16,24,27,28,291,29,30,292,293,31,32,33,34,35,36,37,294,100,101,102,103,104,105,106,107,108,109,295,110,111,112,113,114,115,116,117,118,119,120,121,296,122,123,124,125,128,129,257,137,140,141,142,143,144,145,146,297,192,209,210,211,212,213,222,231,232],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[298,299,300],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[4,73,76,77,128,129],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[301],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[302,102,109,114,125],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[303,304,305,306,307,308,309,65,310,79],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[79,80,311,312],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[303,304,313,314,315,305,306,307,308,316,317,309,65,310,79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[303,304,313,314,315,305,306,307,316,317,309,65,310,79],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:317","failures":[190,191,229,230],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[318,319,303,320,321,310,68,72,322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[326,327,257,258,328,329],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[79,80,311,312],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[190,191,229,230],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests2.UsageTest.argumentsOrdered":255,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.StubTest.stubWithReturnValue":88,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":303,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":242,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":311,"org.easymock.tests2.DelegateToTest.testReturnException":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":314,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":327,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":284,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":166,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":312,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":154,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":185,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":74,"org.easymock.tests.UsageExpectAndThrowTest.object":164,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":120,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":305,"org.easymock.tests2.DelegateToTest.testWrongClass":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":146,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":109,"org.easymock.tests2.UsageTest.wrongArguments":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":140,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":281,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":138,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests2.UsageConstraintsTest.testNull":105,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":57,"org.easymock.tests2.CaptureTest.testPrimitive":29,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":144,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":173,"org.easymock.tests.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":12,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":227,"org.easymock.tests2.CaptureTest.testCaptureNone":32,"org.easymock.tests.UsageUnorderedTest.message":192,"org.easymock.tests.UsageVerifyTest.twoReturns":195,"org.easymock.tests2.ThreadingTest.testThreadSafe":95,"org.easymock.tests.UsageTest.argumentsOrdered":261,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":148,"org.easymock.tests2.CaptureTest.testCapture_2617107":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":143,"org.easymock.tests2.UsageConstraintsTest.any":110,"org.easymock.tests2.StubTest.stub":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.UsageExpectAndThrowTest.longType":157,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":81,"org.easymock.tests2.SerializationTest.testClass":79,"org.easymock.tests.LimitationsTest.mockNativeMethod":224,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":252,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":216,"org.easymock.tests2.AnswerTest.answer":73,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":274,"org.easymock.tests2.CaptureTest.testAnd":27,"org.easymock.tests2.UsageTest.strictResetToDefault":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":319,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":276,"org.easymock.tests2.MockedExceptionTest.testMockedException":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":182,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":152,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":158,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":10,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":169,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":315,"org.easymock.tests2.CaptureTest.testCaptureLast":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":153,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":108,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":121,"org.easymock.tests2.CaptureTest.testCapture1_2446744":30,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":322,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":162,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":254,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":124,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":299,"org.easymock.tests.UsageThrowableTest.throwError":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":277,"org.easymock.tests.UsageStrictMockTest.differentMethods":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":283,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":267,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":97,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":208,"org.easymock.tests.UsageExpectAndThrowTest.floatType":156,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":116,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":76,"org.easymock.tests.UsageVerifyTest.twoThrows":194,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":84,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":210,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":18,"org.easymock.tests2.UsageTest.niceToStrict":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":155,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":324,"org.easymock.tests2.ThreadingTest.testChangeDefault":300,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":203,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":20,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":61,"org.easymock.tests2.UsageTest.defaultResetToNice":45,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":248,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":273,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests2.UsageConstraintsTest.equals":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":278,"org.easymock.tests.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":163,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":142,"org.easymock.tests.UsageOverloadedMethodTest.overloading":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":114,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":186,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":113,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":33,"org.easymock.tests.UsageThrowableTest.throwCheckedException":200,"org.easymock.tests2.EasyMockSupportClassTest.testAll":82,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":171,"org.easymock.tests2.CaptureTest.testCaptureAll":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.testMatches":115,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":70,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":207,"org.easymock.tests2.CompareToTest.testGreateOrEqual":302,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":316,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":99,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":193,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":307,"org.easymock.tests2.DelegateToTest.testStubDelegate":91,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":202,"org.easymock.tests2.AnswerTest.stubAnswer":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":93,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":309,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":181,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":19,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":270,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":251,"org.easymock.tests.UsageExpectAndReturnTest.floatType":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":65,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":288,"org.easymock.tests.UsageThrowableTest.noUpperLimit":197,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":214,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":101,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":292,"org.easymock.tests2.SerializationTest.test":80,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":304,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":50,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":234,"org.easymock.tests2.UsageConstraintsTest.testSame":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":89,"org.easymock.tests2.CaptureTest.testCaptureFirst":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":51,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":47,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":240,"org.easymock.tests.GenericTest.testPackageScope":215,"org.easymock.tests2.CaptureTest.testCapture2_2446744":36,"org.easymock.tests2.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":151,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":64,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":287,"org.easymock.tests.GenericTest.testBridgedEquals":272,"org.easymock.tests.UsageExpectAndReturnTest.longType":236,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":172,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":296,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":321,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":183,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":147,"org.easymock.tests2.MockedExceptionTest.testRealException":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":313,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.testContains":112,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":22,"org.easymock.tests2.UsageConstraintsTest.testFind":104,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":14,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":129,"org.easymock.tests.UsageExpectAndReturnTest.object":243,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":268,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":16,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":279,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":285,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":301,"org.easymock.tests.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":308,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":49,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":149,"org.easymock.tests2.UsageConstraintsTest.testOr":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":310,"org.easymock.tests.UsageRangeTest.combination":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":11,"org.easymock.tests.UsageTest.wrongArguments":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":131,"org.easymock.tests2.MockBuilderTest.testWithConstructor":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":246,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":150,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":269,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":130,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":190,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":294,"org.easymock.tests2.UsageConstraintsTest.cmpTo":111,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":75,"org.easymock.tests2.UsageTest.openCallCountByLastCall":43,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests.DefaultClassInstantiatorTest.object":265,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":59,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.UsageTest.unexpectedCallWithArray":258,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":161,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":199,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":17,"org.easymock.tests2.UsageConstraintsTest.constraints":102,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":85,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":293,"org.easymock.tests2.UsageTest.resumeIfFailure":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":211,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":212,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":54}}]
