[{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[16,17,18,19,20,21],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,18,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[22,59,23,24,60,25,61,62,32,63,33,34,64,65,66,67,68,69,70,57,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,26,100,27,28,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,1,2,3,4,5,6,7,8,139,9,11,12,13,14,140,141,142,58,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,16,179,39,40,180,181,182,17,183,41,42,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,213,214,214,215,216,217,218,29,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,30,254,255,256,257,258,259,260,261,262,263,264,265,46,47,266,48,49,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,31,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,50,18,51,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,52,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,19,53,402,54,403,20,55,56,404,405,406,407,408,409,410,411,412,413,414,415,416,21,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[105,110,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[123],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[65,67,85,87,94,97,452,131,453,133,134,135,454,137,455,456,163,186,457,458,188,189,191,459,194,195,197,198,199,200,201,204,205,206,207,460,211,213,213,214,214,225,226,274,307,461,319,340,341,342,361,426,427,428,430,443,444,445,446,447,448],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[104,105,107,108,109,110,111,112,113,114,123,124,128,129,1,2,3,4,11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[32,82,26,27,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,138,1,2,3,4,5,6,7,8,139,9,11,12,13,14,201,227,228,229,230,231,236,46,47,324,325,326,327,328,355,52,413,414,422,423],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[33,45,48,18,51],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[184,257,277,279,297],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[231,330,365,371,378,379],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[68,69,70,71,74,75,78,140,141,142,143,146,147,150,212,217],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:134","failures":[10,15],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[462,202,213,213,214,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[32,102,103,107,108,109,110,116,118,119,121,122,128,129,130,12,193,213,213,214,214,227,228,229,230,231,241,245,246,254,259,47,275,290,324,325,328,329,330,331,332,333,413,414,422],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[59,60,25,247],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[44,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[463],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[464],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":105,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":251,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":181,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":212,"org.easymock.tests2.DelegateToTest.testReturnException":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":233,"org.easymock.tests.MockingTest.testPartialClassMocking":427,"org.easymock.tests.MockClassControlTest.testToString":445,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":101,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":316,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":382,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":210,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":112,"org.easymock.tests2.UsageTest.wrongArguments":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":324,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":271,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":319,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":432,"org.easymock.tests2.UsageConstraintsTest.testNull":108,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":197,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":157,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":328,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":401,"org.easymock.tests.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":331,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":56,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":149,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":231,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests.ReplayStateInvalidUsageTest.times":298,"org.easymock.tests2.AnswerTest.answer":22,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":178,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":278,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":397,"org.easymock.tests.LimitationsTest.mockFinalMethod":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":338,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":410,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":176,"org.easymock.tests.UsageThrowableTest.throwError":415,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":292,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":99,"org.easymock.samples.PartialClassMockTest.testGetArea":211,"org.easymock.tests.MockingTest.testInterfaceMocking":429,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":322,"org.easymock.tests2.UsageTest.niceToStrict":180,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":133,"org.easymock.tests2.MockBuilderTest.testCreateMock":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":75,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":391,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":269,"org.easymock.tests.UsageOverloadedMethodTest.overloading":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":118,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":311,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":373,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":117,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":347,"org.easymock.tests.MockClassControlTest.testEquals":449,"org.easymock.tests2.EasyMockSupportClassTest.testAll":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":399,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":177,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":336,"org.easymock.tests.MockNameTest.defaultName":273,"org.easymock.tests2.UsageConstraintsTest.testMatches":119,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":332,"org.easymock.samples.ExampleTest.voteForRemovals":222,"org.easymock.tests.UsageVarargTest.allKinds":355,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":50,"org.easymock.samples.BasicClassMockTest.testPrintContent":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":337,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":420,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":237,"org.easymock.tests2.UsageConstraintsTest.greaterThan":121,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":207,"org.easymock.samples.ExampleTest.voteForRemoval":219,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":289,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":80,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":200,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":274,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":153,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":232,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":165,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":247,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":369,"org.easymock.tests2.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.CaptureTest.testCapture2_2446744":13,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":258,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":354,"org.easymock.tests.GenericTest.testBridgedEquals":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":441,"org.easymock.tests.UsageExpectAndReturnTest.longType":365,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":126,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":398,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":329,"org.easymock.tests.UsageCallCountTest.tooManyCalls":442,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":436,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":387,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":419,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":458,"org.easymock.tests.MockingTest.testNiceClassMocking":433,"org.easymock.tests.MockingTest.testClassMocking":425,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":435,"org.easymock.tests2.UsageConstraintsTest.testContains":116,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":163,"org.easymock.tests2.UsageConstraintsTest.testFind":107,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":240,"org.easymock.tests.MockTypeTest.fromEasyMockClass":318,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":27,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests.UsageExpectAndReturnTest.object":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":76,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":349,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":359,"org.easymock.tests.UsageTest.exactCallCountByLastCall":404,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":406,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":187,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":378,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":310,"org.easymock.tests.MockClassControlTest.testHashCode":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":141,"org.easymock.tests2.EasyMockSupportTest.testVerify":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":91,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":31,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":175,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":138,"org.easymock.tests.UsageVarargTest.varargCharAccepted":348,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":263,"org.easymock.tests2.UsageTest.openCallCountByLastCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":159,"org.easymock.tests.DefaultClassInstantiatorTest.object":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":280,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":57,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":140,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":447,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":388,"org.easymock.tests.CapturesMatcherTest.test":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":302,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":235,"org.easymock.tests2.StubTest.stubWithReturnValue":193,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":371,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":256,"org.easymock.samples.SupportTest.voteForRemovals":216,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":394,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":262,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":59,"org.easymock.tests.UsageExpectAndThrowTest.object":392,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":124,"org.easymock.tests2.DelegateToTest.testWrongClass":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":413,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":414,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":213,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":173,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":393,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":135,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":270,"org.easymock.tests2.CaptureTest.testCaptureNone":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":323,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":51,"org.easymock.tests.UsageVarargTest.varargByteAccepted":353,"org.easymock.tests2.ThreadingTest.testThreadSafe":79,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":439,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":225,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":360,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":327,"org.easymock.tests2.UsageConstraintsTest.any":114,"org.easymock.tests2.StubTest.stub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":304,"org.easymock.tests.UsageExpectAndThrowTest.longType":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":261,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":287,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests.LimitationsTest.mockNativeMethod":307,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":70,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":64,"org.easymock.tests2.NameTest.nameForMocksControl":38,"org.easymock.tests2.MockedExceptionTest.testMockedException":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":86,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":430,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":386,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":100,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":454,"org.easymock.tests.MockingTest.testNicePartialClassMocking":428,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":199,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":411,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":459,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":111,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.MockingTest.testTwoMocks":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":390,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":129,"org.easymock.samples.ExampleTest.removeNonExistingDocument":223,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":74,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":142,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":285,"org.easymock.tests2.ConstraintsToStringTest.andToString":463,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":81,"org.easymock.tests2.MockBuilderTest.testCreateMockString":456,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":443,"org.easymock.tests.UsageExpectAndThrowTest.floatType":384,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":120,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":24,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testNotNull":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":421,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":161,"org.easymock.tests2.UsageTest.defaultResetToNice":183,"org.easymock.samples.ExampleTest.voteAgainstRemovals":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":69,"org.easymock.tests.UsageVarargTest.differentLength":350,"org.easymock.tests2.CallbackTest.callback":28,"org.easymock.tests2.UsageConstraintsTest.equals":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":202,"org.easymock.tests.UsageTest.openCallCountByLastCall":403,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":326,"org.easymock.tests.UsageCallCountTest.tooFewCalls":437,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":272,"org.easymock.tests.UsageThrowableTest.throwCheckedException":418,"org.easymock.tests.MockingTest.testStrictClassMocking":424,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":423,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":190,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":25,"org.easymock.tests.ObjectMethodsTest.testHashCode":358,"org.easymock.tests2.NameTest.nameForNiceMock":37,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":83,"org.easymock.tests2.DependencyTest.testInterfaceMocking":209,"org.easymock.samples.ExampleTest.addDocument":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":95,"org.easymock.tests2.DelegateToTest.testStubDelegate":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.AnswerTest.stubAnswer":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests.UsageVarargTest.varargLongAccepted":352,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":250,"org.easymock.tests.UsageExpectAndReturnTest.floatType":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":186,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":214,"org.easymock.tests.UsageThrowableTest.noUpperLimit":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":148,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":122,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":103,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":171,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.SerializationTest.test":66,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":284,"org.easymock.tests2.UsageConstraintsTest.testSame":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":363,"org.easymock.samples.SupportTest.addDocument":215,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":88,"org.easymock.tests.GenericTest.testPackageScope":340,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":147,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":431,"org.easymock.tests2.NameTest.nameForMock":35,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":374,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":396,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":279,"org.easymock.tests2.MockedExceptionTest.testRealException":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":320,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":325,"org.easymock.tests2.NameTest.nameForStrictMock":36,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":172,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":123,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":44,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":131,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":249,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":90,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":195,"org.easymock.tests.UsageTest.wrongArguments":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":89,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":375,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":288,"org.easymock.tests.UsageVarargTest.varargShortAccepted":351,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":440,"org.easymock.tests2.UsageConstraintsTest.cmpTo":115,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":244,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":291,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":453,"org.easymock.tests.UsageTest.unexpectedCallWithArray":402,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":438,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":376,"org.easymock.tests2.CaptureTest.testCapture":10,"org.easymock.tests2.UsageConstraintsTest.constraints":104,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.samples.ExampleTest.addAndChangeDocument":224,"org.easymock.tests.UsageStrictMockTest.testVerify":268,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":217,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests2.CompareToTest.testGreateThan":451,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":335,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":229,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":230,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":45,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345}}]
