[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:88","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : org.easymock.internal.InjectionPlan.getQualifiedInjections()) {\n    if (!(org.easymock.internal.Injection.isMatched())) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n    } \n}","type":"CtForEachImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[29],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[30,31,32,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[34,3,35,36,37,38,39,40,41,42,43,44,45,4,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,10,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,29,103,30,31,32,22,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[196,74,77,78,197,198,199,200,138,201,202,158,159,160,203,204,205],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[8,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[47,206,207,208,57,58,59,72,74,75,76,77,78,209,79,81,85,86,88,210,211,212,213,108,214,121,215,138,140,141,142,216,151,152,217,202,158,159,160,161,162,218,219,220,221,222,175,176,177],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[197,199,138,202,203,204],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[61,63,70,214,114,223,116,224,122],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[52,56,61,62,63,64,226,65,66,67,68,69,70,227,228,71,229,112,230,231,214,114,232,115,233,223,116,117,224,118,119,234,120,235,236,121,237,238,122,123,124,125,126,127,239,1,240,241,138,139,144,145,146,147,242,243,244,174,175,245,246,247,248,249,250,251,252],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[253,253,254,254,255,256,95,257,30],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[258,256,259,260,261,262,263,264,265,266,267,95,257,30],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[270,58,59,141,142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[253,254,34,3,35,36,37,38,39,40,41,42,272,43,44,45,4,46,47,48,49,50,51,273,274,52,255,275,270,206,53,207,276,277,278,279,54,280,208,55,56,57,58,59,60,281,282,283,284,285,61,62,63,64,226,65,66,67,68,69,70,227,228,71,5,6,7,8,9,10,11,12,13,14,15,16,286,287,288,289,72,73,196,74,75,76,290,291,292,77,78,209,79,80,81,82,83,84,85,86,293,87,88,89,90,91,294,295,210,296,297,298,92,299,93,258,94,300,256,211,212,301,213,95,257,302,96,97,98,99,303,100,101,102,271,304,305,306,307,308,309,310,29,311,312,103,313,314,229,30,31,32,17,18,19,20,21,22,23,24,25,26,27,28,315,316,317,104,318,319,105,320,321,322,323,324,325,326,327,328,106,329,330,331,332,333,107,334,335,108,336,337,338,109,339,110,340,111,341,342,343,112,113,230,231,214,114,344,232,115,233,223,116,117,224,118,119,234,120,235,236,121,237,238,122,123,124,125,126,127,239,1,345,346,128,129,240,347,241,130,348,131,132,349,133,350,351,352,353,134,135,354,136,355,356,357,215,137,138,139,140,141,142,143,358,144,145,146,147,242,243,244,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,148,149,150,216,151,152,374,375,376,377,378,379,380,225,381,382,383,384,385,386,387,153,154,388,155,389,390,391,392,156,393,394,395,396,157,397,398,399,400,217,201,202,158,401,402,159,160,161,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,162,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,163,164,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,165,166,167,468,168,169,218,170,171,172,173,174,469,470,471,222,175,472,176,177,178,179,180,181,182,183,184,185,473,474,475,476,477,245,246,247,248,249,186,269,187,188,478,479,480,481,482,483,484,485,486,250,487,488,489,189,490,195,491,492,493,494,495,251,252,496,497,190,191,498,192,499,500,501,502,193,503,504,505,506,194,507,508,509,510],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[3,35,36,37,39,40,41,42,43,44,45,4,55,57,58,59,60,62,63,65,66,67,68,71,76,83,88,89,90,91,92,32,336,125,137,140,141,142,143,146,373,148,149,150,151,152,165,166,167,168,169,170,171,172,173,174,175,179,186,188],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[58,74,77,78,138,141,202,158,159,160,220,175,176,177],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[511],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[67,69,512],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":114,"org.easymock.tests2.UsageTest.argumentsOrdered":78,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":217,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":437,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":76,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.DelegateToTest.testReturnException":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":484,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.MockClassControlTest.testToString":418,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":281,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":323,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":386,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":262,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":144,"org.easymock.tests2.UsageTest.wrongArguments":74,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":414,"org.easymock.samples.ExampleTest.answerVsDelegate":38,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":408,"org.easymock.tests2.UsageConstraintsTest.testNull":115,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":356,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":49,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":88,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":400,"org.easymock.tests.UsageTest.moreThanOneArgument":201,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":48,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":475,"org.easymock.tests.UsageTest.argumentsOrdered":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":374,"org.easymock.tests.UsageVarargTest.varargIntAccepted":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":294,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":27,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":306,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":10,"org.easymock.tests.ReplayStateInvalidUsageTest.times":367,"org.easymock.tests2.DependencyTest.testClassMocking":345,"org.easymock.tests2.AnswerTest.answer":29,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":289,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":405,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":84,"org.easymock.tests2.DelegateToTest.testDelegate":111,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":378,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":157,"org.easymock.tests.LimitationsTest.mockFinalMethod":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":385,"org.easymock.tests2.DependencyTest.testClassMockingSupport":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":226,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":287,"org.easymock.tests.UsageThrowableTest.throwError":178,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":361,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":407,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":28,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":335,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.MockingTest.testInterfaceMocking":354,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":491,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":457,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":387,"org.easymock.tests2.UsageTest.niceToStrict":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":92,"org.easymock.tests2.MockBuilderTest.testCreateMock":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":392,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":197,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":471,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":412,"org.easymock.tests.UsageOverloadedMethodTest.overloading":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":333,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":503,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":120,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":468,"org.easymock.tests.MockClassControlTest.testEquals":422,"org.easymock.tests2.EasyMockSupportClassTest.testAll":104,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":398,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":198,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":383,"org.easymock.tests.MockNameTest.defaultName":467,"org.easymock.tests2.UsageConstraintsTest.testMatches":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":476,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":359,"org.easymock.samples.ExampleTest.voteForRemovals":42,"org.easymock.tests.UsageVarargTest.allKinds":174,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":472,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":384,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":184,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":24,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":340,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":465,"org.easymock.tests2.UsageConstraintsTest.greaterThan":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":318,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":424,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":207,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":466,"org.easymock.samples.ExampleTest.voteForRemoval":39,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":276,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":82,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":483,"org.easymock.tests2.CaptureTest.testCaptureFirst":71,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":500,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.UsageTest.moreThanOneArgument":196,"org.easymock.tests2.CaptureTest.testCapture2_2446744":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":212,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":173,"org.easymock.tests.GenericTest.testBridgedEquals":479,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":151,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":381,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":399,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":411,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":125,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":494,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":473,"org.easymock.tests.UsageCallCountTest.tooManyCalls":152,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":501,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testNiceClassMocking":357,"org.easymock.tests.MockingTest.testClassMocking":352,"org.easymock.tests2.UsageConstraintsTest.testContains":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":372,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":232,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":451,"org.easymock.tests.MockTypeTest.fromEasyMockClass":406,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":215,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":241,"org.easymock.tests.UsageExpectAndReturnTest.object":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":87,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":263,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":455,"org.easymock.tests.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":480,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":375,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":507,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":131,"org.easymock.tests.MockClassControlTest.testHashCode":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":18,"org.easymock.tests2.EasyMockSupportTest.testVerify":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":326,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":470,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":130,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":286,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":229,"org.easymock.tests.UsageVarargTest.varargCharAccepted":168,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":458,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastCall":290,"org.easymock.tests.DefaultClassInstantiatorTest.object":459,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":469,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":453,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":17,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":508,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":493,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests2.UsageTest.resumeIfFailure":209,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":486,"org.easymock.tests2.StubTest.stubWithReturnValue":337,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":502,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":126,"org.easymock.tests2.SerializationTest.testAllMockedMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":443,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":260,"org.easymock.samples.SupportTest.voteForRemovals":45,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":199,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":394,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":449,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":311,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":482,"org.easymock.tests.UsageExpectAndThrowTest.object":156,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":123,"org.easymock.tests2.DelegateToTest.testWrongClass":110,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":244,"org.easymock.tests.UsageStrictMockTest.range":141,"org.easymock.samples.ConstructorCalledMockTest.testTax":253,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":309,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":393,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":93,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":315,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":413,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":492,"org.easymock.tests2.CaptureTest.testCaptureNone":68,"org.easymock.tests.UsageUnorderedTest.message":175,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":221,"org.easymock.tests.UsageVerifyTest.twoReturns":177,"org.easymock.tests.UsageVarargTest.varargByteAccepted":172,"org.easymock.tests2.ThreadingTest.testThreadSafe":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":329,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":150,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":456,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":147,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests2.StubTest.stub":336,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndThrowTest.longType":154,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":463,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":57,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":510,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":478,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":60,"org.easymock.tests2.NameTest.nameForMocksControl":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":9,"org.easymock.tests2.MockedExceptionTest.testMockedException":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":319,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":402,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":388,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":347,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":94,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":51,"org.easymock.tests2.CompareToTest.testNotComparable":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":5,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":261,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":380,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":124,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":496,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":391,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":239,"org.easymock.samples.ExampleTest.removeNonExistingDocument":272,"org.easymock.tests.UsageStrictMockTest.differentMethods":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":19,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":461,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":343,"org.easymock.tests2.MockBuilderTest.testCreateMockString":213,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":416,"org.easymock.tests.UsageExpectAndThrowTest.floatType":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":320,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":317,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":103,"org.easymock.tests.UsageVerifyTest.twoThrows":176,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":302,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":106,"org.easymock.samples.ExampleTest.voteAgainstRemoval":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":53,"org.easymock.tests.LimitationsTest.privateConstructor":489,"org.easymock.tests2.UsageConstraintsTest.testNotNull":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":185,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":278,"org.easymock.tests2.UsageTest.defaultResetToNice":292,"org.easymock.samples.ExampleTest.voteAgainstRemovals":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests.UsageVarargTest.differentLength":218,"org.easymock.tests2.CallbackTest.callback":108,"org.easymock.tests2.UsageConstraintsTest.equals":344,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":255,"org.easymock.tests.UsageTest.openCallCountByLastCall":401,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":146,"org.easymock.tests.UsageCallCountTest.tooFewCalls":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":415,"org.easymock.tests.UsageThrowableTest.throwCheckedException":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":204,"org.easymock.tests.MockingTest.testStrictClassMocking":351,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":252,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":11,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":314,"org.easymock.tests.ObjectMethodsTest.testHashCode":454,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":511,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":265,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":284,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":264,"org.easymock.samples.ExampleTest.addDocument":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.DelegateToTest.testStubDelegate":339,"org.easymock.tests2.AnswerTest.stubAnswer":313,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":139,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":300,"org.easymock.tests.UsageVarargTest.varargLongAccepted":171,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":509,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":254,"org.easymock.tests.UsageThrowableTest.noUpperLimit":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":26,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":238,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":231,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":304,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":497,"org.easymock.tests2.UsageConstraintsTest.testSame":233,"org.easymock.samples.SupportTest.addDocument":44,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":303,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":321,"org.easymock.tests.GenericTest.testPackageScope":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":25,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":355,"org.easymock.tests2.NameTest.nameForMock":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":504,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":498,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":396,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":452,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":426,"org.easymock.tests2.MockedExceptionTest.testRealException":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":310,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":440,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":145,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":370,"org.easymock.tests2.NameTest.nameForStrictMock":283,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":298,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":308,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":462,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":122,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":210,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":81,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":325,"org.easymock.tests2.UsageConstraintsTest.testOr":223,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":47,"org.easymock.tests.UsageTest.wrongArguments":158,"org.easymock.tests2.MockBuilderTest.testWithConstructor":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":322,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":428,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":464,"org.easymock.tests.UsageVarargTest.varargShortAccepted":170,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":216,"org.easymock.tests2.UsageConstraintsTest.cmpTo":119,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":312,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":291,"org.easymock.tests2.CaptureTest.testCaptureFromStub":227,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":360,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":296,"org.easymock.tests.UsageTest.unexpectedCallWithArray":202,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":138,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":506,"org.easymock.tests2.CaptureTest.testCapture":512,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.UsageConstraintsTest.constraints":214,"org.easymock.samples.ExampleTest.addAndChangeDocument":43,"org.easymock.tests2.ConstraintsToStringTest.notToString":2,"org.easymock.tests.UsageStrictMockTest.testVerify":358,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":4,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":382,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":499,"org.easymock.tests.LimitationsTest.abstractClass":488,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":86}}]
