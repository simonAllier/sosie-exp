[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,70,71,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[110,111,112],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[134,135,136,137,138,139,140,141,142,143,144],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[134,135,136,137,138,140,141,142,143],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[145,146,147],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[78,79,83],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[148,0,149,1,150,151,152,153,154,155,115,156,157,116,117,158,159,160,161,162,163,164,165,166,167,168,169,170,171,4,5,6,7,172,8,9,10,15,18,28,34,42,44,45,134,173,135,174,175,176,177,178,179,136,180,52,53,181,54,55,56,58,63,138,139,141,182,183,184,185,186,143,187,188,189,190,144,69,191,192,193,194,195,196,197,122,198,199,123,200,201,202,203,204,205,206,207,208,209,210,211,72,73,74,212,213,214,215,216,217,218,219,220,221,222,77,125,126,127,223,224,225,226,227,228,128,87,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,91,92,129,130,254,255,256,257,258,259,131,132,260,261,133,262,106,107,108],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[39,48,62,66],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[134,135,136,137,138,139,140,141,142,143,144],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[0,1,4,5,6,7,8,9,10,15,18,28,34,37,38,39,40,42,43,44,45,47,48,49,50,264,51,52,53,54,55,56,57,58,61,62,63,64,69,70,70,71,71,72,73,74,75,76,77,87,91,92,93,96,105,106,107,108],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[142],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[82,265,266],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[45,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,149,1,267],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[0,37,38,39,40,42,43,44,45,47,48,291,49,50,57,72,75,76,93],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[292,293,294,295,296,148,297,298,299,300,301,302,0,149,1,303,304,305,306,150,307,308,151,309,310,311,312,152,153,313,314,315,154,155,114,115,156,157,316,317,268,116,117,318,158,2,319,320,321,3,322,323,159,160,161,162,163,164,165,324,166,167,168,169,170,171,4,5,6,7,325,172,8,9,326,10,11,327,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,328,118,119,120,121,329,330,37,331,39,40,332,41,42,43,44,333,45,334,46,47,48,335,50,336,134,173,135,174,337,175,176,177,178,179,136,338,339,180,52,53,181,54,55,56,57,110,58,59,60,61,62,63,64,65,66,340,341,137,138,342,343,139,344,140,141,182,142,183,184,345,185,346,347,186,348,349,143,187,188,189,190,144,350,351,67,68,69,352,353,354,355,356,357,191,358,359,360,361,362,363,364,192,365,193,366,194,367,368,369,195,196,370,197,122,198,199,123,200,201,202,203,204,205,206,207,208,209,371,210,211,70,71,72,73,74,372,373,374,375,376,212,213,377,378,379,380,381,382,214,215,216,217,383,75,384,385,386,387,76,388,389,390,391,218,219,392,220,393,394,395,396,221,397,398,399,400,222,401,402,403,404,77,405,124,406,125,407,408,126,127,223,409,410,411,412,413,414,224,225,226,415,227,228,416,417,418,419,420,128,421,78,79,80,81,82,83,422,84,423,424,425,426,427,428,429,430,431,432,433,434,435,85,86,87,88,436,437,229,230,438,231,439,440,441,442,232,443,444,445,446,233,447,448,449,450,234,235,451,236,237,238,239,240,241,242,243,452,453,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,454,285,286,287,288,289,455,290,456,457,458,459,460,461,462,463,89,464,465,466,467,468,469,244,245,246,470,247,248,471,249,250,251,252,253,90,91,92,93,94,95,96,97,98,99,100,101,102,472,129,130,473,474,475,476,477,254,478,255,256,479,257,480,481,482,483,484,485,486,487,488,489,258,490,491,492,493,259,131,132,260,261,133,262,494,103,104,105,106,107,495,108,496,497,109,263,498,499,113,500],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[219,396,401,402,420,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,149,1,267],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[187],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[501,502,406,503,504,131],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[187],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"actualTypeArgument","this":"this"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[139],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[157,55,186],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[90,91,92,93,94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[307,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":405,"org.easymock.tests2.UsageTest.argumentsOrdered":117,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":279,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":157,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":203,"org.easymock.tests2.DelegateToTest.testReturnException":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":465,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.tests.MockClassControlTest.testToString":97,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":328,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":436,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":18,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":182,"org.easymock.tests2.UsageTest.wrongArguments":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":214,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":380,"org.easymock.samples.ExampleTest.answerVsDelegate":205,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":76,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":497,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":102,"org.easymock.tests2.CaptureTest.testPrimitive":174,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":383,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":450,"org.easymock.tests.UsageTest.moreThanOneArgument":124,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":475,"org.easymock.tests.UsageTest.argumentsOrdered":127,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":263,"org.easymock.tests.UsageVarargTest.varargIntAccepted":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":37,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":420,"org.easymock.tests.ReplayStateInvalidUsageTest.times":432,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":148,"org.easymock.tests2.DependencyTest.testClassMocking":311,"org.easymock.tests2.AnswerTest.answer":150,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":306,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":385,"org.easymock.tests2.CaptureTest.testAnd":134,"org.easymock.tests2.UsageTest.strictResetToDefault":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":61,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":163,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":500,"org.easymock.tests2.DelegateToTest.testDelegate":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests.LimitationsTest.mockFinalMethod":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":468,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":489,"org.easymock.tests2.DependencyTest.testClassMockingSupport":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":234,"org.easymock.tests2.CaptureTest.testCapture1_2446744":337,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":304,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":426,"org.easymock.tests.UsageThrowableTest.throwError":236,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":387,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":36,"org.easymock.samples.PartialClassMockTest.testGetArea":72,"org.easymock.tests.MockingTest.testInterfaceMocking":495,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":437,"org.easymock.tests2.UsageTest.niceToStrict":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":23,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":89,"org.easymock.tests2.ThreadingTest.testChangeDefault":112,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":31,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":299,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":442,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":384,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":483,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":412,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":378,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":27,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":256,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":397,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":185,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":265,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":470,"org.easymock.tests.MockClassControlTest.testEquals":101,"org.easymock.tests2.EasyMockSupportClassTest.testAll":15,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":448,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":487,"org.easymock.tests2.CaptureTest.testCaptureAll":173,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":305,"org.easymock.tests.MockNameTest.defaultName":423,"org.easymock.tests2.UsageConstraintsTest.testMatches":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":476,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":424,"org.easymock.samples.ExampleTest.voteForRemovals":209,"org.easymock.tests.UsageVarargTest.allKinds":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":472,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":488,"org.easymock.samples.BasicClassMockTest.testPrintContent":74,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":242,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":366,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":422,"org.easymock.tests2.UsageConstraintsTest.greaterThan":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":64,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":84,"org.easymock.samples.ExampleTest.voteForRemoval":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":65,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":368,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":388,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":77,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":161,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":464,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":162,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":394,"org.easymock.tests2.UsageTest.moreThanOneArgument":114,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":195,"org.easymock.tests2.CaptureTest.testCapture2_2446744":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":286,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":252,"org.easymock.tests.GenericTest.testBridgedEquals":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":227,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":485,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":449,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":49,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":189,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":473,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":410,"org.easymock.tests.UsageCallCountTest.tooManyCalls":228,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":241,"org.easymock.tests.MockingTest.testNiceClassMocking":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":5,"org.easymock.tests.MockingTest.testClassMocking":104,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":413,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":38,"org.easymock.tests2.UsageConstraintsTest.testContains":345,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":69,"org.easymock.tests2.UsageConstraintsTest.testFind":343,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":377,"org.easymock.tests.MockTypeTest.fromEasyMockClass":386,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":315,"org.easymock.tests.UsageExpectAndReturnTest.object":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":248,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":462,"org.easymock.tests.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":498,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":401,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":255,"org.easymock.tests.MockClassControlTest.testHashCode":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":25,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":499,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":482,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":303,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":336,"org.easymock.tests.UsageVarargTest.varargCharAccepted":247,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":421,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":290,"org.easymock.tests2.UsageTest.openCallCountByLastCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":145,"org.easymock.tests.DefaultClassInstantiatorTest.object":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":481,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":460,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":295,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":439,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":402,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":409,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests2.UsageTest.resumeIfFailure":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":467,"org.easymock.tests2.StubTest.stubWithReturnValue":330,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":396,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":190,"org.easymock.tests2.SerializationTest.testAllMockedMethod":1,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":454,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":202,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":444,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":267,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":455,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":307,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":232,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":187,"org.easymock.tests2.DelegateToTest.testWrongClass":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":452,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":453,"org.easymock.samples.ConstructorCalledMockTest.testTax":70,"org.easymock.tests.UsageStrictMockTest.range":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":322,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":443,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":434,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":379,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":374,"org.easymock.tests.UsageUnorderedTest.message":128,"org.easymock.tests.UsageVerifyTest.twoReturns":130,"org.easymock.tests.UsageVarargTest.varargByteAccepted":251,"org.easymock.tests2.ThreadingTest.testThreadSafe":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":29,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":226,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":463,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":73,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":288,"org.easymock.tests2.UsageConstraintsTest.any":183,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":431,"org.easymock.tests2.StubTest.stub":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":466,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":289,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":430,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":191,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":404,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":294,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.NameTest.nameForMocksControl":121,"org.easymock.tests2.MockedExceptionTest.testMockedException":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":17,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":408,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":438,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":56,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":235,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":9,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":188,"org.easymock.tests.MockingTest.testTwoMocks":105,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":441,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":350,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":111,"org.easymock.samples.ExampleTest.removeNonExistingDocument":371,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":80,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":369,"org.easymock.tests2.MockBuilderTest.testCreateMockString":50,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":19,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests.UsageVerifyTest.twoThrows":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":327,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.ExampleTest.voteAgainstRemoval":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":280,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":63,"org.easymock.tests.LimitationsTest.privateConstructor":86,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":243,"org.easymock.tests2.UsageTest.defaultResetToNice":268,"org.easymock.samples.ExampleTest.voteAgainstRemovals":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":281,"org.easymock.tests.UsageVarargTest.differentLength":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":293,"org.easymock.tests2.CallbackTest.callback":171,"org.easymock.tests2.UsageConstraintsTest.equals":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":59,"org.easymock.tests.UsageTest.openCallCountByLastCall":407,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":216,"org.easymock.tests.UsageCallCountTest.tooFewCalls":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":381,"org.easymock.tests.UsageThrowableTest.throwCheckedException":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":376,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":6,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":297,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":433,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":172,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":310,"org.easymock.tests.ObjectMethodsTest.testHashCode":461,"org.easymock.tests2.NameTest.nameForNiceMock":120,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":196,"org.easymock.tests2.DependencyTest.testInterfaceMocking":152,"org.easymock.samples.ExampleTest.addDocument":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":35,"org.easymock.tests2.DelegateToTest.testStubDelegate":365,"org.easymock.tests2.AnswerTest.stubAnswer":309,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":132,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":334,"org.easymock.tests.UsageVarargTest.varargLongAccepted":250,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":403,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":71,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageThrowableTest.noUpperLimit":237,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":341,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":175,"org.easymock.tests2.SerializationTest.test":149,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":266,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":391,"org.easymock.tests2.UsageConstraintsTest.testSame":344,"org.easymock.samples.SupportTest.addDocument":201,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":325,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":20,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":496,"org.easymock.tests2.NameTest.nameForMock":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":398,"org.easymock.tests2.UsageStrictMockTest.differentMethods":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":335,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":392,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":446,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":492,"org.easymock.tests2.MockedExceptionTest.testRealException":352,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":323,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":215,"org.easymock.tests2.NameTest.nameForStrictMock":119,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":3,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":143,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests2.UsageStrictMockTest.range":199,"org.easymock.tests2.UsageConstraintsTest.lessThan":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":277,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":24,"org.easymock.tests2.UsageConstraintsTest.testOr":140,"org.easymock.tests.UsageRangeTest.combination":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.UsageTest.wrongArguments":125,"org.easymock.tests2.MockBuilderTest.testWithConstructor":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":21,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":270,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":83,"org.easymock.tests.UsageVarargTest.varargShortAccepted":249,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":415,"org.easymock.tests2.UsageConstraintsTest.cmpTo":184,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":272,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":317,"org.easymock.tests2.CaptureTest.testCaptureFromStub":338,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":425,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":40,"org.easymock.tests.UsageTest.unexpectedCallWithArray":406,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":131,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":225,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":400,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.samples.ExampleTest.addAndChangeDocument":210,"org.easymock.tests.UsageStrictMockTest.testVerify":494,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":211,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":486,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":418,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":393,"org.easymock.tests.LimitationsTest.abstractClass":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":419,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":165,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":245}}]
