[{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[16,17,0,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,1,2,3,44,45,46,47,48,49,4,50,51,52,53,5,54,55,56,57,58,59,60,61,62,10,11,12,63,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[67,68,69,24,25,70,71,26,27,72,73,74,75,76,77,78,34,35,36,79,38,80,81,82,83,84,85,86,40,87,88,1,2,3,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,13,14,15,128,129,130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[131],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[132],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[135,72,136,137,138,139,140,141,142,143],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[74,77,36,85,41],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[144,145,146,147,148,149,150,151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[152,153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[154,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:163","sourceCode":"java.util.Collection<org.easymock.internal.matchers.Captures<?>>.add(org.easymock.internal.matchers.Captures<java.lang.Object>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[132,156,157,158,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[160,161,162,22,163,164,165,36,39,166,2,3,124,167,14,15,168,128,129,169,170,171],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[172,173,174,175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[176,177,178,179,64,180,181,65,182,66,183],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[72,184,139,140,141,185,186,143],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[187],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[16,188,189,190,191,192,193,194,195,32,196,197,37,176,198,39,199,200,42,201,202,203,204,205,50,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,57,221,222,223,224,60,61,62,225,226,227,228,229,230,231,232,233,234],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[235,82,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","this":"this"}},{"position":"org.easymock.internal.RecordState:262","failures":[237,238,239,199,200,240,241,242,243,244,245,246,247,248,172,173,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,11,282,283,174,175],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:189","sourceCode":"java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[284,87,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[179,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:136","failures":[286,287,288,289,180,290,181,291,292,293,294,295,183,296,297,1,298,298,299,299,300,95,301,302,112,113,114,115,116,118,119,120,121,122,123,303,13],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[304,305],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[306,307,308,152,309,16,17,310,311,312,313,314,135,315,316,188,189,190,191,317,304,318,319,320,321,322,323,67,68,324,325,326,237,327,0,18,160,235,328,238,192,19,20,329,330,331,332,333,334,335,336,337,193,161,338,21,339,162,22,194,23,163,340,341,195,164,69,24,25,70,165,71,26,27,342,72,136,343,344,345,346,73,347,348,74,349,350,351,352,353,354,355,356,357,75,358,359,360,361,362,76,363,364,365,28,29,30,31,366,239,32,367,77,33,368,369,78,196,34,137,35,370,138,197,36,371,37,372,176,373,177,374,375,376,377,378,379,380,178,286,381,382,79,38,80,81,82,83,198,383,84,384,385,39,85,86,40,386,41,287,288,179,64,387,289,180,290,181,65,388,182,389,390,291,391,292,293,236,294,295,66,392,393,394,395,183,296,297,199,200,240,241,396,397,398,153,399,42,43,400,401,402,403,404,284,405,87,406,407,408,409,410,187,88,411,166,412,1,413,2,3,414,415,89,416,90,417,91,92,418,93,201,419,420,298,299,94,421,422,423,424,131,300,242,425,426,243,202,203,204,205,427,95,301,244,245,302,44,428,429,45,46,47,48,49,96,97,98,99,100,101,430,431,102,103,432,104,105,106,433,107,108,109,110,111,434,246,4,50,51,435,247,52,53,436,248,172,173,437,206,438,439,440,441,207,442,443,112,113,114,115,116,5,444,208,445,446,447,448,449,450,451,54,209,210,211,212,213,214,215,216,217,218,219,220,452,453,117,454,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,55,56,455,269,456,270,271,272,273,274,275,118,119,457,154,458,459,460,461,305,462,463,464,285,465,466,467,468,469,470,471,133,472,473,474,475,476,477,478,479,480,57,221,222,58,59,276,277,278,279,280,281,481,482,483,484,485,486,487,488,489,490,491,492,132,156,157,158,159,223,224,60,61,62,225,226,227,10,11,12,120,121,122,123,303,493,494,495,282,496,497,228,283,174,175,498,229,230,231,232,233,124,125,126,127,167,499,63,13,500,14,15,501,234,502,168,503,128,129,169,130,504,170,171,505,155,134,506,507],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[2,9,11,12,14],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[392],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[272,273,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[508,78,85,86],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[509],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":64,"org.easymock.tests2.UsageTest.argumentsOrdered":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":246,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":285,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":416,"org.easymock.tests2.DelegateToTest.testReturnException":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":277,"org.easymock.tests.MockingTest.testPartialClassMocking":128,"org.easymock.tests.MockClassControlTest.testToString":60,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":365,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":249,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":6,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":139,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":388,"org.easymock.tests2.UsageTest.wrongArguments":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":95,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":204,"org.easymock.samples.ExampleTest.answerVsDelegate":417,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests2.UsageConstraintsTest.testNull":180,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":163,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":227,"org.easymock.tests2.CaptureTest.testPrimitive":374,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":302,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":268,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":505,"org.easymock.tests.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageVarargTest.varargIntAccepted":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":333,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":116,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":16,"org.easymock.tests.ReplayStateInvalidUsageTest.times":217,"org.easymock.tests2.DependencyTest.testClassMocking":322,"org.easymock.tests2.AnswerTest.answer":317,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":191,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":429,"org.easymock.tests2.CaptureTest.testAnd":176,"org.easymock.tests2.UsageTest.strictResetToDefault":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":121,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":339,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":507,"org.easymock.tests2.DelegateToTest.testDelegate":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":264,"org.easymock.tests.LimitationsTest.mockFinalMethod":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":233,"org.easymock.tests2.DependencyTest.testClassMockingSupport":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":55,"org.easymock.tests2.CaptureTest.testCapture1_2446744":375,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":189,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":211,"org.easymock.tests.UsageThrowableTest.throwError":269,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":46,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":364,"org.easymock.samples.PartialClassMockTest.testGetArea":94,"org.easymock.tests.MockingTest.testInterfaceMocking":169,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":424,"org.easymock.tests2.UsageTest.niceToStrict":160,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":151,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":258,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":162,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":437,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":202,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":148,"org.easymock.tests.UsageOverloadedMethodTest.overloading":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":362,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":282,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":292,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":104,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":391,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":380,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":73,"org.easymock.tests.MockClassControlTest.testEquals":226,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":157,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":231,"org.easymock.tests2.CaptureTest.testCaptureAll":373,"org.easymock.tests.MockNameTest.defaultName":54,"org.easymock.tests2.UsageConstraintsTest.testMatches":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":123,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":209,"org.easymock.samples.ExampleTest.voteForRemovals":93,"org.easymock.tests.UsageVarargTest.allKinds":492,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.samples.BasicClassMockTest.testPrintContent":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":232,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":274,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":281,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":450,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":143,"org.easymock.tests2.UsageConstraintsTest.greaterThan":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":451,"org.easymock.samples.ExampleTest.voteForRemoval":91,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":410,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":386,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":198,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":434,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":237,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":338,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":276,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":284,"org.easymock.tests2.CaptureTest.testCaptureFirst":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":21,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":330,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":431,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":88,"org.easymock.tests2.CaptureTest.testCapture2_2446744":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":133,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":491,"org.easymock.tests.GenericTest.testBridgedEquals":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":442,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":146,"org.easymock.tests.UsageExpectAndReturnTest.longType":99,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":267,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":427,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":394,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":120,"org.easymock.tests.UsageCallCountTest.tooManyCalls":443,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":273,"org.easymock.tests.MockingTest.testNiceClassMocking":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":24,"org.easymock.tests.MockingTest.testClassMocking":168,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":508,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":206,"org.easymock.tests2.UsageConstraintsTest.testContains":291,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":240,"org.easymock.tests2.UsageConstraintsTest.testFind":289,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":243,"org.easymock.tests.MockTypeTest.fromEasyMockClass":45,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":326,"org.easymock.tests.UsageExpectAndReturnTest.object":432,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":312,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":509,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":23,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":140,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":222,"org.easymock.tests.UsageTest.exactCallCountByLastCall":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":136,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":481,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":108,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":495,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests.MockClassControlTest.testHashCode":225,"org.easymock.tests2.EasyMockSupportTest.testVerify":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":355,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":134,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":174,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":188,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":372,"org.easymock.tests.UsageVarargTest.varargCharAccepted":485,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":444,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":476,"org.easymock.tests2.UsageTest.openCallCountByLastCall":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":144,"org.easymock.tests.DefaultClassInstantiatorTest.object":208,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":283,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":396,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":255,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":248,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":76,"org.easymock.tests2.UsageTest.resumeIfFailure":329,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":279,"org.easymock.tests2.StubTest.stubWithReturnValue":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":395,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":103,"org.easymock.tests2.SerializationTest.testAllMockedMethod":316,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":470,"org.easymock.samples.SupportTest.voteForRemovals":89,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":261,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":475,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":304,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":479,"org.easymock.tests.UsageExpectAndThrowTest.object":259,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":392,"org.easymock.tests2.DelegateToTest.testWrongClass":406,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":119,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":298,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":336,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":69,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":260,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":131,"org.easymock.tests2.CaptureTest.testCaptureNone":379,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":490,"org.easymock.tests2.ThreadingTest.testThreadSafe":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":358,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":441,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":421,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":58,"org.easymock.tests2.CaptureTest.testCapture_2617107":177,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":245,"org.easymock.tests2.UsageConstraintsTest.any":389,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":216,"org.easymock.tests2.StubTest.stub":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":278,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":448,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":215,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":413,"org.easymock.tests2.SerializationTest.testClass":135,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":42,"org.easymock.tests.LimitationsTest.mockNativeMethod":117,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":308,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":414,"org.easymock.tests2.NameTest.nameForMocksControl":31,"org.easymock.tests2.MockedExceptionTest.testMockedException":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":348,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":247,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":253,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":325,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":306,"org.easymock.tests2.CaptureTest.testCaptureLast":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":56,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":393,"org.easymock.tests.MockingTest.testTwoMocks":503,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":257,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":296,"org.easymock.samples.ExampleTest.removeNonExistingDocument":201,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":446,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":187,"org.easymock.tests2.MockBuilderTest.testCreateMockString":37,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":223,"org.easymock.tests.UsageExpectAndThrowTest.floatType":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":349,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":319,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":343,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":423,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":86,"org.easymock.tests.LimitationsTest.privateConstructor":453,"org.easymock.tests2.UsageConstraintsTest.testNotNull":183,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":275,"org.easymock.tests2.UsageTest.defaultResetToNice":192,"org.easymock.samples.ExampleTest.voteAgainstRemovals":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":107,"org.easymock.tests.UsageVarargTest.differentLength":487,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":307,"org.easymock.tests2.CallbackTest.callback":164,"org.easymock.tests2.UsageConstraintsTest.equals":387,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":384,"org.easymock.tests.UsageTest.openCallCountByLastCall":435,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.UsageCallCountTest.tooFewCalls":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":205,"org.easymock.tests.UsageThrowableTest.throwCheckedException":272,"org.easymock.tests.MockingTest.testStrictClassMocking":502,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":242,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":17,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":71,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":321,"org.easymock.tests.ObjectMethodsTest.testHashCode":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":185,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":411,"org.easymock.tests2.NameTest.nameForNiceMock":30,"org.easymock.tests2.DependencyTest.testInterfaceMocking":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":141,"org.easymock.samples.ExampleTest.addDocument":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":359,"org.easymock.tests2.DelegateToTest.testStubDelegate":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.AnswerTest.stubAnswer":320,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":370,"org.easymock.tests.UsageVarargTest.varargLongAccepted":489,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":110,"org.easymock.tests.UsageExpectAndReturnTest.floatType":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":299,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":496,"org.easymock.tests.UsageThrowableTest.noUpperLimit":456,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":402,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":295,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":288,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":331,"org.easymock.tests2.SerializationTest.test":315,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":376,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":97,"org.easymock.tests2.UsageConstraintsTest.testSame":290,"org.easymock.samples.SupportTest.addDocument":415,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":165,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":350,"org.easymock.tests.GenericTest.testPackageScope":156,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":401,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":504,"org.easymock.tests2.NameTest.nameForMock":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":105,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":385,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":263,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":480,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":127,"org.easymock.tests2.MockedExceptionTest.testRealException":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":301,"org.easymock.tests2.NameTest.nameForStrictMock":29,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":145,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":335,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":447,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":7,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":66,"org.easymock.tests.ErrorMessageTest.testGetters":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":142,"org.easymock.tests2.CaptureTest.testCaptureRightOne":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":354,"org.easymock.tests2.UsageConstraintsTest.testOr":181,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageTest.wrongArguments":51,"org.easymock.tests2.MockBuilderTest.testWithConstructor":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":351,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":106,"org.easymock.tests.UsageVarargTest.varargShortAccepted":488,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":449,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":207,"org.easymock.tests2.UsageConstraintsTest.cmpTo":390,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":459,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":238,"org.easymock.tests2.CaptureTest.testCaptureFromStub":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":210,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":33,"org.easymock.tests.UsageTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":440,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":433,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":500,"org.easymock.tests2.UsageConstraintsTest.constraints":179,"org.easymock.samples.ExampleTest.addAndChangeDocument":419,"org.easymock.tests.UsageStrictMockTest.testVerify":234,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":420,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":499,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":230,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":114,"org.easymock.tests.LimitationsTest.abstractClass":452,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":430,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":115,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":482,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":22}}]
