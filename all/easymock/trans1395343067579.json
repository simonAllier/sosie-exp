[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.RecordState:153","failures":[4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,16,17,18,19,20,56,57,58,59,4,5,6,7,8,9,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,10,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,11,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,28,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,12,13,14,15,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,26,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,21,418,419,420,421,422,423,424,425,426,22,427,428,23,27,429,430,431,24,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[29,30,31,33,33,34,34,17,18,19,58,82,125,126,127,129,174,192,195,14,368,370,381,476,382,383,385,386,387,388,390,391,477,392,406,478,417,21,419,420,421,422,424,22,427,428,23,430,431,24,432,434,435,454,457,467,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[116,117,118,119,121,122],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[479,368,369,370],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[29,37,38,40,41,43,17,58,88,89,90,95,96,99,100,103,104,108,110,111,112,113,114,115,126,127,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,181,182,183,184,185,186,188,219,220,226,238,240,241,247,276,277,278,279,280,281,282,283,284,285,286,287,14,293,294,295,296,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,321,327,334,335,26,336,337,343,350,351,353,354,357,358,359,360,362,363,366,367,368,369,373,382,385,387,388,391,393,394,395,397,399,400,401,404,405,406,408,412,417,21,418,419,420,421,424,427,428,23,430,431,24,432,433,434,435,437,446,448,449,454,457,467,473],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[4,5,6,7,8,9,90,95,100,10,108,110,111,112,113,114,115,159,11,187,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,224,12,13,14,15,393,400,437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[480],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[258,409,412,413],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[33,33,34,34,83,84,85,86,87,104,153,154,155,156,157,185,186,188,219,220,238,293,294,298,299,300,301,307,309,310,312,313,319,320,321,361,437,446],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[293,312,318,481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[357,359],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[8,69,104,10,153,154,155,156,157,172,185,186,11,187,188,219,220,237,238,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,482,350,351,352,353,354,355,356,357,358,359,360,361,362,363,414,416,424,446],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[29,33,34,387,388,457,467],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[75,91,93,336,343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:169","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n    java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":296,"org.easymock.tests2.UsageTest.argumentsOrdered":403,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":262,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":398,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":5,"org.easymock.tests.MockingTest.testPartialClassMocking":126,"org.easymock.tests.MockClassControlTest.testToString":175,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":439,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":457,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":198,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":367,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":303,"org.easymock.tests2.UsageTest.wrongArguments":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":185,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":233,"org.easymock.samples.ExampleTest.answerVsDelegate":39,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":195,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":131,"org.easymock.tests2.UsageConstraintsTest.testNull":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":419,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":180,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":285,"org.easymock.tests2.CaptureTest.testPrimitive":353,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":188,"org.easymock.tests.UsageTest.moreThanOneArgument":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":85,"org.easymock.tests.UsageTest.argumentsOrdered":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":46,"org.easymock.tests.UsageVarargTest.varargIntAccepted":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":332,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests.ReplayStateInvalidUsageTest.times":78,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests2.DependencyTest.testClassMocking":364,"org.easymock.tests2.AnswerTest.answer":408,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":269,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":380,"org.easymock.tests2.CaptureTest.testAnd":350,"org.easymock.tests2.UsageTest.strictResetToDefault":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":280,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":50,"org.easymock.tests2.DelegateToTest.testDelegate":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests.LimitationsTest.mockFinalMethod":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":55,"org.easymock.tests2.DependencyTest.testClassMockingSupport":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":189,"org.easymock.tests2.CaptureTest.testCapture1_2446744":354,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":378,"org.easymock.tests.UsageThrowableTest.throwError":108,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":72,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":194,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":475,"org.easymock.samples.PartialClassMockTest.testGetArea":29,"org.easymock.tests.MockingTest.testInterfaceMocking":128,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":73,"org.easymock.tests2.CompareToTest.testLessOrEqual":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":462,"org.easymock.tests2.UsageTest.niceToStrict":397,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":199,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":252,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":385,"org.easymock.tests2.MockBuilderTest.testCreateMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":470,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":207,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":231,"org.easymock.tests.UsageOverloadedMethodTest.overloading":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":144,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":88,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":308,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":359,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":454,"org.easymock.tests.MockClassControlTest.testEquals":179,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":53,"org.easymock.tests2.CaptureTest.testCaptureAll":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":379,"org.easymock.tests.MockNameTest.defaultName":94,"org.easymock.tests2.UsageConstraintsTest.testMatches":310,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":86,"org.easymock.samples.ExampleTest.voteForRemovals":43,"org.easymock.tests.UsageVarargTest.allKinds":172,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":158,"org.easymock.samples.BasicClassMockTest.testPrintContent":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":54,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":114,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":329,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":375,"org.easymock.tests2.UsageConstraintsTest.greaterThan":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":23,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":122,"org.easymock.samples.ExampleTest.voteForRemoval":40,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":27,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":422,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":393,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":82,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":278,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":4,"org.easymock.tests2.CaptureTest.testCaptureFirst":363,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":279,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":405,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":140,"org.easymock.tests2.UsageTest.moreThanOneArgument":395,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":336,"org.easymock.tests2.CaptureTest.testCapture2_2446744":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":270,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":171,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":67,"org.easymock.tests.UsageExpectAndReturnTest.longType":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":51,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":276,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":477,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":229,"org.easymock.tests.UsageCallCountTest.tooManyCalls":68,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":431,"org.easymock.tests.MockingTest.testNiceClassMocking":132,"org.easymock.tests.MockingTest.testClassMocking":124,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":476,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":61,"org.easymock.tests2.UsageConstraintsTest.testContains":307,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":14,"org.easymock.tests2.UsageConstraintsTest.testFind":298,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":90,"org.easymock.tests.MockTypeTest.fromEasyMockClass":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":416,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests.UsageExpectAndReturnTest.object":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":424,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":166,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":249,"org.easymock.tests.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":47,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":407,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":149,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests.MockClassControlTest.testHashCode":178,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":464,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":377,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":482,"org.easymock.tests.UsageVarargTest.varargCharAccepted":165,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":275,"org.easymock.tests2.UsageTest.openCallCountByLastCall":399,"org.easymock.tests.DefaultClassInstantiatorTest.object":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":105,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":427,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":473,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":176,"org.easymock.tests2.UsageTest.resumeIfFailure":404,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":7,"org.easymock.tests2.StubTest.stubWithReturnValue":437,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":318,"org.easymock.tests2.SerializationTest.testAllMockedMethod":370,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":268,"org.easymock.samples.SupportTest.voteForRemovals":37,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":210,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":479,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":274,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":409,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":93,"org.easymock.tests.UsageExpectAndThrowTest.object":208,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":315,"org.easymock.tests2.DelegateToTest.testWrongClass":374,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":220,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.UsageStrictMockTest.range":240,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":291,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":451,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":28,"org.easymock.tests2.CaptureTest.testCaptureNone":358,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":160,"org.easymock.tests.UsageVarargTest.varargByteAccepted":170,"org.easymock.tests2.ThreadingTest.testThreadSafe":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":468,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":65,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":30,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":250,"org.easymock.tests2.CaptureTest.testCapture_2617107":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":272,"org.easymock.tests2.UsageConstraintsTest.any":305,"org.easymock.tests2.StubTest.stub":436,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":77,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":6,"org.easymock.tests.UsageExpectAndThrowTest.longType":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":273,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":120,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":76,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":447,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":327,"org.easymock.tests2.SerializationTest.testClass":368,"org.easymock.tests.LimitationsTest.mockNativeMethod":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":152,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":19,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":450,"org.easymock.tests2.NameTest.nameForMocksControl":443,"org.easymock.tests2.MockedExceptionTest.testMockedException":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":456,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":415,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":202,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":417,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":388,"org.easymock.tests.MockingTest.testNicePartialClassMocking":127,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests2.CaptureTest.testCaptureLast":357,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":435,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":302,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":316,"org.easymock.tests.MockingTest.testTwoMocks":125,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":402,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":320,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":3,"org.easymock.samples.ExampleTest.removeNonExistingDocument":44,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":74,"org.easymock.tests.UsageStrictMockTest.differentMethods":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":324,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":118,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":26,"org.easymock.tests2.MockBuilderTest.testCreateMockString":392,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":458,"org.easymock.tests.UsageExpectAndThrowTest.floatType":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":411,"org.easymock.tests.UsageVerifyTest.twoThrows":159,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":467,"org.easymock.samples.ExampleTest.voteAgainstRemoval":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":263,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":428,"org.easymock.tests.LimitationsTest.privateConstructor":57,"org.easymock.tests2.UsageConstraintsTest.testNotNull":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":115,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":12,"org.easymock.tests2.UsageTest.defaultResetToNice":401,"org.easymock.samples.ExampleTest.voteAgainstRemovals":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":264,"org.easymock.tests.UsageVarargTest.differentLength":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.CallbackTest.callback":438,"org.easymock.tests2.UsageConstraintsTest.equals":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":425,"org.easymock.tests.UsageTest.openCallCountByLastCall":99,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":11,"org.easymock.tests.UsageCallCountTest.tooFewCalls":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":432,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":234,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":2,"org.easymock.tests.UsageThrowableTest.throwCheckedException":112,"org.easymock.tests.MockingTest.testStrictClassMocking":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":434,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":433,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":413,"org.easymock.tests.ObjectMethodsTest.testHashCode":248,"org.easymock.tests2.NameTest.nameForNiceMock":442,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":337,"org.easymock.tests2.DependencyTest.testInterfaceMocking":366,"org.easymock.samples.ExampleTest.addDocument":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.DelegateToTest.testStubDelegate":373,"org.easymock.tests2.AnswerTest.stubAnswer":412,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":238,"org.easymock.tests.UsageVarargTest.varargLongAccepted":169,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":151,"org.easymock.tests.UsageExpectAndReturnTest.floatType":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":406,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.UsageThrowableTest.noUpperLimit":109,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":289,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":355,"org.easymock.tests2.SerializationTest.test":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":134,"org.easymock.tests2.UsageConstraintsTest.testSame":300,"org.easymock.samples.SupportTest.addDocument":36,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":459,"org.easymock.tests.GenericTest.testPackageScope":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":330,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":130,"org.easymock.tests2.NameTest.nameForMock":440,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests2.UsageStrictMockTest.differentMethods":449,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":212,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":184,"org.easymock.tests2.MockedExceptionTest.testRealException":15,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":292,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":81,"org.easymock.tests2.NameTest.nameForStrictMock":441,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":414,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":420,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":290,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":119,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":382,"org.easymock.tests2.UsageStrictMockTest.range":448,"org.easymock.tests2.UsageConstraintsTest.lessThan":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":463,"org.easymock.tests2.CaptureTest.testCaptureRightOne":360,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":301,"org.easymock.tests.UsageRangeTest.combination":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":21,"org.easymock.tests.UsageTest.wrongArguments":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":460,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":253,"org.easymock.tests.UsageVarargTest.varargShortAccepted":168,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":121,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":66,"org.easymock.tests2.UsageConstraintsTest.cmpTo":306,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":255,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":400,"org.easymock.tests2.CaptureTest.testCaptureFromStub":361,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":71,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":383,"org.easymock.tests.UsageTest.unexpectedCallWithArray":97,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":64,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.tests2.UsageConstraintsTest.constraints":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":45,"org.easymock.tests.UsageStrictMockTest.testVerify":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":52,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":356,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":478,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":139,"org.easymock.tests.LimitationsTest.abstractClass":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":282}}]
