[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:202","sourceCode":"final java.io.ObjectInputStream java.io.ObjectInputStream = new java.io.ObjectInputStream(new java.io.ByteArrayInputStream(byte[]))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[30,31,32,33,33,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[32,153,154,155,156,157,35,36,158,37,38,39,41,45,46,47,0,52,55,57,58,61,66,67,1,2,3,159,160,161,162,163,164,165,166,167,168,169,170,171,172,69,173,174,141,175,142,143,144,147,176,148,150,177,152,178,179,180,181,182,73,74,75,76,183,77,78,184,185,5,186,187,188,189,190,191,192,193,9,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,83,86,96,102,222,223,224,225,226,227,228,229,230,106,231,232,12,13,14,113,114,115,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,19,21,264,265,266,267,22,268,269,270,271,272,138],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[2,3,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[273],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33,34,42,274,275,276,59,277,67,68,278,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[276,59,67,68,69,283,284,285,286,287],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[141,142,150,196,197,199,201,202,288,213,218],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[32,153,154,155,156,157,35,36,158,37,38,39,41,45,46,47,0,52,55,57,58,61,66,67,1,2,3,160,161,162,163,164,165,166,167,168,169,170,171,172,69,173,174,141,175,143,144,147,176,148,150,177,152,178,179,180,181,182,73,74,75,76,183,77,78,184,185,5,186,187,188,189,190,191,192,193,9,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,83,86,96,102,222,223,224,225,226,227,228,229,230,106,108,231,12,13,14,289,273,113,114,115,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,19,21,264,265,266,267,22,268,269,270,271,272,138,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33,34,42,274,275,276,59,277,67,68,278,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[121,291,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[276,68,283,284,285,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[121,291,292],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[221],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[211,293],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[294,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[37,39,1,2,3,11,12,13,14,297],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[210],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[197,201,288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.Range:36","failures":[30,31,32,153,298,154,155,299,156,300,301,33,34,302,303,304,157,35,36,158,37,38,39,40,305,41,42,43,44,45,46,47,48,49,306,307,308,309,310,0,311,312,313,314,315,316,50,274,52,53,275,54,55,56,57,276,58,317,59,60,61,277,63,64,65,66,318,67,68,278,319,320,1,321,2,3,322,323,324,325,326,327,159,279,328,329,160,330,161,162,163,164,165,166,167,168,169,170,171,172,331,69,173,70,332,174,71,333,334,335,72,4,336,337,141,175,142,143,144,145,146,147,176,148,150,151,177,152,178,179,180,181,182,73,74,75,76,338,183,77,78,339,184,185,5,6,186,340,187,188,189,7,8,190,191,341,342,192,193,343,344,345,346,347,9,348,349,350,351,352,353,354,355,356,357,194,195,196,197,358,198,199,200,201,202,203,288,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,359,360,221,361,362,363,364,365,366,367,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,368,369,370,371,372,373,374,375,376,377,378,379,380,222,223,224,225,226,10,227,228,381,382,229,383,384,385,386,387,388,389,390,391,392,393,230,394,105,106,107,108,109,395,396,397,398,399,400,401,402,403,231,232,404,405,11,12,406,13,14,407,297,408,409,410,411,412,413,289,273,110,111,112,113,114,414,115,415,416,116,233,417,234,235,236,237,238,239,15,16,418,419,117,118,119,120,121,122,420,123,421,17,422,423,18,124,424,425,426,427,428,429,430,431,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,125,126,127,128,129,130,131,132,260,261,262,263,432,433,434,435,436,437,280,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,19,20,21,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,133,264,265,266,267,22,23,24,268,269,25,26,270,27,271,272,134,483,484,28,485,135,486,29,487,488,489,490,491,492,493,494,495,496,497,498,499,136,137,138,139,500,290,501,502,503,504,505],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"failMessage":"key"}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[507,508,11,23,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[276,68,283,284,285,511,512],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[381,438],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":197,"org.easymock.tests2.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":267,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":441,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":340,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":302,"org.easymock.tests2.DelegateToTest.testReturnException":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":384,"org.easymock.tests.MockingTest.testPartialClassMocking":113,"org.easymock.tests.MockClassControlTest.testToString":127,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":323,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":463,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":86,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":283,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":203,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":227,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":504,"org.easymock.samples.ExampleTest.answerVsDelegate":298,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":135,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":416,"org.easymock.tests2.UsageConstraintsTest.testNull":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":37,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":170,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":132,"org.easymock.tests2.CaptureTest.testPrimitive":143,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":482,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":426,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":458,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageVarargTest.varargIntAccepted":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":512,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":334,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests.ReplayStateInvalidUsageTest.times":496,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":9,"org.easymock.tests2.DependencyTest.testClassMocking":341,"org.easymock.tests2.AnswerTest.answer":159,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":357,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":484,"org.easymock.tests2.CaptureTest.testAnd":141,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":262,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":462,"org.easymock.tests2.DelegateToTest.testDelegate":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":478,"org.easymock.tests.LimitationsTest.mockFinalMethod":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":412,"org.easymock.tests2.DependencyTest.testClassMockingSupport":342,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":15,"org.easymock.tests2.CaptureTest.testCapture1_2446744":144,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":355,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":490,"org.easymock.tests.UsageThrowableTest.throwError":233,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":485,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":316,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":104,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":491,"org.easymock.tests.MockingTest.testInterfaceMocking":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":464,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":55,"org.easymock.tests2.MockBuilderTest.testCreateMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":350,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":472,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":166,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":431,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":502,"org.easymock.tests.UsageOverloadedMethodTest.overloading":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":251,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":264,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":207,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":291,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":148,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":372,"org.easymock.tests.MockClassControlTest.testEquals":131,"org.easymock.tests2.EasyMockSupportClassTest.testAll":83,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":410,"org.easymock.tests2.CaptureTest.testCaptureAll":175,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":356,"org.easymock.tests.MockNameTest.defaultName":10,"org.easymock.tests2.UsageConstraintsTest.testMatches":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":488,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":427,"org.easymock.samples.ExampleTest.voteForRemovals":156,"org.easymock.tests.UsageVarargTest.allKinds":380,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":411,"org.easymock.samples.BasicClassMockTest.testPrintContent":31,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":238,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":312,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":420,"org.easymock.tests2.UsageConstraintsTest.greaterThan":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":261,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.samples.ExampleTest.voteForRemoval":154,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":123,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":48,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":40,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":133,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":163,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":383,"org.easymock.tests2.CaptureTest.testCaptureFirst":152,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":164,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":191,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":247,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":181,"org.easymock.tests2.CaptureTest.testCapture2_2446744":177,"org.easymock.tests2.UsageTest.moreThanOneArgument":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":379,"org.easymock.tests.GenericTest.testBridgedEquals":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":402,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":408,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":481,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":62,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":487,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":479,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":424,"org.easymock.tests.UsageCallCountTest.tooManyCalls":403,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":468,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":237,"org.easymock.tests.MockingTest.testNiceClassMocking":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":74,"org.easymock.tests.MockingTest.testClassMocking":111,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":396,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":51,"org.easymock.tests2.UsageConstraintsTest.testContains":206,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.UsageConstraintsTest.testFind":198,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":266,"org.easymock.tests.MockTypeTest.fromEasyMockClass":28,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":367,"org.easymock.tests.UsageExpectAndReturnTest.object":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":374,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":423,"org.easymock.tests.UsageTest.exactCallCountByLastCall":270,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":500,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":459,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":256,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":369,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":391,"org.easymock.tests.MockClassControlTest.testHashCode":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":307,"org.easymock.tests2.EasyMockSupportTest.testVerify":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":93,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":460,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":430,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":389,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":354,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":364,"org.easymock.tests.UsageVarargTest.varargCharAccepted":373,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":419,"org.easymock.tests2.CaptureTest.testCaptureMultiple":140,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":172,"org.easymock.tests.DefaultClassInstantiatorTest.object":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":429,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":306,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":469,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":455,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":102,"org.easymock.tests2.UsageTest.resumeIfFailure":190,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":386,"org.easymock.tests2.StubTest.stubWithReturnValue":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":276,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":217,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":249,"org.easymock.tests2.SerializationTest.testAllMockedMethod":70,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":447,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":475,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":453,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":279,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":501,"org.easymock.tests.UsageExpectAndThrowTest.object":473,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":214,"org.easymock.tests2.DelegateToTest.testWrongClass":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":4,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":474,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":498,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":503,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests2.CaptureTest.testCaptureNone":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":273,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":294,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":378,"org.easymock.tests2.ThreadingTest.testThreadSafe":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":97,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":400,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":30,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":18,"org.easymock.tests2.CaptureTest.testCapture_2617107":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":382,"org.easymock.tests2.UsageConstraintsTest.any":204,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":495,"org.easymock.tests2.StubTest.stub":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":457,"org.easymock.tests.UsageExpectAndThrowTest.longType":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":385,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":121,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":494,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":0,"org.easymock.tests2.SerializationTest.testClass":69,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":345,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":506,"org.easymock.tests2.NameTest.nameForMocksControl":327,"org.easymock.tests2.MockedExceptionTest.testMockedException":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":85,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":269,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":467,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":115,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":366,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests.MockingTest.testNicePartialClassMocking":114,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":39,"org.easymock.tests2.CaptureTest.testCaptureLast":147,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":343,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":78,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":202,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":215,"org.easymock.tests.MockingTest.testTwoMocks":112,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":339,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":471,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":219,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":296,"org.easymock.samples.ExampleTest.removeNonExistingDocument":300,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":492,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":308,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":119,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":295,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":180,"org.easymock.tests2.MockBuilderTest.testCreateMockString":63,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":125,"org.easymock.tests.UsageExpectAndThrowTest.floatType":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":87,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":329,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":278,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":96,"org.easymock.samples.ExampleTest.voteAgainstRemoval":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":413,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":137,"org.easymock.tests2.UsageConstraintsTest.testNotNull":218,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":239,"org.easymock.tests2.UsageTest.defaultResetToNice":189,"org.easymock.samples.ExampleTest.voteAgainstRemovals":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":344,"org.easymock.tests.UsageVarargTest.differentLength":375,"org.easymock.tests2.CallbackTest.callback":337,"org.easymock.tests2.UsageConstraintsTest.equals":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":42,"org.easymock.tests.UsageTest.openCallCountByLastCall":268,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":381,"org.easymock.tests.UsageCallCountTest.tooFewCalls":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":505,"org.easymock.tests.UsageThrowableTest.throwCheckedException":236,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":110,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":497,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":183,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":330,"org.easymock.tests.ObjectMethodsTest.testHashCode":422,"org.easymock.tests2.CompareToTest.testGreateOrEqual":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":511,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":182,"org.easymock.tests2.NameTest.nameForNiceMock":326,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":285,"org.easymock.samples.ExampleTest.addDocument":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":103,"org.easymock.tests2.DelegateToTest.testStubDelegate":221,"org.easymock.tests2.AnswerTest.stubAnswer":160,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":317,"org.easymock.tests.UsageVarargTest.varargLongAccepted":377,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":67,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.UsageThrowableTest.noUpperLimit":417,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":314,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":195,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":71,"org.easymock.tests2.SerializationTest.test":173,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":145,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":292,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":118,"org.easymock.tests2.UsageConstraintsTest.testSame":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":241,"org.easymock.samples.SupportTest.addDocument":304,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":338,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":88,"org.easymock.tests.GenericTest.testPackageScope":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":313,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":415,"org.easymock.tests2.NameTest.nameForMock":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":252,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":477,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":263,"org.easymock.tests2.MockedExceptionTest.testRealException":318,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":444,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":499,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":228,"org.easymock.tests2.NameTest.nameForStrictMock":325,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":54,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":120,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":213,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":286,"org.easymock.tests2.CaptureTest.testCaptureRightOne":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":92,"org.easymock.tests2.UsageConstraintsTest.testOr":201,"org.easymock.tests.UsageRangeTest.combination":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":89,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":253,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":122,"org.easymock.tests.UsageVarargTest.varargShortAccepted":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":401,"org.easymock.tests2.UsageConstraintsTest.cmpTo":205,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":188,"org.easymock.tests2.CaptureTest.testCaptureFromStub":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":489,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":53,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":399,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":254,"org.easymock.tests2.CaptureTest.testCapture":149,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":406,"org.easymock.tests2.UsageConstraintsTest.constraints":196,"org.easymock.samples.ExampleTest.addAndChangeDocument":301,"org.easymock.tests.UsageStrictMockTest.testVerify":297,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":303,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":409,"org.easymock.tests2.CompareToTest.testGreateThan":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":146,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.LimitationsTest.abstractClass":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":167,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":370}}]
