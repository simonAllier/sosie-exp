[{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[11,12,13,14,15],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1445","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[20,21,22,23,0,24,25,26,27,28,29,30,31,32,33,34,35,36,37,16,17,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,12,101,102,103,104,105,106,13,14,107,108,109,2,110,111,3,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[192],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[193],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[194,15],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[38,41,42,43,44,108,110,195,196],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[197,21,198],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[199,200,201,202,203,204,205],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[206,207,208,209,210,22,211,23,212,0,24,213,25,214,215,16,18,38,39,41,42,43,216,44,217,45,46,47,48,89,90,91,92,108,109,2,110,3,112,113,218,218,219,219,115,220,221,222,223,128,224,129,225,142,143,144,183,226,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[39,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:64","sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)","type":"CtInvocationImpl"},"failures":[116,117,120,228,229,230,231,232,233,234,235,236,237,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":36,"org.easymock.tests2.StubTest.stubWithReturnValue":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":157,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":10,"org.easymock.tests.MockingTest.testPartialClassMocking":142,"org.easymock.samples.SupportTest.voteForRemovals":116,"org.easymock.tests.MockClassControlTest.testToString":4,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":184,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":90,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":197,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":94,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":191,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":180,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests.UsageStrictMockTest.range":146,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":108,"org.easymock.tests2.UsageConstraintsTest.testNull":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":0,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":35,"org.easymock.tests2.CaptureTest.testPrimitive":101,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":182,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":40,"org.easymock.tests2.CaptureTest.testCaptureNone":104,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":170,"org.easymock.tests.UsageVerifyTest.twoReturns":189,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":95,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":192,"org.easymock.tests.UsageVarargTest.varargIntAccepted":230,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":132,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":212,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":133,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":49,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests2.AnswerTest.answer":20,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":167,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":208,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":144,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":38,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.CaptureTest.testCaptureLast":103,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":71,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":112,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":84,"org.easymock.tests.MockingTest.testTwoMocks":225,"org.easymock.tests2.CaptureTest.testCapture1_2446744":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":148,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":87,"org.easymock.tests.UsageThrowableTest.throwError":135,"org.easymock.tests.UsageStrictMockTest.differentMethods":147,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":97,"org.easymock.tests2.MockBuilderTest.testCreateMockString":215,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":7,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":91,"org.easymock.samples.PartialClassMockTest.testGetArea":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":124,"org.easymock.samples.ExampleTest.voteAgainstRemoval":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests2.UsageTest.niceToStrict":57,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":8,"org.easymock.tests2.UsageConstraintsTest.testNotNull":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":23,"org.easymock.tests2.MockBuilderTest.testCreateMock":213,"org.easymock.tests2.UsageTest.defaultResetToNice":60,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":163,"org.easymock.tests.UsageVarargTest.differentLength":233,"org.easymock.tests.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":63,"org.easymock.tests.UsageOverloadedMethodTest.overloading":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":159,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":185,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":76,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":105,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests2.EasyMockSupportClassTest.testAll":89,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":224,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":206,"org.easymock.tests2.CaptureTest.testCaptureAll":12,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests2.UsageConstraintsTest.testMatches":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":111,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":198,"org.easymock.samples.ExampleTest.voteForRemovals":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":202,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":99,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests2.DependencyTest.testInterfaceMocking":93,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":201,"org.easymock.samples.BasicClassMockTest.testPrintContent":221,"org.easymock.tests2.DelegateToTest.testStubDelegate":50,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.AnswerTest.stubAnswer":21,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":145,"org.easymock.tests2.UsageConstraintsTest.greaterThan":80,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":177,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.samples.ExampleTest.voteForRemoval":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":130,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":96,"org.easymock.tests.UsageExpectAndReturnTest.floatType":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":81,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":64,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":1,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":28,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests2.UsageConstraintsTest.testSame":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":149,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":29,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":155,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.CaptureTest.testCapture2_2446744":13,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.GenericTest.testBridgedEquals":196,"org.easymock.tests.UsageExpectAndReturnTest.longType":151,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":26,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":160,"org.easymock.tests2.UsageStrictMockTest.differentMethods":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":156,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":109,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":210,"org.easymock.tests2.UsageConstraintsTest.testContains":75,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":113,"org.easymock.tests2.UsageConstraintsTest.testFind":67,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests.UsageExpectAndReturnTest.object":158,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":52,"org.easymock.tests2.UsageConstraintsTest.lessThan":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":34,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":200,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests2.CaptureTest.testCaptureRightOne":106,"org.easymock.tests2.UsageConstraintsTest.testOr":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":205,"org.easymock.tests.UsageRangeTest.combination":176,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":164,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":161,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests2.UsageConstraintsTest.cmpTo":74,"org.easymock.tests.UsageVarargTest.varargCharAccepted":231,"org.easymock.tests2.CaptureTest.testCaptureMultiple":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":134,"org.easymock.tests2.UsageTest.openCallCountByLastCall":58,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":37,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":162,"org.easymock.tests2.CaptureTest.testCapture":194,"org.easymock.tests2.UsageConstraintsTest.constraints":65,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.CapturesMatcherTest.test":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":92,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":5,"org.easymock.tests2.UsageTest.resumeIfFailure":61,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":125,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":154,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":126,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":32}}]
