[{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[63,92,299,300,301,302],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[37,60,303,73,79,86,87,103,109,116,117,127,137],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[17,304,32,33,34,35,53,54,305,306,154,154,155,155,157,158,159,160,161,162,163,164,165,166,167,168,177,178,179,180,200,201,203,204,205,206,207,208,209,210,211,260,268,271,273,274,275,276,277,279,280],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[271,272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[307,6,7,8,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,308,32,33,34,35,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,309,98,99,310,311,312,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,313,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,314,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,158,159,161,162,164,165,167,169,170,315,171,172,177,178,179,180,181,182,183,184,316,317,318,319,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,320,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[321,322,282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[323,324],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[323,324],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[327,328,329,330,331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[332,333],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:33","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[334,335,336,337],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[264,265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[241],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[18,93,98,99,123,124,125,126,127,131,132,135,136,137,138,139,140,154,155,184,228,233,234,237,238,239,240,245,247,248,250,251,257,258,259,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[192,204,249],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":236,"org.easymock.tests2.UsageTest.argumentsOrdered":197,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":321,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":192,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":109,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":273,"org.easymock.tests2.DelegateToTest.testReturnException":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":37,"org.easymock.tests.MockingTest.testPartialClassMocking":32,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":302,"org.easymock.samples.SupportTest.voteForRemovals":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":70,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":178,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":333,"org.easymock.tests.UsageExpectAndThrowTest.object":80,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":253,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests2.DelegateToTest.testWrongClass":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":98,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":131,"org.easymock.tests2.UsageTest.wrongArguments":190,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":15,"org.easymock.samples.ExampleTest.answerVsDelegate":145,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":274,"org.easymock.tests2.UsageConstraintsTest.testNull":238,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":222,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":164,"org.easymock.tests2.CaptureTest.testPrimitive":288,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":89,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":202,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":14,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":303,"org.easymock.tests2.CaptureTest.testCaptureNone":293,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVerifyTest.twoReturns":130,"org.easymock.tests.UsageVarargTest.varargByteAccepted":50,"org.easymock.tests2.ThreadingTest.testThreadSafe":169,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.UsageVarargTest.varargIntAccepted":44,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":9,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":158,"org.easymock.tests2.CaptureTest.testCapture_2617107":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":134,"org.easymock.tests2.UsageConstraintsTest.any":243,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":163,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":127,"org.easymock.tests.UsageExpectAndThrowTest.longType":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":38,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.tests2.SerializationTest.testClass":271,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":261,"org.easymock.tests.LimitationsTest.mockNativeMethod":35,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":305,"org.easymock.tests2.AnswerTest.answer":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":119,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":176,"org.easymock.tests2.CaptureTest.testAnd":285,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":208,"org.easymock.tests2.NameTest.nameForMocksControl":319,"org.easymock.tests2.MockedExceptionTest.testMockedException":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":121,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.DelegateToTest.testDelegate":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":74,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":34,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":165,"org.easymock.tests.MockingTest.testNicePartialClassMocking":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":85,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":205,"org.easymock.tests2.CaptureTest.testCaptureLast":292,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":337,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":280,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":241,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":60,"org.easymock.tests.MockingTest.testTwoMocks":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":336,"org.easymock.tests2.CaptureTest.testCapture1_2446744":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":196,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":258,"org.easymock.tests.UsageThrowableTest.throwError":20,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":315,"org.easymock.tests2.MockBuilderTest.testCreateMockString":168,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests.UsageExpectAndThrowTest.floatType":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":140,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":249,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":263,"org.easymock.tests.UsageVerifyTest.twoThrows":129,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":179,"org.easymock.samples.PartialClassMockTest.testGetArea":157,"org.easymock.tests2.CompareToTest.testLessOrEqual":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":124,"org.easymock.samples.ExampleTest.voteAgainstRemoval":147,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":71,"org.easymock.tests2.UsageTest.niceToStrict":191,"org.easymock.tests2.UsageConstraintsTest.testNotNull":257,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":266,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":162,"org.easymock.tests2.UsageTest.defaultResetToNice":195,"org.easymock.tests2.MockBuilderTest.testCreateMock":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":115,"org.easymock.tests.UsageVarargTest.differentLength":47,"org.easymock.tests2.CallbackTest.callback":212,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":79,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":233,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":133,"org.easymock.tests.UsageCallCountTest.tooFewCalls":7,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":247,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":111,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":141,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":246,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":16,"org.easymock.tests.UsageThrowableTest.throwCheckedException":24,"org.easymock.tests2.EasyMockSupportClassTest.testAll":177,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":87,"org.easymock.tests2.CaptureTest.testCaptureAll":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":276,"org.easymock.tests2.UsageConstraintsTest.testMatches":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":139,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.samples.ExampleTest.voteForRemovals":149,"org.easymock.tests2.NameTest.nameForNiceMock":318,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests.UsageVarargTest.allKinds":52,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":128,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":59,"org.easymock.samples.BasicClassMockTest.testPrintContent":159,"org.easymock.samples.ExampleTest.addDocument":148,"org.easymock.tests2.DelegateToTest.testStubDelegate":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":26,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":226,"org.easymock.tests2.AnswerTest.stubAnswer":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":41,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":93,"org.easymock.tests2.UsageConstraintsTest.greaterThan":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":211,"org.easymock.tests.UsageVarargTest.varargLongAccepted":49,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.samples.ExampleTest.voteForRemoval":146,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":170,"org.easymock.tests.UsageExpectAndReturnTest.floatType":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":206,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":155,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":251,"org.easymock.tests.UsageThrowableTest.noUpperLimit":21,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":234,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":17,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":290,"org.easymock.tests2.SerializationTest.test":272,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":22,"org.easymock.tests2.UsageConstraintsTest.testSame":239,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":101,"org.easymock.samples.SupportTest.addDocument":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":36,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":322,"org.easymock.tests2.CaptureTest.testCaptureFirst":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":107,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests2.CaptureTest.testCapture2_2446744":297,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.UsageTest.moreThanOneArgument":189,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":51,"org.easymock.tests.GenericTest.testBridgedEquals":5,"org.easymock.tests2.NameTest.nameForMock":316,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":11,"org.easymock.tests.UsageExpectAndReturnTest.longType":103,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":112,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":255,"org.easymock.tests2.UsageStrictMockTest.differentMethods":231,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":104,"org.easymock.tests.UsageCallCountTest.tooManyCalls":12,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":122,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":6,"org.easymock.tests2.MockedExceptionTest.testRealException":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":275,"org.easymock.tests2.NameTest.nameForStrictMock":317,"org.easymock.tests2.UsageConstraintsTest.testContains":245,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":268,"org.easymock.tests2.UsageConstraintsTest.testFind":237,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":143,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":204,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests.UsageExpectAndReturnTest.object":110,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":161,"org.easymock.tests2.UsageStrictMockTest.range":230,"org.easymock.tests2.UsageConstraintsTest.lessThan":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":221,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":46,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests2.CaptureTest.testCaptureRightOne":295,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":311,"org.easymock.tests2.UsageConstraintsTest.testOr":240,"org.easymock.tests.UsageRangeTest.combination":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":201,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":42,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":116,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":29,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":306,"org.easymock.tests2.EasyMockSupportTest.testVerify":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":113,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":312,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":324,"org.easymock.tests.UsageVarargTest.varargShortAccepted":48,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":28,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageConstraintsTest.cmpTo":244,"org.easymock.tests.UsageVarargTest.varargCharAccepted":45,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":227,"org.easymock.tests2.UsageTest.openCallCountByLastCall":193,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":194,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests2.CaptureTest.testCaptureFromStub":296,"org.easymock.tests.UsageTest.unexpectedCallWithArray":63,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":77,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":114,"org.easymock.tests2.CaptureTest.testCapture":326,"org.easymock.tests2.UsageConstraintsTest.constraints":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":209,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":76,"org.easymock.samples.ExampleTest.addAndChangeDocument":150,"org.easymock.tests.CapturesMatcherTest.test":325,"org.easymock.tests.UsageStrictMockTest.testVerify":309,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":117,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":151,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":57,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":291,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":106,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":43}}]
