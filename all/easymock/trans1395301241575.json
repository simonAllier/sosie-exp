[{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:920","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[16,17,18,19,20,21],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[22,23,24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[28],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,2,46,47,48,49,50,3,24,51,52,4,5,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,25,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,6,7,140,141,8,9,142,143,144,34,145,35,146,147,148,149,150,151,152,153,154,155,156,36,157,158,37,159,160,0,1,39,161,162,38,163,164,165,166,167,14,168,169,170,171,172,173,174,15,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,28,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[148,210,160,161],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[40,41,42,48,211,212,213,24,51,4,5,214,215,76,98,25,99,102,103,216,217,218,219,220,221,222,223,224,225,226,227,228,140,8,9,229,12,230,163,164,165,166,231,232,233,234,14,168,173,174,178,179,235,236,237,238,239,240,241,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:190","failures":[40,42,2,243,244,245,46,246,247,49,50,248,51,4,5,57,61,63,64,65,66,67,68,69,70,71,72,75,97,98,100,101,104,249,114,120,121,122,125,126,127,128,129,225,227,140,8,9,143,144,34,145,35,146,147,148,149,150,151,152,153,154,155,156,36,157,158,37,159,160,0,1,39,161,162,38,250,10,251,229,252,11,12,253,230,13,254,255,167,256,171,172,173,15,176,177,257,258,180,181,185,186,188,189,192,259,193,194,195,196,197,198,199,260,28,201,239,261,262,263,264,241,206,265],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.RecordState:117","failures":[267,6,169,170,181,182,184,207],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[157],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[268,269,270,271,272,273,274],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[185,187,188,189,190,191,192,193,275,194,195,197],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[40,42,43,44,45,2,243,244,245,46,47,276,49,50,51,4,5,54,55,56,57,58,64,65,66,67,68,69,70,71,72,75,97,98,100,101,104,277,106,107,108,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,225,136,139,227,140,8,9,143,144,34,145,35,146,147,148,149,150,151,152,153,154,155,156,36,157,158,37,159,160,0,1,278,39,161,162,38,250,10,251,229,252,11,12,253,230,13,254,255,279,163,164,280,281,165,166,282,167,233,234,14,256,171,172,173,15,176,177,257,258,180,181,183,185,186,187,188,189,192,259,193,194,196,197,198,199,260,28,200,201,283,284,285,286,202,239,203,204,261,205,262,263,264,241,206,265,287,288,289,208,290,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[40,41,42,291,292,293,43,44,294,45,295,296,297,298,299,300,301,302,2,243,244,245,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,16,17,18,19,333,20,334,21,46,47,335,246,247,48,336,337,338,339,340,341,342,343,344,345,346,347,348,276,49,50,248,349,211,350,351,212,213,3,352,24,51,52,4,5,53,353,54,55,56,57,58,59,60,61,62,63,354,64,355,65,66,67,68,69,70,71,72,73,74,75,214,356,357,358,215,76,359,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,25,99,100,101,102,103,104,360,361,362,363,364,365,366,367,368,266,277,369,370,371,216,372,373,217,218,219,220,221,374,375,376,377,378,379,380,381,105,382,383,384,385,386,387,388,106,107,389,390,108,391,109,110,111,112,392,113,393,394,395,396,397,222,223,224,398,399,400,401,249,402,267,403,404,405,406,114,407,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,408,409,410,411,412,225,226,413,414,415,416,417,418,135,136,137,419,138,139,420,421,6,422,423,424,425,426,227,228,427,428,429,430,431,7,432,140,141,8,9,142,143,144,433,34,145,35,146,434,147,148,149,150,151,152,210,153,154,155,156,36,157,158,37,159,160,0,1,278,39,161,162,38,250,10,251,229,252,11,12,253,230,13,254,255,435,279,163,164,280,436,281,165,166,437,438,439,440,441,231,268,282,232,442,443,167,444,233,445,234,446,447,448,14,271,168,449,450,256,451,452,169,453,170,171,172,173,174,15,175,176,177,257,178,179,258,180,181,454,455,182,183,184,456,235,236,237,238,185,186,187,188,189,190,191,192,259,193,194,195,196,197,457,198,199,260,28,200,201,458,459,460,283,461,462,284,463,464,465,466,467,468,469,470,471,285,472,473,474,475,476,286,477,478,202,239,203,204,261,205,479,480,262,272,481,240,263,264,241,482,242,483,484,206,265,485,486,487,488,489,490,491,492,287,493,494,495,273,274,288,289,207,208,290,496,209,497,498,499],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[500,501,502,503,504,420,445],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[46,47,48,51,54,55,56,57,58,71,72,73,74,75,106,107,392,140,150,153,186,192,259,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[505,185,187,188,189,190,191,192,193,275,194,195,197],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[40,41,42,291,292,293,43,44,294,45,295,296,297,298,299,300,301,302,2,243,244,245,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,16,17,18,19,333,20,21,46,47,335,246,247,48,336,337,338,339,340,341,342,343,344,345,346,347,276,49,50,248,349,211,350,351,212,213,3,352,24,51,52,4,5,53,353,54,55,56,57,58,59,60,61,62,63,354,64,355,65,66,67,68,69,70,71,72,73,74,75,214,356,357,358,215,76,359,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,25,99,100,101,102,103,104,360,361,362,363,364,365,366,367,368,266,277,369,370,371,216,217,218,219,220,221,374,375,376,377,378,379,380,381,105,382,383,384,385,386,387,388,106,107,389,390,108,391,109,110,111,112,392,113,393,394,395,396,397,222,223,224,398,399,400,401,249,402,267,403,404,405,406,114,407,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,408,409,410,411,412,225,226,413,414,415,416,417,418,135,136,137,419,138,139,420,6,422,423,424,425,426,227,228,427,428,429,430,431,7,432,140,141,8,9,142,143,144,433,34,145,35,146,434,147,148,149,150,151,152,210,153,154,155,156,36,157,158,37,159,160,0,1,278,39,161,162,38,250,10,251,229,252,11,12,253,230,13,254,255,435,279,163,164,280,281,165,166,438,439,440,441,231,282,232,443,167,444,233,234,447,448,14,168,449,450,256,451,169,453,170,171,172,173,174,15,175,176,177,257,178,179,258,180,181,454,455,182,183,184,456,235,236,237,238,185,186,187,188,189,190,191,192,259,193,194,195,196,197,457,198,199,260,28,200,201,458,459,460,283,461,462,284,463,464,465,466,467,468,469,470,471,285,472,473,474,475,476,286,477,478,202,239,203,204,261,205,479,480,262,272,481,240,263,264,241,482,242,483,484,206,265,485,489,490,491,492,287,493,494,495,273,274,288,289,207,208,290,496,209,497,498,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[266,371],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[452],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[16,17,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":146,"org.easymock.tests2.UsageTest.argumentsOrdered":179,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":318,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":495,"org.easymock.tests2.DelegateToTest.testReturnException":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":110,"org.easymock.tests.MockingTest.testPartialClassMocking":43,"org.easymock.tests.MockClassControlTest.testToString":222,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":456,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":77,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":152,"org.easymock.tests2.UsageTest.wrongArguments":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":71,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":376,"org.easymock.samples.ExampleTest.answerVsDelegate":207,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":219,"org.easymock.tests2.UsageConstraintsTest.testNull":148,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":204,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":13,"org.easymock.tests2.CaptureTest.testPrimitive":188,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":75,"org.easymock.tests.UsageTest.moreThanOneArgument":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":96,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":61,"org.easymock.tests.UsageTest.argumentsOrdered":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":298,"org.easymock.tests.UsageVarargTest.varargIntAccepted":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":231,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":58,"org.easymock.tests.ReplayStateInvalidUsageTest.times":385,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":227,"org.easymock.tests2.DependencyTest.testClassMocking":483,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":441,"org.easymock.tests2.CaptureTest.testAnd":185,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":373,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":442,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":252,"org.easymock.tests2.DelegateToTest.testDelegate":138,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":92,"org.easymock.tests.LimitationsTest.mockFinalMethod":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":307,"org.easymock.tests2.DependencyTest.testClassMockingSupport":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":215,"org.easymock.tests2.CaptureTest.testCapture1_2446744":189,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":439,"org.easymock.tests.UsageThrowableTest.throwError":64,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":380,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":218,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":478,"org.easymock.samples.PartialClassMockTest.testGetArea":288,"org.easymock.tests.MockingTest.testInterfaceMocking":294,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":381,"org.easymock.tests2.CompareToTest.testLessOrEqual":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":55,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":467,"org.easymock.tests2.UsageTest.niceToStrict":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":78,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":167,"org.easymock.tests2.MockBuilderTest.testCreateMock":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":26,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":86,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":11,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageOverloadedMethodTest.overloading":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":405,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":126,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":156,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":193,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":339,"org.easymock.tests.MockClassControlTest.testEquals":399,"org.easymock.tests2.EasyMockSupportClassTest.testAll":283,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":440,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":305,"org.easymock.tests.MockNameTest.defaultName":214,"org.easymock.tests2.UsageConstraintsTest.testMatches":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":378,"org.easymock.samples.ExampleTest.voteForRemovals":209,"org.easymock.tests.UsageVarargTest.allKinds":347,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":40,"org.easymock.samples.BasicClassMockTest.testPrintContent":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":306,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":69,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":7,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":113,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":241,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":21,"org.easymock.samples.ExampleTest.voteForRemoval":208,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":482,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":260,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":506,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":479,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":354,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":109,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":229,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":122,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests2.CaptureTest.testCapture2_2446744":196,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":326,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":346,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":367,"org.easymock.tests.UsageExpectAndReturnTest.longType":118,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":95,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":248,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":59,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":357,"org.easymock.tests.UsageCallCountTest.tooManyCalls":368,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":163,"org.easymock.tests.MockingTest.testNiceClassMocking":297,"org.easymock.tests.MockingTest.testClassMocking":292,"org.easymock.tests2.UsageConstraintsTest.testContains":155,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":361,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":256,"org.easymock.tests2.UsageConstraintsTest.testFind":147,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":50,"org.easymock.tests.MockTypeTest.fromEasyMockClass":217,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":170,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":3,"org.easymock.tests.UsageExpectAndReturnTest.object":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":341,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":351,"org.easymock.tests.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":420,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":131,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":404,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.MockClassControlTest.testHashCode":398,"org.easymock.tests2.EasyMockSupportTest.testVerify":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":469,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":438,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":452,"org.easymock.tests.UsageVarargTest.varargCharAccepted":340,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":332,"org.easymock.tests2.CaptureTest.testCaptureMultiple":505,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":331,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":16,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":393,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":470,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":224,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":356,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":286,"org.easymock.tests2.UsageTest.resumeIfFailure":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":216,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":112,"org.easymock.tests2.StubTest.stubWithReturnValue":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":445,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":124,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":39,"org.easymock.tests2.SerializationTest.testAllMockedMethod":433,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":324,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":27,"org.easymock.samples.SupportTest.voteForRemovals":287,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":89,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":330,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":454,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":402,"org.easymock.tests.UsageExpectAndThrowTest.object":87,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":0,"org.easymock.tests2.DelegateToTest.testWrongClass":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":107,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.samples.ConstructorCalledMockTest.testTax":273,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":490,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":458,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":387,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":375,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":22,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":247,"org.easymock.tests2.CaptureTest.testCaptureNone":259,"org.easymock.tests.UsageUnorderedTest.message":48,"org.easymock.tests.UsageVerifyTest.twoReturns":42,"org.easymock.tests.UsageVarargTest.varargByteAccepted":345,"org.easymock.tests2.ThreadingTest.testThreadSafe":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":472,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":365,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":493,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":212,"org.easymock.tests2.CaptureTest.testCapture_2617107":187,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":359,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageConstraintsTest.any":153,"org.easymock.tests2.StubTest.stub":457,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":384,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":111,"org.easymock.tests.UsageExpectAndThrowTest.longType":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":383,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.SerializationTest.testClass":143,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":134,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":238,"org.easymock.tests2.MockedExceptionTest.testMockedException":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":462,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":453,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":202,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":234,"org.easymock.tests.MockingTest.testNicePartialClassMocking":44,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests2.CompareToTest.testCompareEqual":31,"org.easymock.tests2.CaptureTest.testCaptureLast":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":76,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":166,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":151,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":1,"org.easymock.tests.MockingTest.testTwoMocks":293,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":162,"org.easymock.samples.ExampleTest.removeNonExistingDocument":497,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":105,"org.easymock.tests.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":18,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":28,"org.easymock.tests2.MockBuilderTest.testCreateMockString":168,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":79,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":421,"org.easymock.tests.UsageVerifyTest.twoThrows":41,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":285,"org.easymock.samples.ExampleTest.voteAgainstRemoval":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":264,"org.easymock.tests.LimitationsTest.privateConstructor":390,"org.easymock.tests2.UsageConstraintsTest.testNotNull":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":449,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":70,"org.easymock.tests2.UsageTest.defaultResetToNice":257,"org.easymock.samples.ExampleTest.voteAgainstRemovals":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.UsageVarargTest.differentLength":342,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.UsageConstraintsTest.equals":434,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":272,"org.easymock.tests.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":73,"org.easymock.tests.UsageCallCountTest.tooFewCalls":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":377,"org.easymock.tests.UsageThrowableTest.throwCheckedException":67,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":23,"org.easymock.tests.MockingTest.testStrictClassMocking":291,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":281,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":184,"org.easymock.tests2.CompareToTest.testGreateOrEqual":32,"org.easymock.tests.ObjectMethodsTest.testHashCode":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests2.NameTest.nameForNiceMock":237,"org.easymock.tests2.DependencyTest.testInterfaceMocking":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":502,"org.easymock.samples.ExampleTest.addDocument":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.DelegateToTest.testStubDelegate":136,"org.easymock.tests2.AnswerTest.stubAnswer":183,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":51,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":446,"org.easymock.tests.UsageVarargTest.varargLongAccepted":344,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":133,"org.easymock.tests.UsageExpectAndReturnTest.floatType":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":139,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":159,"org.easymock.tests.UsageThrowableTest.noUpperLimit":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":145,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":485,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.SerializationTest.test":144,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":17,"org.easymock.tests2.UsageConstraintsTest.testSame":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":116,"org.easymock.samples.SupportTest.addDocument":492,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":436,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":464,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":295,"org.easymock.tests2.NameTest.nameForMock":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":127,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":481,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":91,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests2.MockedExceptionTest.testRealException":451,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":221,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":321,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":72,"org.easymock.tests2.NameTest.nameForStrictMock":236,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":443,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":489,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":160,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":282,"org.easymock.tests2.UsageStrictMockTest.range":8,"org.easymock.tests2.UsageConstraintsTest.lessThan":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":468,"org.easymock.tests2.CaptureTest.testCaptureRightOne":194,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests.UsageRangeTest.combination":2,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":239,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests2.MockBuilderTest.testWithConstructor":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":465,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":309,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":20,"org.easymock.tests.UsageVarargTest.varargShortAccepted":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":366,"org.easymock.tests2.UsageConstraintsTest.cmpTo":154,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":455,"org.easymock.tests2.CompareToTest.testLessThan":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":311,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":195,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":379,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":232,"org.easymock.tests.UsageTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":364,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":129,"org.easymock.tests2.CaptureTest.testCapture":275,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.samples.ExampleTest.addAndChangeDocument":498,"org.easymock.tests.UsageStrictMockTest.testVerify":353,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":499,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":352,"org.easymock.tests2.CompareToTest.testGreateThan":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":304,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":56,"org.easymock.tests.LimitationsTest.abstractClass":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":121,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":12,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":337}}]
