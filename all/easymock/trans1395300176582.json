[{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[36,37,38],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[40,41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[43,44,45,46,47,48,49,50,51,52,19,53],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[54,55,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:50","failures":[0,1,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[98,98,43,99,44,45,46,47,48,49,100,50,52,19,101,53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,2,138,139,140,141,142,143,144,3,4,5,145,146,147,148,149,150,151,152,6,153,154,155,156,157,158,159,160,12,13,14,15,16,17,18,161,162,163,164,165,166,167,168,169,170,171,43,99,45,46,49,100,50,52,101,53,172,173,174,175,176,61,64,74,80,177,178,179,83,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,84,196,197,198,85,199,200,201,202,203,204,205,206,207,208,209,210,39,211,212,20,213,214,215,216,21,217,22,23,218,219,24,25,26,27,220,221,222,223,28,224,29,30,225,31,32,226,227,228,229,33,34,35,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[25,26,230,222,226,227,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[231],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[232,83,180,233],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[234,235,236,237,110,117,123,130,131,238,239,8,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[102,0,0,1,1,240,241,242,112,243,244,245,246,36,37,247,248,249,38,250,251,252,253,254,255,256,257,258,259,260,261,262,263,155,156,157,264,265,266,267,161,268,162,163,165,166,167,269,168,270,271,272,169,170,171,273,274,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,275,276,177,83,233,277,278,279,280,281,194,195,84,196,198,85,282,283,200,284,285,201,286,202,203,93,287,204,288,289,290,291,96,97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[232,83,180,233],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[102,103,292,104,105,293,106,294,295,107,296,240,241,297,298,299,300,234,301,302,303,304,305,235,306,307,308,309,310,311,236,237,312,313,112,243,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,2,314,315,246,138,316,139,140,141,142,143,144,3,4,317,318,5,145,319,146,147,148,320,149,150,321,322,151,323,324,325,326,152,327,328,6,329,153,154,330,155,156,157,331,332,333,334,335,336,158,159,160,12,13,14,15,16,337,338,339,340,341,342,343,344,345,346,17,18,161,162,163,164,165,166,167,168,170,43,99,44,45,46,47,48,49,100,50,52,101,53,172,173,174,175,176,61,64,74,80,347,177,178,348,179,83,180,233,181,182,183,184,185,186,187,189,190,191,192,349,193,194,195,84,196,197,198,85,350,199,351,352,201,202,203,205,206,207,353,208,354,209,210,355,356,211,212,357,20,358,213,214,359,215,216,360,21,217,22,23,218,219,24,25,26,27,220,221,222,223,28,224,29,30,225,31,32,226,227,228,361,229,33,34,35,40,362,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[102,103,292,104,105,293,106,294,295,107,296,0,1,240,241,297,298,299,300,234,301,302,303,304,305,235,306,307,308,309,310,311,236,237,312,313,98,98,112,243,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,2,363,246,364,365,366,367,368,369,370,371,238,138,316,139,140,141,142,143,144,3,4,317,318,5,145,319,146,147,148,372,320,149,150,321,322,151,373,239,374,375,323,376,324,325,326,377,378,327,328,6,329,153,154,330,155,156,157,331,332,333,334,379,335,336,158,159,160,7,8,9,10,11,12,13,14,15,16,337,338,339,340,341,380,342,343,344,345,346,17,18,161,162,163,164,165,166,167,269,168,272,169,170,171,43,99,44,45,46,47,48,49,100,50,52,19,101,53,172,173,174,175,176,61,64,74,80,347,275,276,177,381,178,348,179,382,83,180,233,181,182,183,184,185,186,187,188,189,190,191,192,349,193,194,195,84,196,197,198,85,350,199,351,352,282,200,201,286,202,203,287,204,289,205,206,207,353,208,354,209,210,39,355,356,211,212,383,357,20,358,213,214,359,384,385,386,387,215,216,360,21,217,22,23,218,219,24,25,26,27,220,221,222,223,28,224,29,30,225,31,32,226,227,228,361,229,33,34,35,40,362,96],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[388,145,319,146,148,320,321,322,328,6,153,154,389,390,391,392,207,353,355,356,20,213,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.internal.RecordState:190","failures":[109,110,111,119,120,121,124,125,126,127,128,134,135,136,137,2,393,138,139,140,141,142,143,144,3,4,5,145,146,147,148,149,150,151,152,6,153,154,159,160,9,11,15,163,166,168,169,170,171,43,99,45,46,49,100,50,52,19,101,53,172,173,174,176,177,178,83,180,181,182,183,184,185,186,187,188,189,190,191,192,193,201,205,206,207,208,209,210,39,211,212,20,213,214,215,216,21,217,22,23,218,219,24,25,26,27,220,221,222,223,28,224,29,30,225,31,32,226,227,228,229,33,34,35],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[271,206],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[83,180,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.LastControl:92","failures":[43,44,52,218,219,25,27,220,230,226,33],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[43,44,52,218,219,27,220,230,226],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[113,394,395,396,397,398,145,319,146,148,372,328,6,153,154,399,400,401,402,231,403,404,405,406,407,408,207,20,213,214],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[249,409,410],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[326,381],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Invocation:99","failures":[102,104,105,106,294,107,134,411,190,192,201,222],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[229],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:315","failures":[298,299,300,234,301,302,303,304,305,235,306,307,308,309,310,311,236,237,312,313,363,139,143,144,317,318,147,150,373,239,374,375,323,376,326,160,275,276,177,381,205,210,21],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[412,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":219,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":147,"org.easymock.tests2.UsageTest.argumentsOrdered":356,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":354,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":297,"org.easymock.tests2.DelegateToTest.testReturnException":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":239,"org.easymock.tests.MockingTest.testPartialClassMocking":155,"org.easymock.tests.MockClassControlTest.testToString":253,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":68,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":298,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":388,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":216,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":3,"org.easymock.tests2.UsageTest.wrongArguments":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":366,"org.easymock.samples.ExampleTest.answerVsDelegate":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":260,"org.easymock.tests2.UsageConstraintsTest.testNull":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":190,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":258,"org.easymock.tests2.CaptureTest.testPrimitive":45,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":5,"org.easymock.tests.UsageTest.moreThanOneArgument":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":313,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":9,"org.easymock.tests.UsageTest.argumentsOrdered":322,"org.easymock.tests.UsageVarargTest.varargIntAccepted":339,"org.easymock.tests.InvocationTest.testEquals":411,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":16,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":193,"org.easymock.tests2.AnswerTest.answer":178,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":387,"org.easymock.tests2.CaptureTest.testAnd":43,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":136,"org.easymock.tests2.DelegateToTest.testDelegate":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":311,"org.easymock.tests.LimitationsTest.mockFinalMethod":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":238,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":399,"org.easymock.tests2.CaptureTest.testCapture1_2446744":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":385,"org.easymock.tests.UsageThrowableTest.throwError":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":82,"org.easymock.samples.PartialClassMockTest.testGetArea":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":69,"org.easymock.tests2.UsageTest.niceToStrict":208,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":299,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":77,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":402,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":235,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":364,"org.easymock.tests.UsageOverloadedMethodTest.overloading":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":29,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":326,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":409,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":50,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.MockClassControlTest.testEquals":257,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":386,"org.easymock.tests2.CaptureTest.testCaptureAll":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":370,"org.easymock.tests2.UsageConstraintsTest.testMatches":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":10,"org.easymock.samples.ExampleTest.voteForRemovals":106,"org.easymock.tests.UsageVarargTest.allKinds":346,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":371,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":143,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":376,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":135,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":171,"org.easymock.samples.ExampleTest.voteForRemoval":104,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":250,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":173,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":269,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":373,"org.easymock.tests2.CaptureTest.testCaptureFirst":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":184,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":175,"org.easymock.tests2.CaptureTest.testCapture2_2446744":101,"org.easymock.tests2.UsageTest.moreThanOneArgument":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":204,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.GenericTest.testBridgedEquals":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":335,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":368,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":312,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":393,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests.UsageCallCountTest.tooManyCalls":336,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":395,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":195,"org.easymock.tests.MockingTest.testNiceClassMocking":264,"org.easymock.tests.MockingTest.testClassMocking":262,"org.easymock.tests2.UsageConstraintsTest.testContains":28,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":283,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":177,"org.easymock.tests2.UsageConstraintsTest.testFind":24,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":160,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":362,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":378,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":341,"org.easymock.tests.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":2,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":337,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":325,"org.easymock.tests.MockClassControlTest.testHashCode":256,"org.easymock.tests2.EasyMockSupportTest.testVerify":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":71,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":403,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":315,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":384,"org.easymock.tests.UsageVarargTest.varargCharAccepted":340,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":357,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests.DefaultClassInstantiatorTest.object":36,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":140,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":169,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":303,"org.easymock.tests.CapturesMatcherTest.test":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":254,"org.easymock.tests2.UsageTest.resumeIfFailure":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":375,"org.easymock.tests2.StubTest.stubWithReturnValue":21,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":229,"org.easymock.tests2.SerializationTest.testAllMockedMethod":233,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":407,"org.easymock.samples.SupportTest.voteForRemovals":107,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":308,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":232,"org.easymock.tests.UsageExpectAndThrowTest.object":306,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":227,"org.easymock.tests2.DelegateToTest.testWrongClass":351,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":17,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":18,"org.easymock.tests.UsageStrictMockTest.range":153,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":307,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":58,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":365,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":394,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":110,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":55,"org.easymock.tests.UsageUnorderedTest.message":113,"org.easymock.tests.UsageVerifyTest.twoReturns":146,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":75,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":334,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":240,"org.easymock.tests2.CaptureTest.testCapture_2617107":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":318,"org.easymock.tests2.UsageConstraintsTest.any":222,"org.easymock.tests2.StubTest.stub":360,"org.easymock.tests.UsageExpectAndThrowTest.longType":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":374,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":249,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":358,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":244,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":280,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":359,"org.easymock.tests2.NameTest.nameForMocksControl":392,"org.easymock.tests2.MockedExceptionTest.testMockedException":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":63,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":150,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":157,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":301,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":203,"org.easymock.tests.MockingTest.testNicePartialClassMocking":156,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":167,"org.easymock.tests2.CaptureTest.testCaptureLast":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":85,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":220,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":228,"org.easymock.tests.MockingTest.testTwoMocks":263,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":305,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":355,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":34,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":57,"org.easymock.tests.UsageStrictMockTest.differentMethods":154,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":247,"org.easymock.tests2.ConstraintsToStringTest.andToString":406,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":174,"org.easymock.tests2.MockBuilderTest.testCreateMockString":289,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":65,"org.easymock.tests.UsageExpectAndThrowTest.floatType":300,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":348,"org.easymock.tests.UsageVerifyTest.twoThrows":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.ExampleTest.voteAgainstRemoval":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":170,"org.easymock.tests.LimitationsTest.privateConstructor":267,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":88,"org.easymock.tests2.UsageConstraintsTest.testNotNull":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":275,"org.easymock.tests2.UsageTest.defaultResetToNice":39,"org.easymock.samples.ExampleTest.voteAgainstRemovals":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.UsageVarargTest.differentLength":380,"org.easymock.tests2.CallbackTest.callback":347,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":270,"org.easymock.tests.UsageTest.openCallCountByLastCall":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":317,"org.easymock.tests.UsageCallCountTest.tooFewCalls":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":367,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":56,"org.easymock.tests.UsageThrowableTest.throwCheckedException":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":396,"org.easymock.tests.MockingTest.testStrictClassMocking":261,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":198,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":382,"org.easymock.tests2.NameTest.nameForNiceMock":391,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":176,"org.easymock.tests2.DependencyTest.testInterfaceMocking":215,"org.easymock.samples.ExampleTest.addDocument":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.DelegateToTest.testStubDelegate":199,"org.easymock.tests2.AnswerTest.stubAnswer":179,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.tests2.ConstraintsToStringTest.orToString":401,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":290,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":47,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":410,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.tests2.UsageConstraintsTest.testSame":26,"org.easymock.samples.SupportTest.addDocument":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":66,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests2.NameTest.nameForMock":389,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":95,"org.easymock.tests2.UsageStrictMockTest.differentMethods":214,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":137,"org.easymock.tests2.MockedExceptionTest.testRealException":381,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":397,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":4,"org.easymock.tests2.NameTest.nameForStrictMock":390,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":285,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":291,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":226,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":248,"org.easymock.tests.ErrorMessageTest.testGetters":42,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":200,"org.easymock.tests2.UsageStrictMockTest.range":213,"org.easymock.tests2.UsageConstraintsTest.lessThan":35,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":278,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":182,"org.easymock.tests2.CaptureTest.testCaptureRightOne":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":70,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":54,"org.easymock.tests2.UsageConstraintsTest.testOr":27,"org.easymock.tests.UsageRangeTest.combination":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.UsageTest.wrongArguments":320,"org.easymock.tests2.MockBuilderTest.testWithConstructor":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":67,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":38,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":379,"org.easymock.tests2.UsageConstraintsTest.cmpTo":223,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.CaptureTest.testCaptureFromStub":19,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":284,"org.easymock.tests.UsageTest.unexpectedCallWithArray":372,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":333,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests2.CaptureTest.testCapture":51,"org.easymock.tests2.UsageConstraintsTest.constraints":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.samples.ExampleTest.addAndChangeDocument":294,"org.easymock.tests2.ConstraintsToStringTest.notToString":231,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests2.CompareToTest.testGreateThan":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":369,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":14,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":279,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.LimitationsTest.abstractClass":266,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":338}}]
