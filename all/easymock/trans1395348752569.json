[{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,8,33,34,35,36,37,38],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,39,40,41,42,43,44,45,46,47,6,48,7,49,50,51,52,53,8,54,55,56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))","type":"CtThrowImpl"},"failures":[58,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[61,62,63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[64,65,66,67,68,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[69,64,65,70,66,67,71,68,72,73,74,75,76,77,78,59,79,80,81,82,83,84,85,0,86,39,40,87,88,89,90,91,92,93,94,95,96,97,98,99,100,61,101,62,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,13,14,15,138,139,16,17,18,19,140,141,142,143,20,144,21,22,145,23,24,146,147,148,149,150,25,26,27,1,151,152,153,2,154,47,155,156,157,3,4,158,159,160,5,161,6,48,7,28,29,30,31,32,162,163,164,165,166,167,168,169,170,171,172,8,173,54,55,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,56,236,237,238,33,239,34,35,240,241,36,242,243,244,245,246,247,248,249,250,251,252,253,254,255,37,38,256,257,258,259,260,261,262,263,264,265,266,9,57,267,10,11,268,269,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[79,0,94,95,96,97,98,99,100,61,101,62,102,103,104,105,112,114,115,270,14,15,138,139,16,17,18,19,140,141,271,142,143,20,144,21,22,145,23,24,146,147,148,149,150,25,26,27,28,29,30,31,32,172,8,182,56,33,239,34,35,240,241,36,255,37,38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[272,273,274,275],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[110,145,157,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[277,278,279,280,281,282,283,284,285,286,116,287,288,289,290],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.internal.RecordState:327","failures":[291,292,293,294],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[277,277,278,278,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[272,273,274,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[18],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"failures":[69,64,65,70,66,67,71,68,296,72,277,277,278,278,73,279,74,75,76,77,78,59,79,80,297,298,299,300,81,301,302,303,304,82,83,305,306,307,84,85,0,86,39,40,87,308,88,89,90,91,280,281,92,93,282,283,94,95,96,97,98,99,100,61,101,62,102,103,104,105,106,107,108,109,110,111,284,112,309,310,311,285,286,113,312,313,114,115,116,117,118,119,314,315,316,317,120,318,319,320,321,270,322,323,324,325,326,121,122,123,327,124,125,126,127,128,129,130,131,328,132,133,134,135,136,137,13,14,15,138,139,16,17,18,19,140,141,271,142,143,20,144,21,22,145,23,24,146,147,148,149,150,25,26,27,329,330,331,332,333,1,334,335,151,152,153,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,2,154,47,155,156,157,3,4,356,158,159,160,5,357,358,359,161,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,6,48,7,28,29,30,31,32,389,52,53,390,162,163,164,165,166,167,168,169,170,171,172,8,173,54,55,174,175,391,291,292,392,393,394,395,396,397,398,399,400,176,401,402,177,403,178,179,180,181,182,183,404,405,406,407,408,409,410,411,184,185,186,187,412,188,189,287,190,191,413,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,414,415,416,417,418,419,276,420,421,422,423,424,213,425,214,215,426,427,428,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,56,429,236,430,237,238,431,432,33,239,433,434,435,436,437,438,34,35,240,241,36,242,243,244,245,246,247,248,249,250,251,252,253,254,255,37,38,256,257,258,259,260,439,440,441,288,289,442,290,443,444,445,446,447,448,449,450,451,261,262,263,452,293,294,453,454,264,455,265,266,9,57,456,267,10,11,268,269,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[284,313,336,343],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[69,64,65,70,66,67,71,68,72,73,279,74,75,76,79,80,81,82,83,305,85,0,86,39,40,87,308,88,89,90,91,280,281,92,93,282,283,94,95,96,97,99,100,61,101,62,102,105,106,107,108,109,110,111,112,286,118,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,17,140,141,142,143,144,145,146,147,148,149,150,25,1,151,342,344,346,2,154,155,156,157,158,159,5,161,362,372,378,48,7,162,163,164,165,166,167,168,169,171,172,8,173,54,55,174,185,186,187,188,189,190,191,195,196,198,203,208,213,214,215,427,218,219,221,226,231,56,236,34,35,240,241,242,243,245,246,247,248,249,251,252,253,254,255,288,289,290,263,264,267,268,269,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[137,241],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:58","sourceCode":"final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[305,306,308,457,458,459,460,461,462,463,345,347,464],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[310,356],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":139,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":318,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":157,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":73,"org.easymock.tests2.DelegateToTest.testReturnException":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":179,"org.easymock.tests.MockingTest.testPartialClassMocking":288,"org.easymock.tests.MockClassControlTest.testToString":448,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":329,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":216,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":362,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":458,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":141,"org.easymock.tests2.UsageTest.wrongArguments":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":34,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":387,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":407,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":444,"org.easymock.tests2.UsageConstraintsTest.testNull":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":262,"org.easymock.tests2.CaptureTest.testPrimitive":97,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":36,"org.easymock.tests.UsageTest.moreThanOneArgument":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":235,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":430,"org.easymock.tests.UsageTest.argumentsOrdered":269,"org.easymock.tests.UsageVarargTest.varargIntAccepted":247,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":32,"org.easymock.tests.ReplayStateInvalidUsageTest.times":421,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":81,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":325,"org.easymock.tests2.CaptureTest.testAnd":94,"org.easymock.tests2.UsageTest.strictResetToDefault":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":311,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":432,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":438,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":52,"org.easymock.tests2.CaptureTest.testCapture1_2446744":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":323,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":416,"org.easymock.tests.UsageThrowableTest.throwError":162,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":406,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":380,"org.easymock.samples.PartialClassMockTest.testGetArea":279,"org.easymock.tests.MockingTest.testInterfaceMocking":442,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":383,"org.easymock.tests2.UsageTest.niceToStrict":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":367,"org.easymock.tests2.ThreadingTest.testChangeDefault":58,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":342,"org.easymock.tests2.MockBuilderTest.testCreateMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":303,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":225,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":410,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":385,"org.easymock.tests.UsageOverloadedMethodTest.overloading":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":21,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":204,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":242,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":62,"org.easymock.tests2.EasyMockSupportClassTest.testAll":161,"org.easymock.tests.MockClassControlTest.testEquals":261,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":436,"org.easymock.tests2.CaptureTest.testCaptureAll":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":324,"org.easymock.tests.MockNameTest.defaultName":433,"org.easymock.tests2.UsageConstraintsTest.testMatches":22,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":259,"org.easymock.samples.ExampleTest.voteForRemovals":68,"org.easymock.tests.UsageVarargTest.allKinds":255,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":437,"org.easymock.samples.BasicClassMockTest.testPrintContent":75,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":168,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":319,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":463,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":399,"org.easymock.tests2.UsageConstraintsTest.greaterThan":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":455,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":400,"org.easymock.samples.ExampleTest.voteForRemoval":66,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":78,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":312,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":295,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":284,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":178,"org.easymock.tests2.CaptureTest.testCaptureFirst":105,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":5,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests2.CaptureTest.testCapture2_2446744":104,"org.easymock.tests2.UsageTest.moreThanOneArgument":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":349,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":254,"org.easymock.tests.GenericTest.testBridgedEquals":192,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":188,"org.easymock.tests.UsageExpectAndReturnTest.longType":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":434,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":234,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":149,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":291,"org.easymock.tests.UsageCallCountTest.tooManyCalls":189,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":167,"org.easymock.tests.MockingTest.testNiceClassMocking":445,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":280,"org.easymock.tests.MockingTest.testClassMocking":440,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":411,"org.easymock.tests2.UsageConstraintsTest.testContains":20,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":16,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":244,"org.easymock.tests.MockTypeTest.fromEasyMockClass":405,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":115,"org.easymock.tests.UsageExpectAndReturnTest.object":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":459,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":249,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":177,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":33,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":306,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":245,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":214,"org.easymock.tests.MockClassControlTest.testHashCode":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":369,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":322,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":270,"org.easymock.tests.UsageVarargTest.varargCharAccepted":248,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":392,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":85,"org.easymock.tests2.UsageTest.openCallCountByLastCall":3,"org.easymock.tests.DefaultClassInstantiatorTest.object":393,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":452,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":165,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":314,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":450,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":391,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":449,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":378,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":181,"org.easymock.tests2.StubTest.stubWithReturnValue":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":345,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":202,"org.easymock.tests2.SerializationTest.testAllMockedMethod":89,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":453,"org.easymock.samples.SupportTest.voteForRemovals":64,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":228,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":454,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":334,"org.easymock.tests.UsageExpectAndThrowTest.object":226,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":147,"org.easymock.tests2.DelegateToTest.testWrongClass":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":38,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.samples.ConstructorCalledMockTest.testTax":277,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":354,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":344,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":423,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":386,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":384,"org.easymock.tests2.CaptureTest.testCaptureNone":101,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":273,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":253,"org.easymock.tests2.ThreadingTest.testThreadSafe":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":373,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":187,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":403,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":74,"org.easymock.tests2.CaptureTest.testCapture_2617107":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":241,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":420,"org.easymock.tests2.StubTest.stub":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":180,"org.easymock.tests.UsageExpectAndThrowTest.longType":219,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":397,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":276,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.SerializationTest.testClass":308,"org.easymock.tests.LimitationsTest.mockNativeMethod":236,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":299,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.tests2.NameTest.nameForMocksControl":333,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":361,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":220,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":346,"org.easymock.tests.MockingTest.testNicePartialClassMocking":289,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":457,"org.easymock.tests2.CaptureTest.testCaptureLast":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":53,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":283,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":148,"org.easymock.tests.MockingTest.testTwoMocks":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":224,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":26,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":275,"org.easymock.samples.ExampleTest.removeNonExistingDocument":296,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":418,"org.easymock.tests.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":316,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":395,"org.easymock.tests2.ConstraintsToStringTest.andToString":45,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":59,"org.easymock.tests2.MockBuilderTest.testCreateMockString":351,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":446,"org.easymock.tests.UsageExpectAndThrowTest.floatType":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests.UsageVerifyTest.twoThrows":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":307,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":372,"org.easymock.samples.ExampleTest.voteAgainstRemoval":67,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":286,"org.easymock.tests2.UsageConstraintsTest.testNotNull":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":169,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests2.UsageTest.defaultResetToNice":356,"org.easymock.samples.ExampleTest.voteAgainstRemovals":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":208,"org.easymock.tests.UsageVarargTest.differentLength":250,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":298,"org.easymock.tests2.CallbackTest.callback":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":309,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":240,"org.easymock.tests.UsageCallCountTest.tooFewCalls":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":388,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":274,"org.easymock.tests.UsageThrowableTest.throwCheckedException":166,"org.easymock.tests.MockingTest.testStrictClassMocking":439,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":239,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":282,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":301,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":93,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":153,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":462,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests2.NameTest.nameForNiceMock":332,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":460,"org.easymock.samples.ExampleTest.addDocument":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":374,"org.easymock.tests2.DelegateToTest.testStubDelegate":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests.UsageVarargTest.varargLongAccepted":252,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests.UsageExpectAndReturnTest.floatType":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":305,"org.easymock.tests2.ConstraintsToStringTest.orToString":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":278,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageThrowableTest.noUpperLimit":163,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":24,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":352,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":99,"org.easymock.tests2.SerializationTest.test":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":394,"org.easymock.tests2.UsageConstraintsTest.testSame":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":194,"org.easymock.samples.SupportTest.addDocument":69,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":364,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":320,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":443,"org.easymock.tests2.NameTest.nameForMock":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":205,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":350,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":230,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":176,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":355,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":464,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":35,"org.easymock.tests2.NameTest.nameForStrictMock":331,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":110,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":353,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":396,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":146,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":338,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.UsageConstraintsTest.lessThan":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":461,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests2.CaptureTest.testCaptureRightOne":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":368,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":272,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":107,"org.easymock.tests.UsageTest.wrongArguments":267,"org.easymock.tests2.MockBuilderTest.testWithConstructor":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":206,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":398,"org.easymock.tests.UsageVarargTest.varargShortAccepted":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":412,"org.easymock.tests2.UsageConstraintsTest.cmpTo":143,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":4,"org.easymock.tests2.CaptureTest.testCaptureFromStub":103,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":415,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":339,"org.easymock.tests.UsageTest.unexpectedCallWithArray":456,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":186,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":207,"org.easymock.tests2.CaptureTest.testCapture":63,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.UsageConstraintsTest.constraints":138,"org.easymock.samples.ExampleTest.addAndChangeDocument":72,"org.easymock.tests2.ConstraintsToStringTest.notToString":43,"org.easymock.tests.UsageStrictMockTest.testVerify":175,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":76,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":435,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":30,"org.easymock.tests.LimitationsTest.abstractClass":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":199,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":246}}]
