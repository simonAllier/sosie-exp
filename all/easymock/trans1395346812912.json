[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"failures":[9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,3,26,27,28,29,8,30,31,14,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,12,94,95,96,15,97,98,99,100,101,102,103,104,105,106,107,4,5,6,108,109,110,111,7,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,16,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,17,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[54,57,58,94,183,195,198,199,201,202,203,222],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[104,106,107,181,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[18,19,20,21,22,23,24,25,3,26,27,28,29,8,30,31,14,32,33,34,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,93,12,94,95,96,15,97,98,100,101,102,103,104,105,106,107,5,6,109,110,111,7,112,113,114,115,116,117,118,119,120,121,122,123,124,127,128,135,136,137,138,139,140,16,141,143,147,336,154,161,162,163,175,176,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,208,209,210,211,212,214,215,221,222,224,225,226,227,228,229,234,235,236,237,238,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,337,338,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,339,318,319,320,321,322,323,324,326,327,328,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[54,56,57,94,95,100,101,148,149,150,151,340,341,342,194,195,197,198,201,202,203,222,224,227,228,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[18,19,20,21,22,23,24,25,3,26,27,28,29,8,30,31,14,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,50,54,56,57,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,85,86,88,89,91,93,12,94,96,97,98,99,102,103,105,4,5,108,109,110,7,112,115,116,117,118,120,121,123,124,125,126,127,128,129,130,137,138,139,140,16,141,143,145,146,147,163,175,177,178,179,183,195,197,198,201,203,343,344,345,204,205,206,346,207,208,211,212,213,214,215,221,222,225,226,229,259,260,261,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,308,310,311,312,313,314,315,316,347,319,321,322,324,328,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[348,349,350,351,352,61,353,354,355,356,357,358,359,360,361,362,363,123,364,365,366,367,368,369,318,331],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[56,57,197,198,371,270,274,275,277,280,372,373,374,292,296,297,299,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[4,5,6,375],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[376],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[25,33,56,57,97,98,179,197,198,201,212,377,225,226,241,337,338,309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[308,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[378,379,370,380,4,108,381,382,383,384,385,386,387,388],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[341,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests2.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":221,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":353,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":15,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":331,"org.easymock.tests2.DelegateToTest.testReturnException":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":186,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.tests.MockClassControlTest.testToString":157,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":346,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":288,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":340,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":26,"org.easymock.tests2.UsageTest.wrongArguments":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":207,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":232,"org.easymock.samples.ExampleTest.answerVsDelegate":320,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":140,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":75,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":211,"org.easymock.tests.UsageTest.moreThanOneArgument":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":307,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":236,"org.easymock.tests.UsageTest.argumentsOrdered":228,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":372,"org.easymock.tests.UsageVarargTest.varargIntAccepted":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":387,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":357,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":263,"org.easymock.tests.ReplayStateInvalidUsageTest.times":171,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":123,"org.easymock.tests2.AnswerTest.answer":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":134,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":70,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":214,"org.easymock.tests2.DelegateToTest.testDelegate":107,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":220,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":132,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":166,"org.easymock.tests.UsageThrowableTest.throwError":308,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":238,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":376,"org.easymock.samples.PartialClassMockTest.testGetArea":334,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":344,"org.easymock.tests2.UsageTest.niceToStrict":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":289,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":86,"org.easymock.tests2.MockBuilderTest.testCreateMock":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":297,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":71,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":230,"org.easymock.tests.UsageOverloadedMethodTest.overloading":178,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":182,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":277,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":8,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":117,"org.easymock.tests.MockClassControlTest.testEquals":161,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":133,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":218,"org.easymock.tests2.UsageConstraintsTest.testMatches":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":237,"org.easymock.samples.ExampleTest.voteForRemovals":324,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":219,"org.easymock.samples.BasicClassMockTest.testPrintContent":330,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":314,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":354,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":388,"org.easymock.tests2.UsageConstraintsTest.greaterThan":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":213,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":147,"org.easymock.samples.ExampleTest.voteForRemoval":321,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":142,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":191,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":68,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":185,"org.easymock.tests2.CaptureTest.testCaptureFirst":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":273,"org.easymock.tests2.CaptureTest.testCapture2_2446744":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":82,"org.easymock.tests2.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":91,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":246,"org.easymock.tests.UsageExpectAndReturnTest.longType":269,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":306,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":234,"org.easymock.tests.UsageCallCountTest.tooManyCalls":247,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":313,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.testContains":29,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":240,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":22,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":179,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":136,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests.UsageExpectAndReturnTest.object":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":384,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":154,"org.easymock.tests.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":175,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":381,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":181,"org.easymock.tests.MockClassControlTest.testHashCode":160,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":78,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":131,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests2.CaptureTest.testCaptureMultiple":335,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":53,"org.easymock.tests2.UsageTest.openCallCountByLastCall":97,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":77,"org.easymock.tests.DefaultClassInstantiatorTest.object":265,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":348,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":283,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests2.UsageTest.resumeIfFailure":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":188,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":378,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":275,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":380,"org.easymock.samples.SupportTest.voteForRemovals":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":300,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":375,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":10,"org.easymock.tests.UsageExpectAndThrowTest.object":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":35,"org.easymock.tests2.DelegateToTest.testWrongClass":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":287,"org.easymock.tests.UsageStrictMockTest.range":197,"org.easymock.samples.ConstructorCalledMockTest.testTax":332,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":73,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":299,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":231,"org.easymock.tests2.CaptureTest.testCaptureNone":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":345,"org.easymock.tests.UsageUnorderedTest.message":264,"org.easymock.tests.UsageVerifyTest.twoReturns":203,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":79,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":244,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":329,"org.easymock.tests2.CaptureTest.testCapture_2617107":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":210,"org.easymock.tests2.UsageConstraintsTest.any":27,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":170,"org.easymock.tests2.StubTest.stub":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":187,"org.easymock.tests.UsageExpectAndThrowTest.longType":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":17,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":285,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":361,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":58,"org.easymock.tests2.NameTest.nameForMocksControl":151,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":363,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":292,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":89,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":141,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":359,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":382,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":130,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":296,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":40,"org.easymock.samples.ExampleTest.removeNonExistingDocument":325,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":168,"org.easymock.tests.UsageStrictMockTest.differentMethods":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":350,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":81,"org.easymock.tests2.MockBuilderTest.testCreateMockString":92,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":155,"org.easymock.tests.UsageExpectAndThrowTest.floatType":290,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":14,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":49,"org.easymock.tests.UsageVerifyTest.twoThrows":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":343,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":146,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":315,"org.easymock.tests2.UsageTest.defaultResetToNice":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":281,"org.easymock.tests.UsageVarargTest.differentLength":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":360,"org.easymock.tests2.CallbackTest.callback":122,"org.easymock.tests.UsageTest.openCallCountByLastCall":225,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":209,"org.easymock.tests.UsageCallCountTest.tooFewCalls":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":233,"org.easymock.tests.UsageThrowableTest.throwCheckedException":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":364,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":128,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":51,"org.easymock.tests.ObjectMethodsTest.testHashCode":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":386,"org.easymock.tests2.NameTest.nameForNiceMock":150,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":83,"org.easymock.tests2.DependencyTest.testInterfaceMocking":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":385,"org.easymock.samples.ExampleTest.addDocument":323,"org.easymock.tests2.DelegateToTest.testStubDelegate":105,"org.easymock.tests2.AnswerTest.stubAnswer":50,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":195,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.tests.UsageExpectAndReturnTest.floatType":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":108,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":333,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":33,"org.easymock.tests.UsageThrowableTest.noUpperLimit":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":19,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests2.UsageConstraintsTest.testSame":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":267,"org.easymock.samples.SupportTest.addDocument":327,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":169,"org.easymock.tests.GenericTest.testPackageScope":316,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests2.NameTest.nameForMock":148,"org.easymock.tests.ExpectedMethodCallTest.testHashCode":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":278,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":302,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":215,"org.easymock.tests2.MockedExceptionTest.testRealException":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":370,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":208,"org.easymock.tests2.NameTest.nameForStrictMock":149,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":16,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":34,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":85,"org.easymock.tests2.UsageStrictMockTest.range":56,"org.easymock.tests2.UsageConstraintsTest.lessThan":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":371,"org.easymock.tests2.CaptureTest.testCaptureRightOne":118,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":138,"org.easymock.tests.UsageTest.wrongArguments":224,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":245,"org.easymock.tests2.UsageConstraintsTest.cmpTo":28,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests2.CaptureTest.testCaptureFromStub":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":165,"org.easymock.tests.UsageTest.unexpectedCallWithArray":223,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":194,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":280,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.samples.ExampleTest.addAndChangeDocument":326,"org.easymock.tests.UsageStrictMockTest.testVerify":200,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":318,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":217,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":272,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":72,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":249,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":342}}]
