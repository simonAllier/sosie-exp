[{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,0,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[187,153,154,166],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[139,145,173,188,180],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[189,190,113,191],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[192,12,15,193,194,62,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,68,69,70,71,72,73,74,84,99,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[146,151,161,215],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[216,217,218,219,220,221,194,222,84,223,224,186,225],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[139,146,151,161,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[1,1,2,2,4,5,226,7,227,10,192,11,12,13,228,229,14,15,230,231,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,232,233,42,234,43,44,235,236,48,216,49,50,237,51,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,193,52,257,218,219,220,221,194,222,53,54,55,56,57,258,259,260,261,262,263,264,58,60,61,62,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,63,64,65,265,266,267,268,269,270,271,272,273,274,275,276,277,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,278,97,98,99,100,101,279,102,103,104,105,280,281,106,107,282,108,283,109,110,284,111,112,285,113,191,286,287,288,289,114,115,116,117,118,119,290,121,291,122,123,292,124,293,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,0,157,158,159,160,161,162,163,164,165,166,167,294,168,295,169,170,171,172,173,175,176,179,180,181,182,184,296,185,297,298,223,224,186,225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[150],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[299],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[245,300,81,82,83,301,106],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[302,265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[1,1,2,2,4,303,304,19,20,21,305,59,111,306,114,307,308,309,117,310,311,312,313,314,118,315,316,119,317,318,290,120,319,320,121,291,122,123,321,292,124,293,126,127,130,131,163,294,322,295,169,170,171,323,223],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[137,139,154,158,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[156],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[139,145,149,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[343,304,268,269,270,344,122,127,130,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"actualTypeArgument","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[346,347,228,233,348,349],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,226,6,7,8,10,192,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,48,216,49,50,217,237,51,250,251,252,218,219,220,221,222,53,54,55,56,57,258,259,260,261,262,61,62,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,350,351,84,85,87,88,89,90,93,95,96,97,98,352,99,100,101,102,103,104,107,108,109,110,111,112,285,113,191,286,287,288,114,115,117,118,119,121,122,123,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,0,157,158,159,160,161,162,164,165,167,172,173,175,179,180,184,296,185,297,298,223,224,186,225],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests2.UsageTest.argumentsOrdered":281,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.tests2.StubTest.stubWithReturnValue":84,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":158,"org.easymock.tests2.DelegateToTest.testReturnException":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":66,"org.easymock.tests.MockingTest.testPartialClassMocking":19,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":349,"org.easymock.samples.SupportTest.voteForRemovals":3,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":305,"org.easymock.tests.MockClassControlTest.testToString":268,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":195,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":67,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":117,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":190,"org.easymock.tests.UsageExpectAndThrowTest.object":205,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":0,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":98,"org.easymock.tests2.DelegateToTest.testWrongClass":297,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":65,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests2.UsageTest.wrongArguments":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":49,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":341,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":252,"org.easymock.samples.ExampleTest.answerVsDelegate":226,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":125,"org.easymock.tests2.UsageConstraintsTest.testNull":142,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":206,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":165,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":273,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":122,"org.easymock.tests2.CaptureTest.testPrimitive":175,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":248,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":214,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":46,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests.UsageUnorderedTest.message":265,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests.UsageTest.argumentsOrdered":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":53,"org.easymock.tests2.CaptureTest.testCapture_2617107":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":291,"org.easymock.tests2.UsageConstraintsTest.any":147,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.UsageExpectAndThrowTest.longType":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":244,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.tests2.SerializationTest.testClass":114,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests.ReplayStateInvalidUsageTest.times":246,"org.easymock.tests.LimitationsTest.mockNativeMethod":63,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":41,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests2.CaptureTest.testAnd":173,"org.easymock.tests2.UsageTest.strictResetToDefault":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":295,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":337,"org.easymock.tests2.MockedExceptionTest.testMockedException":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":82,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":15,"org.easymock.tests2.DelegateToTest.testDelegate":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":199,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":21,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":123,"org.easymock.tests.MockingTest.testNicePartialClassMocking":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":210,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":334,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":262,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":17,"org.easymock.tests2.CaptureTest.testCapture1_2446744":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":203,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":280,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":160,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":240,"org.easymock.tests.UsageThrowableTest.throwError":68,"org.easymock.samples.ExampleTest.removeNonExistingDocument":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":242,"org.easymock.tests.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":328,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":134,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":343,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests2.MockBuilderTest.testCreateMockString":293,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":266,"org.easymock.tests.UsageExpectAndThrowTest.floatType":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":79,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":308,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":285,"org.easymock.tests.UsageVerifyTest.twoThrows":192,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":118,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":241,"org.easymock.tests2.CompareToTest.testLessOrEqual":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":45,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":170,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":196,"org.easymock.tests2.UsageTest.niceToStrict":102,"org.easymock.tests2.UsageConstraintsTest.testNotNull":159,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":74,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":121,"org.easymock.tests2.MockBuilderTest.testCreateMock":292,"org.easymock.tests2.UsageTest.defaultResetToNice":105,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":315,"org.easymock.tests2.CallbackTest.callback":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":322,"org.easymock.tests.UsageTest.openCallCountByLastCall":14,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":204,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":151,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":128,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":150,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":253,"org.easymock.tests.UsageThrowableTest.throwCheckedException":71,"org.easymock.tests.MockClassControlTest.testEquals":272,"org.easymock.tests2.EasyMockSupportClassTest.testAll":116,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":260,"org.easymock.tests2.CaptureTest.testCaptureAll":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":216,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":127,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":247,"org.easymock.tests2.UsageConstraintsTest.testMatches":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":129,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":191,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":78,"org.easymock.tests.ObjectMethodsTest.testHashCode":276,"org.easymock.tests2.CompareToTest.testGreateOrEqual":215,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":136,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.tests2.DependencyTest.testInterfaceMocking":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":317,"org.easymock.tests2.DelegateToTest.testStubDelegate":185,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":73,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests2.AnswerTest.stubAnswer":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":222,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests2.UsageConstraintsTest.greaterThan":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":81,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":171,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":133,"org.easymock.tests.UsageExpectAndReturnTest.floatType":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":111,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":155,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":138,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":345,"org.easymock.tests2.SerializationTest.test":115,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":87,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":23,"org.easymock.tests2.UsageConstraintsTest.testSame":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.CaptureTest.testCaptureFirst":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":88,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":29,"org.easymock.tests.GenericTest.testPackageScope":58,"org.easymock.tests2.UsageTest.moreThanOneArgument":101,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":182,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":124,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests.GenericTest.testBridgedEquals":299,"org.easymock.tests.UsageExpectAndReturnTest.longType":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":258,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":34,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":9,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":211,"org.easymock.tests2.UsageStrictMockTest.differentMethods":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":316,"org.easymock.tests2.MockedExceptionTest.testRealException":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":200,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":126,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":263,"org.easymock.tests2.UsageConstraintsTest.testContains":149,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":186,"org.easymock.tests2.UsageConstraintsTest.testFind":141,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":62,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":320,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":350,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":351,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":232,"org.easymock.tests.UsageExpectAndReturnTest.object":32,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":302,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":168,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":120,"org.easymock.tests2.UsageStrictMockTest.range":109,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":329,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":277,"org.easymock.tests.UsageTest.exactCallCountByLastCall":16,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":312,"org.easymock.tests2.CaptureTest.testCaptureRightOne":180,"org.easymock.tests2.UsageConstraintsTest.testOr":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":306,"org.easymock.tests.UsageRangeTest.combination":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests.UsageTest.wrongArguments":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":327,"org.easymock.tests.MockClassControlTest.testHashCode":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":310,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":313,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":264,"org.easymock.tests2.UsageConstraintsTest.cmpTo":148,"org.easymock.tests2.UsageTest.openCallCountByLastCall":103,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests.DefaultClassInstantiatorTest.object":274,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":96,"org.easymock.tests2.CaptureTest.testCaptureFromStub":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":239,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":319,"org.easymock.tests.UsageTest.unexpectedCallWithArray":228,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":202,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":70,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":36,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":270,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.tests2.UsageConstraintsTest.constraints":139,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":201,"org.easymock.tests.UsageStrictMockTest.testVerify":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":39,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":324,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":259,"org.easymock.tests2.UsageTest.resumeIfFailure":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":28,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":56,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":91}}]
