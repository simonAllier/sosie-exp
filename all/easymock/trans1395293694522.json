[{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[2,3,4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[7,52,8,53],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[54,55,56],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[57],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[77,60,61,62,78,79,80,81,82,83,84,65,85,68,69,70,71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[86,87],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[88,89,90,91,92,93,94],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[58,95,96,66,72,75,76],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[4,7,97,14,98,15,16,17,18,19,20,21,22,99,23,37,46,100,101],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[58,59,60,61,62,102,15,21,22,23,103,104,63,64,65,66,67,68,69,70,71,105,106,107,72,108,73,74,75,76],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[11,14,18,121,37,122],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[123],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,5,6,6,109,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[7,52,8,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[165,166,167,168],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[169,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[2,3,4,5,5,6,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,122,43,170,171,172,173,174,175,176,177,44,45,46,178,100,101,179,47,48,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:342","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int));\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,59,180,181,182,183,184,66,67,185,186,187,188,189],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[190,191,192,193,194,195,196,2,3,4,197,198,199,5,6,200,201,202,203,204,7,52,8,205,206,207,169,109,208,209,210,211,212,213,214,215,126,216,58,59,217,218,219,77,60,220,221,222,223,224,61,62,102,225,226,227,228,229,230,231,232,86,233,87,234,127,235,236,128,129,237,238,130,131,132,133,124,239,240,241,134,242,135,136,243,137,138,244,245,246,247,248,139,140,141,10,11,12,13,14,15,17,18,19,20,21,22,23,249,121,250,24,251,25,26,27,28,252,29,30,253,254,166,167,31,255,256,257,123,258,259,260,261,262,263,264,265,266,267,268,103,269,270,271,32,33,272,34,35,36,37,38,39,40,41,42,273,274,275,104,142,143,276,277,144,278,279,280,281,282,283,284,285,286,287,288,289,290,290,145,146,147,148,149,43,113,114,115,116,117,118,291,292,293,294,180,295,296,297,181,182,298,183,299,300,184,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,44,45,317,318,65,150,319,66,67,320,321,85,68,69,322,323,70,71,324,325,326,327,328,105,106,107,72,329,330,331,108,332,333,334,335,336,337,185,338,339,340,186,187,341,188,342,343,189,344,345,346,347,348,157,158,159,160,161,47,349,75,76,350,351,352,353,354,162,355,49,50,51,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[356],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[357,178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[358,359,360],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[58,60,61,62,104,64,65,66,68,69,70,71,72,75,76],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[131,57,244,139],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[190,191,192,193,194,195,361,196,2,3,4,197,198,199,5,5,6,6,200,362,201,202,203,363,204,7,52,8,205,206,364,365,366,367,368,207,369,370,371,372,373,374,375,376,377,378,169,109,208,379,209,210,211,212,213,214,215,126,216,58,59,217,218,219,77,60,220,221,222,223,224,61,62,102,225,226,227,228,229,230,231,232,86,233,87,234,127,235,236,128,129,237,238,380,130,131,132,133,124,239,57,240,241,134,242,135,136,243,137,138,244,245,246,247,248,139,140,141,381,10,382,11,383,384,385,386,387,388,12,389,390,13,391,392,393,15,394,17,18,19,395,21,396,397,398,399,400,249,401,402,403,404,405,406,121,250,24,251,407,27,28,252,29,253,165,408,254,166,167,31,94,255,256,257,123,258,259,260,261,262,264,265,267,103,269,270,271,32,33,272,34,35,36,37,38,409,410,39,40,41,42,411,273,412,274,275,413,414,104,110,111,112,142,143,276,277,144,278,279,280,281,282,283,284,285,286,287,288,289,415,416,417,358,359,418,419,420,421,145,146,147,148,149,43,113,114,115,116,117,118,422,291,292,293,294,180,295,296,297,181,182,298,183,299,300,184,301,302,303,304,305,306,307,308,423,309,310,311,312,313,314,315,316,424,425,426,427,428,170,171,172,173,174,175,176,177,429,0,430,431,432,1,433,357,44,45,46,178,317,318,65,150,319,66,67,320,434,435,436,54,437,438,439,440,441,442,443,119,444,151,445,101,446,321,85,68,69,322,323,70,71,324,447,448,325,326,327,328,105,106,107,72,449,450,451,452,453,179,329,330,331,152,454,455,456,153,154,168,120,457,458,459,460,461,462,155,55,360,463,464,156,465,466,56,467,108,468,332,333,334,335,336,337,185,338,339,340,186,187,341,188,342,343,189,344,345,346,347,348,157,158,159,160,161,469,470,47,471,349,75,76,350,351,352,353,354,162,355,472,473,48,49,50,474,51,475,476,477,163,164,478,479,480],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[126,218,225,253,284,150,324,75,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[178],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[481,482,483],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[190,191,192,193,194,195,361,196,2,3,4,197,198,199,5,6,200,362,201,202,203,363,204,7,52,8,484,485,205,206,364,365,366,367,368,207,369,370,371,372,373,374,375,486,487,488,376,377,378,169,109,208,379,209,210,211,212,213,214,215,126,216,58,59,217,218,219,77,60,220,221,222,223,224,61,62,102,225,226,227,228,229,230,231,232,86,233,87,234,127,235,236,128,129,237,238,380,130,131,132,133,124,239,57,240,241,134,242,135,136,243,137,138,244,245,246,247,248,139,140,141,381,489,490,10,491,382,11,492,383,384,493,494,385,386,387,388,12,495,389,496,497,390,13,391,392,393,14,498,15,16,499,394,17,18,19,93,20,500,395,21,22,501,23,396,397,398,399,400,249,401,402,403,404,405,406,121,250,24,251,407,502,503,504,505,25,26,27,28,506,252,29,30,507,253,165,408,254,166,167,31,94,508,255,256,257,123,258,259,260,261,262,263,264,265,266,267,268,103,269,270,271,32,33,272,34,35,36,37,509,38,409,410,39,40,41,42,411,122,273,412,274,275,413,414,104,110,111,112,142,143,276,277,144,278,279,280,281,282,283,284,285,286,287,288,289,415,416,417,358,359,418,419,420,421,145,146,147,148,149,43,113,114,115,116,117,118,422,291,292,293,294,180,295,296,297,181,182,298,183,299,300,184,301,302,303,304,305,306,307,308,423,309,310,311,312,313,314,315,316,424,425,426,427,428,170,171,172,173,174,175,176,177,510,429,0,430,431,432,1,511,433,357,44,45,46,178,317,318,65,150,319,66,67,320,434,435,436,54,437,438,439,440,441,442,443,119,444,151,100,512,513,445,514,101,515,446,321,85,68,69,322,323,70,71,324,447,448,325,326,327,328,105,106,107,72,449,450,451,452,453,179,329,330,331,152,454,455,456,153,154,168,120,457,458,459,460,461,462,155,55,360,463,464,156,465,466,56,467,108,468,332,333,74,334,335,336,337,185,338,339,340,186,187,341,188,342,343,189,344,345,346,347,348,157,158,159,160,161,469,470,47,471,349,75,76,350,351,352,353,354,162,355,472,473,48,49,50,474,51,475,476,477,163,164,478,479,480],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[237,238,124,239],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[429,0,430,431,1,433],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[356,241,38],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[7,52,8,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":238,"org.easymock.tests2.UsageTest.argumentsOrdered":62,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":459,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":221,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":200,"org.easymock.tests2.DelegateToTest.testReturnException":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":114,"org.easymock.tests.MockingTest.testPartialClassMocking":49,"org.easymock.tests.MockClassControlTest.testToString":172,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":407,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":291,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":88,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":142,"org.easymock.tests2.UsageTest.wrongArguments":60,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":280,"org.easymock.samples.ExampleTest.answerVsDelegate":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":101,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":476,"org.easymock.tests2.UsageConstraintsTest.testNull":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":34,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":103,"org.easymock.tests2.CaptureTest.testPrimitive":229,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":144,"org.easymock.tests.UsageTest.moreThanOneArgument":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":305,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":424,"org.easymock.tests.UsageTest.argumentsOrdered":71,"org.easymock.tests.UsageVarargTest.varargIntAccepted":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":157,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":92,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":161,"org.easymock.tests.ReplayStateInvalidUsageTest.times":442,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests2.DependencyTest.testClassMocking":484,"org.easymock.tests2.AnswerTest.answer":253,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":213,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":513,"org.easymock.tests2.CaptureTest.testAnd":226,"org.easymock.tests2.UsageTest.strictResetToDefault":219,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":332,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":428,"org.easymock.tests2.DelegateToTest.testDelegate":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":301,"org.easymock.tests.LimitationsTest.mockFinalMethod":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":354,"org.easymock.tests2.DependencyTest.testClassMockingSupport":485,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":358,"org.easymock.tests2.CaptureTest.testCapture1_2446744":230,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":211,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":54,"org.easymock.tests.UsageThrowableTest.throwError":282,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":514,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":392,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":474,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":158,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":494,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":179,"org.easymock.tests2.UsageTest.niceToStrict":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":152,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":17,"org.easymock.tests2.MockBuilderTest.testCreateMock":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":182,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":78,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":265,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":512,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":278,"org.easymock.tests.UsageOverloadedMethodTest.overloading":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":135,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":188,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":329,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":242,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":87,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":423,"org.easymock.tests.MockClassControlTest.testEquals":176,"org.easymock.tests2.EasyMockSupportClassTest.testAll":10,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":45,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":303,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":212,"org.easymock.tests2.CaptureTest.testCaptureAll":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":352,"org.easymock.tests.MockNameTest.defaultName":422,"org.easymock.tests2.UsageConstraintsTest.testMatches":136,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":148,"org.easymock.samples.ExampleTest.voteForRemovals":195,"org.easymock.tests.UsageVarargTest.allKinds":316,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":349,"org.easymock.samples.BasicClassMockTest.testPrintContent":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":353,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":288,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":118,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":363,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":511,"org.easymock.tests2.UsageConstraintsTest.greaterThan":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":468,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":433,"org.easymock.samples.ExampleTest.voteForRemoval":192,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":411,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":515,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":43,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":218,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":262,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":113,"org.easymock.tests2.CaptureTest.testCaptureFirst":236,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":263,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":225,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":340,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.CaptureTest.testCapture2_2446744":235,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":22,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":315,"org.easymock.tests.GenericTest.testBridgedEquals":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":106,"org.easymock.tests.UsageExpectAndReturnTest.longType":337,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":350,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":304,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":111,"org.easymock.tests.UsageCallCountTest.tooManyCalls":107,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":287,"org.easymock.tests.MockingTest.testNiceClassMocking":477,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":26,"org.easymock.tests.MockingTest.testClassMocking":473,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":24,"org.easymock.tests2.UsageConstraintsTest.testFind":130,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":331,"org.easymock.tests.MockTypeTest.fromEasyMockClass":445,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":209,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests.UsageExpectAndReturnTest.object":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":89,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":310,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":452,"org.easymock.tests.UsageTest.exactCallCountByLastCall":324,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":154,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":425,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":94,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":306,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests.MockClassControlTest.testHashCode":175,"org.easymock.tests2.EasyMockSupportTest.testVerify":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":386,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":426,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":273,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":210,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":393,"org.easymock.tests.UsageVarargTest.varargCharAccepted":309,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":510,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastCall":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":482,"org.easymock.tests.DefaultClassInstantiatorTest.object":429,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":415,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":450,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":387,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":396,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":174,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":296,"org.easymock.tests.CapturesMatcherTest.test":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":110,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":13,"org.easymock.tests2.UsageTest.resumeIfFailure":102,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":116,"org.easymock.tests2.StubTest.stubWithReturnValue":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":187,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":360,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":80,"org.easymock.samples.SupportTest.voteForRemovals":198,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":299,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":53,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":56,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":165,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":480,"org.easymock.tests.UsageExpectAndThrowTest.object":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":245,"org.easymock.tests2.DelegateToTest.testWrongClass":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":164,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.UsageStrictMockTest.range":66,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":377,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":19,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":82,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":421,"org.easymock.tests2.CaptureTest.testCaptureNone":233,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":73,"org.easymock.tests.UsageVerifyTest.twoReturns":76,"org.easymock.tests.UsageVarargTest.varargByteAccepted":314,"org.easymock.tests2.ThreadingTest.testThreadSafe":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":495,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":328,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":453,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":2,"org.easymock.tests2.CaptureTest.testCapture_2617107":228,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":441,"org.easymock.tests2.StubTest.stub":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":115,"org.easymock.tests.UsageExpectAndThrowTest.longType":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":440,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":249,"org.easymock.tests.LimitationsTest.mockNativeMethod":47,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":217,"org.easymock.tests2.NameTest.nameForMocksControl":505,"org.easymock.tests2.MockedExceptionTest.testMockedException":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":382,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":180,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":51,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":50,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":36,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests2.CompareToTest.testCompareEqual":356,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":359,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":246,"org.easymock.tests.MockingTest.testTwoMocks":48,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":507,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":181,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":140,"org.easymock.samples.ExampleTest.removeNonExistingDocument":361,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":438,"org.easymock.tests.UsageStrictMockTest.differentMethods":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":430,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":23,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":492,"org.easymock.tests.UsageExpectAndThrowTest.floatType":293,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests.ResultTest.createReturnResultToString":125,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":508,"org.easymock.tests.UsageVerifyTest.twoThrows":75,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":12,"org.easymock.samples.ExampleTest.voteAgainstRemoval":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":419,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":41,"org.easymock.tests.LimitationsTest.privateConstructor":470,"org.easymock.tests2.UsageConstraintsTest.testNotNull":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":289,"org.easymock.tests2.UsageTest.defaultResetToNice":224,"org.easymock.samples.ExampleTest.voteAgainstRemovals":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":344,"org.easymock.tests.UsageVarargTest.differentLength":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.CallbackTest.callback":255,"org.easymock.tests2.UsageConstraintsTest.equals":380,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":409,"org.easymock.tests.UsageTest.openCallCountByLastCall":322,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":276,"org.easymock.tests.UsageCallCountTest.tooFewCalls":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":281,"org.easymock.tests.UsageThrowableTest.throwCheckedException":286,"org.easymock.tests.MockingTest.testStrictClassMocking":472,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":355,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":252,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":167,"org.easymock.tests.ObjectMethodsTest.testHashCode":451,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":91,"org.easymock.tests2.NameTest.nameForNiceMock":504,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":259,"org.easymock.tests2.DependencyTest.testInterfaceMocking":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":90,"org.easymock.samples.ExampleTest.addDocument":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.DelegateToTest.testStubDelegate":202,"org.easymock.tests2.AnswerTest.stubAnswer":166,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":150,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":500,"org.easymock.tests.UsageVarargTest.varargLongAccepted":313,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.floatType":336,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.UsageThrowableTest.noUpperLimit":283,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":129,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":375,"org.easymock.tests2.SerializationTest.test":52,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":231,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":335,"org.easymock.samples.SupportTest.addDocument":197,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":506,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":383,"org.easymock.tests.GenericTest.testPackageScope":44,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":475,"org.easymock.tests2.NameTest.nameForMock":502,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":342,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":501,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":184,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":333,"org.easymock.tests2.MockedExceptionTest.testRealException":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":462,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":126,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":143,"org.easymock.tests2.NameTest.nameForStrictMock":503,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":394,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":35,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":376,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":431,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":95,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":244,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":15,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":385,"org.easymock.tests2.CaptureTest.testCaptureRightOne":234,"org.easymock.tests2.UsageConstraintsTest.testOr":133,"org.easymock.tests.UsageRangeTest.combination":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":69,"org.easymock.tests2.MockBuilderTest.testWithConstructor":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":384,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":343,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":105,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.CaptureTest.testCaptureFromStub":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":436,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":16,"org.easymock.tests.UsageTest.unexpectedCallWithArray":68,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":189,"org.easymock.tests2.UsageConstraintsTest.constraints":237,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":319,"org.easymock.samples.ExampleTest.addAndChangeDocument":196,"org.easymock.tests.UsageStrictMockTest.testVerify":434,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":199,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":351,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":97,"org.easymock.tests.LimitationsTest.abstractClass":469,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":339,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":160,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":266,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":307}}]
