[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[16,17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","candidateMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,17,18,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[233,234,235,236,237,238,80,81,239,240,241,242,243,244,245],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[31,195],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[246,207],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[247,248,249,21,234,250,251,235,236,252,22,23,24,25,26,253,27,28,29,30,31,32,33,254,255,34,35,36,37,38,39,40,41,42,43,44,256,257,258,259,260,46,261,262,263,264,265,266,267,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,268,269,270,271,272,78,79,80,81,239,82,83,84,85,86,87,88,273,89,90,274,91,92,93,94,275,276,277,278,279,280,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,281,119,240,120,282,241,121,122,123,283,124,125,284,285,286,287,288,126,127,128,129,130,17,18,19,289,290,291,131,292,293,294,294,295,295,132,133,134,135,136,137,138,296,297,298,299,300,301,139,140,242,141,142,302,303,143,243,244,144,304,305,146,306,307,308,309,148,149,310,311,150,151,152,312,153,154,155,156,157,313,159,314,315,316,317,318,319,320,164,321,322,165,166,167,168,169,170,323,324,171,172,173,174,175,325,326,327,328,329,330,331,332,333,334,335,336,337,176,177,178,179,180,338,181,182,339,340,183,184,185,341,186,187,342,245,188,189,190,191,192,193,194,195,196,197,198,199,343,200,201,202,203,204,205,206,207,208,209,210,211,344,212,213,214,215,216,345,217,218,219,220,221,222,223,346,224,225,226,227,228,229,347,348,230,231,232],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[217,218,219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[349,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[343],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[350,351,352,353,354,355,356,357,247,248,358,249,21,233,234,250,251,235,236,252,22,23,24,359,25,26,253,27,28,29,30,31,32,33,254,255,34,35,36,37,38,39,40,41,42,43,44,360,45,361,362,363,364,365,366,256,257,258,259,260,46,237,261,262,263,367,264,368,47,48,49,50,51,265,266,267,369,370,371,372,373,374,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,375,268,269,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,270,392,393,394,395,396,271,397,272,398,399,78,400,79,80,81,239,82,83,84,85,86,87,88,273,89,90,401,402,274,91,92,403,93,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,94,275,95,96,97,98,419,276,277,278,279,280,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,281,119,240,120,282,241,121,122,123,420,421,422,423,424,425,426,427,428,283,124,125,284,285,286,287,288,126,127,128,129,130,16,17,18,19,20,289,290,291,131,292,293,294,295,132,133,134,135,136,137,429,138,296,297,298,299,300,301,139,140,242,141,142,302,303,143,243,244,144,304,430,431,432,433,145,434,305,435,436,437,146,147,306,438,307,439,440,441,308,442,443,309,148,149,310,444,311,150,151,445,152,312,153,154,155,156,446,447,157,448,449,158,313,159,314,349,450,451,0,1,452,2,315,453,3,4,454,455,5,456,457,458,316,459,460,317,461,462,463,464,465,466,467,468,469,318,470,471,472,473,474,319,475,476,477,6,7,478,8,320,479,9,10,480,481,11,160,161,162,163,164,321,322,165,166,167,482,168,483,484,169,170,323,324,171,172,173,174,175,325,326,327,328,329,330,331,332,333,334,335,336,337,176,485,177,178,179,180,338,181,182,339,340,183,184,185,341,186,187,342,245,188,189,190,191,192,193,486,194,195,196,197,198,199,343,200,201,202,203,204,205,206,207,208,209,210,211,344,212,213,214,215,487,488,216,345,217,218,219,220,221,222,223,346,224,225,226,227,228,229,347,348,230,231,489,232],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[490,491],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[21,79,80,81,239,120,241,121,492,493,494,495,140,187,245,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[256,133,164,321,322,165,166,167,176,231,232],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[141,330],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[261,262,263,383,417],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[350,353,354,355,356,357,247,248,358,249,21,233,234,250,251,235,236,252,22,23,24,359,25,26,253,27,28,29,30,31,32,33,254,255,34,35,36,37,38,39,40,41,42,43,44,360,45,361,362,363,364,365,366,256,257,258,259,260,46,237,261,262,263,367,264,368,47,48,49,50,51,265,266,267,369,370,371,372,373,374,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,375,268,269,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,270,392,393,394,395,396,271,397,272,398,399,78,400,79,80,81,239,82,83,84,85,86,87,88,273,89,90,401,402,274,91,92,403,93,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,94,275,95,96,97,98,419,276,277,278,279,280,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,281,119,240,120,282,241,121,122,123,420,421,422,423,424,425,426,427,428,283,124,125,284,285,286,287,288,126,127,128,129,130,16,17,18,19,20,289,290,291,131,292,293,294,294,295,295,132,133,134,135,136,137,429,138,296,297,298,299,300,301,139,140,242,141,142,302,303,143,243,244,144,304,430,431,432,433,145,434,305,435,436,437,146,147,306,438,307,440,441,308,442,443,309,148,149,310,311,150,151,152,312,153,154,155,156,446,447,157,448,449,158,313,159,314,349,450,451,0,1,452,2,315,453,3,4,454,455,5,456,457,458,316,459,460,317,461,462,463,464,465,466,467,468,469,318,470,471,472,473,474,319,475,476,477,6,7,478,8,320,479,9,10,480,481,11,160,161,162,163,164,321,322,165,166,167,482,168,483,484,169,170,323,324,171,172,173,174,175,325,326,327,328,329,330,331,332,333,334,335,336,337,176,485,177,178,179,180,338,181,182,339,340,183,184,185,341,186,187,342,245,188,189,190,191,192,193,486,194,195,196,197,198,199,343,200,201,202,203,204,205,206,207,208,209,210,211,344,212,213,214,215,487,488,216,345,217,218,219,220,221,222,223,346,224,225,226,227,228,229,347,348,230,231,489,232],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[496,220,222,223,346,224,225,226,228,491,229,347,230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[183],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":193,"org.easymock.tests2.UsageTest.argumentsOrdered":244,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":386,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":142,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":300,"org.easymock.tests2.DelegateToTest.testReturnException":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":40,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.tests.MockClassControlTest.testToString":361,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":485,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":99,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":317,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":492,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":32,"org.easymock.tests2.UsageTest.wrongArguments":242,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":97,"org.easymock.samples.ExampleTest.answerVsDelegate":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":405,"org.easymock.tests2.UsageConstraintsTest.testNull":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":154,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":334,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":366,"org.easymock.tests2.CaptureTest.testPrimitive":223,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":34,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":118,"org.easymock.tests.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":86,"org.easymock.tests.UsageTest.argumentsOrdered":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":276,"org.easymock.tests.UsageVarargTest.varargIntAccepted":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":481,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests.ReplayStateInvalidUsageTest.times":415,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":315,"org.easymock.tests2.DependencyTest.testClassMocking":487,"org.easymock.tests2.AnswerTest.answer":164,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":163,"org.easymock.tests2.CaptureTest.testAnd":220,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":352,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":329,"org.easymock.tests2.DelegateToTest.testDelegate":183,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":114,"org.easymock.tests.LimitationsTest.mockFinalMethod":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":51,"org.easymock.tests2.DependencyTest.testClassMockingSupport":488,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":247,"org.easymock.tests2.CaptureTest.testCapture1_2446744":346,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":447,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":161,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":409,"org.easymock.tests.UsageThrowableTest.throwError":283,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":354,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.samples.PartialClassMockTest.testGetArea":298,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":410,"org.easymock.tests.MockingTest.testInterfaceMocking":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":100,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":146,"org.easymock.tests2.MockBuilderTest.testCreateMock":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":108,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":95,"org.easymock.tests.UsageOverloadedMethodTest.overloading":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":204,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":63,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":203,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":228,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":359,"org.easymock.tests2.EasyMockSupportClassTest.testAll":316,"org.easymock.tests.MockClassControlTest.testEquals":365,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":49,"org.easymock.tests2.CaptureTest.testCaptureAll":221,"org.easymock.tests.MockNameTest.defaultName":419,"org.easymock.tests2.UsageConstraintsTest.testMatches":205,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":87,"org.easymock.samples.ExampleTest.voteForRemovals":137,"org.easymock.tests.UsageVarargTest.allKinds":31,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":50,"org.easymock.samples.BasicClassMockTest.testPrintContent":297,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":287,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":340,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":427,"org.easymock.tests2.UsageConstraintsTest.greaterThan":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":36,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":314,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":428,"org.easymock.samples.ExampleTest.voteForRemoval":134,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":446,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":131,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":301,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":327,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":39,"org.easymock.tests2.CaptureTest.testCaptureFirst":230,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":328,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":304,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":59,"org.easymock.tests2.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":324,"org.easymock.tests2.CaptureTest.testCapture2_2446744":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":308,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":30,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":268,"org.easymock.tests.UsageExpectAndReturnTest.longType":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":47,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":325,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":117,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":272,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":262,"org.easymock.tests.UsageCallCountTest.tooManyCalls":269,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":286,"org.easymock.tests.MockingTest.testNiceClassMocking":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":148,"org.easymock.tests.MockingTest.testClassMocking":402,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":73,"org.easymock.tests2.UsageConstraintsTest.testContains":202,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":174,"org.easymock.tests2.UsageConstraintsTest.testFind":194,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":90,"org.easymock.tests.MockTypeTest.fromEasyMockClass":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests.UsageExpectAndReturnTest.object":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":333,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":26,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":372,"org.easymock.tests.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":277,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":483,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":68,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":258,"org.easymock.tests.ResultTest.createThrowResultToString":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests.MockClassControlTest.testHashCode":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":467,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":278,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":482,"org.easymock.tests.UsageVarargTest.varargCharAccepted":25,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":420,"org.easymock.tests2.CaptureTest.testCaptureMultiple":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":397,"org.easymock.tests2.UsageTest.openCallCountByLastCall":302,"org.easymock.tests.DefaultClassInstantiatorTest.object":421,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":265,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":370,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":468,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":313,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":105,"org.easymock.tests.CapturesMatcherTest.test":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":319,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":362,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":42,"org.easymock.tests2.StubTest.stubWithReturnValue":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":438,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":61,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":219,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.samples.SupportTest.voteForRemovals":293,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":111,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":271,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":321,"org.easymock.tests.UsageExpectAndThrowTest.object":109,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":368,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":210,"org.easymock.tests2.DelegateToTest.testWrongClass":339,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":82,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":83,"org.easymock.tests.UsageStrictMockTest.range":241,"org.easymock.samples.ConstructorCalledMockTest.testTax":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":432,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":456,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":417,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":96,"org.easymock.tests2.CaptureTest.testCaptureNone":227,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":291,"org.easymock.tests.UsageUnorderedTest.message":239,"org.easymock.tests.UsageVerifyTest.twoReturns":81,"org.easymock.tests.UsageVarargTest.varargByteAccepted":29,"org.easymock.tests2.ThreadingTest.testThreadSafe":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":470,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":77,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":296,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":373,"org.easymock.tests2.CaptureTest.testCapture_2617107":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":255,"org.easymock.tests2.UsageConstraintsTest.any":200,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":414,"org.easymock.tests2.StubTest.stub":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndThrowTest.longType":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":41,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":425,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":413,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":342,"org.easymock.tests2.SerializationTest.testClass":217,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":320,"org.easymock.tests.LimitationsTest.mockNativeMethod":78,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":1,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests2.NameTest.nameForMocksControl":180,"org.easymock.tests2.MockedExceptionTest.testMockedException":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":460,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":489,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":103,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":93,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":152,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":307,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests2.CaptureTest.testCaptureLast":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":211,"org.easymock.tests.MockingTest.testTwoMocks":274,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":107,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":243,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":214,"org.easymock.samples.ExampleTest.removeNonExistingDocument":429,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":411,"org.easymock.tests.UsageStrictMockTest.differentMethods":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":3,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":423,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":323,"org.easymock.tests2.MockBuilderTest.testCreateMockString":443,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":101,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":165,"org.easymock.tests.ResultTest.createReturnResultToString":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":484,"org.easymock.tests.UsageVerifyTest.twoThrows":80,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":318,"org.easymock.tests.ResultTest.createDelegateResultToString":12,"org.easymock.samples.ExampleTest.voteAgainstRemoval":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":159,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":213,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":288,"org.easymock.tests2.UsageTest.defaultResetToNice":143,"org.easymock.samples.ExampleTest.voteAgainstRemovals":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":0,"org.easymock.tests.UsageVarargTest.differentLength":253,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":486,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":448,"org.easymock.tests.UsageTest.openCallCountByLastCall":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":254,"org.easymock.tests.UsageCallCountTest.tooFewCalls":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":98,"org.easymock.tests.UsageThrowableTest.throwCheckedException":285,"org.easymock.tests.MockingTest.testStrictClassMocking":401,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":149,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":311,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":167,"org.easymock.tests.ObjectMethodsTest.testHashCode":371,"org.easymock.tests2.NameTest.nameForNiceMock":179,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":171,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.samples.ExampleTest.addDocument":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":182,"org.easymock.tests2.AnswerTest.stubAnswer":166,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":120,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":439,"org.easymock.tests.UsageVarargTest.varargLongAccepted":28,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.floatType":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":168,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":480,"org.easymock.tests.UsageThrowableTest.noUpperLimit":124,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":208,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":191,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":430,"org.easymock.tests2.SerializationTest.test":218,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":224,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":53,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.samples.SupportTest.addDocument":292,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":444,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":462,"org.easymock.tests.GenericTest.testPackageScope":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":404,"org.easymock.tests2.NameTest.nameForMock":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":442,"org.easymock.tests2.UsageStrictMockTest.differentMethods":188,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":113,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":38,"org.easymock.tests2.MockedExceptionTest.testRealException":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":357,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":389,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":187,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":33,"org.easymock.tests2.NameTest.nameForStrictMock":178,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":437,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":431,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":493,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":424,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":209,"org.easymock.tests.ErrorMessageTest.testGetters":494,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":305,"org.easymock.tests2.UsageStrictMockTest.range":245,"org.easymock.tests2.UsageConstraintsTest.lessThan":215,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":466,"org.easymock.tests2.CaptureTest.testCaptureRightOne":229,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":312,"org.easymock.tests.UsageTest.wrongArguments":234,"org.easymock.tests2.MockBuilderTest.testWithConstructor":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":463,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":377,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":426,"org.easymock.tests.UsageVarargTest.varargShortAccepted":27,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":375,"org.easymock.tests2.UsageConstraintsTest.cmpTo":201,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":379,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":303,"org.easymock.tests2.CaptureTest.testCaptureFromStub":347,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":408,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":435,"org.easymock.tests.UsageTest.unexpectedCallWithArray":233,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":66,"org.easymock.tests2.CaptureTest.testCapture":491,"org.easymock.tests2.UsageConstraintsTest.constraints":192,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.samples.ExampleTest.addAndChangeDocument":138,"org.easymock.tests.UsageStrictMockTest.testVerify":123,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":299,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":48,"org.easymock.tests2.CompareToTest.testGreateThan":246,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":46,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":495,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":331}}]
