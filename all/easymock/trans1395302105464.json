[{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[49,50,345,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[16,17,18,19,70,78,79,80,81,82,83,84,85,123,124,125,126,127,129,132,188,217,218,219,220,221,222,224,233,234,235,236,237,240,245,249,250,251,255,255,256,256,270,271,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,336,337,338,385,489,387,388,390,391,392,393,395,397,398,399,490,401,427,428,469,471,481,485,491,492,493,494,495],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"failures":[54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[381],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[394,397,427,428,469,496,497,498,499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,18,36,42,44,46,47,48,49,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,117,119,120,121,122,125,126,127,129,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,190,191,192,193,196,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,227,228,229,230,231,232,234,236,238,239,248,251,254,255,255,256,256,258,259,260,261,263,265,268,269,270,271,272,273,274,275,276,278,281,282,283,284,287,288,289,290,292,293,294,300,303,313,319,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,391,392,393,395,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,420,427,430,431,432,433,434,435,436,437,438,439,440,446,453,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,472,473,474,475],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[6,7,44,46,48,49,50,61,63,64,67,68,69,501,502,112,503,118,119,200,201,202,248,271,282,284,340,341,344,345,346,358,374,387,398,399,401,402,405,406,407,411,412,413,414,457,461,462,465],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[5,6,7,46,47,49,50,62,64,67,68,504,505,506,248,343,345,346,404,405,411,412,477,478,479,480],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[46,63,507,508,509,510],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[384,511],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[209,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[390],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,5,7,18,47,49,50,61,62,65,66,69,71,72,73,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,119,120,121,122,126,127,129,189,190,191,192,193,194,204,205,208,214,225,227,228,229,230,231,232,234,238,239,248,251,254,258,260,261,263,268,269,270,271,272,273,274,275,278,282,283,284,287,288,289,290,292,293,294,300,303,313,319,322,323,324,325,326,329,330,331,332,334,335,336,338,343,345,346,349,350,354,356,357,358,359,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,387,391,393,395,399,402,403,404,406,408,409,410,413,414,420,427,432,436,437,438,439,440,446,456,457,458,459,460,461,462,463,464,465,466,467,469,470],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[512,513,514,515],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[367,368],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[516],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[6,7,46,49,63,64,67,68,502,215,248,345,405,411,412],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[394,397,427,428,469,496,497,498,499,500],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,18,36,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,64,65,66,67,68,69,70,71,72,73,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,119,120,121,122,125,126,127,129,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,190,191,192,193,194,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,225,226,227,228,229,230,231,232,234,235,236,238,239,248,249,250,251,252,253,254,255,255,256,256,257,258,259,260,261,262,263,265,268,269,270,271,272,273,274,275,278,282,283,284,287,288,289,290,292,293,294,300,303,313,319,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,387,391,393,395,399,402,403,404,405,406,407,408,409,410,411,412,413,414,420,427,430,431,432,433,434,435,436,437,438,439,440,446,453,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,477,478,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[236,240,245,251,276,282,283,286,303,313,319,385,387,388,391,392,393,395,398,399,401,469],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[16,17,18,19,70,78,79,80,81,82,83,84,85,123,124,125,126,127,129,132,217,218,219,220,221,222,224,233,234,235,236,237,240,245,249,250,251,255,255,256,256,266,267,270,271,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,336,337,338,385,387,388,390,391,392,393,395,397,398,399,401,427,428,469,471,481,482,483,485],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[394,397,427,428,469,496,497,498,499,500],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[382],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[217,218,222],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[359,365,377],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,5,6,7,8,9,10,11,12,18,44,45,46,47,48,49,50,51,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,119,121,122,126,127,129,145,146,147,148,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,517,517,189,190,191,192,193,196,197,198,199,200,201,202,204,205,206,207,208,209,211,212,215,225,226,227,228,229,230,231,232,234,235,238,239,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,268,269,270,271,272,273,274,275,276,278,281,282,283,284,287,288,289,290,292,293,294,300,303,313,319,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,353,354,355,356,357,358,359,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,391,392,393,395,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,420,427,431,432,433,435,436,437,438,439,440,446,453,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[372,518],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[33,340,353,453,455],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[377],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[277,515,519],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":359,"org.easymock.tests2.UsageTest.argumentsOrdered":412,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":30,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":407,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":257,"org.easymock.tests2.DelegateToTest.testReturnException":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":126,"org.easymock.tests.MockClassControlTest.testToString":80,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":476,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":156,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":303,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":504,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":366,"org.easymock.tests2.UsageTest.wrongArguments":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":426,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":76,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":245,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":131,"org.easymock.tests2.UsageConstraintsTest.testNull":362,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":273,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":465,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":85,"org.easymock.tests2.CaptureTest.testPrimitive":325,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":175,"org.easymock.tests.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":10,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":53,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.UsageVarargTest.varargIntAccepted":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":189,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":420,"org.easymock.tests.ReplayStateInvalidUsageTest.times":141,"org.easymock.tests2.DependencyTest.testClassMocking":266,"org.easymock.tests2.AnswerTest.answer":350,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":475,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":242,"org.easymock.tests2.CaptureTest.testAnd":322,"org.easymock.tests2.UsageTest.strictResetToDefault":403,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":460,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":121,"org.easymock.tests2.DelegateToTest.testDelegate":435,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":171,"org.easymock.tests.LimitationsTest.mockFinalMethod":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":149,"org.easymock.tests2.DependencyTest.testClassMockingSupport":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":58,"org.easymock.tests2.CaptureTest.testCapture1_2446744":326,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":473,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":135,"org.easymock.tests.UsageThrowableTest.throwError":225,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":244,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":452,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":321,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":136,"org.easymock.tests.MockingTest.testInterfaceMocking":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":3,"org.easymock.tests2.UsageTest.niceToStrict":406,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":308,"org.easymock.tests2.ThreadingTest.testChangeDefault":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":391,"org.easymock.tests2.MockBuilderTest.testCreateMock":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":423,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":165,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":461,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":74,"org.easymock.tests.UsageOverloadedMethodTest.overloading":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":318,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":212,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":97,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":71,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":516,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":371,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":331,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":109,"org.easymock.tests.MockClassControlTest.testEquals":84,"org.easymock.tests2.EasyMockSupportClassTest.testAll":300,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":235,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":173,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":147,"org.easymock.tests2.CaptureTest.testCaptureAll":323,"org.easymock.tests.MockNameTest.defaultName":182,"org.easymock.tests2.UsageConstraintsTest.testMatches":373,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":11,"org.easymock.samples.ExampleTest.voteForRemovals":263,"org.easymock.tests.UsageVarargTest.allKinds":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":148,"org.easymock.samples.BasicClassMockTest.testPrintContent":250,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":231,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":223,"org.easymock.tests2.UsageConstraintsTest.greaterThan":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":284,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":224,"org.easymock.samples.ExampleTest.voteForRemoval":260,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":437,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":246,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":276,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":402,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":70,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":458,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":430,"org.easymock.tests2.CaptureTest.testCaptureFirst":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":459,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":414,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":93,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":439,"org.easymock.tests2.UsageTest.moreThanOneArgument":404,"org.easymock.tests2.CaptureTest.testCapture2_2446744":334,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":38,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":116,"org.easymock.tests.GenericTest.testBridgedEquals":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":201,"org.easymock.tests.UsageExpectAndReturnTest.longType":89,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":145,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":490,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":174,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":203,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":8,"org.easymock.tests.UsageCallCountTest.tooManyCalls":202,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":230,"org.easymock.tests.MockingTest.testNiceClassMocking":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":288,"org.easymock.tests.MockingTest.testClassMocking":124,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":489,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":195,"org.easymock.tests2.UsageConstraintsTest.testContains":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":338,"org.easymock.tests2.UsageConstraintsTest.testFind":361,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":73,"org.easymock.tests.MockTypeTest.fromEasyMockClass":243,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":455,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests.UsageExpectAndReturnTest.object":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":111,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":186,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":25,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":13,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":428,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":102,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.MockClassControlTest.testHashCode":83,"org.easymock.tests2.EasyMockSupportTest.testVerify":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":310,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":55,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":154,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":209,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":501,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":472,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":296,"org.easymock.tests.UsageVarargTest.varargCharAccepted":110,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":216,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":43,"org.easymock.tests2.UsageTest.openCallCountByLastCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":467,"org.easymock.tests.DefaultClassInstantiatorTest.object":217,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":153,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":184,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":311,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":495,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":162,"org.easymock.tests.CapturesMatcherTest.test":517,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":150,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":319,"org.easymock.tests2.UsageTest.resumeIfFailure":413,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":240,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.StubTest.stubWithReturnValue":349,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":394,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":381,"org.easymock.tests2.SerializationTest.testAllMockedMethod":471,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":36,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":254,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":168,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":42,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":351,"org.easymock.tests.UsageExpectAndThrowTest.object":166,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":15,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":378,"org.easymock.tests2.DelegateToTest.testWrongClass":433,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":238,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":239,"org.easymock.tests.UsageStrictMockTest.range":49,"org.easymock.samples.ConstructorCalledMockTest.testTax":255,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":486,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":463,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":393,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":143,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":75,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":4,"org.easymock.tests2.CaptureTest.testCaptureNone":330,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":513,"org.easymock.tests.UsageUnorderedTest.message":248,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":503,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":115,"org.easymock.tests2.ThreadingTest.testThreadSafe":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":314,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":199,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":187,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":249,"org.easymock.tests2.CaptureTest.testCapture_2617107":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":207,"org.easymock.tests2.UsageConstraintsTest.any":368,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":140,"org.easymock.tests2.StubTest.stub":348,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":41,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":221,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":139,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.tests2.SerializationTest.testClass":469,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":446,"org.easymock.tests.LimitationsTest.mockNativeMethod":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":105,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":236,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":417,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":347,"org.easymock.tests2.NameTest.nameForMocksControl":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":419,"org.easymock.tests2.MockedExceptionTest.testMockedException":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":302,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":454,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":160,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":395,"org.easymock.tests.MockingTest.testNicePartialClassMocking":127,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":415,"org.easymock.tests2.CaptureTest.testCaptureLast":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":294,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":365,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":379,"org.easymock.tests.MockingTest.testTwoMocks":125,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":295,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":164,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":411,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":383,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":515,"org.easymock.samples.ExampleTest.removeNonExistingDocument":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":422,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":137,"org.easymock.tests.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":219,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":438,"org.easymock.tests2.MockBuilderTest.testCreateMockString":401,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":78,"org.easymock.tests.UsageExpectAndThrowTest.floatType":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":304,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":429,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":313,"org.easymock.samples.ExampleTest.voteAgainstRemoval":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":2,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":283,"org.easymock.tests.LimitationsTest.privateConstructor":17,"org.easymock.tests2.UsageConstraintsTest.testNotNull":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":232,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":336,"org.easymock.tests2.UsageTest.defaultResetToNice":410,"org.easymock.samples.ExampleTest.voteAgainstRemovals":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":32,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":416,"org.easymock.tests.UsageVarargTest.differentLength":112,"org.easymock.tests2.CallbackTest.callback":340,"org.easymock.tests2.UsageConstraintsTest.equals":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":279,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":206,"org.easymock.tests.UsageCallCountTest.tooFewCalls":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":77,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":514,"org.easymock.tests.UsageThrowableTest.throwCheckedException":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":421,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":289,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":292,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":355,"org.easymock.tests2.CompareToTest.testGreateOrEqual":518,"org.easymock.tests.ObjectMethodsTest.testHashCode":185,"org.easymock.tests2.NameTest.nameForNiceMock":479,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":440,"org.easymock.tests2.DependencyTest.testInterfaceMocking":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":315,"org.easymock.tests2.DelegateToTest.testStubDelegate":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.stubAnswer":354,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":396,"org.easymock.tests.UsageVarargTest.varargLongAccepted":114,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":104,"org.easymock.tests.UsageExpectAndReturnTest.floatType":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":427,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests.UsageThrowableTest.noUpperLimit":226,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":357,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":481,"org.easymock.tests2.SerializationTest.test":470,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":327,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":87,"org.easymock.tests2.UsageConstraintsTest.testSame":363,"org.easymock.samples.SupportTest.addDocument":253,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":291,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":305,"org.easymock.tests.GenericTest.testPackageScope":234,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":24,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":130,"org.easymock.tests2.NameTest.nameForMock":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":400,"org.easymock.tests2.UsageStrictMockTest.differentMethods":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":170,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":122,"org.easymock.tests2.MockedExceptionTest.testRealException":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":247,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":33,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":343,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests2.NameTest.nameForStrictMock":478,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":453,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":485,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":220,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":387,"org.easymock.tests2.UsageStrictMockTest.range":345,"org.easymock.tests2.UsageConstraintsTest.lessThan":384,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":309,"org.easymock.tests2.CaptureTest.testCaptureRightOne":332,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":512,"org.easymock.tests2.UsageConstraintsTest.testOr":364,"org.easymock.tests.UsageRangeTest.combination":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":271,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests2.MockBuilderTest.testWithConstructor":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":306,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":21,"org.easymock.tests.UsageVarargTest.varargShortAccepted":113,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":222,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":200,"org.easymock.tests2.UsageConstraintsTest.cmpTo":369,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":352,"org.easymock.tests2.CompareToTest.testLessThan":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":23,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":409,"org.easymock.tests2.CaptureTest.testCaptureFromStub":333,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":134,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":388,"org.easymock.tests.UsageTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":100,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.UsageConstraintsTest.constraints":358,"org.easymock.samples.ExampleTest.addAndChangeDocument":265,"org.easymock.tests.UsageStrictMockTest.testVerify":52,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":252,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":45,"org.easymock.tests2.CompareToTest.testGreateThan":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":146,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":328,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":191,"org.easymock.tests.LimitationsTest.abstractClass":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":506,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":462,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":107}}]
