[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"argType"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[23,24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[26,27,28,7,11],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[29,30,31,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[33,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[35,36,37,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[26,27,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,28,64,18,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,20,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,12,161,162,13,163,164,165,166,14,15,167,168,169,170,171,172,173,174,175,176,177,178,179,2,3,4,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,0,235,236,35,237,238,239,240,36,241,242,243,244,245,246,247,248,249,37,250,251,29,252,30,253,254,255,256,257,258,31,259,32,260,261,262,263,264,265,266,267,268,269,270,19,271,272,273,274,275,276,277,22,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,6,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,33,390,391,392,34,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,39,454,23,455,456,457,458,459,24,25,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[65,143,198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[519],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[410,414],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[361,378,382,383,391,395],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[291,361,378,382,383,391,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[520,86,87,88,89,90,91,92,93,95,521,96,97,98,99,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[78,119,125,126,266,22,280,347,348,351,352,522,39,23,455],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[261,264,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:508","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,63,67,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,161,163,165,173,176,177,178,3,4,185,195,217,218,219,221,222,223,225,226,228,229,230,231,232,233,234,0,236,35,237,238,239,240,241,242,243,244,245,246,247,248,249,37,250,251,29,252,30,253,254,257,258,31,32,260,262,263,276,277,22,278,279,280,281,282,283,284,285,286,287,288,289,290,305,306,307,308,310,311,313,314,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,372,373,374,376,377,400,401,402,403,406,417,418,419,421,422,423,424,425,426,427,428,39,454,23,455,456,457,458,459,24,25,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,477,481,482,483,484,485,486,489,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[523,240,245,254],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[40,44,45,46,47,49,53,55,56,57,58,59,60,63,65,66,67,72,76,78,79,86,87,88,89,90,93,94,95,96,98,99,105,116,117,118,120,122,123,124,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,145,147,148,152,160,161,162,13,163,165,166,14,173,177,178,2,3,185,195,198,208,214,217,219,221,222,223,225,226,228,229,230,231,232,233,234,0,236,35,237,238,239,240,241,242,243,244,245,246,247,248,249,37,250,251,29,252,30,253,254,257,258,260,262,263,265,270,19,272,278,280,281,284,285,288,289,290,291,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,353,374,375,376,377,400,401,402,454,23,455,456,458,459,24,25,460,461,467,468,469,470,471,472,474,485,489,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[70,71,72,73,219,286,481,482,483,484,485,486,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[45,173,176,177,178,217,31,32,260],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[86,88,96,234,0,35,238,239,36,37,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":345,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":388,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":121,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":41,"org.easymock.tests2.DelegateToTest.testReturnException":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":482,"org.easymock.tests.MockingTest.testPartialClassMocking":270,"org.easymock.tests.MockClassControlTest.testToString":368,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":81,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":202,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":325,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":258,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":450,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":240,"org.easymock.tests2.UsageTest.wrongArguments":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":284,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":364,"org.easymock.samples.ExampleTest.answerVsDelegate":45,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":358,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":274,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":58,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":138,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":373,"org.easymock.tests2.CaptureTest.testPrimitive":89,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":344,"org.easymock.tests.UsageTest.moreThanOneArgument":346,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":464,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":312,"org.easymock.tests.UsageTest.argumentsOrdered":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":467,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":169,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":471,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":434,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests.ReplayStateInvalidUsageTest.times":299,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":519,"org.easymock.tests2.DependencyTest.testClassMocking":255,"org.easymock.tests2.AnswerTest.answer":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":393,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":115,"org.easymock.tests2.CaptureTest.testAnd":86,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":355,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":133,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":376,"org.easymock.tests2.DelegateToTest.testDelegate":225,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":316,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":433,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":340,"org.easymock.tests.LimitationsTest.mockFinalMethod":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":485,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":324,"org.easymock.tests2.DependencyTest.testClassMockingSupport":256,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":90,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":113,"org.easymock.tests.UsageThrowableTest.throwError":456,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":293,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":357,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":466,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":216,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":437,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.MockingTest.testInterfaceMocking":271,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":468,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":492,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":408,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":326,"org.easymock.tests2.ThreadingTest.testChangeDefault":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":145,"org.easymock.tests2.MockBuilderTest.testCreateMock":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":108,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":334,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":134,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":362,"org.easymock.tests.UsageOverloadedMethodTest.overloading":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":245,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":510,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":244,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":95,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests2.EasyMockSupportClassTest.testAll":195,"org.easymock.tests.MockClassControlTest.testEquals":372,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":114,"org.easymock.tests2.CaptureTest.testCaptureAll":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":322,"org.easymock.tests.MockNameTest.defaultName":416,"org.easymock.tests2.UsageConstraintsTest.testMatches":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":465,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":291,"org.easymock.samples.ExampleTest.voteForRemovals":49,"org.easymock.tests.UsageVarargTest.allKinds":428,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":454,"org.easymock.samples.BasicClassMockTest.testPrintContent":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":323,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":460,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":187,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":224,"org.easymock.tests2.UsageConstraintsTest.greaterThan":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":375,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":438,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":415,"org.easymock.samples.ExampleTest.voteForRemoval":46,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":68,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":61,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":430,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":472,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":481,"org.easymock.tests2.CaptureTest.testCaptureFirst":99,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":132,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":506,"org.easymock.tests2.UsageTest.moreThanOneArgument":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":394,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":152,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":427,"org.easymock.tests.GenericTest.testBridgedEquals":477,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":310,"org.easymock.tests.UsageExpectAndReturnTest.longType":502,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":320,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":343,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":29,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":495,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":462,"org.easymock.tests.UsageCallCountTest.tooManyCalls":311,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":507,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":25,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":162,"org.easymock.tests.MockingTest.testNiceClassMocking":275,"org.easymock.tests.MockingTest.testClassMocking":268,"org.easymock.tests2.UsageConstraintsTest.testContains":243,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":236,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":402,"org.easymock.tests.MockTypeTest.fromEasyMockClass":356,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":32,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndReturnTest.object":509,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":137,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":422,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":406,"org.easymock.tests.UsageTest.exactCallCountByLastCall":353,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":313,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":515,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":262,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":181,"org.easymock.tests.MockClassControlTest.testHashCode":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":205,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":179,"org.easymock.tests.UsageVarargTest.varargCharAccepted":421,"org.easymock.tests2.CaptureTest.testCaptureMultiple":520,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":399,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests.DefaultClassInstantiatorTest.object":409,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":140,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":451,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":404,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":522,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":103,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":180,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":331,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":516,"org.easymock.tests.ReplayStateInvalidCallsTest.times":442,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":494,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":214,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":369,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":6,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":484,"org.easymock.tests2.StubTest.stubWithReturnValue":219,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":508,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":252,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":34,"org.easymock.samples.SupportTest.voteForRemovals":53,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":337,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":398,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":174,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":480,"org.easymock.tests.UsageExpectAndThrowTest.object":335,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":250,"org.easymock.tests2.DelegateToTest.testWrongClass":223,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":440,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":290,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":280,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":171,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":336,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":192,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":301,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":363,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":493,"org.easymock.tests2.CaptureTest.testCaptureNone":94,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":155,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.UsageVerifyTest.twoReturns":455,"org.easymock.tests.UsageVarargTest.varargByteAccepted":426,"org.easymock.tests2.ThreadingTest.testThreadSafe":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":209,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":308,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":407,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":42,"org.easymock.tests2.CaptureTest.testCapture_2617107":88,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":287,"org.easymock.tests2.UsageConstraintsTest.any":241,"org.easymock.tests2.StubTest.stub":218,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndThrowTest.longType":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":413,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":297,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":489,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":518,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":476,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":102,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":448,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":80,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":156,"org.easymock.tests2.NameTest.nameForMocksControl":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":104,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":197,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":350,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":259,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":329,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":148,"org.easymock.tests.MockingTest.testNicePartialClassMocking":19,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":60,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":100,"org.easymock.tests2.CaptureTest.testCaptureLast":93,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":447,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":14,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":239,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":251,"org.easymock.tests.MockingTest.testTwoMocks":269,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":444,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":333,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":253,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":107,"org.easymock.tests.UsageStrictMockTest.differentMethods":281,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":295,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":182,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":411,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":158,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":229,"org.easymock.tests2.MockBuilderTest.testCreateMockString":153,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":199,"org.easymock.tests.UsageExpectAndThrowTest.floatType":327,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":194,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":176,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":208,"org.easymock.samples.ExampleTest.voteAgainstRemoval":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":389,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.LimitationsTest.privateConstructor":488,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":17,"org.easymock.tests2.UsageConstraintsTest.testNotNull":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":461,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests2.UsageTest.defaultResetToNice":124,"org.easymock.samples.ExampleTest.voteAgainstRemovals":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":33,"org.easymock.tests.UsageVarargTest.differentLength":423,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":101,"org.easymock.tests2.CallbackTest.callback":217,"org.easymock.tests2.UsageConstraintsTest.equals":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":349,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":286,"org.easymock.tests.UsageCallCountTest.tooFewCalls":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":365,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":157,"org.easymock.tests.UsageThrowableTest.throwCheckedException":24,"org.easymock.tests.MockingTest.testStrictClassMocking":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":498,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":13,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":300,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":165,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":178,"org.easymock.tests2.CompareToTest.testGreateOrEqual":523,"org.easymock.tests.ObjectMethodsTest.testHashCode":405,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":446,"org.easymock.tests2.NameTest.nameForNiceMock":84,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":231,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":441,"org.easymock.tests2.DependencyTest.testInterfaceMocking":257,"org.easymock.samples.ExampleTest.addDocument":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.DelegateToTest.testStubDelegate":222,"org.easymock.tests2.AnswerTest.stubAnswer":177,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":278,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":149,"org.easymock.tests.UsageVarargTest.varargLongAccepted":425,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":517,"org.easymock.tests.UsageExpectAndReturnTest.floatType":501,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":160,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":189,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":249,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":233,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":167,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":91,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":500,"org.easymock.tests2.UsageConstraintsTest.testSame":237,"org.easymock.samples.SupportTest.addDocument":52,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":164,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":431,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":200,"org.easymock.tests.GenericTest.testPackageScope":474,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":188,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":273,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":429,"org.easymock.tests2.NameTest.nameForMock":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":511,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":11,"org.easymock.tests2.UsageStrictMockTest.differentMethods":79,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":503,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":339,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":377,"org.easymock.tests2.MockedExceptionTest.testRealException":73,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":390,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":285,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":302,"org.easymock.tests2.NameTest.nameForStrictMock":83,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":170,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":412,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":38,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.UsageStrictMockTest.range":78,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":435,"org.easymock.tests2.UsageConstraintsTest.lessThan":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":130,"org.easymock.tests2.CaptureTest.testCaptureRightOne":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":204,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":154,"org.easymock.tests2.UsageConstraintsTest.testOr":238,"org.easymock.tests.UsageRangeTest.combination":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.UsageTest.wrongArguments":348,"org.easymock.tests2.MockBuilderTest.testWithConstructor":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":201,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":367,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":504,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.varargShortAccepted":424,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":414,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":309,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":449,"org.easymock.tests2.UsageConstraintsTest.cmpTo":242,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":175,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":381,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":292,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":144,"org.easymock.tests.UsageTest.unexpectedCallWithArray":347,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":445,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":307,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":513,"org.easymock.tests2.CaptureTest.testCapture":521,"org.easymock.tests2.UsageConstraintsTest.constraints":234,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests.UsageStrictMockTest.testVerify":283,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":54,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":321,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":469,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":505,"org.easymock.tests.LimitationsTest.abstractClass":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":470,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":135}}]
