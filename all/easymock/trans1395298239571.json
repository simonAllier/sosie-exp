[{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"equalsMethod"}},{"position":"org.easymock.ConstructorArgs:54","failures":[18,19,15,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[0,62,63,64,65,66,2,67,68,69,70,71,72,73,74,75],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[77],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[79,80,81,82,83,84,85,86,0,1,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,18,106,107,108,15,16,17,109,110,111,112,22,113,114,115,23,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,62,132,133,134,135,63,64,136,137,138,139,140,141,142,143,144,145,78,146,77,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,34,37,47,53,180,181,182,183,184,185,186,187,188,189,190,191,192,193,65,194,195,196,66,197,198,2,3,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,5,217,218,219,6,7,220,8,221,222,9,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,10,244,245,246,11,12,247,13,248,249,14,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,69,70,275,276,277,278,279,72,280,281,73,74,282,283,284,285,286,287,288,289,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[116,118,120,121,122,125,126,291,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[292,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[81,85,0,1,129,131,62,134,135,63,64,137,141,146,77,150,151,164,165,293,294,295,296,184,65,66,197,2,3,201,203,205,211,212,234,261,270,271,274,69,70,277,278,279,72,280,281,73,74,282],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[18,19,297,298,299,300,301,15,27,28],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[116,118,126,144,145,146,147,148,302,159,164],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[303,304,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.internal.LastControl:61","failures":[85,104,107,108,116,117,118,119,120,121,122,123,124,125,126,291,127,128,310,142,143,144,145,78,146,77,147,148,149,302,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,173,65,66,197,206,207,208,209,210,255,311,256,257,258,259,260,270,283,284,290],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[133,156,171],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[312],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[85,86,104,107,108,15,116,117,118,119,120,121,122,123,124,125,126,291,127,128,129,310,142,143,144,145,78,146,77,147,148,149,302,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,173,313,65,314,66,197,206,207,208,209,210,255,311,256,257,258,259,260,261,270,283,284,290,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[85,117,123,124,128,147,150,65,197,206,207,208,209,210,255,311,256,257,258,259,260,283,284,290],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":145,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":278,"org.easymock.tests2.UsageTest.argumentsOrdered":64,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":98,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":133,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":27,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":163,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests2.DelegateToTest.testReturnException":138,"org.easymock.tests.MockingTest.testPartialClassMocking":229,"org.easymock.samples.SupportTest.voteForRemovals":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":213,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.object":220,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":80,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":297,"org.easymock.tests2.DelegateToTest.testWrongClass":140,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":284,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":206,"org.easymock.tests2.UsageTest.wrongArguments":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":56,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.samples.ExampleTest.answerVsDelegate":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests2.UsageConstraintsTest.testNull":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":170,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":176,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":210,"org.easymock.tests.UsageTest.moreThanOneArgument":279,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":227,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":31,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":169,"org.easymock.tests2.CaptureTest.testCaptureNone":124,"org.easymock.tests.UsageUnorderedTest.message":65,"org.easymock.tests.UsageVerifyTest.twoReturns":70,"org.easymock.tests.UsageVarargTest.varargByteAccepted":268,"org.easymock.tests2.ThreadingTest.testThreadSafe":101,"org.easymock.tests.UsageTest.argumentsOrdered":74,"org.easymock.tests.UsageVarargTest.varargIntAccepted":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":48,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":203,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":209,"org.easymock.tests2.UsageConstraintsTest.any":150,"org.easymock.tests2.StubTest.stub":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":260,"org.easymock.tests.UsageExpectAndThrowTest.longType":216,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":59,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests.LimitationsTest.mockNativeMethod":228,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":254,"org.easymock.tests2.AnswerTest.answer":81,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":302,"org.easymock.tests2.CaptureTest.testAnd":116,"org.easymock.tests2.UsageTest.strictResetToDefault":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":313,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":26,"org.easymock.tests2.NameTest.nameForMocksControl":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":36,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":281,"org.easymock.tests2.DelegateToTest.testDelegate":141,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":5,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":177,"org.easymock.tests.MockingTest.testNicePartialClassMocking":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":223,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":172,"org.easymock.tests2.CompareToTest.testCompareEqual":312,"org.easymock.tests2.CaptureTest.testCaptureLast":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":307,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":23,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":148,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":161,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":306,"org.easymock.tests2.CaptureTest.testCapture1_2446744":120,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":6,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":165,"org.easymock.tests.UsageThrowableTest.throwError":232,"org.easymock.tests.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":103,"org.easymock.tests.UsageExpectAndThrowTest.floatType":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":38,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":82,"org.easymock.tests.UsageVerifyTest.twoThrows":69,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.PartialClassMockTest.testGetArea":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":257,"org.easymock.samples.ExampleTest.voteAgainstRemoval":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":42,"org.easymock.tests2.UsageTest.niceToStrict":132,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":21,"org.easymock.tests2.UsageConstraintsTest.testNotNull":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":239,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":175,"org.easymock.samples.ExampleTest.voteAgainstRemovals":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":50,"org.easymock.tests2.CallbackTest.callback":106,"org.easymock.tests.UsageTest.openCallCountByLastCall":280,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":7,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":94,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":208,"org.easymock.tests.UsageCallCountTest.tooFewCalls":201,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":46,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":154,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":113,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":60,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":153,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":125,"org.easymock.tests.UsageThrowableTest.throwCheckedException":236,"org.easymock.tests2.EasyMockSupportClassTest.testAll":34,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":195,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":225,"org.easymock.tests2.CaptureTest.testCaptureAll":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.testMatches":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":114,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":314,"org.easymock.samples.ExampleTest.voteForRemovals":188,"org.easymock.tests2.NameTest.nameForNiceMock":295,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":105,"org.easymock.tests.UsageVarargTest.allKinds":270,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":274,"org.easymock.tests2.DependencyTest.testInterfaceMocking":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":299,"org.easymock.samples.BasicClassMockTest.testPrintContent":182,"org.easymock.samples.ExampleTest.addDocument":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":54,"org.easymock.tests2.DelegateToTest.testStubDelegate":139,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":238,"org.easymock.tests2.AnswerTest.stubAnswer":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":315,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":301,"org.easymock.tests2.UsageConstraintsTest.greaterThan":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests.UsageVarargTest.varargLongAccepted":267,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.samples.ExampleTest.voteForRemoval":185,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":253,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":57,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.UsageThrowableTest.noUpperLimit":233,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":158,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":289,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":143,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":121,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":28,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":91,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":241,"org.easymock.tests2.UsageConstraintsTest.testSame":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":32,"org.easymock.samples.SupportTest.addDocument":190,"org.easymock.tests2.CaptureTest.testCaptureFirst":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":39,"org.easymock.tests.GenericTest.testPackageScope":194,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":104,"org.easymock.tests2.CaptureTest.testCapture2_2446744":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":131,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":269,"org.easymock.tests2.NameTest.nameForMock":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":204,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":226,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":224,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":30,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":10,"org.easymock.tests.UsageCallCountTest.tooManyCalls":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":273,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":207,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests2.NameTest.nameForStrictMock":294,"org.easymock.tests2.UsageConstraintsTest.testContains":152,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":179,"org.easymock.tests2.UsageConstraintsTest.testFind":78,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":277,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":171,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":108,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":298,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":265,"org.easymock.tests.UsageTest.exactCallCountByLastCall":282,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":300,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":43,"org.easymock.tests2.CaptureTest.testCaptureRightOne":126,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":211,"org.easymock.tests2.UsageConstraintsTest.testOr":147,"org.easymock.tests.UsageRangeTest.combination":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":168,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests.UsageTest.wrongArguments":72,"org.easymock.tests2.MockBuilderTest.testWithConstructor":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":244,"org.easymock.tests2.EasyMockSupportTest.testVerify":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":44,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":212,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":285,"org.easymock.tests.UsageVarargTest.varargShortAccepted":266,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":67,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":151,"org.easymock.tests.UsageVarargTest.varargCharAccepted":264,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":84,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":99,"org.easymock.tests2.CaptureTest.testCaptureFromStub":291,"org.easymock.tests.UsageTest.unexpectedCallWithArray":71,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":235,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":202,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":14,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.UsageConstraintsTest.constraints":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.samples.ExampleTest.addAndChangeDocument":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":303,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":180,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":53,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":122,"org.easymock.tests2.UsageTest.resumeIfFailure":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":245,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":259,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":95}}]
