[{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[180,181,182,183,184,185,186],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[187,188,189,190,191,192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[194,195,57,196,58,59,60,61,197,198,72,199,200,201,173,179],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[202,203,204,205,206,28,207,208,29,209,210,211,212,213,214,215,216,217,30,218,219,220,221,222,31,223,224,225,226,39,227,194,195,57,196,228,58,229,59,60,230,231,61,232,197,198,72,233,74,234,86,87,88,89,91,92,235,236,237,238,239,240,93,94,96,97,98,199,99,241,242,243,100,101,102,244,245,246,247,248,249,250,251,252,253,254,255,256,103,257,258,259,260,261,117,118,119,262,200,201,263,264,265,266,267,268,269,270,172,271,173,272,273,274,275,275,276,276,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[187,188,189,190,191,192],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[277],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[270,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,1,4,5,6,7,12,14,15,17,18,23,24,25,34,37,278,104,109,121,122,123,279,280,281,282,283,138,139,140,141,142,163,164,275,275,276,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[35,36,284,285,286,287,288,191,110,111,289,113,290,291,192,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[34,35,36,64,284,285,286,296,297,298,299,191,109,110,111,112,289,113,134,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[300,301,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"m":"method","methodName":"methodName"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[72,73,233,304],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[305,187,306,307,308,309,34,35,36,64,190,310,288,311,312,108,313,109,110,111,112,289,113,134,295,314,315],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[230,72,74,234,241,275,275,276,276],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[267,316,317],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[272],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[300,301,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":286,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":322,"org.easymock.tests2.StubTest.stubWithReturnValue":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":152,"org.easymock.tests2.SerializationTest.testAllMockedMethod":233,"org.easymock.tests.MockingTest.testPartialClassMocking":117,"org.easymock.samples.SupportTest.voteForRemovals":178,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":188,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":270,"org.easymock.tests.MockClassControlTest.testToString":249,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":212,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":304,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":20,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":27,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests2.UsageTest.wrongArguments":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":121,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.samples.ConstructorCalledMockTest.testTax":275,"org.easymock.tests.UsageStrictMockTest.range":110,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":47,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":49,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":235,"org.easymock.tests2.CaptureTest.testPrimitive":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":123,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":204,"org.easymock.tests.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":281,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":189,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":116,"org.easymock.tests.UsageUnorderedTest.message":295,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":290,"org.easymock.tests.UsageVerifyTest.twoReturns":113,"org.easymock.tests2.ThreadingTest.testThreadSafe":52,"org.easymock.tests.UsageTest.argumentsOrdered":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":218,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":273,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":130,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests2.UsageConstraintsTest.any":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":131,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":267,"org.easymock.tests2.SerializationTest.testClass":72,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests.LimitationsTest.mockNativeMethod":103,"org.easymock.tests2.AnswerTest.answer":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":162,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":328,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":239,"org.easymock.tests2.CaptureTest.testAnd":75,"org.easymock.tests2.UsageTest.strictResetToDefault":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":243,"org.easymock.tests2.NameTest.nameForMocksControl":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":329,"org.easymock.tests2.MockedExceptionTest.testMockedException":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":44,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":126,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":119,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":60,"org.easymock.tests.MockingTest.testNicePartialClassMocking":118,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests.LimitationsTest.mockFinalMethod":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":326,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":21,"org.easymock.tests.MockingTest.testTwoMocks":261,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":314,"org.easymock.tests2.CaptureTest.testCapture1_2446744":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":143,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":24,"org.easymock.tests.UsageThrowableTest.throwError":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":331,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":320,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":265,"org.easymock.tests2.ConstraintsToStringTest.andToString":308,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":54,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":325,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":291,"org.easymock.tests2.MockBuilderTest.testCreateMockString":198,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":209,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":206,"org.easymock.tests.UsageVerifyTest.twoThrows":289,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.PartialClassMockTest.testGetArea":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":139,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":101,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":213,"org.easymock.tests2.UsageTest.niceToStrict":65,"org.easymock.tests.LimitationsTest.privateConstructor":256,"org.easymock.tests2.UsageConstraintsTest.testNotNull":23,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":171,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":181,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":58,"org.easymock.tests2.MockBuilderTest.testCreateMock":231,"org.easymock.tests2.UsageTest.defaultResetToNice":68,"org.easymock.samples.ExampleTest.voteAgainstRemovals":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":158,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":241,"org.easymock.tests.UsageTest.openCallCountByLastCall":135,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":187,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageOverloadedMethodTest.overloading":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":154,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":316,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":13,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageThrowableTest.throwCheckedException":168,"org.easymock.tests.MockClassControlTest.testEquals":253,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":271,"org.easymock.tests.MockingTest.testStrictClassMocking":259,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":190,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":236,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":193,"org.easymock.tests2.CaptureTest.testCaptureAll":76,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.testMatches":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":180,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests2.NameTest.nameForNiceMock":298,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":56,"org.easymock.tests2.DependencyTest.testInterfaceMocking":26,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":112,"org.easymock.samples.BasicClassMockTest.testPrintContent":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":170,"org.easymock.tests2.AnswerTest.stubAnswer":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":323,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests2.UsageConstraintsTest.greaterThan":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":102,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":128,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":244,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":53,"org.easymock.tests.UsageExpectAndReturnTest.floatType":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":161,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.tests2.ConstraintsToStringTest.orToString":305,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":276,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":18,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":202,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":230,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":317,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":42,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":205,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":43,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":70,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":210,"org.easymock.tests.GenericTest.testPackageScope":172,"org.easymock.tests2.CaptureTest.testCapture2_2446744":83,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":182,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":324,"org.easymock.tests.GenericTest.testBridgedEquals":272,"org.easymock.tests2.NameTest.nameForMock":296,"org.easymock.tests.UsageExpectAndReturnTest.longType":146,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":40,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":155,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":186,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":279,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":184,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":310,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":169,"org.easymock.tests.MockingTest.testNiceClassMocking":262,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.MockingTest.testClassMocking":260,"org.easymock.tests2.NameTest.nameForStrictMock":297,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":195,"org.easymock.tests2.UsageConstraintsTest.testContains":12,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":39,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":107,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests.UsageExpectAndReturnTest.object":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":203,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":266,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":57,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests2.UsageConstraintsTest.lessThan":25,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":321,"org.easymock.tests.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":227,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":214,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":277,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":234,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":159,"org.easymock.tests.UsageTest.wrongArguments":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":319,"org.easymock.tests.MockClassControlTest.testHashCode":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":211,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":215,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":268,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":287,"org.easymock.tests2.UsageConstraintsTest.cmpTo":11,"org.easymock.tests2.CaptureTest.testCaptureMultiple":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":132,"org.easymock.tests2.UsageTest.openCallCountByLastCall":66,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":300,"org.easymock.tests.DefaultClassInstantiatorTest.object":263,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":51,"org.easymock.tests2.CaptureTest.testCaptureFromStub":278,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":196,"org.easymock.tests.UsageTest.unexpectedCallWithArray":192,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":216,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":167,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":157,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":251,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":100,"org.easymock.tests2.ConstraintsToStringTest.notToString":306,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":160,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":334,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":307,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests2.UsageTest.resumeIfFailure":69,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":140,"org.easymock.tests.LimitationsTest.abstractClass":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":149,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":46}}]
