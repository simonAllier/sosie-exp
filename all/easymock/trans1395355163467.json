[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:39","sourceCode":"try {\n    com.google.dexmaker.stock.ProxyBuilder<T> com.google.dexmaker.stock.ProxyBuilder<T> = com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.forClass(java.lang.Class<T>).handler(org.easymock.internal.AndroidClassProxyFactory.MockHandler);\n    if (org.easymock.ConstructorArgs != null) {\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n    } else {\n        try {\n            org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n            java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n            java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n            com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n        } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n        }\n    }\n    return com.google.dexmaker.stock.ProxyBuilder<T>.build();\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:114","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[23,24,25,26,27,28],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[29],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,58,59,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,5,6,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,0,151,152,153,154,155,156,157,158,159,160,161,162,163,30,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,27,239,240,7,8,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,9,267,268,269,10,11,270,12,271,272,13,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,14,289,290,291,15,16,292,17,293,294,18,295,296,297,298,299,300,301,19,302,303,20,21,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,28,354,355,356,357,358,359],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[152,157,166,171],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[360,341,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[362,164],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[49,50,51,52,53,54,55,56,57,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,5,6,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,111,113,114,115,120,122,128,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,0,151,152,153,155,156,157,158,159,161,162,30,164,166,167,168,169,170,171,174,175,176,177,178,181,183,185,186,188,189,191,193,194,196,197,198,201,202,203,205,206,207,208,209,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,27,239,240,7,8,241,242,250,252,254,255,256,258,259,260,261,265,266,267,270,273,278,279,280,281,282,283,287,288,289,292,295,300,301,304,305,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,338,339,340,342,348,354,357,358,359],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[364,365,366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":363,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":352,"org.easymock.tests2.UsageTest.argumentsOrdered":203,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":249,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":198,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":81,"org.easymock.tests2.DelegateToTest.testReturnException":128,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":247,"org.easymock.tests.MockingTest.testPartialClassMocking":338,"org.easymock.samples.SupportTest.voteForRemovals":50,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":42,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":293,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":285,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":207,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":179,"org.easymock.tests.UsageExpectAndThrowTest.object":292,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":72,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DelegateToTest.testWrongClass":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":330,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":331,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":311,"org.easymock.tests2.UsageTest.wrongArguments":196,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":216,"org.easymock.samples.ExampleTest.answerVsDelegate":52,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":83,"org.easymock.tests2.UsageConstraintsTest.testNull":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests2.CaptureTest.testPrimitive":93,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":315,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":357,"org.easymock.tests.UsageTest.moreThanOneArgument":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":334,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":213,"org.easymock.tests2.CaptureTest.testCaptureNone":98,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":300,"org.easymock.tests.UsageVerifyTest.twoReturns":220,"org.easymock.tests.UsageVarargTest.varargByteAccepted":327,"org.easymock.tests2.ThreadingTest.testThreadSafe":65,"org.easymock.tests.UsageTest.argumentsOrdered":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":321,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":256,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.CaptureTest.testCapture_2617107":92,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":47,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":187,"org.easymock.tests2.StubTest.stub":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests.UsageExpectAndThrowTest.longType":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":364,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.tests2.SerializationTest.testClass":79,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests.LimitationsTest.mockNativeMethod":301,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":277,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":262,"org.easymock.tests2.AnswerTest.answer":178,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":126,"org.easymock.tests2.CaptureTest.testAnd":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":32,"org.easymock.tests2.UsageTest.strictResetToDefault":194,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":112,"org.easymock.tests2.NameTest.nameForMocksControl":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":34,"org.easymock.tests2.MockedExceptionTest.testMockedException":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":356,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":21,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":14,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":189,"org.easymock.tests.MockingTest.testNicePartialClassMocking":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":295,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":109,"org.easymock.tests2.CaptureTest.testCaptureLast":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":228,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":310,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":337,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":227,"org.easymock.tests2.CaptureTest.testCapture1_2446744":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":263,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":124,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":202,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":3,"org.easymock.tests.UsageThrowableTest.throwError":229,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":35,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":41,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":2,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.MockBuilderTest.testCreateMockString":192,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":48,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":336,"org.easymock.tests.UsageExpectAndThrowTest.floatType":287,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":30,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":181,"org.easymock.tests.UsageVerifyTest.twoThrows":219,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":208,"org.easymock.samples.PartialClassMockTest.testGetArea":61,"org.easymock.tests.ResultTest.createDelegateResultToString":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":54,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":211,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":286,"org.easymock.tests2.UsageTest.niceToStrict":197,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":236,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":118,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":186,"org.easymock.tests2.UsageTest.defaultResetToNice":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":273,"org.easymock.tests.UsageVarargTest.differentLength":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":31,"org.easymock.tests2.CallbackTest.callback":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":36,"org.easymock.tests.UsageTest.openCallCountByLastCall":355,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":214,"org.easymock.tests.UsageCallCountTest.tooFewCalls":254,"org.easymock.tests.UsageOverloadedMethodTest.overloading":317,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":12,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":365,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":217,"org.easymock.tests.UsageThrowableTest.throwCheckedException":233,"org.easymock.tests2.EasyMockSupportClassTest.testAll":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":308,"org.easymock.tests2.CaptureTest.testCaptureAll":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":85,"org.easymock.tests2.UsageConstraintsTest.testMatches":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":87,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":335,"org.easymock.tests.ObjectMethodsTest.testHashCode":360,"org.easymock.samples.ExampleTest.voteForRemovals":56,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests2.NameTest.nameForNiceMock":176,"org.easymock.tests.UsageVarargTest.allKinds":329,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":309,"org.easymock.samples.BasicClassMockTest.testPrintContent":63,"org.easymock.samples.ExampleTest.addDocument":55,"org.easymock.tests2.DelegateToTest.testStubDelegate":129,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":235,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":74,"org.easymock.tests2.AnswerTest.stubAnswer":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":44,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":131,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":239,"org.easymock.tests2.UsageConstraintsTest.greaterThan":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":349,"org.easymock.tests.UsageVarargTest.varargLongAccepted":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":241,"org.easymock.samples.ExampleTest.voteForRemoval":53,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":276,"org.easymock.tests.UsageExpectAndReturnTest.floatType":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageThrowableTest.noUpperLimit":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":46,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":165,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":342,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":95,"org.easymock.tests2.SerializationTest.test":80,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":264,"org.easymock.tests2.UsageConstraintsTest.testSame":153,"org.easymock.samples.SupportTest.addDocument":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":246,"org.easymock.tests2.CaptureTest.testCaptureFirst":103,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":269,"org.easymock.tests.GenericTest.testPackageScope":260,"org.easymock.tests2.UsageTest.moreThanOneArgument":195,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":68,"org.easymock.tests2.CaptureTest.testCapture2_2446744":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":328,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":258,"org.easymock.tests2.NameTest.nameForMock":174,"org.easymock.tests.UsageExpectAndReturnTest.longType":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":306,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":271,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":210,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":296,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":9,"org.easymock.tests.UsageCallCountTest.tooManyCalls":259,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":351,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":253,"org.easymock.tests2.MockedExceptionTest.testRealException":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":289,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.testContains":160,"org.easymock.tests2.NameTest.nameForStrictMock":175,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":120,"org.easymock.tests2.UsageConstraintsTest.testFind":151,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":318,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":116,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":117,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":111,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":185,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":43,"org.easymock.tests.UsageTest.exactCallCountByLastCall":359,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":100,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":302,"org.easymock.tests2.UsageConstraintsTest.testOr":154,"org.easymock.tests.UsageRangeTest.combination":348,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.UsageTest.wrongArguments":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":280,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":272,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests.UsageVarargTest.varargShortAccepted":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageConstraintsTest.cmpTo":159,"org.easymock.tests.UsageVarargTest.varargCharAccepted":322,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":180,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":75,"org.easymock.tests2.UsageTest.openCallCountByLastCall":199,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":343,"org.easymock.tests2.CaptureTest.testCaptureFromStub":101,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":232,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests2.UsageConstraintsTest.constraints":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":290,"org.easymock.samples.ExampleTest.addAndChangeDocument":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":275,"org.easymock.tests.UsageStrictMockTest.testVerify":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":64,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":209,"org.easymock.tests2.CompareToTest.testGreateThan":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":307,"org.easymock.tests2.UsageTest.resumeIfFailure":204,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":268,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139}}]
