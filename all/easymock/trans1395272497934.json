[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[1],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:317","failures":[14,15,16,17],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[18,10,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,14,15,44,16,17,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,216,217,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,1,240,241,242,243,244,245,246,12,247,248,249,250,251,252,13,253,254,255,256,257,258,259,0,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,10,19,20,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,21],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[367,368,369,370,371],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[372],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[373,374,175,375,376],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[252,377,378,13,253,254,255,379,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[380],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[308,312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[29,30,33,34,381,102,108,115,116,175,178,225,231,232,342],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[2,4,5,6,7,8,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[382,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"obj"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[43,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[98,210,308,309,310,311,312,313],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,109,110,113,383,384,385,386,387,176,182,183,201,202,203,204,205,257,271,274,275,283,340,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[257,274,280,388],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[75,86,87,108,109,110,111,112,113,158,159,175,176,182,183,201,202,203,204,205,206,252,13,257,258,259,0,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,298,299,300,303,305,340,341,389,354,355,356,357,358,359,360,361,362,363,364,365,366,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[266],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[390],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[391,392,393,394,395,396,397,398,399,400,401,402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[403,404,238,253,254],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,405,78,79,80,81,82,83,84,86,87,89,90,91,92,93,94,95,96,98,99,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,155,156,157,158,159,160,406,407,408,409,410,411,412,413,414,382,415,416,417,163,164,165,166,168,169,170,173,174,175,176,177,178,179,180,181,182,183,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,418,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,1,240,241,242,243,244,245,246,12,247,248,249,250,251,252,13,253,254,255,257,258,259,0,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,309,310,311,313,10,19,20,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.UsageTest.argumentsOrdered":232,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":307,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":227,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":208,"org.easymock.tests2.DelegateToTest.testReturnException":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":155,"org.easymock.tests.MockingTest.testPartialClassMocking":89,"org.easymock.tests.MockClassControlTest.testToString":195,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":45,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":333,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.tests2.UsageTest.wrongArguments":225,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":402,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":165,"org.easymock.samples.ExampleTest.answerVsDelegate":210,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":40,"org.easymock.tests2.UsageConstraintsTest.testNull":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":248,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":324,"org.easymock.tests2.CaptureTest.testPrimitive":357,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests.UsageTest.moreThanOneArgument":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":64,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":188,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageVarargTest.varargIntAccepted":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":205,"org.easymock.tests.ReplayStateInvalidUsageTest.times":414,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":336,"org.easymock.tests2.AnswerTest.answer":284,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":293,"org.easymock.tests2.CaptureTest.testAnd":354,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":319,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":192,"org.easymock.tests2.DelegateToTest.testDelegate":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":149,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":106,"org.easymock.tests2.CaptureTest.testCapture1_2446744":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":291,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":408,"org.easymock.tests.UsageThrowableTest.throwError":137,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":39,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":26,"org.easymock.samples.PartialClassMockTest.testGetArea":207,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":409,"org.easymock.tests2.CompareToTest.testLessOrEqual":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":185,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":46,"org.easymock.tests2.UsageTest.niceToStrict":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.MockBuilderTest.testCreateMock":241,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":401,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":54,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":375,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":163,"org.easymock.tests.UsageOverloadedMethodTest.overloading":104,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":128,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":103,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":270,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":372,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":363,"org.easymock.tests.MockClassControlTest.testEquals":199,"org.easymock.tests2.EasyMockSupportClassTest.testAll":332,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":292,"org.easymock.tests2.CaptureTest.testCaptureAll":355,"org.easymock.tests.MockNameTest.defaultName":85,"org.easymock.tests2.UsageConstraintsTest.testMatches":272,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":25,"org.easymock.samples.ExampleTest.voteForRemovals":214,"org.easymock.tests.UsageVarargTest.allKinds":75,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":148,"org.easymock.samples.BasicClassMockTest.testPrintContent":219,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":143,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":159,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.UsageConstraintsTest.greaterThan":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":255,"org.easymock.samples.ExampleTest.voteForRemoval":211,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":371,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":379,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":317,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":154,"org.easymock.tests2.CaptureTest.testCaptureFirst":21,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":318,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":124,"org.easymock.tests2.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":303,"org.easymock.tests2.CaptureTest.testCapture2_2446744":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":74,"org.easymock.tests.GenericTest.testBridgedEquals":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":83,"org.easymock.tests.UsageExpectAndReturnTest.longType":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":145,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":315,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":63,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":187,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":279,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":22,"org.easymock.tests.UsageCallCountTest.tooManyCalls":84,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":348,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":405,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":404,"org.easymock.tests2.UsageConstraintsTest.testContains":269,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":296,"org.easymock.tests2.UsageConstraintsTest.testFind":260,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":105,"org.easymock.tests.MockTypeTest.fromEasyMockClass":38,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":299,"org.easymock.tests.UsageExpectAndReturnTest.object":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":69,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":170,"org.easymock.tests.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":189,"org.easymock.tests2.ConstraintsToStringTest.findToString":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":133,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":65,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":98,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":391,"org.easymock.tests.MockClassControlTest.testHashCode":198,"org.easymock.tests2.EasyMockSupportTest.testVerify":327,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":190,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":290,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":389,"org.easymock.tests.UsageVarargTest.varargCharAccepted":68,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests.DefaultClassInstantiatorTest.object":417,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":44,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":168,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":381,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":140,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":43,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":335,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":157,"org.easymock.tests2.StubTest.stubWithReturnValue":346,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":280,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":161,"org.easymock.samples.SupportTest.voteForRemovals":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":57,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":162,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":285,"org.easymock.tests.UsageExpectAndThrowTest.object":55,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":277,"org.easymock.tests2.DelegateToTest.testWrongClass":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":183,"org.easymock.tests.UsageStrictMockTest.range":178,"org.easymock.samples.ConstructorCalledMockTest.testTax":216,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":56,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":1,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":415,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":373,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":186,"org.easymock.tests2.CaptureTest.testCaptureNone":362,"org.easymock.tests.UsageUnorderedTest.message":108,"org.easymock.tests.UsageVerifyTest.twoReturns":116,"org.easymock.tests.UsageVarargTest.varargByteAccepted":73,"org.easymock.tests2.ThreadingTest.testThreadSafe":300,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":81,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":171,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":218,"org.easymock.tests2.CaptureTest.testCapture_2617107":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":112,"org.easymock.tests2.UsageConstraintsTest.any":267,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":413,"org.easymock.tests2.StubTest.stub":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":156,"org.easymock.tests.UsageExpectAndThrowTest.longType":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":412,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":341,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":344,"org.easymock.tests2.NameTest.nameForMocksControl":331,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":49,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":246,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":240,"org.easymock.tests.MockingTest.testNicePartialClassMocking":90,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":3,"org.easymock.tests2.CaptureTest.testCaptureLast":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":107,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":264,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":353,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":278,"org.easymock.tests.MockingTest.testTwoMocks":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":53,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":282,"org.easymock.samples.ExampleTest.removeNonExistingDocument":418,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":400,"org.easymock.tests.UsageStrictMockTest.differentMethods":179,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":392,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":368,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":302,"org.easymock.tests2.MockBuilderTest.testCreateMockString":243,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":193,"org.easymock.tests.UsageExpectAndThrowTest.floatType":47,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":273,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests.UsageVerifyTest.twoThrows":115,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":334,"org.easymock.samples.ExampleTest.voteAgainstRemoval":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":184,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":254,"org.easymock.tests2.UsageConstraintsTest.testNotNull":281,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":209,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":132,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests.UsageVarargTest.differentLength":70,"org.easymock.tests2.CallbackTest.callback":305,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":377,"org.easymock.tests.UsageTest.openCallCountByLastCall":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":111,"org.easymock.tests.UsageCallCountTest.tooFewCalls":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":166,"org.easymock.tests.UsageThrowableTest.throwCheckedException":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":374,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":352,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":337,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":351,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.ObjectMethodsTest.testHashCode":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":304,"org.easymock.tests2.NameTest.nameForNiceMock":330,"org.easymock.tests2.DependencyTest.testInterfaceMocking":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":213,"org.easymock.tests2.DelegateToTest.testStubDelegate":310,"org.easymock.tests2.AnswerTest.stubAnswer":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":176,"org.easymock.tests.UsageVarargTest.varargLongAccepted":72,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":135,"org.easymock.tests.UsageExpectAndReturnTest.floatType":119,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":314,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":217,"org.easymock.tests.UsageThrowableTest.noUpperLimit":138,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":275,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":258,"org.easymock.tests2.SerializationTest.test":19,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":359,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":390,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":118,"org.easymock.tests2.UsageConstraintsTest.testSame":262,"org.easymock.samples.SupportTest.addDocument":220,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":411,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests2.NameTest.nameForMock":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":129,"org.easymock.tests2.UsageStrictMockTest.differentMethods":343,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":59,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":95,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":340,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests2.NameTest.nameForStrictMock":329,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":249,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":276,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":369,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":236,"org.easymock.tests2.UsageStrictMockTest.range":342,"org.easymock.tests2.UsageConstraintsTest.lessThan":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":393,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":316,"org.easymock.tests2.CaptureTest.testCaptureRightOne":364,"org.easymock.tests2.UsageConstraintsTest.testOr":263,"org.easymock.tests.UsageRangeTest.combination":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":12,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":130,"org.easymock.tests.UsageVarargTest.varargShortAccepted":71,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":82,"org.easymock.tests2.UsageConstraintsTest.cmpTo":268,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":286,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":365,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":407,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":237,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":131,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.tests2.UsageConstraintsTest.constraints":259,"org.easymock.samples.ExampleTest.addAndChangeDocument":215,"org.easymock.tests.UsageStrictMockTest.testVerify":181,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":206,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":146,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":123,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":204,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":321}}]
