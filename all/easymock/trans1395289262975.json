[{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[28,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,5,6,44,45,46,47,48,7,8,49,50,51,52,53,54,55,56,57,58,59,0,1,2,60,61,62,63,64,65,66,28,67,68,69,70,29,71,72,73,74,75,76,77,78,79,80,30,81,82,83,84,85,86,87,88,89,9,90,10,11,91,12,13,14,15,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,16,168,17,169,170,18,19,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,20,21,277,22,23,278,279,280,281,282,283,284,285,24,25,26,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[324,325,326,327,328,329,330,331,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[79,333],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[44,335,336,337,338,88,10,11,114,126,275,22,23,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[339,340,341,342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[344,97,108,109,345],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[97,108,109,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[42,47,53,166,167,170,175,225,227,228,229,230,231,232,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,283,25,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[346,347,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MocksControl:190","failures":[44,45,8,335,348,336,337,338,349,350,28,29,71,72,75,30,81,82,84,88,10,11,106,114,126,135,145,165,19,177,225,226,228,229,230,231,232,275,22,23,25,298],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[351,352,123,144,145],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[66,28,68,70,29,353,30,85,96,98,106],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.RecordState:222","failures":[354,191,281,355],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[344,97,103,104,105,108,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[334,333,356,357,358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[359],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:189","failures":[42,6,44,45,48,7,8,50,360,361,336,362,363,66,88,90,10,11,110,111,112,113,364,119,124,365,366,126,127,140,143,367,155,156,157,158,159,160,161,162,163,167,168,17,18,19,171,177,275,20,277,22,23,25,26],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[42,50,9,92,171,227,21,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[34,58,59,92,368,369,93,94,95,114,280],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[79,333],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[34,60,62,370,63,371,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":28,"org.easymock.tests2.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":290,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":45,"org.easymock.tests2.StubTest.stubWithReturnValue":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":202,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":84,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":288,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":343,"org.easymock.tests.MockingTest.testPartialClassMocking":180,"org.easymock.tests.MockClassControlTest.testToString":318,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":252,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":240,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.UsageExpectAndThrowTest.object":250,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":27,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":81,"org.easymock.tests2.DelegateToTest.testWrongClass":62,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":188,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":172,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":157,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":362,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":263,"org.easymock.tests2.UsageConstraintsTest.testNull":68,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":251,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":365,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":338,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.CaptureTest.testPrimitive":99,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":259,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":223,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":332,"org.easymock.tests2.CaptureTest.testCaptureNone":104,"org.easymock.tests.UsageUnorderedTest.message":177,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageVarargTest.varargByteAccepted":310,"org.easymock.tests2.ThreadingTest.testThreadSafe":148,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":304,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":293,"org.easymock.tests2.CaptureTest.testCapture_2617107":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":341,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":327,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":175,"org.easymock.tests2.UsageConstraintsTest.any":72,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":371,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":220,"org.easymock.tests2.StubTest.stub":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":289,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":219,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":364,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":367,"org.easymock.tests.ReplayStateInvalidUsageTest.times":221,"org.easymock.tests.LimitationsTest.mockNativeMethod":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":113,"org.easymock.tests2.CaptureTest.testAnd":96,"org.easymock.tests2.UsageTest.strictResetToDefault":43,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":143,"org.easymock.tests2.NameTest.nameForMocksControl":15,"org.easymock.tests2.MockedExceptionTest.testMockedException":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests2.DelegateToTest.testDelegate":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":244,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":183,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":366,"org.easymock.tests.MockingTest.testNicePartialClassMocking":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":255,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.CompareToTest.testNotComparable":4,"org.easymock.tests2.CompareToTest.testCompareEqual":356,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":339,"org.easymock.tests2.CaptureTest.testCaptureLast":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":29,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":354,"org.easymock.tests2.CaptureTest.testCapture1_2446744":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":111,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":86,"org.easymock.tests.UsageThrowableTest.throwError":225,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":215,"org.easymock.samples.ExampleTest.removeNonExistingDocument":39,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":217,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":262,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":150,"org.easymock.tests2.MockBuilderTest.testCreateMockString":127,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":78,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":93,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":216,"org.easymock.tests.MockingTest.testInterfaceMocking":182,"org.easymock.tests2.CompareToTest.testLessOrEqual":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":294,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":331,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":241,"org.easymock.tests2.UsageTest.niceToStrict":44,"org.easymock.tests2.UsageConstraintsTest.testNotNull":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":232,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":54,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.UsageTest.defaultResetToNice":48,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":208,"org.easymock.tests.UsageVarargTest.differentLength":307,"org.easymock.tests2.CallbackTest.callback":114,"org.easymock.tests.UsageTest.openCallCountByLastCall":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":249,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":336,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":174,"org.easymock.tests.UsageCallCountTest.tooFewCalls":269,"org.easymock.tests.UsageOverloadedMethodTest.overloading":165,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":283,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":204,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":164,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":75,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":158,"org.easymock.tests.UsageThrowableTest.throwCheckedException":229,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":190,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":257,"org.easymock.tests.MockingTest.testStrictClassMocking":178,"org.easymock.tests2.CaptureTest.testCaptureAll":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":239,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":347,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":116,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":222,"org.easymock.tests2.UsageConstraintsTest.testMatches":77,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":213,"org.easymock.tests2.CompareToTest.testGreateOrEqual":357,"org.easymock.tests.ObjectMethodsTest.testHashCode":314,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":340,"org.easymock.tests2.NameTest.nameForNiceMock":14,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests.UsageVarargTest.allKinds":312,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":162,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.DelegateToTest.testStubDelegate":61,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":231,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":88,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":292,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.UsageConstraintsTest.greaterThan":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":146,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":325,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":147,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":195,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":140,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests.UsageThrowableTest.noUpperLimit":226,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":80,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":153,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":360,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":194,"org.easymock.tests2.UsageConstraintsTest.testSame":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":287,"org.easymock.tests2.CaptureTest.testCaptureFirst":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":348,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests.GenericTest.testPackageScope":189,"org.easymock.tests2.UsageTest.moreThanOneArgument":5,"org.easymock.tests2.CaptureTest.testCapture2_2446744":108,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":311,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":273,"org.easymock.tests2.NameTest.nameForMock":12,"org.easymock.tests.UsageExpectAndReturnTest.longType":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":205,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":256,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":197,"org.easymock.tests.UsageCallCountTest.tooManyCalls":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":268,"org.easymock.tests2.MockedExceptionTest.testRealException":57,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":201,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":245,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":230,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":115,"org.easymock.tests.MockingTest.testNiceClassMocking":186,"org.easymock.tests.MockingTest.testClassMocking":179,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":352,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":267,"org.easymock.tests2.UsageConstraintsTest.testContains":74,"org.easymock.tests2.NameTest.nameForStrictMock":13,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":67,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":166,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":122,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests.MockTypeTest.fromEasyMockClass":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":59,"org.easymock.tests.UsageExpectAndReturnTest.object":203,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":132,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":141,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":120,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":363,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":306,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":315,"org.easymock.tests.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":351,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":106,"org.easymock.tests2.UsageConstraintsTest.testOr":70,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":282,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests.MockClassControlTest.testHashCode":321,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":206,"org.easymock.tests.UsageVarargTest.varargShortAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":280,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageConstraintsTest.cmpTo":73,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":51,"org.easymock.tests.UsageVarargTest.varargCharAccepted":305,"org.easymock.tests2.CaptureTest.testCaptureMultiple":344,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests2.CompareToTest.testLessThan":334,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastCall":46,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":350,"org.easymock.tests.DefaultClassInstantiatorTest.object":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":31,"org.easymock.tests2.CaptureTest.testCaptureFromStub":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":214,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":121,"org.easymock.tests.UsageTest.unexpectedCallWithArray":168,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":313,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":228,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":207,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":320,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":277,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":40,"org.easymock.tests.CapturesMatcherTest.test":345,"org.easymock.tests.UsageStrictMockTest.testVerify":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":32,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":319,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":276,"org.easymock.tests2.CompareToTest.testGreateThan":333,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":160,"org.easymock.tests2.UsageTest.resumeIfFailure":49,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":295,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":296,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":337,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":129}}]
