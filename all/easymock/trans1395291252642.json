[{"position":"org.easymock.internal.RecordState:233","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,156,157,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[301,302,75,82,83,129,275],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[303,304,305,306,307,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,309,7,8,9,10,11,12,310,13,311,312,313,314,315,316,317,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,318,43,44,45,46,47,48,49,50,51,52,319,53,54,55,56,320,57,58,321,59,60,322,323,324,61,62,325,63,326,327,328,64,65,66,67,68,329,69,70,330,71,331,72,73,74,332,333,334,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,335,336,337,338,339,340,112,113,114,341,115,116,117,118,119,120,342,343,121,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,122,380,381,382,383,384,123,385,386,387,388,389,390,391,392,393,394,395,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,396,139,140,397,398,399,400,401,402,403,404,405,406,141,142,143,144,145,146,147,148,149,150,151,152,153,154,407,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,408,175,409,410,176,411,177,178,412,413,179,414,415,416,180,181,182,183,184,185,186,187,417,418,188,419,420,421,189,190,191,422,423,192,193,194,195,424,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,425,426,427,428,226,227,228,229,230,429,231,232,233,234,235,236,237,430,431,432,433,434,238,435,436,437,438,439,440,239,240,241,242,243,244,245,246,247,248,441,249,250,251,252,253,254,255,256,257,258,259,260,261,442,262,263,264,265,443,444,445,446,447,448,449,266,450,451,267,452,453,454,455,456,457,458,459,460,268,461,462,463,464,465,269,466,467,468,469,470,471,472,270,473,474,475,476,477,478,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[479,480,481,482,483,484,441],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[479,412,480,481,482,485,486,245,248,441],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[245,246,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[79,379,278],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[487],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[5,6,8,9,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,119,121,127,129,130,133,134,135,141,142,143,144,145,147,149,150,151,152,154,161,162,163,164,166,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,224,225,228,232,233,234,235,236,237,238,240,241,242,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,266,267,268,269,270,273,275,276,279,280,281,282,283,284,285,286,287,288,289,290,291,294,295,296,297,299,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,6,8,9,12,13,59,61,62,63,64,65,66,67,71,72,73,74,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,114,121,373,375,383,384,385,127,129,130,133,134,135,136,137,141,142,143,144,145,147,149,151,152,154,161,162,163,164,166,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,224,228,232,233,234,235,236,238,241,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,266,267,268,269,270,273,275,276,279,280,281,282,283,284,285,286,287,288,290,291,294,295,296,297,299,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[194,195,197,199,200,202,212,217,287,289,297],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:62","sourceCode":"throw new java.lang.RuntimeException(java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[488,489,490,491],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[61,62,63,183,421,191,454,457,458,285,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,309,7,8,9,10,11,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,319,320,59,60,61,62,63,64,65,66,67,68,329,69,70,71,331,72,73,74,333,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,335,336,337,338,339,112,115,116,117,118,119,120,121,345,346,347,348,349,350,351,352,353,354,355,356,357,386,387,388,389,391,392,393,124,126,127,128,129,130,131,132,133,134,399,400,401,402,403,404,405,406,141,142,143,144,145,147,149,150,152,407,156,156,157,157,162,163,164,165,166,168,169,170,171,172,173,174,408,176,411,177,178,413,179,414,180,181,182,183,184,185,186,187,417,188,421,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,223,224,225,425,426,427,428,226,227,228,229,232,233,234,235,236,238,240,241,242,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,269,270,271,273,274,275,276,277,279,280,281,282,283,284,285,286,287,290,291,296,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,309,7,8,9,10,11,12,310,13,311,312,493,494,313,314,315,316,317,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,318,43,44,45,46,47,48,49,50,51,52,319,53,54,55,56,320,57,58,321,59,60,322,323,324,61,62,325,63,326,327,328,64,65,66,67,68,329,69,70,330,71,331,72,73,74,332,333,334,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,335,336,337,338,339,340,112,113,114,341,115,116,117,118,119,120,342,343,121,344,345,346,347,348,349,350,351,352,353,354,355,356,495,357,358,359,360,361,362,496,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,122,380,381,382,383,384,123,385,386,387,388,389,390,391,392,393,394,395,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,396,139,140,397,398,497,399,400,401,402,403,404,405,406,141,142,143,144,145,146,147,148,149,150,151,152,153,154,407,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,408,498,175,409,499,410,176,411,177,479,178,500,412,413,179,501,414,415,416,180,181,182,183,184,185,186,187,417,418,188,419,420,421,189,190,191,422,423,192,193,194,195,424,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,425,426,427,428,226,227,228,229,230,429,231,232,233,234,235,236,237,430,431,432,433,434,238,435,436,437,438,439,440,239,240,241,242,243,244,245,246,247,248,441,502,249,250,251,252,253,254,255,256,257,258,259,260,261,442,262,263,264,265,443,503,504,505,444,445,446,447,448,449,266,450,451,267,452,453,454,455,456,457,458,459,460,268,461,462,463,464,465,269,466,467,468,469,470,471,472,270,473,474,475,476,477,478,271,272,273,274,275,276,277,278,279,506,280,281,282,283,507,284,285,286,492,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,309,7,8,9,10,11,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,53,55,56,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,124,125,126,127,128,129,130,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,174,176,177,178,179,414,180,181,182,184,185,186,187,188,190,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,223,224,225,228,230,231,232,233,235,236,237,238,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,266,267,268,269,270,271,272,273,274,275,276,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[156,157,498,499,479,412,508,501,509,510,511,245,248,441,447,448,449,266,450,451,267,452,453,454,455,456,457,458,459,460,268,461,462,463,464,465,269,466,467,282,286,492],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,61,62,63,64,65,66,67,76,84,85,86,87,88,89,92,93,95,96,97,99,100,101,102,103,121,127,129,130,133,134,141,142,143,144,145,147,149,151,152,154,161,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,235,241,248,266,267,268,269,273,275,276,280,281,282,283,284,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[59,60,77,80,119,203],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:183","failures":[5,6,8,9,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,53,54,55,56,57,58,59,61,62,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,125,127,128,129,130,131,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,159,160,161,162,163,164,166,167,168,169,174,176,177,178,180,181,182,184,185,187,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,224,225,228,230,231,232,234,235,236,237,238,240,241,242,244,245,246,247,248,249,251,252,253,254,257,258,259,260,261,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,300],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[309,512,488,126,490,491],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[370,221,224,225],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[5,309,7,10,11,12,75,82,83,335,336,337,338,339,386,387,388,389,124,126,128,129,130,162,165,166,167,170,171,172,174,408,411,177,178,179,414,417,421,194,425,426,427,428,238,251,253,254,256,257,270,271,274,275,276],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[498,499,479,508,501,509,510,513,441,282,286,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.Capture:134","failures":[514],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[515,516,517],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":195,"org.easymock.tests2.UsageTest.argumentsOrdered":172,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":374,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":167,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":148,"org.easymock.tests2.DelegateToTest.testReturnException":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":116,"org.easymock.tests.MockingTest.testPartialClassMocking":61,"org.easymock.tests.MockClassControlTest.testToString":401,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":442,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":267,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":201,"org.easymock.tests2.UsageTest.wrongArguments":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":76,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":388,"org.easymock.samples.ExampleTest.answerVsDelegate":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":315,"org.easymock.tests2.UsageConstraintsTest.testNull":197,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":327,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":185,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests2.CaptureTest.testPrimitive":290,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":39,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":2,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":396,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":484,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":504,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":439,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":145,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests.ReplayStateInvalidUsageTest.times":353,"org.easymock.tests2.DependencyTest.testClassMocking":415,"org.easymock.tests2.AnswerTest.answer":220,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":428,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":494,"org.easymock.tests2.CaptureTest.testAnd":287,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":398,"org.easymock.tests2.DelegateToTest.testDelegate":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":35,"org.easymock.tests.LimitationsTest.mockFinalMethod":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":339,"org.easymock.tests2.DependencyTest.testClassMockingSupport":416,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":332,"org.easymock.tests2.CaptureTest.testCapture1_2446744":291,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":426,"org.easymock.tests.UsageThrowableTest.throwError":104,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":347,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":314,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":497,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":4,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":467,"org.easymock.samples.PartialClassMockTest.testGetArea":147,"org.easymock.tests.MockingTest.testInterfaceMocking":325,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":456,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":395,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":21,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":176,"org.easymock.tests2.MockBuilderTest.testCreateMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":463,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":29,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":386,"org.easymock.tests.UsageOverloadedMethodTest.overloading":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":460,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":95,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":206,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":296,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":318,"org.easymock.tests.MockClassControlTest.testEquals":405,"org.easymock.tests2.EasyMockSupportClassTest.testAll":266,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":427,"org.easymock.tests2.CaptureTest.testCaptureAll":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":337,"org.easymock.tests.MockNameTest.defaultName":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":3,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":345,"org.easymock.samples.ExampleTest.voteForRemovals":154,"org.easymock.tests.UsageVarargTest.allKinds":50,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":81,"org.easymock.samples.BasicClassMockTest.testPrintContent":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":110,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":120,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":243,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":496,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":486,"org.easymock.tests2.UsageConstraintsTest.greaterThan":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":65,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":191,"org.easymock.samples.ExampleTest.voteForRemoval":151,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":363,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":422,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":233,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":518,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":505,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":417,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":51,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":115,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":239,"org.easymock.tests2.CaptureTest.testCaptureFirst":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":91,"org.easymock.tests2.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":235,"org.easymock.tests2.CaptureTest.testCapture2_2446744":299,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":381,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":49,"org.easymock.tests.GenericTest.testBridgedEquals":341,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":513,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":57,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":38,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":138,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":15,"org.easymock.tests.UsageCallCountTest.tooManyCalls":58,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":281,"org.easymock.tests.MockingTest.testNiceClassMocking":328,"org.easymock.tests.MockingTest.testClassMocking":323,"org.easymock.tests2.UsageConstraintsTest.testContains":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":319,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":228,"org.easymock.tests2.UsageConstraintsTest.testFind":196,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":74,"org.easymock.tests.MockTypeTest.fromEasyMockClass":313,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":124,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageExpectAndReturnTest.object":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":481,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":44,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":511,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":139,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":100,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":40,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":69,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":431,"org.easymock.tests.MockClassControlTest.testHashCode":404,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":458,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":140,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":18,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":425,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":506,"org.easymock.tests.UsageVarargTest.varargCharAccepted":43,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":516,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.DefaultClassInstantiatorTest.object":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":17,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":430,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":403,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":26,"org.easymock.tests.CapturesMatcherTest.test":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":14,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":269,"org.easymock.tests2.UsageTest.resumeIfFailure":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":312,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":503,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":118,"org.easymock.tests2.StubTest.stubWithReturnValue":279,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":479,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests2.SerializationTest.testAllMockedMethod":247,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":122,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":161,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":123,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":221,"org.easymock.tests.UsageExpectAndThrowTest.object":30,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":311,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":213,"org.easymock.tests2.DelegateToTest.testWrongClass":242,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":156,"org.easymock.tests.UsageStrictMockTest.range":129,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":445,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":31,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":447,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":387,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":137,"org.easymock.tests2.CaptureTest.testCaptureNone":295,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":304,"org.easymock.tests.UsageUnorderedTest.message":75,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":48,"org.easymock.tests2.ThreadingTest.testThreadSafe":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":461,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":56,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":394,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":158,"org.easymock.tests2.CaptureTest.testCapture_2617107":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":383,"org.easymock.tests2.UsageConstraintsTest.any":203,"org.easymock.tests2.StubTest.stub":278,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":117,"org.easymock.tests.UsageExpectAndThrowTest.longType":23,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":351,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":274,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests2.SerializationTest.testClass":245,"org.easymock.tests.LimitationsTest.mockNativeMethod":121,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.tests2.NameTest.nameForMocksControl":265,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":472,"org.easymock.tests2.MockedExceptionTest.testMockedException":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":451,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":429,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":182,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":178,"org.easymock.tests.MockingTest.testNicePartialClassMocking":62,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":187,"org.easymock.tests2.CompareToTest.testNotComparable":487,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.CaptureTest.testCaptureLast":294,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":333,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":286,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":214,"org.easymock.tests.MockingTest.testTwoMocks":324,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":28,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":171,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":218,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":308,"org.easymock.samples.ExampleTest.removeNonExistingDocument":407,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests.UsageStrictMockTest.differentMethods":130,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":432,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":307,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":359,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":234,"org.easymock.tests2.MockBuilderTest.testCreateMockString":414,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":452,"org.easymock.tests.UsageExpectAndThrowTest.floatType":22,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":502,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":268,"org.easymock.samples.ExampleTest.voteAgainstRemoval":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":190,"org.easymock.tests.LimitationsTest.privateConstructor":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":510,"org.easymock.tests2.UsageConstraintsTest.testNotNull":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":111,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":226,"org.easymock.tests2.UsageTest.defaultResetToNice":170,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.UsageVarargTest.differentLength":45,"org.easymock.tests2.CallbackTest.callback":237,"org.easymock.tests2.UsageConstraintsTest.equals":424,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":489,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":419,"org.easymock.tests.UsageTest.openCallCountByLastCall":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":54,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":389,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":306,"org.easymock.tests.UsageThrowableTest.throwCheckedException":108,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":488,"org.easymock.tests.MockingTest.testStrictClassMocking":322,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":473,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":282,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":354,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":284,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":225,"org.easymock.tests.ObjectMethodsTest.testHashCode":392,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":236,"org.easymock.tests2.NameTest.nameForNiceMock":264,"org.easymock.tests2.DependencyTest.testInterfaceMocking":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":482,"org.easymock.samples.ExampleTest.addDocument":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.DelegateToTest.testStubDelegate":241,"org.easymock.tests2.AnswerTest.stubAnswer":224,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":127,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":500,"org.easymock.tests.UsageVarargTest.varargLongAccepted":47,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":102,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":248,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":438,"org.easymock.tests.UsageThrowableTest.noUpperLimit":105,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":211,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":193,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":443,"org.easymock.tests2.SerializationTest.test":246,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":292,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.tests2.UsageConstraintsTest.testSame":198,"org.easymock.samples.SupportTest.addDocument":160,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":507,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":453,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":437,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":326,"org.easymock.tests2.NameTest.nameForMock":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":501,"org.easymock.tests2.UsageStrictMockTest.differentMethods":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":420,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":34,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":67,"org.easymock.tests2.MockedExceptionTest.testRealException":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":317,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":377,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":356,"org.easymock.tests2.NameTest.nameForStrictMock":263,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":517,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":186,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":444,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":212,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":175,"org.easymock.tests2.UsageStrictMockTest.range":275,"org.easymock.tests2.UsageConstraintsTest.lessThan":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":485,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":457,"org.easymock.tests2.CaptureTest.testCaptureRightOne":297,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":303,"org.easymock.tests2.UsageConstraintsTest.testOr":199,"org.easymock.tests.UsageRangeTest.combination":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":183,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests2.MockBuilderTest.testWithConstructor":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":454,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":365,"org.easymock.tests.UsageVarargTest.varargShortAccepted":46,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":362,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":320,"org.easymock.tests2.UsageConstraintsTest.cmpTo":204,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":367,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":298,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":346,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":409,"org.easymock.tests.UsageTest.unexpectedCallWithArray":309,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":55,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":508,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":98,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":128,"org.easymock.tests2.UsageConstraintsTest.constraints":194,"org.easymock.samples.ExampleTest.addAndChangeDocument":155,"org.easymock.tests.UsageStrictMockTest.testVerify":132,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":146,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":336,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":90,"org.easymock.tests.LimitationsTest.abstractClass":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":144,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":71,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":255,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":302}}]
