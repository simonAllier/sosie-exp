[{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[28],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[29,30],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.RecordState:243","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[113,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[114,115,96,116],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[117,118,119,86,102,103],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:116","sourceCode":"try {\n    java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[124,125,126,31,32,33,34,36,37,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,14,40,151,41,42,152,43,44,45,46,47,48,49,50,51,153,154,155,156,157,158,159,160,161,162,52,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,15,16,17,188,189,18,19,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,204,53,54,55,205,206,207,208,209,210,211,212,213,214,57,58,59,60,61,62,215,216,63,64,217,65,66,67,218,68,69,70,71,72,219,220,73,221,222,74,223,224,225,226,75,227,76,77,228,120,229,230,231,232,0,1,233,2,234,3,4,235,236,237,238,239,240,241,113,242,243,6,244,245,246,247,7,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,78,79,80,81,82,83,84,263,264,265,266,267,85,86,268,87,88,269,89,270,271,272,273,274,275,276,277,278,24,25,279,280,281,282,283,26,27,284,285,286,287,288,289,8,290,9,291,292,293,294,295,296,297,10,298,299,300,301,302,303,304,305,90,306,91,92,93,94,95,96,97,98,99,100,307,101,308,102,103,104,105,106,309,107,310,311,312,313,314,108,109,315,110,111,316,112,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[89,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[125,126,134,319,14,41,16,17,18,19,214,76,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[212,220,221,222,315],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[320,321,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[322,323,74,324,120,86,325,326,269,270,92,93,327,103,116,313,314,108],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[328,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.internal.LastControl:124","failures":[275],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[125,126,41,330,76],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[41,42,76,77],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[331,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[334,335,336,337,338,74,324,120,339,326],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[126,340,341,342,343,344,41,163,166,187,190,73,76,277,285,288,302],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[204,8,290,9,291,292,293,294,295,297,10,298,299,300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[125,126,134,345,319,14,41,16,17,18,19,214,76,25,26,27],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[12,346,20,22,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[124,125,126,40,42,152,347,15,348,75,77,228,24],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Find:41","failures":[349],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[125,126,134,319,14,41,16,17,18,19,214,76,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":208,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":280,"org.easymock.tests2.StubTest.stubWithReturnValue":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":339,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":312,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":64,"org.easymock.tests2.SerializationTest.testAllMockedMethod":230,"org.easymock.tests2.DelegateToTest.testReturnException":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":122,"org.easymock.tests.MockingTest.testPartialClassMocking":31,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":22,"org.easymock.samples.SupportTest.voteForRemovals":107,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":322,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":114,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":179,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":332,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":167,"org.easymock.tests.UsageExpectAndThrowTest.object":177,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":244,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":334,"org.easymock.tests2.DelegateToTest.testWrongClass":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":53,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests2.UsageTest.wrongArguments":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":313,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":202,"org.easymock.samples.ExampleTest.answerVsDelegate":315,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":78,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":87,"org.easymock.tests2.CaptureTest.testPrimitive":291,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":166,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":201,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":50,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":11,"org.easymock.tests2.CaptureTest.testCaptureNone":296,"org.easymock.tests.UsageUnorderedTest.message":134,"org.easymock.tests.UsageVerifyTest.twoReturns":126,"org.easymock.tests.UsageVarargTest.varargByteAccepted":143,"org.easymock.tests2.ThreadingTest.testThreadSafe":303,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":137,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":194,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":165,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":268,"org.easymock.tests2.UsageConstraintsTest.any":236,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":207,"org.easymock.tests.UsageExpectAndThrowTest.longType":170,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":227,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests2.SerializationTest.testClass":120,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":55,"org.easymock.tests.ReplayStateInvalidUsageTest.times":123,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":323,"org.easymock.tests2.AnswerTest.answer":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":72,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":118,"org.easymock.tests2.UsageTest.strictResetToDefault":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":308,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":228,"org.easymock.tests2.MockedExceptionTest.testMockedException":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":36,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.DelegateToTest.testDelegate":222,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":171,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":88,"org.easymock.tests.MockingTest.testNicePartialClassMocking":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":182,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":100,"org.easymock.tests2.CompareToTest.testNotComparable":28,"org.easymock.tests2.CaptureTest.testCaptureLast":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":209,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":131,"org.easymock.tests2.CaptureTest.testCapture1_2446744":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":175,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":248,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":328,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":333,"org.easymock.tests.UsageThrowableTest.throwError":155,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":305,"org.easymock.tests2.MockBuilderTest.testCreateMockString":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":153,"org.easymock.tests.UsageExpectAndThrowTest.floatType":169,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":113,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests.UsageVerifyTest.twoThrows":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":93,"org.easymock.samples.PartialClassMockTest.testGetArea":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":44,"org.easymock.samples.ExampleTest.voteAgainstRemoval":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":341,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":38,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":103,"org.easymock.tests2.UsageTest.niceToStrict":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":168,"org.easymock.tests2.ThreadingTest.testChangeDefault":329,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":29,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":162,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":30,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":86,"org.easymock.tests2.UsageTest.defaultResetToNice":283,"org.easymock.tests2.MockBuilderTest.testCreateMock":269,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":121,"org.easymock.tests.UsageVarargTest.differentLength":140,"org.easymock.tests2.CallbackTest.callback":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":327,"org.easymock.tests.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":20,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":176,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":164,"org.easymock.tests.UsageCallCountTest.tooFewCalls":192,"org.easymock.tests.UsageOverloadedMethodTest.overloading":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":240,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":65,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":146,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":239,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":203,"org.easymock.tests.UsageThrowableTest.throwCheckedException":159,"org.easymock.tests2.EasyMockSupportClassTest.testAll":91,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":199,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":21,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":12,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":117,"org.easymock.tests2.CaptureTest.testCaptureAll":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.testMatches":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":82,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":51,"org.easymock.samples.ExampleTest.voteForRemovals":112,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":306,"org.easymock.tests.UsageVarargTest.allKinds":145,"org.easymock.tests2.DependencyTest.testInterfaceMocking":105,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":336,"org.easymock.samples.BasicClassMockTest.testPrintContent":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":130,"org.easymock.samples.ExampleTest.addDocument":316,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":161,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":225,"org.easymock.tests2.AnswerTest.stubAnswer":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":210,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":338,"org.easymock.tests2.UsageConstraintsTest.greaterThan":242,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":325,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":35,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":104,"org.easymock.tests.UsageVarargTest.varargLongAccepted":142,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":340,"org.easymock.samples.ExampleTest.voteForRemoval":110,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":71,"org.easymock.tests.UsageExpectAndReturnTest.floatType":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":314,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":243,"org.easymock.tests.UsageThrowableTest.noUpperLimit":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":277,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":232,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":154,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":293,"org.easymock.tests2.SerializationTest.test":229,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":252,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":157,"org.easymock.tests2.UsageConstraintsTest.testSame":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":58,"org.easymock.samples.SupportTest.addDocument":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":205,"org.easymock.tests2.CaptureTest.testCaptureFirst":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":253,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":285,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":216,"org.easymock.tests.GenericTest.testPackageScope":198,"org.easymock.tests2.CaptureTest.testCapture2_2446744":299,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":90,"org.easymock.tests2.UsageTest.moreThanOneArgument":24,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":89,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":196,"org.easymock.tests2.NameTest.nameForMock":115,"org.easymock.tests.UsageExpectAndReturnTest.longType":60,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":246,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":39,"org.easymock.tests2.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":61,"org.easymock.tests.UsageCallCountTest.tooManyCalls":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":37,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":191,"org.easymock.tests2.MockedExceptionTest.testRealException":274,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":63,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":345,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.testContains":238,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":273,"org.easymock.tests2.UsageConstraintsTest.testFind":233,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":321,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":276,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":149,"org.easymock.tests.UsageExpectAndReturnTest.object":217,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":85,"org.easymock.tests2.UsageStrictMockTest.range":76,"org.easymock.tests2.UsageConstraintsTest.lessThan":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":335,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":139,"org.easymock.tests.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":251,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.ConstraintsToStringTest.findToString":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":13,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":324,"org.easymock.tests.UsageRangeTest.combination":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":135,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":212,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.EasyMockSupportTest.testVerify":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":67,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":211,"org.easymock.tests.UsageVarargTest.varargShortAccepted":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":195,"org.easymock.tests2.UsageConstraintsTest.cmpTo":237,"org.easymock.tests.UsageVarargTest.varargCharAccepted":138,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":344,"org.easymock.tests2.UsageTest.openCallCountByLastCall":281,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":320,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":261,"org.easymock.tests2.CaptureTest.testCaptureFromStub":298,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":174,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":193,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":102,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":151,"org.easymock.samples.ExampleTest.addAndChangeDocument":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":173,"org.easymock.tests.CapturesMatcherTest.test":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":70,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":94,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":128,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":294,"org.easymock.tests2.UsageTest.resumeIfFailure":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":46,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":256,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":136}}]
