[{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[5],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[50,51,52,6,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[74,75,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[77,78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[79,80,44,81,82,83,84,85],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"return java.lang.Class<?>.isPrimitive() ? org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>) : null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,51,98,99,100,101,102,103,104,6,105,106,7,53,107,108,10,109,110,11,111,112,113,114,115,116,13,117,118,54,55,119,120,56,121,57,58,59,60,122,61,62,63,64,123,65,66,67,68,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,0,1,180,181,182,80,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,21,199,200,201,202,203,204,71,205,206,207,208,209,210,211,23,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,26,232,233,234,235,236,27,237,28,238,29,30,239,240,31,32,33,241,242,243,244,245,246,247,34,248,249,250,251,35,36,37,252,253,38,254,255,256,257,258,39,40,41,42,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,44,275,276,45,46,277,278,81,82,4,83,84,279,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[280,281,282],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[283,284,285,106,114,115,286,287,288,116,289,290,291,292,293,294,118,295,149,150,151,178,179,0,0,1,1,180,202,205,22,207,208,209,296,210,211,297,23,298,299,219,220,221,222,224,225,233,235,263,300,301,264,265,266,267,302,43,303,269,270,271,272,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[149,150,151,224,304],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[305,306,307,308,309,283,310,311,312,313,314,77,315,316,86,87,88,89,90,317,318,319,91,92,320,50,93,94,95,96,97,51,98,284,321,322,323,324,285,325,326,327,328,329,52,330,331,332,333,334,335,336,337,74,338,339,340,75,341,78,342,343,344,345,346,99,100,101,102,103,104,6,105,106,347,7,53,8,107,348,108,349,9,10,109,110,11,111,112,113,350,114,115,286,287,288,116,289,290,291,292,293,294,351,352,353,354,355,356,357,358,76,359,360,361,12,13,117,14,15,16,17,18,19,362,363,364,118,365,54,55,119,120,56,121,57,58,59,60,122,61,62,63,64,123,65,66,67,68,124,125,126,366,127,128,367,129,130,131,132,133,134,135,368,369,370,136,371,137,138,139,140,141,142,143,144,145,146,147,372,373,374,79,375,376,377,378,148,379,380,381,295,149,150,382,151,383,384,385,386,387,388,389,390,391,48,392,393,394,49,395,396,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,69,172,397,398,399,70,400,20,401,173,174,175,176,402,403,404,405,177,178,179,0,1,180,181,182,80,183,184,185,186,406,187,188,189,190,191,192,193,407,194,195,196,197,198,21,408,409,199,200,201,202,203,204,71,205,22,206,207,208,209,296,410,210,411,412,211,297,23,298,413,299,414,212,213,214,215,415,416,417,418,419,420,421,216,217,422,423,218,219,220,221,222,424,223,224,225,304,226,227,228,229,24,230,231,425,25,26,232,233,234,235,236,27,237,28,238,29,30,239,240,31,32,33,241,426,242,243,427,428,244,245,246,247,34,429,248,249,250,251,35,36,430,37,252,253,38,254,255,256,257,258,39,40,41,431,42,259,260,261,432,433,434,435,436,262,437,438,439,440,441,442,263,443,300,301,444,445,264,265,266,446,267,447,448,302,43,449,303,450,451,452,453,454,268,455,456,457,458,459,460,461,462,463,269,464,465,270,466,467,468,469,470,471,472,473,474,271,475,476,477,478,479,272,480,481,482,483,273,274,484,44,72,275,276,485,45,46,486,73,277,487,47,278,488,81,489,82,4,490,491,83,492,493,84,279,85],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[338,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[104,6,105,348,108,9,10,19,148,172,398,400,20,212,213,214,215,231,25,26,276,485,487,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[305,306,307,308,309,283,310,311,312,313,314,77,315,316,86,87,88,89,90,317,318,319,91,92,320,50,93,94,95,96,97,51,98,284,321,322,323,324,285,325,326,327,328,329,52,330,331,332,333,334,335,336,337,74,338,339,340,75,341,78,342,343,344,345,346,99,100,101,102,103,104,6,105,106,347,7,53,8,107,348,108,349,9,10,109,110,11,111,112,113,350,114,115,286,287,288,116,289,290,291,292,293,294,351,352,353,354,355,356,357,358,76,359,360,361,12,13,117,14,15,16,17,18,19,362,363,364,118,365,54,55,119,120,56,121,57,58,59,60,122,61,62,63,64,123,65,66,67,68,124,125,126,366,127,128,367,129,130,131,132,133,134,135,368,369,370,136,371,137,138,139,140,141,142,143,144,145,146,147,372,373,374,79,375,376,377,378,148,379,380,381,295,149,150,382,151,383,384,385,386,387,388,389,390,391,48,392,393,394,49,395,396,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,69,172,397,398,399,70,400,20,401,173,174,175,176,402,403,404,405,177,178,179,0,1,180,181,182,80,183,184,185,186,406,187,188,189,190,191,192,193,407,194,195,196,197,198,21,408,409,199,200,201,202,203,204,71,205,22,206,207,208,209,296,410,210,411,412,211,297,23,298,413,299,414,212,213,214,215,415,416,417,418,419,420,421,216,217,422,423,218,219,220,221,222,424,223,224,225,304,226,227,228,229,24,230,231,425,25,26,232,233,234,235,236,27,237,28,238,29,30,239,240,31,32,33,241,426,242,243,427,428,244,245,246,247,34,429,248,249,250,251,35,36,430,37,252,253,38,254,255,256,257,258,39,40,41,431,42,259,260,261,432,433,434,435,436,262,437,438,439,440,441,442,263,443,300,301,444,445,264,265,266,446,267,447,448,302,43,449,303,450,451,452,453,454,268,455,456,457,458,459,460,461,462,463,269,464,465,270,466,467,468,469,470,471,472,473,474,271,475,476,477,478,479,272,480,481,482,483,273,274,484,44,72,275,276,485,45,46,486,73,277,487,47,278,488,81,489,82,4,490,491,83,492,493,84,279,85],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[6,105,348,9,19,379,494,397,398,400,20,25,485,487,47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[190,192,21,247,34,249,251,35,430,39,259],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[245,257,42,495],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[348,496,497,397,498,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[318,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[6,15,16],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[306,309,283,317,318,284,323,324,285,325,326,104,6,105,8,348,108,349,9,10,109,11,289,290,291,19,362,367,142,144,145,372,373,374,375,378,148,379,69,172,397,398,400,20,401,22,211,298,299,212,213,214,215,220,221,224,225,24,231,425,25,26,232,27,28,29,30,240,31,247,256,262,437,263,300,301,266,267,302,43,303,268,455,44,72,276,485,45,46,487,47,278,488],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[500,233,234,235],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[74,75,53,76,19,54,57,62,65,67,152,158,164,168,170,172,187,191,196,197,199,216,217,422,244,245,254,257,261,44,276,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[500,233,234,235],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[296,299,263,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[280,281,282],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":34,"org.easymock.tests2.UsageTest.argumentsOrdered":47,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":336,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":46,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":181,"org.easymock.tests2.DelegateToTest.testReturnException":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":95,"org.easymock.tests.MockingTest.testPartialClassMocking":149,"org.easymock.tests.MockClassControlTest.testToString":289,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":414,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":54,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":270,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":36,"org.easymock.tests2.UsageTest.wrongArguments":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":91,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":175,"org.easymock.samples.ExampleTest.answerVsDelegate":80,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":285,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":384,"org.easymock.tests2.UsageConstraintsTest.testNull":249,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":207,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":31,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":294,"org.easymock.tests2.CaptureTest.testPrimitive":193,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":93,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":68,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":139,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":313,"org.easymock.tests.UsageVarargTest.varargIntAccepted":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":86,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":417,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":90,"org.easymock.tests.ReplayStateInvalidUsageTest.times":76,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests2.DependencyTest.testClassMocking":482,"org.easymock.tests2.AnswerTest.answer":83,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":229,"org.easymock.tests2.CaptureTest.testAnd":190,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":322,"org.easymock.tests2.UsageTest.strictResetToDefault":275,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":238,"org.easymock.tests2.DelegateToTest.testDelegate":244,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":123,"org.easymock.tests.LimitationsTest.mockFinalMethod":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":103,"org.easymock.tests2.DependencyTest.testClassMockingSupport":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":407,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":410,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":227,"org.easymock.tests.UsageThrowableTest.throwError":12,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":324,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":481,"org.easymock.samples.PartialClassMockTest.testGetArea":180,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":354,"org.easymock.tests.MockingTest.testInterfaceMocking":382,"org.easymock.tests2.CompareToTest.testLessOrEqual":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":470,"org.easymock.tests2.UsageTest.niceToStrict":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":55,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":264,"org.easymock.tests2.MockBuilderTest.testCreateMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":60,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":29,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageOverloadedMethodTest.overloading":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":163,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":347,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":38,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":366,"org.easymock.tests2.EasyMockSupportClassTest.testAll":269,"org.easymock.tests.MockClassControlTest.testEquals":293,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":115,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":66,"org.easymock.tests2.CaptureTest.testCaptureAll":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":228,"org.easymock.tests.MockNameTest.defaultName":362,"org.easymock.tests2.UsageConstraintsTest.testMatches":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":351,"org.easymock.samples.ExampleTest.voteForRemovals":186,"org.easymock.tests.UsageVarargTest.allKinds":133,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":104,"org.easymock.samples.BasicClassMockTest.testPrintContent":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":102,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":17,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":98,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":395,"org.easymock.tests2.UsageConstraintsTest.greaterThan":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":298,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":396,"org.easymock.samples.ExampleTest.voteForRemoval":183,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":413,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":296,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":106,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":237,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":94,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":426,"org.easymock.tests2.CaptureTest.testCaptureFirst":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":28,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":488,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":423,"org.easymock.tests2.CaptureTest.testCapture2_2446744":409,"org.easymock.tests2.UsageTest.moreThanOneArgument":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":78,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":132,"org.easymock.tests.GenericTest.testBridgedEquals":287,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":373,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":99,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":67,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":431,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":369,"org.easymock.tests.UsageCallCountTest.tooManyCalls":374,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":16,"org.easymock.tests.MockingTest.testNiceClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":220,"org.easymock.tests.MockingTest.testClassMocking":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":143,"org.easymock.tests2.UsageConstraintsTest.testContains":253,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":202,"org.easymock.tests2.UsageConstraintsTest.testFind":248,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":53,"org.easymock.tests.MockTypeTest.fromEasyMockClass":323,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":8,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":82,"org.easymock.tests.UsageExpectAndReturnTest.object":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":240,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":128,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":308,"org.easymock.tests.UsageTest.exactCallCountByLastCall":401,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":310,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":168,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.MockClassControlTest.testHashCode":292,"org.easymock.tests2.EasyMockSupportTest.testVerify":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":472,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":77,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":226,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":484,"org.easymock.tests.UsageVarargTest.varargCharAccepted":127,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":390,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastCall":486,"org.easymock.tests.DefaultClassInstantiatorTest.object":391,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":33,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":402,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":306,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":291,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":272,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":290,"org.easymock.tests2.UsageTest.resumeIfFailure":278,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":97,"org.easymock.tests2.StubTest.stubWithReturnValue":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":446,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":42,"org.easymock.tests2.SerializationTest.testAllMockedMethod":235,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":75,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":189,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":62,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":345,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":492,"org.easymock.tests.UsageExpectAndThrowTest.object":122,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":40,"org.easymock.tests2.DelegateToTest.testWrongClass":427,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":135,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":420,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":461,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":389,"org.easymock.tests2.CaptureTest.testCaptureNone":197,"org.easymock.tests.UsageUnorderedTest.message":19,"org.easymock.tests.UsageVerifyTest.twoReturns":105,"org.easymock.tests.UsageVarargTest.varargByteAccepted":131,"org.easymock.tests2.ThreadingTest.testThreadSafe":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":475,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":147,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":178,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageConstraintsTest.any":37,"org.easymock.tests2.StubTest.stub":204,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageExpectAndThrowTest.longType":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":344,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":394,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":357,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":425,"org.easymock.tests2.SerializationTest.testClass":233,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests.LimitationsTest.mockNativeMethod":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":171,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":452,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":232,"org.easymock.tests2.NameTest.nameForMocksControl":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests2.MockedExceptionTest.testMockedException":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":465,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":489,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":267,"org.easymock.tests.MockingTest.testNicePartialClassMocking":150,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":450,"org.easymock.tests2.CaptureTest.testCaptureLast":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":318,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":225,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":41,"org.easymock.tests.MockingTest.testTwoMocks":295,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":59,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":487,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":260,"org.easymock.samples.ExampleTest.removeNonExistingDocument":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.UsageStrictMockTest.differentMethods":10,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":392,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":422,"org.easymock.tests2.MockBuilderTest.testCreateMockString":303,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":466,"org.easymock.tests.UsageExpectAndThrowTest.floatType":119,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":491,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":271,"org.easymock.samples.ExampleTest.voteAgainstRemoval":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":23,"org.easymock.tests.LimitationsTest.privateConstructor":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":3,"org.easymock.tests2.UsageConstraintsTest.testNotNull":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":18,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":200,"org.easymock.tests2.UsageTest.defaultResetToNice":277,"org.easymock.samples.ExampleTest.voteAgainstRemovals":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":451,"org.easymock.tests.UsageVarargTest.differentLength":367,"org.easymock.tests2.CallbackTest.callback":44,"org.easymock.tests2.UsageConstraintsTest.equals":429,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":411,"org.easymock.tests.UsageTest.openCallCountByLastCall":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":320,"org.easymock.tests.UsageCallCountTest.tooFewCalls":145,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":176,"org.easymock.tests.UsageThrowableTest.throwCheckedException":15,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":497,"org.easymock.tests.MockingTest.testStrictClassMocking":380,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":224,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":221,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":223,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":85,"org.easymock.tests.ObjectMethodsTest.testHashCode":307,"org.easymock.tests2.NameTest.nameForNiceMock":214,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":273,"org.easymock.samples.ExampleTest.addDocument":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.DelegateToTest.testStubDelegate":243,"org.easymock.tests2.AnswerTest.stubAnswer":279,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":108,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":447,"org.easymock.tests.UsageVarargTest.varargLongAccepted":130,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":170,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests.UsageThrowableTest.noUpperLimit":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":258,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":246,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":415,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":194,"org.easymock.tests2.SerializationTest.test":234,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.tests2.UsageConstraintsTest.testSame":250,"org.easymock.samples.SupportTest.addDocument":188,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":424,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":467,"org.easymock.tests.GenericTest.testPackageScope":114,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":383,"org.easymock.tests2.NameTest.nameForMock":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":449,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":412,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":64,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":113,"org.easymock.tests2.MockedExceptionTest.testRealException":203,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":326,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":92,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":361,"org.easymock.tests2.NameTest.nameForStrictMock":213,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":445,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":208,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":419,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":393,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":300,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":471,"org.easymock.tests2.CaptureTest.testCaptureRightOne":21,"org.easymock.tests2.UsageConstraintsTest.testOr":251,"org.easymock.tests.UsageRangeTest.combination":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageTest.wrongArguments":398,"org.easymock.tests2.MockBuilderTest.testWithConstructor":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":468,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":328,"org.easymock.tests.UsageVarargTest.varargShortAccepted":129,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":49,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":372,"org.easymock.tests2.UsageConstraintsTest.cmpTo":252,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":52,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CaptureTest.testCaptureFromStub":408,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":352,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":301,"org.easymock.tests.UsageTest.unexpectedCallWithArray":397,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests2.UsageConstraintsTest.constraints":247,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":349,"org.easymock.samples.ExampleTest.addAndChangeDocument":187,"org.easymock.tests.UsageStrictMockTest.testVerify":110,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":177,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":100,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":88,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.LimitationsTest.abstractClass":363,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":89,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":30}}]
