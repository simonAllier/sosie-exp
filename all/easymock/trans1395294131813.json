[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[49,50,51,19],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[52,5,5,6,6,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,49,50,7,8,72,73,9,10,11,12,74,75,76,77,13,78,14,15,79,16,17,18,80,81,51,82,19,20,21,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,22,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,23,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,3,180,181,182,24,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,25,233,234,235,236,237,238,239,240,241,242,243,26,27,28,29,30,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,32,272,273,274,275,276,0,1,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,38,39,304,305,40,306,307,308,309,41,42,43,44,45,310,311,312,313,314,315,316,317,318,319,2,320,321,322,323,324,325,326,327,328,329,46,47,330,331,332,48,333,334,335,336,337],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[134,140,141,184,249,338,257,258,261,262,271,2,320,332,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[339,340,341,342,343,344,345,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[68,69,70,71,133,134,140,141,24,184,185,248,256,258,261,262,271,319,2,320,332,48,334,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[52,5,5,6,6,67,347,87,88,348,349,89,91,92,350,351,94,95,115,352,118,119,353,126,175,176,177,187,354,355,356,357],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[122,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[358,359,360,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[52,53,55,56,58,60,66,73,10,74,75,76,78,79,18,80,81,51,82,19,89,94,97,98,99,101,102,103,104,105,106,108,110,113,119,132,135,136,140,141,146,152,161,162,163,164,166,167,170,171,172,181,182,24,183,184,185,186,362,251,261,262,271,273,276,0,1,277,278,282,284,285,286,287,288,290,291,292,293,294,38,39,304,2,324,326,329,330,331,48,333,334,335,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[129,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[363,3,180,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[5,6,67,347,364,365,366,367,368,351,369,370,156,160,371,372,373,374,174,375,376,175,377,378,379,380,381,382,383,384,385,176,386,387,388,389,390,177,391,392,187],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[393,394,395,396,257,332],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[49,50,7,8,72,73,9,10,11,12,74,75,397,76,77,13,78,14,15,79,16,17,18,80,81,51,82,19,20,21,83,96,97,98,99,100,101,102,103,104,105,106,22,107,108,116,117,124,147,148,24,183,271,398,32,272,273,294,295,38,39,304,305,40,41,42,43,44,45,317,318,46,47,332,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[5,5,6,6,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[52,5,5,6,6,53,54,55,56,58,60,66,67,49,50,7,8,72,73,9,10,11,12,74,75,76,77,13,78,14,15,79,16,17,18,80,81,82,19,20,21,88,89,91,92,94,96,97,99,100,103,104,105,106,22,107,108,109,110,111,112,113,114,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,137,138,139,142,143,144,145,146,148,399,149,150,151,400,152,153,23,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,363,401,179,3,180,24,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,402,403,404,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,26,27,28,29,30,244,246,247,248,250,31,251,252,253,254,255,256,259,260,263,264,405,406,407,408,409,271,398,410,411,32,272,273,274,275,276,0,1,277,278,279,357,281,282,283,412,413,303,38,39,304,305,40,41,42,43,44,45,358,313,314,315,316,317,318,319,2,320,323,46,47,48,334,335,359,360,361],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[399,414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[110],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[67,347,368,351,415,416,417,418,419,187],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[88,93,94,95,134,140,141,142,170,184,185,420,421,249,422,338,251,257,258,261,262,271,2,320,327,328,329,332,334,335],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[52,5,5,6,6,62,63,67,87,423,88,348,89,90,91,92,93,94,424,95,109,110,112,113,114,115,116,117,118,119,120,128,154,155,156,157,159,160,425,174,175,176,177,187,189,426,230,231,232,354,355,264,279,280,357,296,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[427,75,14,21],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[356,428],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[53,54,55,56,57,58,59,60,61,64,65,66,429,68,69,70,71,49,430,50,7,8,72,73,431,9,10,11,12,74,75,397,76,77,13,78,14,15,79,16,17,18,80,81,51,82,19,20,21,83,84,85,86,96,97,98,99,100,101,102,103,104,105,106,22,107,108,111,121,122,123,124,125,126,127,128,129,432,433,434,435,436,130,437,438,439,440,441,442,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,443,444,445,446,447,148,448,449,450,451,452,453,399,149,150,151,400,152,454,455,153,23,158,371,161,162,163,164,165,166,167,168,169,170,171,172,173,178,363,401,179,3,180,181,182,24,183,184,185,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,402,403,404,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,456,457,458,25,233,234,235,236,237,238,239,240,241,242,243,26,27,28,29,30,459,460,461,462,244,245,246,247,463,248,249,362,250,464,31,251,252,253,254,255,256,257,258,259,260,261,262,263,405,406,407,408,409,265,266,267,268,269,271,398,410,411,32,272,465,273,274,275,276,0,1,277,278,281,282,283,33,466,467,468,34,35,4,469,470,471,414,472,473,474,36,475,412,476,477,37,478,479,413,480,284,285,286,481,287,288,289,290,291,292,293,294,38,39,304,305,40,306,307,308,309,41,42,43,44,45,482,358,483,484,310,311,312,485,486,313,314,315,316,317,318,319,2,320,321,322,323,324,325,326,327,328,329,46,47,330,331,332,48,333,334,335,336,337,359,360,361],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[10,51,124,294],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[356],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[488],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[489,490,491],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests2.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":414,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":136,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":61,"org.easymock.tests2.DelegateToTest.testReturnException":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":314,"org.easymock.tests.MockingTest.testPartialClassMocking":230,"org.easymock.tests.MockClassControlTest.testToString":297,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":429,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":190,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":175,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":415,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":75,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":38,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":453,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":308,"org.easymock.samples.ExampleTest.answerVsDelegate":54,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":458,"org.easymock.tests2.UsageConstraintsTest.testNull":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":170,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":302,"org.easymock.tests2.CaptureTest.testPrimitive":99,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":209,"org.easymock.tests.UsageTest.moreThanOneArgument":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":262,"org.easymock.tests.UsageVarargTest.varargIntAccepted":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":45,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":148,"org.easymock.tests.ReplayStateInvalidUsageTest.times":240,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":487,"org.easymock.tests2.AnswerTest.answer":178,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":86,"org.easymock.tests2.CaptureTest.testAnd":96,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":362,"org.easymock.tests2.CaptureTest.testCapture1_2446744":100,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":84,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":234,"org.easymock.tests.UsageThrowableTest.throwError":273,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":460,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":30,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":392,"org.easymock.samples.PartialClassMockTest.testGetArea":52,"org.easymock.tests.MockingTest.testInterfaceMocking":456,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":42,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":360,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":486,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":191,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":381,"org.easymock.tests2.ThreadingTest.testChangeDefault":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":450,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":393,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":199,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":166,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":306,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":343,"org.easymock.tests.UsageOverloadedMethodTest.overloading":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":14,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":221,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":281,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":78,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":105,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":481,"org.easymock.tests2.EasyMockSupportClassTest.testAll":174,"org.easymock.tests.MockClassControlTest.testEquals":301,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":207,"org.easymock.tests2.CaptureTest.testCaptureAll":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":267,"org.easymock.tests.MockNameTest.defaultName":465,"org.easymock.tests2.UsageConstraintsTest.testMatches":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":25,"org.easymock.samples.ExampleTest.voteForRemovals":58,"org.easymock.tests.UsageVarargTest.allKinds":294,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":319,"org.easymock.samples.BasicClassMockTest.testPrintContent":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":277,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":419,"org.easymock.tests2.UsageConstraintsTest.greaterThan":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":252,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":120,"org.easymock.samples.ExampleTest.voteForRemoval":55,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":115,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":264,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":163,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":313,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":399,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":164,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":217,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":94,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":293,"org.easymock.tests.GenericTest.testBridgedEquals":428,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":341,"org.easymock.tests.UsageExpectAndReturnTest.longType":213,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":265,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":424,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":208,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":31,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":26,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":195,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":155,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":423,"org.easymock.tests2.UsageConstraintsTest.testContains":13,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":322,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":128,"org.easymock.tests2.UsageConstraintsTest.testFind":9,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":283,"org.easymock.tests.MockTypeTest.fromEasyMockClass":459,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":330,"org.easymock.tests.UsageExpectAndReturnTest.object":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":451,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":488,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":416,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":288,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":312,"org.easymock.tests.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":345,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":406,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":347,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":226,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.MockClassControlTest.testHashCode":300,"org.easymock.tests2.EasyMockSupportTest.testVerify":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":383,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":83,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":147,"org.easymock.tests.UsageVarargTest.varargCharAccepted":287,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":480,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":172,"org.easymock.tests.DefaultClassInstantiatorTest.object":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":398,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":310,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":118,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":299,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":177,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":298,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":316,"org.easymock.tests2.StubTest.stubWithReturnValue":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":219,"org.easymock.tests2.SerializationTest.testAllMockedMethod":189,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":412,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":394,"org.easymock.samples.SupportTest.voteForRemovals":66,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":202,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":413,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":363,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":200,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.DelegateToTest.testWrongClass":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":46,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.UsageStrictMockTest.range":334,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":454,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":154,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":91,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":242,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":307,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":395,"org.easymock.tests2.CaptureTest.testCaptureNone":104,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":361,"org.easymock.tests.UsageUnorderedTest.message":271,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":420,"org.easymock.tests.UsageVerifyTest.twoReturns":320,"org.easymock.tests.UsageVarargTest.varargByteAccepted":292,"org.easymock.tests2.ThreadingTest.testThreadSafe":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":386,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":326,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":485,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":62,"org.easymock.tests2.CaptureTest.testCapture_2617107":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":305,"org.easymock.tests2.UsageConstraintsTest.any":76,"org.easymock.tests2.StubTest.stub":153,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndThrowTest.longType":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":238,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.SerializationTest.testClass":187,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests.LimitationsTest.mockNativeMethod":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":229,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":357,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests2.NameTest.nameForMocksControl":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":447,"org.easymock.tests2.MockedExceptionTest.testMockedException":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":376,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":430,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":194,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":232,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":92,"org.easymock.tests.MockingTest.testNicePartialClassMocking":231,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests2.CaptureTest.testCaptureLast":103,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":250,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":74,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.MockingTest.testTwoMocks":426,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":371,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":198,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":20,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":489,"org.easymock.samples.ExampleTest.removeNonExistingDocument":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":449,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":236,"org.easymock.tests.UsageStrictMockTest.differentMethods":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":95,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":295,"org.easymock.tests.UsageExpectAndThrowTest.floatType":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":179,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":176,"org.easymock.samples.ExampleTest.voteAgainstRemoval":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":472,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":359,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":119,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":365,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":278,"org.easymock.tests2.UsageTest.defaultResetToNice":139,"org.easymock.samples.ExampleTest.voteAgainstRemovals":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.UsageVarargTest.differentLength":289,"org.easymock.tests2.CallbackTest.callback":146,"org.easymock.tests2.UsageConstraintsTest.equals":431,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":352,"org.easymock.tests.UsageTest.openCallCountByLastCall":259,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":304,"org.easymock.tests.UsageCallCountTest.tooFewCalls":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":309,"org.easymock.tests.UsageThrowableTest.throwCheckedException":0,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":396,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":448,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":156,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":158,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":180,"org.easymock.tests2.CompareToTest.testGreateOrEqual":427,"org.easymock.tests.ObjectMethodsTest.testHashCode":311,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":125,"org.easymock.tests2.NameTest.nameForNiceMock":70,"org.easymock.tests2.DependencyTest.testInterfaceMocking":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":417,"org.easymock.samples.ExampleTest.addDocument":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.DelegateToTest.testStubDelegate":150,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":48,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":350,"org.easymock.tests.UsageVarargTest.varargLongAccepted":291,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.floatType":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":67,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":17,"org.easymock.tests.UsageThrowableTest.noUpperLimit":274,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":8,"org.easymock.tests2.SerializationTest.test":188,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":101,"org.easymock.tests2.UsageConstraintsTest.testSame":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":211,"org.easymock.samples.SupportTest.addDocument":65,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":378,"org.easymock.tests.GenericTest.testPackageScope":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":457,"org.easymock.tests2.NameTest.nameForMock":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":222,"org.easymock.tests2.UsageStrictMockTest.differentMethods":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":370,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":204,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":474,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":39,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":243,"org.easymock.tests2.NameTest.nameForStrictMock":69,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":340,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":113,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":18,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.UsageStrictMockTest.range":184,"org.easymock.tests2.UsageConstraintsTest.lessThan":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":162,"org.easymock.tests2.CaptureTest.testCaptureRightOne":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":382,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests.UsageRangeTest.combination":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":258,"org.easymock.tests2.MockBuilderTest.testWithConstructor":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":379,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":223,"org.easymock.tests.UsageVarargTest.varargShortAccepted":290,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":468,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.CaptureTest.testCaptureFromStub":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":233,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":348,"org.easymock.tests.UsageTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":325,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":224,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.samples.ExampleTest.addAndChangeDocument":60,"org.easymock.tests.UsageStrictMockTest.testVerify":337,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":64,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":266,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":102,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":44,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":167,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":285}}]
