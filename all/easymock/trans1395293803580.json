[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[49,50,51,52,53,54,55,7,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[80],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[81,8,9,82,83,14,84,30,85,86,37,87,88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[89,90,91,5,92,93,49,94,50,51,52,53,54,95,96,97,98,99,100,101,55,81,8,9,102,82,83,14,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,84,21,22,131,23,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,79,150,26,151,152,153,27,28,154,29,155,156,157,30,158,159,32,85,86,36,37,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,42,178,179,180,181,182,183,184,185,186,187,188,189,190,43,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,87,46,47,207,88,208,209,210,211,212,213,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[215,216,217,218,219,220,221],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[89,90,5,222,92,93,223,224,225,226,95,96,97,98,99,103,104,108,109,110,111,112,113,116,117,119,120,121,123,124,125,126,127,128,129,130,84,21,22,131,23,132,133,134,135,136,24,137,25,160,161,38,162,163,164,40,165,166,167,168,169,170,174,200,201,202,203,204,205,206,87,46,47,209,210,211,212,213,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[227,228,229],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,89,90,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,91,288,289,80,290,291,292,293,294,295,2,3,4,5,222,92,93,49,296,94,50,51,52,53,54,223,224,225,226,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,6,316,317,318,319,320,95,96,97,98,99,321,322,323,100,101,55,324,325,326,327,328,81,7,8,9,102,10,11,82,83,12,13,14,329,330,331,332,333,334,335,336,337,103,338,339,104,105,340,56,106,341,342,343,57,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,107,362,363,364,365,366,367,368,369,58,370,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,371,372,373,128,129,374,130,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,18,390,19,84,20,21,22,391,392,393,394,395,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,396,397,398,399,400,401,402,131,23,132,133,134,135,403,404,136,405,406,407,24,137,25,408,409,138,139,410,140,141,411,142,143,412,413,144,145,146,147,414,148,149,415,79,150,26,151,152,153,27,28,416,154,29,155,156,417,418,419,420,421,422,157,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,30,158,159,31,32,33,85,86,439,34,35,36,37,440,441,160,442,443,444,161,220,445,38,446,447,162,448,163,164,449,450,39,40,41,451,452,453,165,454,455,166,456,457,458,459,460,461,462,463,464,167,465,466,467,468,469,168,470,471,472,473,474,475,476,477,478,169,170,479,480,481,482,171,483,172,173,174,175,484,176,177,42,178,485,179,180,181,182,183,184,486,185,186,187,188,189,190,43,191,192,193,194,195,487,196,197,198,199,200,201,202,203,488,204,205,206,489,44,490,87,45,46,47,491,492,493,494,495,496,207,497,498,499,500,501,502,88,503,504,505,208,506,48,507,508,509,209,510,511,512,210,513,211,212,514,213,515,516,517,518,519,520,214],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[89,90,288,292,293,294,295,3,4,5,92,93,49,296,94,50,51,52,53,54,310,311,312,314,315,316,317,318,319,320,95,96,97,98,99,101,55,81,7,8,9,102,82,83,14,103,104,105,340,56,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,128,129,130,390,84,20,21,22,391,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,396,131,132,133,135,138,139,410,140,141,411,142,412,413,144,145,146,147,149,415,79,150,151,152,153,27,154,29,155,156,417,157,30,158,159,32,33,85,86,37,441,160,442,444,161,162,163,164,166,167,168,169,170,481,171,173,174,175,176,177,42,178,179,180,181,182,183,184,185,186,187,188,189,190,43,191,192,193,194,195,487,196,197,198,199,200,201,202,203,204,205,206,490,87,45,46,47,491,207,88,505,208,506,48,507,509,209,510,210,513,211,212,514,213,516,517,518,519,520,214],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[89,90,91,288,290,291,292,293,294,295,5,222,92,93,49,296,94,50,51,52,53,54,223,224,225,226,297,299,300,301,302,303,310,311,312,314,315,316,317,318,319,320,95,96,97,98,99,101,55,81,7,8,9,102,10,11,82,83,12,13,14,332,333,334,335,103,104,105,340,56,106,345,355,107,362,364,366,367,368,369,58,370,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,128,129,130,382,18,390,19,84,20,21,22,391,392,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,396,131,23,132,133,134,135,136,407,137,138,139,410,140,141,411,142,143,412,413,144,145,146,147,414,148,149,415,79,429,430,431,432,30,158,159,31,32,33,85,86,439,34,35,36,37,441,160,442,444,161,445,162,448,40,41,473,474,475,476,169,479,480,481,482,171,172,173,174,175,484,176,177,42,178,179,180,181,182,183,184,185,186,187,188,189,190,43,191,192,193,194,195,196,197,198,199,201,202,205,206,44,490,87,45,46,47,491,88,505,208,506,48,507,509,210,513,211,212,514,213,516],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[94,53,54,55,9,83,340,56,57,362,366,367,368,369,58,370,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,30,86,479,480,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[233,49,94,50,51,52,53,54,55,7,9,330,331,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[254,288,290,292,293,294,295,3,4,296,310,311,312,314,315,6,316,317,318,319,320,95,325,326,11,12,13,340,56,17,18,390,19,84,20,21,22,391,392,396,410,141,411,412,413,144,145,149,415,152,29,155,156,417,31,33,34,35,38,162,40,473,474,475,476,486,185,487,196,44,490,87,45,46,47,491,510,210,211,212,514,213,516,517,518,519,520,214],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[472],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[81,7,8,521,102,11,12,13,19,84,21,22,159,31,34,35,473,474,475,476,87,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[522,523,524,102,10,11,12,13,19,159,31,34,35,525,526,527,528],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[138,139,410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,260,261,262,263,264,89,90,287,91,288,289,80,290,291,292,293,294,295,2,3,4,5,222,92,93,49,296,94,50,51,52,53,54,223,224,225,226,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,6,316,317,318,319,320,95,96,97,98,99,321,322,323,100,101,55,324,325,326,327,328,81,7,8,9,102,10,11,82,83,12,13,14,329,330,331,332,333,334,335,336,337,103,338,339,104,105,340,56,106,341,342,343,57,344,345,346,529,347,348,349,350,351,352,530,353,354,355,356,357,358,359,360,361,107,362,363,364,365,366,367,368,369,58,370,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,371,372,373,128,129,374,130,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,18,390,19,84,20,21,22,391,392,393,394,395,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,396,397,400,401,402,131,23,132,133,134,135,403,404,136,405,406,407,24,137,25,408,409,138,139,410,140,141,411,142,143,412,413,144,145,146,147,414,148,149,415,79,150,26,151,152,153,27,28,416,154,29,155,156,417,418,419,420,421,422,157,423,424,425,426,427,428,429,430,431,432,30,158,159,31,32,33,85,86,439,34,35,36,37,440,441,160,442,443,444,161,220,531,445,532,38,446,533,447,162,448,163,221,164,450,39,40,534,41,451,452,453,165,454,455,166,456,457,458,459,460,461,462,463,464,167,465,466,467,468,469,168,470,471,472,473,474,475,476,477,478,169,170,479,480,481,482,171,172,173,174,175,484,176,177,42,178,485,179,180,181,182,183,184,486,185,186,187,188,189,190,43,191,192,193,194,195,487,196,197,198,199,200,201,202,203,204,205,206,44,490,87,45,46,47,491,492,493,494,495,496,207,497,498,499,500,501,502,88,503,504,505,208,506,48,507,508,509,209,510,511,511,512,512,210,513,211,212,514,213,515,516,517,518,519,520,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[89,90,91,288,290,292,293,294,295,3,4,5,222,92,93,49,296,94,50,51,52,53,54,310,311,312,314,315,6,316,317,318,319,320,95,96,97,98,99,100,101,55,325,326,81,7,8,9,102,11,82,83,12,13,14,103,104,105,340,56,106,341,343,57,345,107,362,58,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,128,129,130,18,390,19,84,20,21,22,391,392,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,396,131,23,132,133,134,135,136,24,137,25,138,139,410,140,141,411,142,143,412,413,144,145,146,147,148,149,415,79,150,26,151,152,153,27,28,416,154,29,155,156,417,157,30,158,159,31,32,33,85,86,439,34,35,36,37,441,160,442,444,161,38,162,163,164,40,165,166,167,168,473,474,475,476,169,170,481,171,172,173,174,175,176,177,42,178,179,180,181,182,183,184,486,185,186,187,188,189,190,43,191,192,193,194,195,487,196,197,198,199,200,201,202,203,204,205,206,44,490,87,45,46,47,491,207,88,505,208,506,48,507,509,209,510,210,513,211,212,514,213,516,517,518,519,520,214],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[535],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[246,252,254,255,256,89,90,91,289,292,5,222,92,93,49,296,94,50,51,52,53,54,223,224,225,226,297,299,300,301,302,303,320,95,96,97,98,99,322,100,101,55,324,325,326,327,328,81,7,8,9,102,10,11,82,83,12,13,14,329,330,331,332,333,334,335,103,339,104,105,340,56,106,341,342,343,57,344,345,346,107,362,363,364,366,367,368,369,58,370,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,373,128,129,130,18,19,84,20,21,22,391,393,394,395,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,396,131,23,132,133,134,135,403,136,407,24,137,25,138,139,140,141,411,142,143,412,413,144,145,146,147,414,148,149,415,79,150,26,151,152,153,27,28,416,154,29,155,156,157,429,430,431,432,30,158,159,31,32,33,85,86,439,34,35,36,37,440,441,160,442,443,444,161,445,38,162,448,163,164,39,40,41,165,166,167,168,169,170,479,480,481,482,171,172,173,174,175,176,177,42,178,179,180,181,182,183,184,486,185,186,187,188,189,190,43,191,192,193,194,195,487,196,197,198,199,200,201,202,203,204,205,206,44,87,45,46,47,491,207,88,503,504,505,208,506,48,507,509,209,511,511,512,512,210,513,211,212,213,516,214],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[215,216,217,218,219,220,221],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[407],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[536,138,139,410],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[343,441,442,444,513],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[348,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[96,103,128,129,130,131,132,133,135,160,161,38,162,163,164,40,165,166,167,168,174,200,201,202,203,204,205,206,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[237,362,366,367,368,369,58,370,393,394,395,479,480,481,482],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[184,189,199,537],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[81,7,8,102,11,12,13,345,17,19,84,21,22,159,31,34,35,473,474,475,476,87,46,47],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":178,"org.easymock.tests2.UsageTest.argumentsOrdered":35,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":240,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":33,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":510,"org.easymock.tests2.DelegateToTest.testReturnException":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":367,"org.easymock.tests.MockingTest.testPartialClassMocking":128,"org.easymock.tests.MockClassControlTest.testToString":356,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":472,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":59,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":521,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":170,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":104,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":334,"org.easymock.samples.ExampleTest.answerVsDelegate":513,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":262,"org.easymock.tests2.UsageConstraintsTest.testNull":180,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":133,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":29,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":361,"org.easymock.tests2.CaptureTest.testPrimitive":142,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":106,"org.easymock.tests.UsageTest.moreThanOneArgument":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":78,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":324,"org.easymock.tests.UsageVarargTest.varargIntAccepted":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":501,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":99,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":270,"org.easymock.tests.ReplayStateInvalidUsageTest.times":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests2.DependencyTest.testClassMocking":477,"org.easymock.tests2.AnswerTest.answer":88,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":432,"org.easymock.tests2.CaptureTest.testAnd":140,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":259,"org.easymock.tests2.UsageTest.strictResetToDefault":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":533,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":92,"org.easymock.tests2.DelegateToTest.testDelegate":444,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":328,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":74,"org.easymock.tests.LimitationsTest.mockFinalMethod":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":303,"org.easymock.tests2.DependencyTest.testClassMockingSupport":478,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":363,"org.easymock.tests2.CaptureTest.testCapture1_2446744":143,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":430,"org.easymock.tests.UsageThrowableTest.throwError":49,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":380,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":261,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":502,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":273,"org.easymock.samples.PartialClassMockTest.testGetArea":209,"org.easymock.tests.MockingTest.testInterfaceMocking":374,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":381,"org.easymock.tests2.CompareToTest.testLessOrEqual":535,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":460,"org.easymock.tests2.UsageTest.niceToStrict":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":60,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":309,"org.easymock.tests2.ThreadingTest.testChangeDefault":483,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":230,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":162,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":467,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":425,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":525,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":68,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":27,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":332,"org.easymock.tests.UsageOverloadedMethodTest.overloading":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":189,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":119,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":100,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":188,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":146,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":313,"org.easymock.tests2.EasyMockSupportClassTest.testAll":165,"org.easymock.tests.MockClassControlTest.testEquals":360,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":288,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":526,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":431,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":301,"org.easymock.tests.MockNameTest.defaultName":298,"org.easymock.tests2.UsageConstraintsTest.testMatches":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":378,"org.easymock.samples.ExampleTest.voteForRemovals":213,"org.easymock.tests.UsageVarargTest.allKinds":320,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":81,"org.easymock.samples.BasicClassMockTest.testPrintContent":518,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":302,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":53,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":498,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":370,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":530,"org.easymock.tests2.UsageConstraintsTest.greaterThan":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":274,"org.easymock.samples.ExampleTest.voteForRemoval":211,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":408,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":403,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":266,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":396,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":151,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":366,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":440,"org.easymock.tests2.CaptureTest.testCaptureFirst":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":152,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":37,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":115,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":159,"org.easymock.tests2.CaptureTest.testCapture2_2446744":148,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":248,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":319,"org.easymock.tests.GenericTest.testBridgedEquals":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":3,"org.easymock.tests.UsageExpectAndReturnTest.longType":111,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":299,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":77,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":487,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.UsageCallCountTest.tooManyCalls":4,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":52,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":201,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":372,"org.easymock.tests2.UsageConstraintsTest.testContains":187,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":291,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":481,"org.easymock.tests2.UsageConstraintsTest.testFind":179,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":55,"org.easymock.tests.MockTypeTest.fromEasyMockClass":260,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":509,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":18,"org.easymock.tests.UsageExpectAndReturnTest.object":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":216,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":315,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":307,"org.easymock.tests.UsageTest.exactCallCountByLastCall":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":321,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":325,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":524,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":124,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":310,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":493,"org.easymock.tests.MockClassControlTest.testHashCode":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":462,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":429,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":0,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":484,"org.easymock.tests.UsageVarargTest.varargCharAccepted":314,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":529,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":253,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":227,"org.easymock.tests.DefaultClassInstantiatorTest.object":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":329,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":305,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":463,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":492,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":272,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":125,"org.easymock.tests.ReplayStateInvalidCallsTest.times":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":393,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":168,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":357,"org.easymock.tests2.UsageTest.resumeIfFailure":36,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":257,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":369,"org.easymock.tests2.StubTest.stubWithReturnValue":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":196,"org.easymock.tests2.SerializationTest.testAllMockedMethod":410,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":246,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":527,"org.easymock.samples.SupportTest.voteForRemovals":214,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":495,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":71,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":536,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":252,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":503,"org.easymock.tests.UsageExpectAndThrowTest.object":69,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":323,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":194,"org.easymock.tests2.DelegateToTest.testWrongClass":442,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":89,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":276,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":90,"org.easymock.samples.ConstructorCalledMockTest.testTax":511,"org.easymock.tests.UsageStrictMockTest.range":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":401,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":451,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":522,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":268,"org.easymock.tests2.CaptureTest.testCaptureNone":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":256,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":434,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":15,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":318,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":465,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":295,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":517,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":308,"org.easymock.tests2.CaptureTest.testCapture_2617107":411,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":528,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":365,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":250,"org.easymock.tests2.UsageConstraintsTest.any":185,"org.easymock.tests2.StubTest.stub":415,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":385,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.UsageExpectAndThrowTest.longType":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":368,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":351,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":384,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.SerializationTest.testClass":138,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":127,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":284,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":491,"org.easymock.tests2.NameTest.nameForMocksControl":476,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":435,"org.easymock.tests2.MockedExceptionTest.testMockedException":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":455,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":508,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":63,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":164,"org.easymock.tests.MockingTest.testNicePartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests2.CaptureTest.testCaptureLast":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":364,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":206,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":283,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":195,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":280,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":67,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":198,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":438,"org.easymock.samples.ExampleTest.removeNonExistingDocument":515,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":424,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":494,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":437,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":349,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":456,"org.easymock.tests.UsageExpectAndThrowTest.floatType":61,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":505,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":531,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":167,"org.easymock.samples.ExampleTest.voteAgainstRemoval":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":254,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":137,"org.easymock.tests.LimitationsTest.privateConstructor":337,"org.easymock.tests2.UsageConstraintsTest.testNotNull":197,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":479,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":54,"org.easymock.tests2.UsageTest.defaultResetToNice":439,"org.easymock.samples.ExampleTest.voteAgainstRemovals":210,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests.UsageVarargTest.differentLength":6,"org.easymock.tests2.CallbackTest.callback":48,"org.easymock.tests2.UsageConstraintsTest.equals":485,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":405,"org.easymock.tests.UsageTest.openCallCountByLastCall":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":340,"org.easymock.tests.UsageCallCountTest.tooFewCalls":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":335,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":436,"org.easymock.tests.UsageThrowableTest.throwCheckedException":51,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":523,"org.easymock.tests.MockingTest.testStrictClassMocking":371,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":423,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":202,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":204,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":506,"org.easymock.tests2.CompareToTest.testGreateOrEqual":537,"org.easymock.tests.ObjectMethodsTest.testHashCode":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":218,"org.easymock.tests2.NameTest.nameForNiceMock":475,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":282,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":277,"org.easymock.tests2.DependencyTest.testInterfaceMocking":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":217,"org.easymock.samples.ExampleTest.addDocument":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.DelegateToTest.testStubDelegate":160,"org.easymock.tests2.AnswerTest.stubAnswer":208,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":84,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":449,"org.easymock.tests.UsageVarargTest.varargLongAccepted":317,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":126,"org.easymock.tests.UsageExpectAndReturnTest.floatType":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":161,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":512,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":500,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":192,"org.easymock.tests.UsageThrowableTest.noUpperLimit":296,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":177,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":397,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":412,"org.easymock.tests2.SerializationTest.test":139,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":348,"org.easymock.tests2.UsageConstraintsTest.testSame":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":109,"org.easymock.samples.SupportTest.addDocument":520,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":488,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":267,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":457,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":234,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":499,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":265,"org.easymock.tests2.NameTest.nameForMock":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":534,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":73,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":93,"org.easymock.tests2.MockedExceptionTest.testRealException":482,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":244,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":243,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":105,"org.easymock.tests2.NameTest.nameForStrictMock":474,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":447,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":507,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":400,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":193,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":350,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":38,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":271,"org.easymock.tests2.UsageConstraintsTest.lessThan":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":496,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":461,"org.easymock.tests2.CaptureTest.testCaptureRightOne":147,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":433,"org.easymock.tests2.UsageConstraintsTest.testOr":182,"org.easymock.tests.UsageRangeTest.combination":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":532,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":458,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":231,"org.easymock.tests.UsageVarargTest.varargShortAccepted":316,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":352,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":2,"org.easymock.tests2.UsageConstraintsTest.cmpTo":186,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":285,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":504,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":233,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":414,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":379,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":446,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.constraints":42,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":20,"org.easymock.samples.ExampleTest.addAndChangeDocument":516,"org.easymock.tests.UsageStrictMockTest.testVerify":392,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":519,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":390,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":300,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":114,"org.easymock.tests.LimitationsTest.abstractClass":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":98,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":28,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":311}}]
