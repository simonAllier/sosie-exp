[{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MocksControl:136","failures":[3,4,5,6,6,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[113,114,115,116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[118,119,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[150,151,152,153,154],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[107,111],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[50,155,51,156],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[157,158,159,160,161,162,163,164,165,166,3,4,167,168,5,6,7,8,9,10,169,11,12,170,171,172,173,174,175,176,177,178,179,180,181,13,14,182,183,15,16,17,18,184,185,19,20,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,123,201,124,125,202,203,204,205,206,207,208,209,210,126,211,212,213,214,215,216,217,218,219,220,221,222,223,21,22,23,24,224,225,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,226,227,228,229,230,231,232,233,0,234,235,236,237,238,239,240,241,242,243,244,245,246,114,247,248,249,250,251,252,115,253,254,255,256,116,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,1,273,274,275,276,277,278,279,2,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,50,155,51,296,118,297,298,119,120,52,53,54,55,56,57,58,59,299,60,61,62,63,64,65,300,66,67,68,69,301,70,71,72,73,74,75,76,77,78,302,303,304,305,306,307,308,309,310,311,312,313,314,315,79,80,81,82,83,84,316,317,318,319,85,320,321,322,323,324,325,326,327,328,133,134,135,136,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,137,356,138,139,357,358,359,140,360,361,362,363,364,365,366,86,87,88,89,367,368,369,370,371,372,90,373,374,375,376,377,378,379,380,381,382,383,384,117,385,386,387,388,389,390,144,391,392,145,146,147,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,91,92,93,94,95,475,96,476,477,97,478,479,480,481,482,483,484,485,486,98,99,100,101,102,103,104,105,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,106,107,108,109,110,111,112,148,149,520],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[228,229],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[124,211,217,218,133,135,136,355,138,360,361,364,365,143,147],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[158,159,160,161,162,163,165,8,9,10,169,11,182,16,17,19,20,199,200,123,201,124,125,202,203,204,205,206,207,208,209,210,126,211,212,213,214,215,216,217,218,219,220,222,223,226,228,229,230,231,232,233,0,234,236,237,238,239,240,241,243,244,245,246,114,247,248,249,250,251,252,115,254,255,256,116,258,259,260,261,262,264,266,267,268,270,271,272,1,273,274,275,276,277,278,279,2,280,281,282,50,155,51,296,298,119,120,52,56,57,62,63,64,65,300,66,67,68,70,73,75,303,304,305,306,307,308,309,310,311,312,80,81,322,323,324,325,326,327,328,133,134,135,136,353,354,355,137,356,138,139,357,358,359,140,360,361,362,363,364,365,366,88,367,368,369,370,371,372,90,383,146,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,428,429,430,431,432,434,435,437,438,439,440,441,443,444,445,446,447,448,449,450,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,94,95,96,478,479,480,481,482,483,99,490,491,492,493,494,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[79,83],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[11,150,521,522,523,151,152,524],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[525,249],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[526,271,1,273,274,275,276,277,279,527,2,280,282],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[157,158,159,160,161,162,163,165,166,3,4,167,168,5,10,11,175,182,183,15,16,17,18,185,19,20,192,200,123,201,124,125,202,208,209,210,211,212,213,217,218,220,28,31,41,47,230,231,234,237,240,241,243,244,246,248,251,252,115,253,254,255,266,268,270,271,272,1,273,275,276,277,278,279,2,282,283,284,285,286,287,288,289,291,292,293,294,295,50,155,51,296,298,56,58,59,64,65,300,66,67,68,70,75,302,303,309,80,81,133,135,136,354,355,137,356,138,139,357,361,364,365,366,88,90,390,391,392,146,393,394,395,396,405,406,408,413,418,430,431,432,434,435,437,438,439,440,441,443,444,445,446,447,448,449,450,454,455,457,462,467,94,95,96,481,482,483,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[123,230,232,233,0,234,236,237,238,239,240,241,242,243,244,245,246,114,247,248,249,250,251,252,115,253,254,255,256,116,262,264,271,272,1,273,274,275,276,277,278,279,2,280,281,282,70,327,328,133,355,137,371,393,394,395,396,397,398,399,400,401,402,428,429,441],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[265,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:104","sourceCode":"java.lang.StringBuffer.append(org.easymock.internal.Invocation.getMockAndMethodName())","type":"CtInvocationImpl"},"failures":[123,124,125,126,211,217,218,258,259,260,261,133,134,135,136,355,137,138,139,140,361,364,365,148,149],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[423],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":234,"org.easymock.tests2.UsageTest.argumentsOrdered":218,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":339,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":157,"org.easymock.tests2.DelegateToTest.testReturnException":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":368,"org.easymock.tests.MockingTest.testPartialClassMocking":94,"org.easymock.tests.MockClassControlTest.testToString":100,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":257,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":452,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":516,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":521,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":393,"org.easymock.tests2.UsageTest.wrongArguments":211,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":307,"org.easymock.samples.ExampleTest.answerVsDelegate":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":85,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":477,"org.easymock.tests2.UsageConstraintsTest.testNull":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":66,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":292,"org.easymock.tests2.CaptureTest.testPrimitive":273,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":397,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":471,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":492,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":423,"org.easymock.tests.UsageTest.argumentsOrdered":365,"org.easymock.tests.UsageVarargTest.varargIntAccepted":432,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":398,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":197,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":402,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":500,"org.easymock.tests.ReplayStateInvalidUsageTest.times":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.DependencyTest.testClassMocking":13,"org.easymock.tests2.AnswerTest.answer":296,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":207,"org.easymock.tests2.CaptureTest.testAnd":271,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":317,"org.easymock.tests2.UsageTest.strictResetToDefault":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":311,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":427,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":467,"org.easymock.tests.LimitationsTest.mockFinalMethod":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":371,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":326,"org.easymock.tests2.DependencyTest.testClassMockingSupport":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":148,"org.easymock.tests2.CaptureTest.testCapture1_2446744":274,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":205,"org.easymock.tests.UsageThrowableTest.throwError":443,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":319,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":49,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":503,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.MockingTest.testInterfaceMocking":475,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":399,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":473,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":36,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":378,"org.easymock.tests2.ThreadingTest.testChangeDefault":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":56,"org.easymock.tests2.MockBuilderTest.testCreateMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":178,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":461,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":128,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":305,"org.easymock.tests.UsageOverloadedMethodTest.overloading":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":40,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":414,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":121,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":246,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":279,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":433,"org.easymock.tests.MockClassControlTest.testEquals":104,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":469,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":206,"org.easymock.tests2.CaptureTest.testCaptureAll":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":324,"org.easymock.tests.MockNameTest.defaultName":442,"org.easymock.tests2.UsageConstraintsTest.testMatches":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":493,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":379,"org.easymock.samples.ExampleTest.voteForRemovals":163,"org.easymock.tests.UsageVarargTest.allKinds":441,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":134,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":325,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":449,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":194,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":524,"org.easymock.tests2.UsageConstraintsTest.greaterThan":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":310,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":504,"org.easymock.samples.ExampleTest.voteForRemoval":160,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":77,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":69,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":496,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":90,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":285,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":367,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":265,"org.easymock.tests2.CaptureTest.testCaptureFirst":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":286,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":410,"org.easymock.tests2.UsageTest.moreThanOneArgument":126,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":230,"org.easymock.tests2.CaptureTest.testCapture2_2446744":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":347,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":440,"org.easymock.tests.GenericTest.testBridgedEquals":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":485,"org.easymock.tests.UsageExpectAndReturnTest.longType":406,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":470,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":451,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":468,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":518,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":490,"org.easymock.tests.UsageCallCountTest.tooManyCalls":486,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":457,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":448,"org.easymock.tests.MockingTest.testNiceClassMocking":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":16,"org.easymock.tests.MockingTest.testClassMocking":92,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":479,"org.easymock.tests2.UsageConstraintsTest.testContains":245,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":10,"org.easymock.tests2.UsageConstraintsTest.testFind":236,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":304,"org.easymock.tests.MockTypeTest.fromEasyMockClass":318,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":264,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests.UsageExpectAndReturnTest.object":413,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":522,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":435,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":376,"org.easymock.tests.UsageTest.exactCallCountByLastCall":366,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":487,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":424,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":430,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":188,"org.easymock.tests.MockClassControlTest.testHashCode":103,"org.easymock.tests2.EasyMockSupportTest.testVerify":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":38,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":425,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":203,"org.easymock.tests.UsageVarargTest.varargCharAccepted":434,"org.easymock.tests2.CaptureTest.testCaptureMultiple":526,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastCall":214,"org.easymock.tests.DefaultClassInstantiatorTest.object":106,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":294,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":313,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":374,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":173,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":187,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":502,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":458,"org.easymock.tests.ReplayStateInvalidCallsTest.times":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":420,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":517,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":509,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":130,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":370,"org.easymock.tests2.StubTest.stubWithReturnValue":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":345,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":154,"org.easymock.samples.SupportTest.voteForRemovals":168,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":464,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":156,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":351,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":118,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":489,"org.easymock.tests.UsageExpectAndThrowTest.object":462,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":252,"org.easymock.tests2.DelegateToTest.testWrongClass":268,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":506,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":328,"org.easymock.tests.UsageStrictMockTest.range":138,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":224,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":463,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":25,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":306,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":498,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":474,"org.easymock.tests2.CaptureTest.testCaptureNone":278,"org.easymock.tests.UsageUnorderedTest.message":133,"org.easymock.tests.UsageVerifyTest.twoReturns":136,"org.easymock.tests.UsageVarargTest.varargByteAccepted":439,"org.easymock.tests2.ThreadingTest.testThreadSafe":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":42,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":483,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":377,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":520,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":349,"org.easymock.tests2.UsageConstraintsTest.any":243,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":385,"org.easymock.tests2.StubTest.stub":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":519,"org.easymock.tests.UsageExpectAndThrowTest.longType":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":369,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":110,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":117,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":192,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":422,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":172,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":514,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests2.NameTest.nameForMocksControl":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":174,"org.easymock.tests2.MockedExceptionTest.testMockedException":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":30,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":456,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":96,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":263,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":59,"org.easymock.tests.MockingTest.testNicePartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":68,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":150,"org.easymock.tests2.CaptureTest.testCaptureLast":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":149,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":513,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":20,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":240,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":115,"org.easymock.tests.MockingTest.testTwoMocks":93,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":510,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":460,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":256,"org.easymock.samples.ExampleTest.removeNonExistingDocument":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":177,"org.easymock.tests.UsageStrictMockTest.differentMethods":139,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":189,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":108,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":221,"org.easymock.tests2.ConstraintsToStringTest.andToString":131,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":229,"org.easymock.tests2.MockBuilderTest.testCreateMockString":63,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":98,"org.easymock.tests.UsageExpectAndThrowTest.floatType":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":32,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":298,"org.easymock.tests.UsageVerifyTest.twoThrows":135,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":161,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests.LimitationsTest.privateConstructor":87,"org.easymock.tests2.UsageConstraintsTest.testNotNull":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":450,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":8,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.samples.ExampleTest.voteAgainstRemovals":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":341,"org.easymock.tests.UsageVarargTest.differentLength":436,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":171,"org.easymock.tests2.CallbackTest.callback":208,"org.easymock.tests2.UsageConstraintsTest.equals":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":71,"org.easymock.tests.UsageTest.openCallCountByLastCall":362,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":395,"org.easymock.tests.UsageCallCountTest.tooFewCalls":481,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":308,"org.easymock.tests.UsageThrowableTest.throwCheckedException":447,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":141,"org.easymock.tests.MockingTest.testStrictClassMocking":91,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":429,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":17,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":185,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":120,"org.easymock.tests.ObjectMethodsTest.testHashCode":375,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":151,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":512,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":231,"org.easymock.tests2.NameTest.nameForNiceMock":260,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":507,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":523,"org.easymock.samples.ExampleTest.addDocument":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.DelegateToTest.testStubDelegate":267,"org.easymock.tests2.AnswerTest.stubAnswer":119,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":137,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":438,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":421,"org.easymock.tests.UsageExpectAndReturnTest.floatType":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.tests2.ConstraintsToStringTest.orToString":127,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests.UsageThrowableTest.noUpperLimit":444,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":196,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":250,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":233,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":21,"org.easymock.tests2.SerializationTest.test":155,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":275,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":122,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":404,"org.easymock.tests2.UsageConstraintsTest.testSame":238,"org.easymock.samples.SupportTest.addDocument":167,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":184,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":33,"org.easymock.tests.GenericTest.testPackageScope":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":195,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":476,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":495,"org.easymock.tests2.NameTest.nameForMock":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":415,"org.easymock.tests2.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":466,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":312,"org.easymock.tests2.MockedExceptionTest.testRealException":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":321,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":153,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":394,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":389,"org.easymock.tests2.NameTest.nameForStrictMock":259,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":55,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":24,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":109,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":53,"org.easymock.tests2.UsageStrictMockTest.range":124,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":501,"org.easymock.tests2.UsageConstraintsTest.lessThan":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":191,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":37,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.UsageConstraintsTest.testOr":239,"org.easymock.tests.UsageRangeTest.combination":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageTest.wrongArguments":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":34,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.varargShortAccepted":437,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":111,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":484,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":515,"org.easymock.tests2.UsageConstraintsTest.cmpTo":244,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":297,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":505,"org.easymock.tests2.CompareToTest.testLessThan":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":380,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":54,"org.easymock.tests.UsageTest.unexpectedCallWithArray":360,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":511,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":417,"org.easymock.tests2.CaptureTest.testCapture":527,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":356,"org.easymock.samples.ExampleTest.addAndChangeDocument":165,"org.easymock.tests2.ConstraintsToStringTest.notToString":129,"org.easymock.tests.UsageStrictMockTest.testVerify":358,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":166,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":354,"org.easymock.tests2.CompareToTest.testGreateThan":525,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":323,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":400,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":409,"org.easymock.tests.LimitationsTest.abstractClass":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":401,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":289}}]
