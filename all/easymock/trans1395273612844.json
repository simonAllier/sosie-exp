[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:542","sourceCode":"org.easymock.IMocksControl.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[77,78,79,80,81,82,1,2,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,77,78,97,98,99,100,79,80,101,81,102,103,104,105,106,107,108,109,110,82,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,13,128,129,130,14,15,131,16,132,133,17,134,135,18,19,136,20,21,22,23,137,24,138,25,26,27,28,29,30,31,139,140,141,142,32,143,144,33,34,35,145,146,147,148,36,149,150,37,151,152,153,154,155,156,157,158,159,38,160,161,162,163,164,39,165,166,40,167,41,42,168,43,44,45,46,169,47,170,171,48,49,172,50,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,51,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,1,246,2,3,4,5,6,7,247,8,10,11,248,12,52,249,250,251,252,253,254,53,54,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,55,56,57,58,59,277,60,278,279,61,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,62,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,63,64,65,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,66,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,67,405,406,407,408,68,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,69,70,71,72,73,74,75,76,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[88,95,96,77,78,98,99,100,79,80,101,102,103,104,105,106,107,108,109,110,82,111,112,113,114,115,116,117,118,121,122,123,124,126,128,129,130,14,15,131,16,133,17,134,18,19,136,20,21,22,23,24,26,27,28,29,33,34,35,145,36,37,38,39,40,41,44,45,46,47,48,49,50,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,51,190,191,192,193,194,195,196,197,203,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,228,229,231,234,235,236,237,238,239,240,1,246,2,3,4,5,6,7,247,8,10,11,248,12,52,249,250,251,252,253,254,53,54,255,256,257,258,259,260,262,263,264,265,267,268,269,270,271,272,273,274,275,276,58,59,60,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,312,313,314,315,316,317,318,322,323,324,325,326,327,328,329,330,331,62,339,341,342,345,346,347,348,349,350,351,352,353,63,64,361,362,66,382,383,384,385,386,387,388,389,392,393,394,395,396,397,398,399,400,401,403,404,411,412,413,414,415,440,441,442,443,444,447,448,449,450,451,452,453,454,455,456,490,490,457,458,459,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,486,487,488,489],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[88,95,96,77,78,98,99,100,79,80,101,102,103,104,105,106,107,108,109,110,82,111,112,113,114,115,116,117,118,126,129,130,14,15,131,16,133,17,134,18,19,136,20,21,22,24,27,28,29,35,36,37,38,39,41,44,46,47,49,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,192,194,195,197,203,210,211,212,214,216,217,218,221,222,224,225,226,228,234,235,236,237,238,239,240,1,246,2,3,4,7,247,8,10,248,12,52,254,255,256,257,258,260,275,276,57,58,59,60,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,317,319,320,322,323,324,325,326,62,339,341,342,344,346,348,349,350,351,352,353,63,361,362,385,387,388,392,393,396,397,400,401,402,403,404,432,440,441,444,445,454,455,456,457,458,459,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[365,366,367,368,370,372],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"clazz","throwableClass":"clazz"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[23,31,33,40,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.Injector:207","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[369,491,492],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[95,96,77,78,98,99,100,79,80,101,102,103,104,105,106,107,108,109,110,82,111,112,113,114,115,116,117,118,121,122,123,124,125,126,128,129,130,15,131,17,134,18,19,136,20,21,22,23,24,25,26,27,28,29,30,140,141,142,32,144,33,34,35,145,40,41,42,43,44,45,48,49,50,173,174,188,189,51,190,191,192,193,194,195,196,197,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,228,229,231,234,236,237,238,239,240,242,243,244,245,1,246,2,3,4,5,6,7,247,8,10,11,248,12,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,55,56,58,59,277,60,278,279,61,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,62,339,340,341,342,344,345,346,347,348,349,350,351,352,353,63,64,361,362,365,377,378,379,66,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,67,407,408,68,409,410,411,412,413,414,415,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,69,70,71,72,73,74,75,76,457,458,459,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,486,487,488,489],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[493,494,495],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[86,87,88,89,90,92,93,201,202,203,204,205,207,208,249,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[27,28,496,497,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[221,402,404,433],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[302,431,438],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[108,21],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[79,102,192,246,7,247,12,275,276,312,317,322,323,324,325,326,361,362,385,440,441,442,443,444],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[346,349],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[118,14,15,131,16,17,134,18,19,20,21,22,23,24,26,27,28,29,31,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,188,51,52,250,250,251,251,53,54,57,58,59,60,62,63,64,65,381,66,67,68,70,71,72,73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[224,226,227,228,256,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[113,115,229,231],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[44,500],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[88,95,96,77,78,98,99,100,79,80,101,81,102,103,104,105,106,107,108,109,110,82,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,13,128,129,130,14,15,131,16,133,17,134,18,19,136,20,21,22,23,24,26,27,28,29,33,34,35,145,36,37,38,39,40,41,44,45,46,47,48,49,50,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,51,190,191,192,193,194,195,196,197,203,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,234,235,236,237,238,239,240,242,243,244,245,1,246,2,3,4,5,6,7,247,8,10,11,248,12,52,249,250,250,251,251,252,253,254,53,54,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,57,58,59,60,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,62,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,63,64,65,356,357,358,359,360,361,362,365,374,377,378,379,66,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,411,412,413,414,415,432,438,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,69,70,71,72,73,74,75,76,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[77,78,79,80,81,82,1,2,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[78,109,28,29,44,50,177,181,184,195,197,213,215,216,220,243,245,270,313,345,388,390,393,399,401,446,448,453,458,459],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[118,121,48,236],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[113,115,229,231],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[46,68],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[188,189,51,501],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:557","failures":[88,95,96,77,78,98,99,100,79,80,101,102,103,104,105,106,107,108,109,110,82,111,112,114,115,116,117,118,126,127,13,128,129,130,14,15,131,16,133,17,134,18,19,136,20,21,22,24,27,28,29,33,34,35,145,36,37,38,39,41,44,46,47,49,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,192,194,195,197,203,210,211,212,214,216,217,218,221,222,223,224,225,226,227,228,229,231,234,235,236,237,238,239,240,1,246,3,4,7,247,8,10,11,248,12,52,250,250,251,251,254,255,256,257,258,260,262,275,276,58,59,60,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,312,313,314,315,316,317,318,320,322,323,324,325,326,327,328,329,330,331,332,333,334,62,338,339,341,342,344,346,347,348,349,350,351,352,353,63,65,356,357,358,359,360,361,362,374,66,385,387,388,392,393,396,397,400,401,402,403,404,432,438,440,441,442,443,444,447,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[194,213,219,220,312,345,384,387,394,395,398,399,458,459,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[44,46,47,500,52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[88,95,96,77,78,98,99,100,79,80,101,102,103,104,105,106,107,108,109,110,82,111,112,113,114,115,116,117,118,126,128,129,14,15,131,16,133,17,134,18,19,136,20,21,22,24,28,35,36,37,38,39,44,46,47,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,51,191,192,193,194,195,196,197,203,210,211,212,213,214,215,216,217,219,220,221,222,224,225,226,228,229,231,234,235,236,237,238,239,240,1,246,2,3,4,5,6,7,247,8,10,248,12,52,249,252,253,254,53,54,255,256,257,258,259,260,262,263,264,265,267,268,270,271,272,273,274,275,276,58,59,60,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,312,317,322,323,324,325,326,62,339,341,342,344,346,347,348,349,350,351,352,353,63,64,361,66,383,384,385,386,387,388,389,392,393,395,396,397,398,399,400,401,402,403,404,440,441,442,443,444,447,448,449,450,452,453,454,455,456,457,458,459,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":392,"org.easymock.tests2.UsageTest.argumentsOrdered":220,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":215,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":252,"org.easymock.tests2.DelegateToTest.testReturnException":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":314,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.tests.MockClassControlTest.testToString":71,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":241,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":463,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":235,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":440,"org.easymock.tests2.UsageTest.wrongArguments":213,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":488,"org.easymock.samples.ExampleTest.answerVsDelegate":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":68,"org.easymock.tests2.UsageConstraintsTest.testNull":99,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":279,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":184,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":76,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":444,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":482,"org.easymock.tests.UsageTest.moreThanOneArgument":393,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":329,"org.easymock.tests.UsageTest.argumentsOrdered":399,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":356,"org.easymock.tests.UsageVarargTest.varargIntAccepted":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":322,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":93,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":326,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.ReplayStateInvalidUsageTest.times":308,"org.easymock.tests2.DependencyTest.testClassMocking":232,"org.easymock.tests2.AnswerTest.answer":126,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":406,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":179,"org.easymock.tests2.DelegateToTest.testDelegate":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":478,"org.easymock.tests.LimitationsTest.mockFinalMethod":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":415,"org.easymock.tests2.DependencyTest.testClassMockingSupport":233,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":319,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":302,"org.easymock.tests.UsageThrowableTest.throwError":346,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":408,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":391,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":166,"org.easymock.samples.PartialClassMockTest.testGetArea":52,"org.easymock.tests.MockingTest.testInterfaceMocking":277,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":323,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":155,"org.easymock.tests2.UsageTest.niceToStrict":214,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":472,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":180,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":405,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":462,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":445,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":486,"org.easymock.tests.UsageOverloadedMethodTest.overloading":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":106,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":342,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":491,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":105,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":266,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":480,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests2.CaptureTest.testCaptureAll":246,"org.easymock.tests.MockNameTest.defaultName":363,"org.easymock.tests2.UsageConstraintsTest.testMatches":107,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":330,"org.easymock.samples.ExampleTest.voteForRemovals":260,"org.easymock.tests.UsageVarargTest.allKinds":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":414,"org.easymock.samples.BasicClassMockTest.testPrintContent":54,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":352,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":90,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":29,"org.easymock.samples.ExampleTest.voteForRemoval":257,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":66,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":177,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":313,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":178,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":287,"org.easymock.tests2.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":239,"org.easymock.tests2.CaptureTest.testCapture2_2446744":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":273,"org.easymock.tests.GenericTest.testBridgedEquals":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":452,"org.easymock.tests.UsageExpectAndReturnTest.longType":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":411,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":175,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":481,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":113,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":479,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":484,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":327,"org.easymock.tests.UsageCallCountTest.tooManyCalls":453,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":468,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":351,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":15,"org.easymock.tests.MockingTest.testNiceClassMocking":61,"org.easymock.tests.MockingTest.testClassMocking":56,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":446,"org.easymock.tests2.UsageConstraintsTest.testContains":104,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":35,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":456,"org.easymock.tests.MockTypeTest.fromEasyMockClass":407,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":382,"org.easymock.tests.UsageExpectAndReturnTest.object":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":183,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":379,"org.easymock.tests.UsageTest.exactCallCountByLastCall":400,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":119,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":341,"org.easymock.tests.MockClassControlTest.testHashCode":74,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":84,"org.easymock.tests2.EasyMockSupportTest.testVerify":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":157,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":461,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":125,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":364,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":186,"org.easymock.tests.DefaultClassInstantiatorTest.object":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":460,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":377,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":498,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":27,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":73,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":469,"org.easymock.tests.CapturesMatcherTest.test":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":72,"org.easymock.tests2.UsageTest.resumeIfFailure":221,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":316,"org.easymock.tests2.StubTest.stubWithReturnValue":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":169,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":289,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":432,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":499,"org.easymock.samples.SupportTest.voteForRemovals":254,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":475,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":438,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":127,"org.easymock.tests.UsageExpectAndThrowTest.object":473,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":375,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":111,"org.easymock.tests2.DelegateToTest.testWrongClass":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":275,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":276,"org.easymock.tests.UsageStrictMockTest.range":387,"org.easymock.samples.ConstructorCalledMockTest.testTax":250,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":143,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":474,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":487,"org.easymock.tests2.CaptureTest.testCaptureNone":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":334,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":494,"org.easymock.tests.UsageUnorderedTest.message":312,"org.easymock.tests.UsageVerifyTest.twoReturns":459,"org.easymock.tests.UsageVarargTest.varargByteAccepted":272,"org.easymock.tests2.ThreadingTest.testThreadSafe":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":160,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":450,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":53,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":380,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageConstraintsTest.any":102,"org.easymock.tests2.StubTest.stub":173,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":485,"org.easymock.tests.UsageExpectAndThrowTest.longType":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":315,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":306,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.tests2.SerializationTest.testClass":188,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests.LimitationsTest.mockNativeMethod":62,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":299,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":200,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests2.NameTest.nameForMocksControl":245,"org.easymock.tests2.MockedExceptionTest.testMockedException":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":150,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":397,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":467,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":60,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":230,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":320,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":112,"org.easymock.tests.MockingTest.testTwoMocks":57,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":471,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":116,"org.easymock.samples.ExampleTest.removeNonExistingDocument":261,"org.easymock.tests.UsageStrictMockTest.differentMethods":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":205,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":85,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":495,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":367,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":238,"org.easymock.tests2.MockBuilderTest.testCreateMockString":50,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":69,"org.easymock.tests.UsageExpectAndThrowTest.floatType":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":151,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":128,"org.easymock.tests.UsageVerifyTest.twoThrows":458,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":120,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":332,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":28,"org.easymock.tests.LimitationsTest.privateConstructor":336,"org.easymock.tests2.UsageConstraintsTest.testNotNull":115,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":353,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":199,"org.easymock.tests.UsageVarargTest.differentLength":269,"org.easymock.tests2.CallbackTest.callback":197,"org.easymock.tests2.UsageConstraintsTest.equals":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":138,"org.easymock.tests.UsageTest.openCallCountByLastCall":396,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":442,"org.easymock.tests.UsageCallCountTest.tooFewCalls":448,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":489,"org.easymock.tests.UsageThrowableTest.throwCheckedException":350,"org.easymock.tests.MockingTest.testStrictClassMocking":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":130,"org.easymock.tests.ObjectMethodsTest.testHashCode":378,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":240,"org.easymock.tests2.NameTest.nameForNiceMock":244,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.DelegateToTest.testStubDelegate":225,"org.easymock.tests2.AnswerTest.stubAnswer":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":385,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":170,"org.easymock.tests.UsageVarargTest.varargLongAccepted":271,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatType":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":118,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":251,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":92,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests.UsageThrowableTest.noUpperLimit":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":139,"org.easymock.tests2.SerializationTest.test":189,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":366,"org.easymock.tests2.UsageConstraintsTest.testSame":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":281,"org.easymock.samples.SupportTest.addDocument":253,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":132,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":152,"org.easymock.tests.GenericTest.testPackageScope":63,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":91,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":278,"org.easymock.tests2.NameTest.nameForMock":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":172,"org.easymock.tests2.UsageStrictMockTest.differentMethods":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":477,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":404,"org.easymock.tests2.MockedExceptionTest.testRealException":145,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":441,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":311,"org.easymock.tests2.NameTest.nameForStrictMock":243,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":32,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":82,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":194,"org.easymock.tests2.UsageConstraintsTest.lessThan":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":156,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":493,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":395,"org.easymock.tests2.MockBuilderTest.testWithConstructor":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":153,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":293,"org.easymock.tests.UsageVarargTest.varargShortAccepted":270,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":451,"org.easymock.tests2.UsageConstraintsTest.cmpTo":103,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":301,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":42,"org.easymock.tests.UsageTest.unexpectedCallWithArray":394,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":384,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":294,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":386,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.samples.ExampleTest.addAndChangeDocument":262,"org.easymock.tests.UsageStrictMockTest.testVerify":390,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":249,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":383,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":412,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":286,"org.easymock.tests.LimitationsTest.abstractClass":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":325,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":181,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":264}}]
