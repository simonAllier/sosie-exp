[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[0],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[44,45,46,47,48,26,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[78,79],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[80,4,10,16,20,22,48,81,82,83,84,85,86,87,88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[89,75,90,91],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[89,75,90,91],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[92,93],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[94,95,96,97,84,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[99],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[100,94,101,102,103,80,44,104,45,105,106,46,47,107,108,109,110,111,112,113,114,115,92,116,117,118,119,120,121,122,123,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,23,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,24,165,166,167,168,169,25,170,171,172,48,173,174,175,176,177,178,26,49,179,81,180,95,181,182,183,82,184,96,185,186,187,83,188,189,97,84,190,85,27,191,192,28,29,30,31,32,193,194,195,196,197,78,198,199,200,79,33,34,35,36,37,38,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,63,229,230,231,232,233,234,235,236,237,238,239,240,241,242,86,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,50,51,260,261,52,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,98,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,53,54,307,308,309,310,311,55,56,312,313,314,315,316,317,318,319,320,321,93,65,322,323,66,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,1,2,382,383,384,385,39,40,41,42,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,99,409,410,411,75,90,91,76,77,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,57,58,59,60,427,428,429,430,431,432,433,434,435,436,437,438,439,0,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,61,472,473,62,474,475,43,476,477,478,479,480,481,482,483,484,485,486,487,488,489,87,490,491,492,493,494,495,496,88,497],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[68,73,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[206,216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[315,318,65,499,326,500,501,77,479,484,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[111,92,136,148,149,150,151,152,154,157,78,198,199,200,79,201,203,218,219,220,221,222,223,225,276,277,278,279,280,281,282,283,289,301,302,314,316,317,319,320,321,93,322,324,325,327,332,333,335,336,337,338,340,342,343,344,345,346,347,348,349,39,40,41,91,427,431,434,435,437,439,0,440,441,442,444,445,446,447,449,450,451,452,453,454,455,477,478,480,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[164,292,408,409,411],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[75,90,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[386,387],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[235,407,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[80,44,45,105,106,46,47,107,135,25,48,174,177,178,26,49,192,37,50,51,260,261,52,305,53,54,309,310,55,56,313,355,361,367,375,378,1,394,99,57,58,59,60,61,472,473,62,43,487,488,87,490,491,492,493,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":352,"org.easymock.tests2.UsageTest.argumentsOrdered":56,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":235,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":308,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":290,"org.easymock.tests2.DelegateToTest.testReturnException":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":34,"org.easymock.tests.MockingTest.testPartialClassMocking":151,"org.easymock.tests.MockClassControlTest.testToString":278,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":426,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":3,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":331,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":69,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":359,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":92,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":156,"org.easymock.tests2.UsageConstraintsTest.testNull":355,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":335,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":422,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":283,"org.easymock.tests2.CaptureTest.testPrimitive":489,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageTest.moreThanOneArgument":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":22,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":101,"org.easymock.tests.UsageTest.argumentsOrdered":47,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":270,"org.easymock.tests.UsageVarargTest.varargIntAccepted":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":314,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":429,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":98,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":463,"org.easymock.tests.ReplayStateInvalidUsageTest.times":213,"org.easymock.tests2.DependencyTest.testClassMocking":328,"org.easymock.tests2.AnswerTest.answer":378,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":385,"org.easymock.tests2.CaptureTest.testAnd":486,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":113,"org.easymock.tests2.UsageTest.strictResetToDefault":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":160,"org.easymock.tests2.DelegateToTest.testDelegate":411,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":18,"org.easymock.tests.LimitationsTest.mockFinalMethod":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":197,"org.easymock.tests2.DependencyTest.testClassMockingSupport":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":170,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":383,"org.easymock.tests.UsageThrowableTest.throwError":27,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":207,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":115,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":457,"org.easymock.samples.PartialClassMockTest.testGetArea":289,"org.easymock.tests.MockingTest.testInterfaceMocking":153,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":4,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":257,"org.easymock.tests2.UsageTest.niceToStrict":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":320,"org.easymock.tests2.MockBuilderTest.testCreateMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":452,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":12,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":418,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":448,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":24,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":365,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":186,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":168,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":364,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":494,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":127,"org.easymock.tests2.EasyMockSupportClassTest.testAll":437,"org.easymock.tests.MockClassControlTest.testEquals":282,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":20,"org.easymock.tests2.CaptureTest.testCaptureAll":487,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":195,"org.easymock.tests.MockNameTest.defaultName":146,"org.easymock.tests2.UsageConstraintsTest.testMatches":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":205,"org.easymock.samples.ExampleTest.voteForRemovals":296,"org.easymock.tests.UsageVarargTest.allKinds":135,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":196,"org.easymock.samples.BasicClassMockTest.testPrintContent":302,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":31,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":470,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":74,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":224,"org.easymock.tests2.UsageConstraintsTest.greaterThan":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":346,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":225,"org.easymock.samples.ExampleTest.voteForRemoval":293,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":390,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":347,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":338,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":136,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":415,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":33,"org.easymock.tests2.CaptureTest.testCaptureFirst":497,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":416,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":313,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":82,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":392,"org.easymock.tests2.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.CaptureTest.testCapture2_2446744":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":325,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":134,"org.easymock.tests.GenericTest.testBridgedEquals":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":144,"org.easymock.tests.UsageExpectAndReturnTest.longType":95,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":21,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":269,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":19,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":100,"org.easymock.tests.UsageCallCountTest.tooManyCalls":145,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":478,"org.easymock.tests.MockingTest.testNiceClassMocking":157,"org.easymock.tests.MockingTest.testClassMocking":149,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":138,"org.easymock.tests2.UsageConstraintsTest.testContains":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":41,"org.easymock.tests2.UsageConstraintsTest.testFind":354,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":25,"org.easymock.tests.MockTypeTest.fromEasyMockClass":114,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":388,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests.UsageExpectAndReturnTest.object":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":421,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":70,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":255,"org.easymock.tests.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":230,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":108,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":77,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":164,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":396,"org.easymock.tests.MockClassControlTest.testHashCode":281,"org.easymock.tests2.EasyMockSupportTest.testVerify":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":446,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":382,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":476,"org.easymock.tests.UsageVarargTest.varargCharAccepted":128,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":217,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":247,"org.easymock.tests2.UsageTest.openCallCountByLastCall":309,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":424,"org.easymock.tests.DefaultClassInstantiatorTest.object":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":121,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":447,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":395,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":455,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":279,"org.easymock.tests2.UsageTest.resumeIfFailure":312,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":36,"org.easymock.tests2.StubTest.stubWithReturnValue":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":374,"org.easymock.tests2.SerializationTest.testAllMockedMethod":91,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":241,"org.easymock.samples.SupportTest.voteForRemovals":304,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":15,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":89,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":246,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":379,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":110,"org.easymock.tests.UsageExpectAndThrowTest.object":13,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":371,"org.easymock.tests2.DelegateToTest.testWrongClass":409,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":265,"org.easymock.tests.UsageStrictMockTest.range":261,"org.easymock.samples.ConstructorCalledMockTest.testTax":299,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":432,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":434,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests2.CaptureTest.testCaptureNone":493,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":268,"org.easymock.tests.UsageUnorderedTest.message":48,"org.easymock.tests.UsageVerifyTest.twoReturns":49,"org.easymock.tests.UsageVarargTest.varargByteAccepted":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":450,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":142,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":256,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":301,"org.easymock.tests2.CaptureTest.testCapture_2617107":488,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":244,"org.easymock.tests2.UsageConstraintsTest.any":361,"org.easymock.tests2.StubTest.stub":475,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":35,"org.easymock.tests.UsageExpectAndThrowTest.longType":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":222,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":211,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":472,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":400,"org.easymock.tests2.SerializationTest.testClass":75,"org.easymock.tests.LimitationsTest.mockNativeMethod":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":85,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":460,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":474,"org.easymock.tests2.NameTest.nameForMocksControl":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":462,"org.easymock.tests2.MockedExceptionTest.testMockedException":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":439,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":387,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":7,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":332,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":322,"org.easymock.tests.MockingTest.testNicePartialClassMocking":152,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":337,"org.easymock.tests2.CaptureTest.testCaptureLast":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":484,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":358,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":372,"org.easymock.tests.MockingTest.testTwoMocks":150,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":11,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":376,"org.easymock.samples.ExampleTest.removeNonExistingDocument":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":397,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":220,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":391,"org.easymock.tests2.MockBuilderTest.testCreateMockString":327,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":440,"org.easymock.tests.UsageExpectAndThrowTest.floatType":5,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":412,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":449,"org.easymock.samples.ExampleTest.voteAgainstRemoval":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":345,"org.easymock.tests.LimitationsTest.privateConstructor":202,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":501,"org.easymock.tests2.UsageConstraintsTest.testNotNull":375,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":32,"org.easymock.tests2.UsageTest.defaultResetToNice":311,"org.easymock.samples.ExampleTest.voteAgainstRemovals":291,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":237,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":459,"org.easymock.tests.UsageVarargTest.differentLength":130,"org.easymock.tests2.CallbackTest.callback":394,"org.easymock.tests2.UsageConstraintsTest.equals":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":341,"org.easymock.tests.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":175,"org.easymock.tests.UsageCallCountTest.tooFewCalls":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":29,"org.easymock.tests.MockingTest.testStrictClassMocking":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":483,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":23,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":482,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.ObjectMethodsTest.testHashCode":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":73,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":393,"org.easymock.tests2.NameTest.nameForNiceMock":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":71,"org.easymock.samples.ExampleTest.addDocument":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.DelegateToTest.testStubDelegate":99,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":51,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":323,"org.easymock.tests.UsageVarargTest.varargLongAccepted":132,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":190,"org.easymock.tests.UsageExpectAndReturnTest.floatType":180,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":76,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests.UsageThrowableTest.noUpperLimit":191,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":350,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":427,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":490,"org.easymock.tests2.SerializationTest.test":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":81,"org.easymock.tests2.UsageConstraintsTest.testSame":356,"org.easymock.samples.SupportTest.addDocument":303,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":441,"org.easymock.tests.GenericTest.testPackageScope":198,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":155,"org.easymock.tests2.NameTest.nameForMock":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":187,"org.easymock.tests2.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":17,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":161,"org.easymock.tests2.MockedExceptionTest.testRealException":42,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":67,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":174,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":216,"org.easymock.tests2.NameTest.nameForStrictMock":58,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":319,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":386,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":431,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":221,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":316,"org.easymock.tests2.UsageStrictMockTest.range":473,"org.easymock.tests2.UsageConstraintsTest.lessThan":377,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":414,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":233,"org.easymock.tests2.CaptureTest.testCaptureRightOne":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":445,"org.easymock.tests2.UsageConstraintsTest.testOr":357,"org.easymock.tests.UsageRangeTest.combination":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":333,"org.easymock.tests.UsageTest.wrongArguments":45,"org.easymock.tests2.MockBuilderTest.testWithConstructor":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":442,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":227,"org.easymock.tests.UsageVarargTest.varargShortAccepted":131,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":143,"org.easymock.tests2.UsageConstraintsTest.cmpTo":362,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":63,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":310,"org.easymock.tests2.CaptureTest.testCaptureFromStub":496,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":206,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":317,"org.easymock.tests.UsageTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":141,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":499,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":188,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.tests2.UsageConstraintsTest.constraints":351,"org.easymock.samples.ExampleTest.addAndChangeDocument":298,"org.easymock.tests.UsageStrictMockTest.testVerify":263,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":194,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":183,"org.easymock.tests.LimitationsTest.abstractClass":201,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":125}}]
