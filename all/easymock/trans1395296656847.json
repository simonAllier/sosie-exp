[{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[3,4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[14,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[57,58,31,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[30,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[3,4,5,70,71,72,73,74,75,76,77,78,6,7,79,80,81,8,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,0,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,9,11,12,123,13,14,15,16,124,125,17,18,1,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,20,21,146,22,23,24,25,147,26,148,149,27,28,29,30,150,2,151,152,153,154,155,156,57,58,31,59,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,60,32,33,34,35,213,214,36,37,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,39,232,233,40,234,235,236,237,238,239,240,241,242,41,243,244,245,246,247,42,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,43,263,44,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,45,46,47,309,48,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,49,330,331,332,333,50,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,51,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,61,382,383,384,385,386,387,388,389,390,391,52,53,54,69,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,55,432,433,434,435,436,437,438,439,56,440,441,442,62,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,63,64,65,66,67,68,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[93,108,11,15,17,21,30,162,169,171,172,173,174,178,179,180,181,186,193,34,36,217,221,225,256,258,259,260,261,262,332,50,335,337,340,341,342,343,344,347,351,352,353,354,357,358,359,377,382,425,432,433,434,458,461,462,485,486,487,488,490,491,494,495,496,499,501,502,503,504,505,506],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[97,101,111,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[260,261,268,272,273,275,278,291,295,296,298,301,360,363,364,403,504,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[3,4,4,5,5,8,82,13,124,125,17,1,148,29,2,40,41,43,391,54],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[3,4,5,70,71,72,73,74,75,76,77,78,6,7,79,80,81,8,82,511,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,0,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,9,512,11,12,513,123,13,14,15,514,16,124,125,17,18,515,1,126,127,128,129,130,131,132,133,134,135,136,137,138,139,20,21,146,22,23,24,25,147,26,148,149,27,28,29,30,150,2,151,153,154,155,156,57,58,31,59,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,516,209,210,211,212,60,32,33,34,35,213,214,36,37,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,39,232,233,40,234,235,236,237,238,239,240,241,242,41,243,244,245,246,247,42,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,43,263,44,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,517,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,45,46,47,309,48,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,49,330,331,332,333,50,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,51,360,361,362,363,364,365,366,367,368,369,518,370,371,372,373,374,375,519,376,377,378,379,380,381,61,382,383,384,385,386,387,388,389,390,391,52,53,54,69,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,55,432,433,434,435,436,437,438,439,56,440,441,442,62,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,63,64,65,66,67,68,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[3,4,4,5,5,70,71,72,73,75,77,81,8,88,90,91,92,93,94,96,97,98,99,100,0,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,11,13,15,16,18,126,127,129,130,133,134,135,136,137,138,139,20,21,146,22,23,24,26,28,29,30,151,153,154,155,156,57,58,31,59,162,169,170,171,173,175,176,177,180,181,184,185,186,193,200,201,202,203,204,205,212,60,32,33,34,35,214,36,37,216,217,218,219,220,221,222,223,224,225,226,227,39,40,41,42,250,251,252,253,254,255,258,260,261,43,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,46,47,48,325,326,327,328,329,336,338,339,341,344,346,347,348,349,350,351,352,355,356,359,51,360,361,362,363,364,377,378,379,380,381,61,383,384,385,386,387,388,389,390,52,54,392,393,394,411,417,56,441,442,62,443,444,449,450,451,452,453,455,63,64,65,66,67,68,485,486,487,490,497,498,502,504,505,508,509,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastControl":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[374,520,521],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[94,96,101,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[3,4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,522,38,523,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[57,58,31,59,169,176,60,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,339,351,356,61,383,385,386,387,388,389,390,394,62,443,63,64,65,66,67,68,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[82,514,524,525,526,527,528],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[70,71,72,73,74,75,76,77,8,84,85,86,87,88,90,91,92,93,94,96,97,98,99,100,0,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,9,11,12,123,13,14,17,18,1,126,127,128,129,130,131,132,133,134,135,136,137,138,139,20,21,146,22,23,24,25,26,149,27,28,29,30,150,151,153,154,155,156,57,58,31,59,169,170,171,172,173,174,175,176,177,178,179,180,181,184,186,187,193,201,202,203,205,207,208,516,209,211,212,60,33,34,36,37,250,253,254,255,256,257,258,259,260,261,262,43,263,44,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,46,47,309,48,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,49,332,333,50,334,335,336,337,338,339,341,342,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,51,365,366,367,368,369,370,377,381,61,383,384,385,386,387,388,389,390,52,53,392,393,394,419,420,421,423,424,425,426,427,428,429,430,431,55,432,433,434,435,436,437,56,441,442,62,443,444,445,446,447,448,449,450,451,452,453,458,459,460,63,64,65,66,67,68,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[4,5,8,82,529,530,531,532,533,534,535,536,537,512,513,514,538,515,34,37,215],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[374,521],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[3,70,71,72,73,75,81,8,91,92,93,94,96,97,98,99,100,0,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,11,13,15,16,18,126,127,128,129,130,133,134,135,136,138,139,20,21,146,22,23,24,26,28,29,30,151,153,154,155,156,31,162,169,170,171,173,175,176,177,180,181,184,185,186,193,201,202,203,205,60,32,33,34,35,214,36,37,216,217,218,219,220,221,222,223,224,225,226,227,39,40,41,42,250,254,255,258,260,261,43,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,46,47,48,336,338,339,341,347,348,349,350,351,352,355,356,359,381,61,383,385,386,387,388,389,390,52,392,393,394,56,441,442,444,445,449,450,451,452,453,67,485,486,487,497,498,499,502,504,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[141,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[539,109],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":94,"org.easymock.tests2.UsageTest.argumentsOrdered":179,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":351,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":174,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":78,"org.easymock.tests2.DelegateToTest.testReturnException":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":64,"org.easymock.tests.MockingTest.testPartialClassMocking":46,"org.easymock.tests.MockClassControlTest.testToString":432,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":83,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":185,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":524,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":441,"org.easymock.tests2.UsageTest.wrongArguments":172,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":447,"org.easymock.samples.ExampleTest.answerVsDelegate":71,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests2.UsageConstraintsTest.testNull":97,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":22,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":437,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":225,"org.easymock.tests2.CaptureTest.testPrimitive":129,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":444,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":283,"org.easymock.tests.UsageTest.moreThanOneArgument":352,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":327,"org.easymock.tests.UsageTest.argumentsOrdered":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":528,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":208,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":453,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":468,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":193,"org.easymock.tests.ReplayStateInvalidUsageTest.times":321,"org.easymock.tests2.DependencyTest.testClassMocking":182,"org.easymock.tests2.AnswerTest.answer":250,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":122,"org.easymock.tests2.CaptureTest.testAnd":126,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":331,"org.easymock.tests2.UsageTest.strictResetToDefault":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":513,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":349,"org.easymock.tests2.DelegateToTest.testDelegate":205,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":364,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":467,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":279,"org.easymock.tests.LimitationsTest.mockFinalMethod":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":369,"org.easymock.tests2.DependencyTest.testClassMockingSupport":183,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":130,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":120,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.UsageThrowableTest.throwError":383,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":333,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":517,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":329,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":530,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":249,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":471,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.MockingTest.testInterfaceMocking":309,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":450,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":509,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":462,"org.easymock.tests2.UsageTest.niceToStrict":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":265,"org.easymock.tests2.ThreadingTest.testChangeDefault":152,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":537,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":13,"org.easymock.tests2.MockBuilderTest.testCreateMock":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":273,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":445,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":534,"org.easymock.tests.UsageOverloadedMethodTest.overloading":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":106,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":339,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":298,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":520,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":105,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":135,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":422,"org.easymock.tests.MockClassControlTest.testEquals":436,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":281,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":522,"org.easymock.tests2.CaptureTest.testCaptureAll":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":367,"org.easymock.tests.MockNameTest.defaultName":382,"org.easymock.tests2.UsageConstraintsTest.testMatches":107,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":328,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests.UsageVarargTest.allKinds":430,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":485,"org.easymock.samples.BasicClassMockTest.testPrintContent":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":368,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":389,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":68,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":204,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":519,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":348,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":472,"org.easymock.samples.ExampleTest.voteForRemoval":72,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":376,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":153,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":150,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":516,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":464,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":169,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":51,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":218,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":63,"org.easymock.tests2.CaptureTest.testCaptureFirst":139,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":219,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":294,"org.easymock.tests2.UsageTest.moreThanOneArgument":171,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":155,"org.easymock.tests2.CaptureTest.testCapture2_2446744":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":18,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":429,"org.easymock.tests.GenericTest.testBridgedEquals":69,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":535,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":532,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":495,"org.easymock.tests.UsageExpectAndReturnTest.longType":290,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":365,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":282,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":114,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":496,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":33,"org.easymock.tests.MockingTest.testNiceClassMocking":312,"org.easymock.tests.MockingTest.testClassMocking":308,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":489,"org.easymock.tests2.UsageConstraintsTest.testContains":104,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":10,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":31,"org.easymock.tests2.UsageConstraintsTest.testFind":96,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":394,"org.easymock.tests.MockTypeTest.fromEasyMockClass":332,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":499,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":90,"org.easymock.tests.UsageExpectAndReturnTest.object":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":525,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":424,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":460,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":536,"org.easymock.tests.UsageTest.exactCallCountByLastCall":359,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":82,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":419,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":303,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":338,"org.easymock.tests.MockClassControlTest.testHashCode":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":158,"org.easymock.tests2.EasyMockSupportTest.testVerify":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":240,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":362,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":187,"org.easymock.tests.UsageVarargTest.varargCharAccepted":423,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":518,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":227,"org.easymock.tests.DefaultClassInstantiatorTest.object":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":378,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":157,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":470,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":270,"org.easymock.tests.ReplayStateInvalidCallsTest.times":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":284,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":477,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":42,"org.easymock.tests2.UsageTest.resumeIfFailure":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":66,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":514,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":296,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":411,"org.easymock.samples.SupportTest.voteForRemovals":81,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":276,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":417,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":251,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":456,"org.easymock.tests.UsageExpectAndThrowTest.object":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":112,"org.easymock.tests2.DelegateToTest.testWrongClass":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":474,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":498,"org.easymock.tests.UsageStrictMockTest.range":504,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":210,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":32,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":533,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":275,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":323,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":446,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":466,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":510,"org.easymock.tests2.CaptureTest.testCaptureNone":134,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":141,"org.easymock.tests.UsageUnorderedTest.message":377,"org.easymock.tests.UsageVerifyTest.twoReturns":487,"org.easymock.tests.UsageVarargTest.varargByteAccepted":428,"org.easymock.tests2.ThreadingTest.testThreadSafe":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":243,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":493,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":461,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":6,"org.easymock.tests2.CaptureTest.testCapture_2617107":128,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageConstraintsTest.any":102,"org.easymock.tests2.StubTest.stub":212,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":65,"org.easymock.tests.UsageExpectAndThrowTest.longType":267,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":306,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":523,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":190,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":482,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":142,"org.easymock.tests2.NameTest.nameForMocksControl":87,"org.easymock.tests2.MockedExceptionTest.testMockedException":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":233,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":356,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":48,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":268,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":20,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":16,"org.easymock.tests.MockingTest.testNicePartialClassMocking":47,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":188,"org.easymock.tests2.CaptureTest.testCaptureLast":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":344,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":481,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":113,"org.easymock.tests.MockingTest.testTwoMocks":45,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":478,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":272,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":145,"org.easymock.samples.ExampleTest.removeNonExistingDocument":76,"org.easymock.tests.UsageStrictMockTest.differentMethods":505,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":195,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":159,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":144,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":372,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":154,"org.easymock.tests2.MockBuilderTest.testCreateMockString":1,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":234,"org.easymock.tests.UsageExpectAndThrowTest.floatType":266,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":231,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":511,"org.easymock.tests.UsageVerifyTest.twoThrows":486,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":73,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.LimitationsTest.privateConstructor":439,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":531,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":390,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":57,"org.easymock.tests2.UsageTest.defaultResetToNice":177,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":302,"org.easymock.tests.UsageVarargTest.differentLength":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":189,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests2.UsageConstraintsTest.equals":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":148,"org.easymock.tests.UsageTest.openCallCountByLastCall":355,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":62,"org.easymock.tests.UsageCallCountTest.tooFewCalls":491,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":448,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":143,"org.easymock.tests.UsageThrowableTest.throwCheckedException":387,"org.easymock.tests.MockingTest.testStrictClassMocking":307,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":61,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":194,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":214,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":255,"org.easymock.tests.ObjectMethodsTest.testHashCode":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":527,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":480,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":156,"org.easymock.tests2.NameTest.nameForNiceMock":86,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":475,"org.easymock.tests2.DependencyTest.testInterfaceMocking":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":526,"org.easymock.samples.ExampleTest.addDocument":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":244,"org.easymock.tests2.DelegateToTest.testStubDelegate":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.AnswerTest.stubAnswer":254,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":502,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":124,"org.easymock.tests.UsageVarargTest.varargLongAccepted":427,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.floatType":289,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.UsageThrowableTest.noUpperLimit":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":166,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":92,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":206,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":131,"org.easymock.tests2.SerializationTest.test":263,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":521,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":371,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":288,"org.easymock.samples.SupportTest.addDocument":80,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":213,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":465,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":235,"org.easymock.tests.GenericTest.testPackageScope":52,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":165,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":310,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":463,"org.easymock.tests2.NameTest.nameForMock":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":515,"org.easymock.tests2.UsageStrictMockTest.differentMethods":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":278,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":350,"org.easymock.tests2.MockedExceptionTest.testRealException":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":442,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":324,"org.easymock.tests2.NameTest.nameForStrictMock":85,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":529,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":111,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":11,"org.easymock.tests2.UsageStrictMockTest.range":260,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":469,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":217,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":239,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":140,"org.easymock.tests2.UsageConstraintsTest.testOr":99,"org.easymock.tests.UsageRangeTest.combination":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":21,"org.easymock.tests.UsageTest.wrongArguments":354,"org.easymock.tests2.MockBuilderTest.testWithConstructor":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":236,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":300,"org.easymock.tests.UsageVarargTest.varargShortAccepted":426,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":494,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":483,"org.easymock.tests2.UsageConstraintsTest.cmpTo":103,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":252,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests2.CaptureTest.testCaptureFromStub":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":12,"org.easymock.tests.UsageTest.unexpectedCallWithArray":353,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":479,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":501,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":492,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":538,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":301,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":503,"org.easymock.tests2.UsageConstraintsTest.constraints":93,"org.easymock.samples.ExampleTest.addAndChangeDocument":77,"org.easymock.tests.UsageStrictMockTest.testVerify":507,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":79,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":500,"org.easymock.tests2.CompareToTest.testGreateThan":539,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":366,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":451,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":38,"org.easymock.tests.LimitationsTest.abstractClass":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":452,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":222}}]
