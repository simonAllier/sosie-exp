[{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[2,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[30,31,32,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,50,88,89,2,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[107,94,108,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[110,111,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[113,114,115,116,109,117,24,118,119,120,121,122,123,4,124,125,126,127,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[129,130,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[132,133,134,135,136,137,138,139,94,140],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[141,142,143,144,145,5,113,146,147,148,6,149,150,151,152,153,154,52,155,156,157,158,53,159,160,48,161,162,49,163,164,7,8,165,166,9,167,10,11,12,13,168,14,15,16,17,169,18,19,20,21,170,171,172,173,174,175,176,177,178,179,180,181,54,114,182,115,116,183,184,185,186,187,188,189,190,191,192,55,56,57,193,58,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,22,210,211,109,212,213,214,215,23,216,117,24,118,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,59,60,61,251,252,253,254,255,25,256,257,258,62,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,129,277,278,279,280,281,282,26,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,119,316,317,120,121,318,319,320,321,322,323,324,325,326,327,328,329,330,331,63,332,333,334,335,336,337,338,339,340,341,342,343,64,344,345,346,347,348,349,350,351,352,65,66,67,68,353,354,27,355,122,356,357,358,359,28,360,361,362,363,364,69,365,71,72,366,367,73,74,75,132,76,368,369,77,78,370,80,371,372,373,374,81,82,375,83,84,85,86,376,87,377,378,50,88,89,2,379,3,380,381,382,383,384,385,30,386,387,388,389,31,390,391,392,393,394,395,396,397,398,32,399,400,401,402,33,403,404,405,406,407,408,409,410,411,412,413,414,415,416,90,417,418,419,420,421,0,1,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,94,108,95,96,140,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,123,4,124,125,458,459,460,461,462,463,464,465,466,467,97,468,469,98,470,471,472,473,474,475,476,477,478,99,479,480,481,482,483,100,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,126,500,501,127,128,502,29,503,101,102,103,104,504,505,105,106,506,35,36,37,38,39,40,41,42,507,43,44,45,46,47],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[343,344,425,426,427,428,429,431,432,433,434,435,436,486,487,488,489,490,492,493,494,495,496,497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[508],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[382,388,392,32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[52,53,61,251,257,275,279,64,65,65,66,66,67,68,509,69,71,72,367,73,74,75,76,77,78,510,80,81,83,84,85,86,87,378,88,89,379,3,416,90,511,91,512,94,95,140,458,462,465,466,467,97,468,469,98,470,471,472,473,474,475,476,477,478,99,479,480,481,482,483,100,484,485,101,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[382,388],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[393],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[197,313,317,120,357,78,424,445,449,450,453,498,501,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[141,142,143,144,145,5,113,146,147,148,6,149,150,151,7,8,165,166,9,167,10,11,12,13,168,14,15,16,17,169,18,19,20,21,170,171,172,174,175,177,178,179,180,181,54,114,182,115,116,183,184,189,190,56,57,58,197,198,199,200,206,209,22,211,212,213,214,215,23,216,117,24,118,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,59,60,252,253,254,255,25,256,62,264,303,304,305,306,313,314,315,119,316,317,120,121,318,319,320,63,338,339,340,341,342,345,346,347,348,349,350,352,27,355,122,356,357,358,359,28,360,361,362,363,364,69,73,74,78,80,373,81,82,375,83,84,85,87,50,89,380,381,382,383,385,30,386,387,388,389,390,391,392,393,394,395,396,397,398,32,399,400,402,33,403,404,405,408,409,410,411,412,413,414,415,416,90,417,418,420,421,0,1,422,423,424,438,439,440,442,94,108,95,96,123,4,124,125,498,499,126,500,501,127,128,502,29,503,101,102,103,105,106,35,36,37,38,39,40,41,42,507,43,44,45,46,47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[141,142,143,144,145,5,113,146,147,148,6,149,150,151,34,34,7,8,165,166,9,167,10,11,12,13,168,14,15,16,17,169,18,19,20,21,170,171,172,174,175,176,177,178,179,180,181,54,115,116,183,184,185,186,187,189,190,56,57,58,197,199,200,201,203,204,207,208,209,22,212,213,214,215,23,216,117,24,118,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,59,60,252,253,254,255,25,256,62,303,304,305,306,313,314,315,119,316,317,120,121,319,320,338,339,340,341,342,343,64,344,345,346,347,348,349,350,352,65,66,67,68,353,354,27,355,122,356,357,358,359,28,360,361,362,363,364,69,71,73,74,75,76,77,78,80,373,374,81,82,375,83,84,85,86,87,50,88,89,2,380,381,382,383,385,30,386,387,388,389,390,391,392,393,394,395,396,397,398,32,399,400,401,402,33,403,404,405,408,409,410,411,412,413,414,415,416,90,417,418,420,421,0,1,422,423,424,430,438,439,440,442,94,108,95,96,444,445,446,447,448,449,450,451,452,453,454,455,456,97,98,99,100,491,498,499,126,500,501,127,128,502,29,101,102,103,104,505,105,106,35,36,37,38,39,40,41,42,507,43,44,45,46,47],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[87,377,378,50,88,89,2,379,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[146,147,149,150,513,212,24,118,315,317,356,361,362,501],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[5,113,147,148,6,149,150,151,170,181,54,116,184,187,22,212,117,24,118,239,315,119,120,346,27,122,356,359,28,361,362,364,30,386,390,391,33,403,405,442,123,4,124,125,126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[341],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":383,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.UsageTest.argumentsOrdered":362,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":358,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":344,"org.easymock.tests2.DelegateToTest.testReturnException":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":253,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.tests.MockClassControlTest.testToString":332,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":457,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":134,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":213,"org.easymock.tests2.UsageTest.wrongArguments":356,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":497,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":305,"org.easymock.samples.ExampleTest.answerVsDelegate":346,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":453,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":337,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":511,"org.easymock.tests2.CaptureTest.testPrimitive":38,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":216,"org.easymock.tests.UsageTest.moreThanOneArgument":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":21,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":143,"org.easymock.tests.UsageTest.argumentsOrdered":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":325,"org.easymock.tests.UsageVarargTest.varargIntAccepted":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":435,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":342,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":112,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":491,"org.easymock.tests.ReplayStateInvalidUsageTest.times":268,"org.easymock.tests2.DependencyTest.testClassMocking":371,"org.easymock.tests2.AnswerTest.answer":405,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":414,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":156,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests2.UsageTest.strictResetToDefault":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":448,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":199,"org.easymock.tests2.DelegateToTest.testDelegate":442,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":169,"org.easymock.tests.LimitationsTest.mockFinalMethod":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":249,"org.easymock.tests2.DependencyTest.testClassMockingSupport":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":210,"org.easymock.tests2.CaptureTest.testCapture1_2446744":39,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":412,"org.easymock.tests.UsageThrowableTest.throwError":237,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":262,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":158,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":436,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":485,"org.easymock.samples.PartialClassMockTest.testGetArea":64,"org.easymock.tests.MockingTest.testInterfaceMocking":193,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":339,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":474,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":312,"org.easymock.tests2.UsageTest.niceToStrict":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":73,"org.easymock.tests2.MockBuilderTest.testCreateMock":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":13,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":449,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":303,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":394,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":204,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":393,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":130,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":43,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":173,"org.easymock.tests2.EasyMockSupportClassTest.testAll":97,"org.easymock.tests.MockClassControlTest.testEquals":336,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":19,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":413,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":247,"org.easymock.tests.MockNameTest.defaultName":188,"org.easymock.tests2.UsageConstraintsTest.testMatches":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":144,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":260,"org.easymock.samples.ExampleTest.voteForRemovals":350,"org.easymock.tests.UsageVarargTest.allKinds":181,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":117,"org.easymock.samples.BasicClassMockTest.testPrintContent":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":248,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":243,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":498,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":441,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":256,"org.easymock.tests2.UsageConstraintsTest.greaterThan":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":139,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":198,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":2,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":279,"org.easymock.samples.ExampleTest.voteForRemoval":347,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":0,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":379,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":510,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":86,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":446,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":252,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":437,"org.easymock.tests2.CaptureTest.testCaptureFirst":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":447,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":364,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":422,"org.easymock.tests2.UsageTest.moreThanOneArgument":122,"org.easymock.tests2.CaptureTest.testCapture2_2446744":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":297,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":180,"org.easymock.tests.GenericTest.testBridgedEquals":251,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":186,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":20,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":79,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":401,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":18,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":141,"org.easymock.tests.UsageCallCountTest.tooManyCalls":187,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":110,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":242,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":102,"org.easymock.tests.MockingTest.testNiceClassMocking":196,"org.easymock.tests.MockingTest.testClassMocking":192,"org.easymock.tests2.UsageConstraintsTest.testContains":392,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":182,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":70,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":90,"org.easymock.tests2.UsageConstraintsTest.testFind":385,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":22,"org.easymock.tests.MockTypeTest.fromEasyMockClass":157,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":420,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":495,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":508,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":452,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":135,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":310,"org.easymock.tests.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":51,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":152,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":140,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.MockClassControlTest.testHashCode":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":476,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":111,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":411,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":503,"org.easymock.tests.UsageVarargTest.varargCharAccepted":174,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":272,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":302,"org.easymock.tests2.UsageTest.openCallCountByLastCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":455,"org.easymock.tests.DefaultClassInstantiatorTest.object":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":49,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":308,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":477,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":11,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":512,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":88,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":10,"org.easymock.tests.CapturesMatcherTest.test":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":333,"org.easymock.tests2.UsageTest.resumeIfFailure":363,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":255,"org.easymock.tests2.StubTest.stubWithReturnValue":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":132,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":402,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":95,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":295,"org.easymock.samples.SupportTest.voteForRemovals":354,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":15,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":107,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":301,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":406,"org.easymock.tests.UsageExpectAndThrowTest.object":168,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":154,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":399,"org.easymock.tests2.DelegateToTest.testWrongClass":440,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":319,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":320,"org.easymock.samples.ConstructorCalledMockTest.testTax":65,"org.easymock.tests.UsageStrictMockTest.range":317,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":463,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":465,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":304,"org.easymock.tests2.CaptureTest.testCaptureNone":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":323,"org.easymock.tests.UsageUnorderedTest.message":212,"org.easymock.tests.UsageVerifyTest.twoReturns":118,"org.easymock.tests.UsageVarargTest.varargByteAccepted":179,"org.easymock.tests2.ThreadingTest.testThreadSafe":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":479,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":184,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":67,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":311,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":299,"org.easymock.tests2.UsageConstraintsTest.any":390,"org.easymock.tests2.StubTest.stub":502,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":162,"org.easymock.tests.UsageExpectAndThrowTest.longType":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":300,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":129,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":266,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":500,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":430,"org.easymock.tests2.SerializationTest.testClass":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":62,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":488,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":93,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.tests2.NameTest.nameForMocksControl":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":490,"org.easymock.tests2.MockedExceptionTest.testMockedException":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":469,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":419,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":9,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":76,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":133,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":211,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":400,"org.easymock.tests.MockingTest.testTwoMocks":55,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":506,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":12,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":361,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":403,"org.easymock.samples.ExampleTest.removeNonExistingDocument":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":493,"org.easymock.tests.UsageStrictMockTest.differentMethods":120,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":275,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests2.MockBuilderTest.testCreateMockString":80,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":470,"org.easymock.tests.UsageExpectAndThrowTest.floatType":165,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":443,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":99,"org.easymock.samples.ExampleTest.voteAgainstRemoval":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":89,"org.easymock.tests.LimitationsTest.privateConstructor":258,"org.easymock.tests2.UsageConstraintsTest.testNotNull":33,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":415,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":244,"org.easymock.tests2.UsageTest.defaultResetToNice":360,"org.easymock.samples.ExampleTest.voteAgainstRemovals":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":487,"org.easymock.tests.UsageVarargTest.differentLength":176,"org.easymock.tests2.CallbackTest.callback":424,"org.easymock.tests2.UsageConstraintsTest.equals":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":377,"org.easymock.tests.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":215,"org.easymock.tests.UsageCallCountTest.tooFewCalls":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":306,"org.easymock.tests.UsageThrowableTest.throwCheckedException":241,"org.easymock.tests.MockingTest.testStrictClassMocking":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":190,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":492,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":505,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":410,"org.easymock.tests.ObjectMethodsTest.testHashCode":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":137,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":423,"org.easymock.tests2.NameTest.nameForNiceMock":124,"org.easymock.tests2.DependencyTest.testInterfaceMocking":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":136,"org.easymock.samples.ExampleTest.addDocument":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":484,"org.easymock.tests2.DelegateToTest.testStubDelegate":439,"org.easymock.tests2.AnswerTest.stubAnswer":409,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":119,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":368,"org.easymock.tests.UsageVarargTest.varargLongAccepted":178,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":288,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":434,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":398,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageThrowableTest.noUpperLimit":238,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":381,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":458,"org.easymock.tests2.SerializationTest.test":108,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":40,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":131,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":274,"org.easymock.tests2.UsageConstraintsTest.testSame":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":353,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":504,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":471,"org.easymock.tests.GenericTest.testPackageScope":59,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":433,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":194,"org.easymock.tests2.NameTest.nameForMock":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":370,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":17,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":200,"org.easymock.tests2.MockedExceptionTest.testRealException":417,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":160,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":214,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":271,"org.easymock.tests2.NameTest.nameForStrictMock":4,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":367,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":418,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":462,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":71,"org.easymock.tests2.UsageStrictMockTest.range":501,"org.easymock.tests2.UsageConstraintsTest.lessThan":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":509,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":475,"org.easymock.tests2.CaptureTest.testCaptureRightOne":44,"org.easymock.tests2.UsageConstraintsTest.testOr":387,"org.easymock.tests.UsageRangeTest.combination":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":82,"org.easymock.tests.UsageTest.wrongArguments":147,"org.easymock.tests2.MockBuilderTest.testWithConstructor":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":472,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":281,"org.easymock.tests.UsageVarargTest.varargShortAccepted":177,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":277,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":185,"org.easymock.tests2.UsageConstraintsTest.cmpTo":391,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":26,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CaptureTest.testCaptureFromStub":45,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":261,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":72,"org.easymock.tests.UsageTest.unexpectedCallWithArray":146,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.UsageConstraintsTest.constraints":382,"org.easymock.samples.ExampleTest.addAndChangeDocument":352,"org.easymock.tests.UsageStrictMockTest.testVerify":318,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":343,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":246,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":41,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.LimitationsTest.abstractClass":257,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":450,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":171}}]
