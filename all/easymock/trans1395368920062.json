[{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[4,4,5,5,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,7,10,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,8,63,64,65,66,67,68,69,70,71,9,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[28,114,115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[117,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[119,120,121,122,123,124,125,126,127,128,129,6,11,12,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,13,14,148,149,150,151,152,153,154,155,156,157,18,158,19,20,22,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,25,26,175,27,28,29,30,176,31,33,34,35,7,10,36,37,177,178,179,38,39,40,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,117,221,222,223,224,225,226,118,227,228,229,230,231,232,233,234,114,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,0,251,252,1,2,41,42,43,44,45,46,47,48,50,51,52,53,56,253,254,255,256,257,258,259,115,260,261,262,263,264,265,266,57,58,60,62,8,63,64,67,70,9,72,73,74,75,76,77,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,80,81,82,83,84,85,310,86,311,312,313,314,315,316,317,318,319,320,321,322,87,323,324,88,325,326,327,328,329,330,331,332,333,334,335,89,90,91,92,93,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,94,95,96,97,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,98,99,100,436,437,438,104,105,106,107,108,109,110,111,112,113,439,440,441,442,443,444,445,446,447,3,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,116,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[16,477,478,479,480,481,482],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[483],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[152,154,155,257,484,485,486,487,275,276,277,300,302,303,395,469],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[163,171,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[119,120,121,122,123,124,125,126,127,128,4,4,5,5,129,6,11,12,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,13,14,148,149,15,16,488,150,151,152,153,154,155,156,17,157,18,158,19,20,21,22,159,23,24,161,162,163,164,165,166,167,168,169,170,171,172,173,174,25,26,175,27,28,29,30,176,31,32,33,34,35,7,10,36,37,177,178,179,38,39,40,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,117,221,222,223,224,225,226,118,227,228,229,230,231,232,233,234,114,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,0,251,252,1,2,41,489,42,43,490,44,45,46,47,482,48,49,50,51,491,52,53,56,253,254,255,256,257,258,259,115,260,261,262,263,264,265,266,57,58,59,60,61,62,8,63,64,65,66,67,68,69,70,71,9,72,73,74,75,76,77,78,79,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,80,81,82,83,84,85,310,86,311,312,313,314,315,316,317,318,319,320,321,322,87,323,324,88,325,326,327,328,329,330,331,332,333,334,335,89,90,91,92,93,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,94,95,96,97,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,98,99,100,101,102,436,103,437,438,104,105,106,107,108,109,110,111,112,113,439,440,441,442,443,444,445,446,447,3,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,116,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[232],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[221,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[84,493,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[17,157,18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[119,120,121,122,123,124,125,126,128,4,5,129,6,11,12,130,131,132,135,141,148,149,15,151,152,155,156,17,157,18,158,19,20,21,22,159,23,24,161,162,163,164,166,167,168,169,170,171,174,25,175,27,28,29,31,34,7,177,179,38,39,40,180,186,194,195,196,197,199,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,117,221,223,224,225,226,118,227,229,230,231,232,233,234,114,235,236,237,238,239,241,242,243,244,246,247,248,249,250,252,1,2,41,45,46,47,48,256,257,259,115,262,265,60,8,9,77,271,272,273,274,275,276,277,278,279,280,281,282,288,290,291,298,300,303,304,305,317,318,319,320,321,322,327,328,329,330,331,332,90,91,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,96,401,404,405,406,407,408,409,410,413,415,416,417,418,419,421,422,424,425,426,427,428,429,430,431,432,433,434,435,101,102,103,106,113,464,465,466,467,469],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:37","sourceCode":"if (!(java.util.LinkedList<org.easymock.internal.Range>.isEmpty())) {\n    final org.easymock.internal.Range org.easymock.internal.Range = java.util.LinkedList<org.easymock.internal.Range>.getLast();\n    if (!(org.easymock.internal.Range.hasFixedCount())) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n    } \n} ","type":"CtIfImpl"},"failures":[397,398],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[84,493,494],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[4,4,5,5,6,11,12,15,17,18,19,20,21,22,23,24,495,496,497,498,25,26,27,28,29,30,31,34,35,7,10,40,41,499,42,43,45,46,47,48,50,51,500,52,60,8,9,77,87,88,90,91,92,96,100,101,102,103,106,113],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":221,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":468,"org.easymock.tests2.UsageTest.argumentsOrdered":264,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":451,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":129,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":318,"org.easymock.tests.MockingTest.testPartialClassMocking":101,"org.easymock.tests.MockClassControlTest.testToString":107,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":245,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":375,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":484,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":409,"org.easymock.tests2.UsageTest.wrongArguments":258,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":273,"org.easymock.samples.ExampleTest.answerVsDelegate":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":88,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":438,"org.easymock.tests2.UsageConstraintsTest.testNull":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":213,"org.easymock.tests2.CaptureTest.testPrimitive":164,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":413,"org.easymock.tests.UsageTest.moreThanOneArgument":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":394,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":433,"org.easymock.tests.UsageTest.argumentsOrdered":475,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":396,"org.easymock.tests.UsageVarargTest.varargIntAccepted":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":481,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":55,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":444,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":282,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests.ReplayStateInvalidUsageTest.times":364,"org.easymock.tests2.DependencyTest.testClassMocking":13,"org.easymock.tests2.AnswerTest.answer":250,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":197,"org.easymock.tests2.CaptureTest.testAnd":161,"org.easymock.tests2.UsageTest.strictResetToDefault":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":400,"org.easymock.tests2.DelegateToTest.testDelegate":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":390,"org.easymock.tests.LimitationsTest.mockFinalMethod":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":408,"org.easymock.tests2.DependencyTest.testClassMockingSupport":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":286,"org.easymock.tests2.CaptureTest.testCapture1_2446744":165,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":195,"org.easymock.tests.UsageThrowableTest.throwError":289,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":358,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":324,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":79,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.MockingTest.testInterfaceMocking":436,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":67,"org.easymock.tests2.UsageTest.niceToStrict":259,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testCreateMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":144,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":384,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":271,"org.easymock.tests.UsageOverloadedMethodTest.overloading":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":233,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":371,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":493,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":232,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":170,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests.MockClassControlTest.testEquals":111,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":392,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":406,"org.easymock.tests2.CaptureTest.testCaptureAll":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":196,"org.easymock.tests.MockNameTest.defaultName":403,"org.easymock.tests2.UsageConstraintsTest.testMatches":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":434,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":356,"org.easymock.samples.ExampleTest.voteForRemovals":126,"org.easymock.tests.UsageVarargTest.allKinds":428,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":407,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":295,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":188,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":322,"org.easymock.tests2.UsageConstraintsTest.greaterThan":235,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":10,"org.easymock.samples.ExampleTest.voteForRemoval":123,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":86,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":132,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":36,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":325,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":113,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":206,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":317,"org.easymock.tests2.CaptureTest.testCaptureFirst":174,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":266,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":343,"org.easymock.tests2.CaptureTest.testCapture2_2446744":173,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":134,"org.easymock.tests2.UsageTest.moreThanOneArgument":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":427,"org.easymock.tests.GenericTest.testBridgedEquals":93,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":334,"org.easymock.tests.UsageExpectAndReturnTest.longType":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":404,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":393,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":240,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":267,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":431,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":335,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":294,"org.easymock.tests.MockingTest.testNiceClassMocking":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":20,"org.easymock.tests.MockingTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests2.UsageConstraintsTest.testContains":231,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":40,"org.easymock.tests2.UsageConstraintsTest.testFind":223,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":416,"org.easymock.tests.MockTypeTest.fromEasyMockClass":323,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":179,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":478,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":422,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":314,"org.easymock.tests.UsageTest.exactCallCountByLastCall":476,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":397,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":417,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":182,"org.easymock.tests.MockClassControlTest.testHashCode":110,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":69,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":398,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":440,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":194,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":193,"org.easymock.tests.UsageVarargTest.varargCharAccepted":421,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":309,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastCall":260,"org.easymock.tests.DefaultClassInstantiatorTest.object":80,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":439,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":382,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":498,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":181,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":109,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":381,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":306,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":77,"org.easymock.tests2.UsageTest.resumeIfFailure":265,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":320,"org.easymock.tests2.StubTest.stubWithReturnValue":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":482,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":345,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":457,"org.easymock.samples.SupportTest.voteForRemovals":120,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":387,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":116,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":385,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":285,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":238,"org.easymock.tests2.DelegateToTest.testWrongClass":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":429,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":430,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":253,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":386,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":272,"org.easymock.tests2.CaptureTest.testCaptureNone":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":270,"org.easymock.tests.UsageUnorderedTest.message":395,"org.easymock.tests.UsageVerifyTest.twoReturns":277,"org.easymock.tests.UsageVarargTest.varargByteAccepted":426,"org.easymock.tests2.ThreadingTest.testThreadSafe":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":72,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":332,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":315,"org.easymock.tests2.CaptureTest.testCapture_2617107":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":412,"org.easymock.tests2.UsageConstraintsTest.any":229,"org.easymock.tests2.StubTest.stub":217,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":363,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":319,"org.easymock.tests.UsageExpectAndThrowTest.longType":378,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":84,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":362,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":153,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":96,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":355,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":138,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests2.NameTest.nameForMocksControl":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":140,"org.easymock.tests2.MockedExceptionTest.testMockedException":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":62,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":473,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":178,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":102,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":29,"org.easymock.tests2.CaptureTest.testCaptureLast":168,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":287,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":24,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":239,"org.easymock.tests.MockingTest.testTwoMocks":100,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":383,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":263,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":243,"org.easymock.samples.ExampleTest.removeNonExistingDocument":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":143,"org.easymock.tests.UsageStrictMockTest.differentMethods":303,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":183,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":82,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":133,"org.easymock.tests2.MockBuilderTest.testCreateMockString":52,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":63,"org.easymock.tests.UsageExpectAndThrowTest.floatType":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":488,"org.easymock.tests.UsageVerifyTest.twoThrows":276,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":9,"org.easymock.samples.ExampleTest.voteAgainstRemoval":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":268,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":7,"org.easymock.tests.LimitationsTest.privateConstructor":95,"org.easymock.tests2.UsageConstraintsTest.testNotNull":242,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":296,"org.easymock.tests2.UsageTest.defaultResetToNice":262,"org.easymock.samples.ExampleTest.voteAgainstRemovals":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":351,"org.easymock.tests.UsageVarargTest.differentLength":423,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":137,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.UsageConstraintsTest.equals":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":32,"org.easymock.tests.UsageTest.openCallCountByLastCall":472,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":411,"org.easymock.tests.UsageCallCountTest.tooFewCalls":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":274,"org.easymock.tests.UsageThrowableTest.throwCheckedException":293,"org.easymock.tests.MockingTest.testStrictClassMocking":98,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":402,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":142,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":159,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.ObjectMethodsTest.testHashCode":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":480,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":135,"org.easymock.tests2.NameTest.nameForNiceMock":248,"org.easymock.tests2.DependencyTest.testInterfaceMocking":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":479,"org.easymock.samples.ExampleTest.addDocument":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":300,"org.easymock.tests.UsageVarargTest.varargLongAccepted":425,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatType":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":190,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":236,"org.easymock.tests.UsageThrowableTest.noUpperLimit":290,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":220,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":53,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":166,"org.easymock.tests2.SerializationTest.test":157,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":81,"org.easymock.tests2.UsageConstraintsTest.testSame":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":337,"org.easymock.samples.SupportTest.addDocument":119,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":64,"org.easymock.tests.GenericTest.testPackageScope":90,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":189,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":437,"org.easymock.tests2.NameTest.nameForMock":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":348,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":155,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":389,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":467,"org.easymock.tests2.MockedExceptionTest.testRealException":180,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":410,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":367,"org.easymock.tests2.NameTest.nameForStrictMock":247,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":44,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":485,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":83,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":237,"org.easymock.tests.ErrorMessageTest.testGetters":486,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":154,"org.easymock.tests2.UsageConstraintsTest.lessThan":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":205,"org.easymock.tests2.CaptureTest.testCaptureRightOne":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":68,"org.easymock.tests2.UsageConstraintsTest.testOr":226,"org.easymock.tests.UsageRangeTest.combination":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":26,"org.easymock.tests.UsageTest.wrongArguments":471,"org.easymock.tests2.MockBuilderTest.testWithConstructor":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":65,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":349,"org.easymock.tests.UsageVarargTest.varargShortAccepted":424,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":85,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":333,"org.easymock.tests2.UsageConstraintsTest.cmpTo":230,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests2.CaptureTest.testCaptureFromStub":172,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":357,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":470,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":350,"org.easymock.tests2.UsageConstraintsTest.constraints":117,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.samples.ExampleTest.addAndChangeDocument":128,"org.easymock.tests2.ConstraintsToStringTest.notToString":492,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":130,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":405,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":167,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":280,"org.easymock.tests.LimitationsTest.abstractClass":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":281,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":487,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210}}]
