[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[6,7,8,9,10,11,12],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[13,14,15,16,17,18],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[20,21,22,23,24,25],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[26,27,28,29,30,31,32,33,34,13,35,36,37,38,39,40,14,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,15,60,16,61,62,63,64,65,66,67,17,68,69,70,71,72,73,18,74,75,76,77,78,79,80,81,82,83,84,85,86,87,19,88,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[90,91,92,20,93],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[51,52,75,76,94,95,79],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[90,96,97,98,99,100,101,102,103,104,105,20,93,106,43,45,107,108,109,110,111,112,113,114,115,116,117,118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[120],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[121,122,123,124,125,126,127,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[90,129,130,91,91,92,92,2,4,97,98,99,100,101,103,104,105,20,93,106,43,44,107,131,108,21,132,133,134,46,47,135,136,137,138,139,24,140,110,141,111,25,112,113,142,114,143,144,145,146,115,147,148,116,117,118,149,150,151,152],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:163","failures":[153,124],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[154,155,156,157,26,158,159,160,161],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[121,122,123,124,125,126,127,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[162],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[154,155,156,157,26,163,158,159,160,161,164],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[165],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[65,166,167,168,169,170],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":102,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":89,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":10,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.MockingTest.testPartialClassMocking":116,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":14,"org.easymock.samples.BasicClassMockTest.testPrintContent":130,"org.easymock.tests2.DelegateToTest.testStubDelegate":96,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":22,"org.easymock.tests2.AnswerTest.stubAnswer":153,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":74,"org.easymock.tests2.UsageConstraintsTest.greaterThan":27,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":77,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":170,"org.easymock.tests2.UsageTest.wrongArguments":30,"org.easymock.tests.UsageStrictMockTest.range":75,"org.easymock.samples.ConstructorCalledMockTest.testTax":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":21,"org.easymock.samples.ExampleTest.answerVsDelegate":121,"org.easymock.tests2.ConstraintsToStringTest.orToString":34,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":98,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":152,"org.easymock.tests2.UsageConstraintsTest.testNull":163,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":57,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":120,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":55,"org.easymock.tests.UsageTest.moreThanOneArgument":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":45,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":15,"org.easymock.tests.UsageUnorderedTest.message":59,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests.GenericTest.testPackageScope":149,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.UsageTest.moreThanOneArgument":29,"org.easymock.tests.UsageVerifyTest.twoReturns":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":114,"org.easymock.tests.UsageTest.argumentsOrdered":71,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":129,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":41,"org.easymock.tests2.CaptureTest.testCapture_2617107":155,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":42,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":11,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":72,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":25,"org.easymock.tests2.UsageStrictMockTest.differentMethods":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":37,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":60,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":115,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":151,"org.easymock.tests2.AnswerTest.answer":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":160,"org.easymock.tests2.CaptureTest.testAnd":154,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":137,"org.easymock.tests2.UsageTest.strictResetToDefault":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":133,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":53,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":62,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":140,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":118,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":139,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":113,"org.easymock.tests.MockingTest.testNicePartialClassMocking":117,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":168,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":161,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":159,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests.MockingTest.testTwoMocks":148,"org.easymock.tests2.UsageStrictMockTest.range":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":19,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.CaptureTest.testCaptureRightOne":156,"org.easymock.tests.UsageStrictMockTest.differentMethods":76,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":94,"org.easymock.tests2.UsageConstraintsTest.testOr":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":167,"org.easymock.tests.UsageTest.wrongArguments":68,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":83,"org.easymock.tests2.ConstraintsToStringTest.andToString":40,"org.easymock.tests2.MockBuilderTest.testCreateMockString":144,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":147,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":123,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":36,"org.easymock.tests.UsageVerifyTest.twoThrows":80,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":95,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests.UsageVarargTest.varargShortAccepted":66,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":93,"org.easymock.samples.PartialClassMockTest.testGetArea":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.tests2.CompareToTest.testLessThan":1,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":48,"org.easymock.tests2.UsageConstraintsTest.testNotNull":164,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":23,"org.easymock.tests.DefaultClassInstantiatorTest.object":65,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":142,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":141,"org.easymock.tests2.CallbackTest.callback":125,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":61,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":64,"org.easymock.tests.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":13,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":138,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests2.UsageConstraintsTest.constraints":157,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":134,"org.easymock.tests2.ConstraintsToStringTest.notToString":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":101,"org.easymock.tests.UsageStrictMockTest.testVerify":78,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":106,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":38,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":73,"org.easymock.tests2.EasyMockSupportClassTest.testAll":105,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":136,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":145,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":39,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":16,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":56}}]
