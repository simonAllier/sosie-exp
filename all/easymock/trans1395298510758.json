[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:50","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[63,64,65,66,67,68,69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[1,1,2,2,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,6,86,87,88,89,90,91,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,62,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,43,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,35,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,38,214,215,216,39,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,41,42,238,239,240,241,242,243,244,245,246,247,248,249,44,45,46,47,250,251,252,253,254,255,256,257,48,258,259,260,261,262,263,49,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,63,344,64,345,346,347,348,349,350,351,352,353,50,354,355,356,51,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,52,53,54,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,65,427,428,429,66,67,430,55,431,432,433,434,435,436,68,437,438,439,440,69,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,56,57,58,59,60,61,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[161,166,167,254,482,483,361,362,365,366,392,393,453,456,459],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[6,86,87,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[160,161,166,167,485,486,487,488,489,490,491,360,361,362,365,366,456],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[268,492,493],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[6,86,87,484],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[357],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[1,2,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,6,86,87,88,494,495,496,89,90,91,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,62,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,43,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,32,185,186,33,187,188,189,190,34,191,497,35,192,193,37,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,38,214,498,215,216,39,40,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,41,42,499,238,239,240,241,242,243,244,245,246,247,248,249,44,45,46,47,250,251,252,253,254,255,256,257,48,258,259,260,261,262,263,49,500,264,265,266,267,268,269,501,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,502,63,344,64,345,346,347,348,349,350,351,352,353,50,354,355,356,51,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,503,504,398,399,400,401,402,52,53,54,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,65,427,428,429,66,67,430,55,431,432,433,434,435,436,68,437,438,439,440,69,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,56,57,58,59,60,61,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[268,492,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[112,160,161,166,167,505,485,506,507,508,509,486,510,487,511,488,252,254,255,489,512,490,513,482,491,483,301,302,360,361,362,365,366,391,392,393,416,419,420,421,453,456,457,459,460],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[322],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[1,1,2,2,78,79,82,6,87,88,89,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,184,514,185,186,187,188,189,190,191,35,192,193,515,194,195,196,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,38,214,216,39,516,41,42,44,45,46,264,265,266,267,268,269,270,271,272,273,274,275,277,280,309,314,315,316,317,318,319,320,321,322,323,324,325,326,344,397,400,411,412,413,414],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[149],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[161,166,167,254,483,361,362,365,366,392,393,453,456,459],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[113,517],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[97,104,133,135,143],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[518],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"bridgeMethod","equalsMethod":"result"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[102],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[519,520,518,521,522,523],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[1,1,2,2,78,79,82,6,87,10,13,23,29,184,514,185,186,188,189,190,191,192,193,515,194,195,196,198,199,200,201,203,206,207,208,209,212,213,38,214,216,39,524,516,525,526,41,46,273,274,275,277,315,323,324,325,344,397,400,413],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MocksControl:136","failures":[1,1,2,2,78,79,82,6,87,88,494,495,89,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,184,185,186,187,188,189,190,191,35,192,193,194,195,196,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,38,214,216,39,217,218,41,42,44,45,46,264,265,266,267,268,269,270,271,272,273,274,275,277,280,314,315,316,317,318,319,320,321,322,323,324,325,326,344,397,400,411,412,413,414],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests2.UsageTest.argumentsOrdered":167,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":433,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":162,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":81,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":57,"org.easymock.tests.MockingTest.testPartialClassMocking":274,"org.easymock.tests.MockClassControlTest.testToString":316,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":233,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":368,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":105,"org.easymock.tests2.UsageTest.wrongArguments":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":355,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":260,"org.easymock.samples.ExampleTest.answerVsDelegate":71,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":400,"org.easymock.tests2.UsageConstraintsTest.testNull":101,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":279,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":198,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":321,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":358,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":387,"org.easymock.tests.UsageTest.moreThanOneArgument":360,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":470,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":463,"org.easymock.tests.UsageTest.argumentsOrdered":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":332,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":422,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":248,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":426,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":508,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.ReplayStateInvalidUsageTest.times":352,"org.easymock.tests2.DependencyTest.testClassMocking":217,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":132,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":504,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":312,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":467,"org.easymock.tests2.DelegateToTest.testDelegate":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":383,"org.easymock.tests.LimitationsTest.mockFinalMethod":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":449,"org.easymock.tests2.DependencyTest.testClassMockingSupport":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":301,"org.easymock.tests2.CaptureTest.testCapture1_2446744":137,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":130,"org.easymock.tests.UsageThrowableTest.throwError":403,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":346,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":399,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":472,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":31,"org.easymock.samples.PartialClassMockTest.testGetArea":82,"org.easymock.tests.MockingTest.testInterfaceMocking":276,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":423,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":395,"org.easymock.tests2.UsageTest.niceToStrict":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":18,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":65,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":188,"org.easymock.tests2.MockBuilderTest.testCreateMock":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":229,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":377,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":503,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":452,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":258,"org.easymock.tests.UsageOverloadedMethodTest.overloading":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":22,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":418,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":110,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":292,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":492,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":142,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":333,"org.easymock.tests2.EasyMockSupportClassTest.testAll":10,"org.easymock.tests.MockClassControlTest.testEquals":320,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":324,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":385,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":524,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":447,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":131,"org.easymock.tests.MockNameTest.defaultName":262,"org.easymock.tests2.UsageConstraintsTest.testMatches":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":471,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":64,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests.UsageVarargTest.allKinds":341,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":448,"org.easymock.samples.BasicClassMockTest.testPrintContent":79,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":409,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":250,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":245,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":501,"org.easymock.tests2.UsageConstraintsTest.greaterThan":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":11,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":209,"org.easymock.samples.ExampleTest.voteForRemoval":72,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":270,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":210,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":201,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":344,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":56,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":152,"org.easymock.tests2.CaptureTest.testCaptureFirst":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":288,"org.easymock.tests2.UsageTest.moreThanOneArgument":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":150,"org.easymock.tests2.CaptureTest.testCapture2_2446744":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":440,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":193,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":340,"org.easymock.tests.GenericTest.testBridgedEquals":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":480,"org.easymock.tests.UsageExpectAndReturnTest.longType":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":445,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":170,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":515,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":386,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":118,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":468,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":53,"org.easymock.tests.UsageCallCountTest.tooManyCalls":481,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":512,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":373,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":213,"org.easymock.tests.MockingTest.testNiceClassMocking":280,"org.easymock.tests.MockingTest.testClassMocking":272,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":514,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":474,"org.easymock.tests2.UsageConstraintsTest.testContains":109,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":100,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":390,"org.easymock.tests.MockTypeTest.fromEasyMockClass":398,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":454,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageExpectAndReturnTest.object":291,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":178,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":335,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":307,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":5,"org.easymock.tests.UsageTest.exactCallCountByLastCall":367,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":67,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":464,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":491,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":42,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":297,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":239,"org.easymock.tests.MockClassControlTest.testHashCode":319,"org.easymock.tests2.EasyMockSupportTest.testVerify":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":20,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":507,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":465,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":451,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":129,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":183,"org.easymock.tests.UsageVarargTest.varargCharAccepted":334,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":500,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests.DefaultClassInstantiatorTest.object":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":450,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":305,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":375,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":526,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":207,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":52,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":317,"org.easymock.tests2.UsageTest.resumeIfFailure":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":59,"org.easymock.tests2.StubTest.stubWithReturnValue":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":290,"org.easymock.tests2.SerializationTest.testAllMockedMethod":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":487,"org.easymock.samples.SupportTest.voteForRemovals":84,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":241,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":380,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":484,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":443,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":124,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":329,"org.easymock.tests.UsageExpectAndThrowTest.object":378,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":116,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":342,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":343,"org.easymock.tests.UsageStrictMockTest.range":459,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":90,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":379,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":50,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":259,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":396,"org.easymock.tests2.CaptureTest.testCaptureNone":141,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":520,"org.easymock.tests.UsageUnorderedTest.message":453,"org.easymock.tests.UsageVerifyTest.twoReturns":393,"org.easymock.tests.UsageVarargTest.varargByteAccepted":339,"org.easymock.tests2.ThreadingTest.testThreadSafe":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":24,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":478,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":78,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":308,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":488,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":357,"org.easymock.tests2.UsageConstraintsTest.any":107,"org.easymock.tests2.StubTest.stub":257,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":58,"org.easymock.tests.UsageExpectAndThrowTest.longType":371,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests.LimitationsTest.mockNativeMethod":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":300,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":325,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":525,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":518,"org.easymock.tests2.NameTest.nameForMocksControl":237,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":12,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":364,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":93,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":191,"org.easymock.tests.MockingTest.testNicePartialClassMocking":275,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":200,"org.easymock.tests2.CaptureTest.testCaptureLast":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":302,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":39,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":273,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":376,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":166,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":121,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":523,"org.easymock.samples.ExampleTest.removeNonExistingDocument":76,"org.easymock.tests.UsageStrictMockTest.differentMethods":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":228,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":240,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":522,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":266,"org.easymock.tests2.ConstraintsToStringTest.andToString":510,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":149,"org.easymock.tests2.MockBuilderTest.testCreateMockString":194,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":14,"org.easymock.tests.UsageExpectAndThrowTest.floatType":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":9,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":499,"org.easymock.tests.UsageVerifyTest.twoThrows":392,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":23,"org.easymock.samples.ExampleTest.voteAgainstRemoval":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":394,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":208,"org.easymock.tests.LimitationsTest.privateConstructor":412,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":4,"org.easymock.tests2.UsageConstraintsTest.testNotNull":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":410,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests2.UsageTest.defaultResetToNice":165,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests.UsageVarargTest.differentLength":336,"org.easymock.tests2.CallbackTest.callback":85,"org.easymock.tests2.UsageConstraintsTest.equals":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":513,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":204,"org.easymock.tests.UsageTest.openCallCountByLastCall":363,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":51,"org.easymock.tests.UsageCallCountTest.tooFewCalls":476,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":261,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":521,"org.easymock.tests.UsageThrowableTest.throwCheckedException":407,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":490,"org.easymock.tests.MockingTest.testStrictClassMocking":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":216,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":227,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":215,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":128,"org.easymock.tests.ObjectMethodsTest.testHashCode":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":151,"org.easymock.tests2.NameTest.nameForNiceMock":236,"org.easymock.tests2.DependencyTest.testInterfaceMocking":219,"org.easymock.samples.ExampleTest.addDocument":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":25,"org.easymock.tests2.DelegateToTest.testStubDelegate":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":30,"org.easymock.tests2.AnswerTest.stubAnswer":127,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":457,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":497,"org.easymock.tests.UsageVarargTest.varargLongAccepted":338,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.floatType":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.tests2.ConstraintsToStringTest.orToString":505,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":419,"org.easymock.tests.UsageThrowableTest.noUpperLimit":404,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":247,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":88,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":138,"org.easymock.tests2.SerializationTest.test":86,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":493,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":265,"org.easymock.tests2.UsageConstraintsTest.testSame":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":282,"org.easymock.samples.SupportTest.addDocument":83,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":498,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":15,"org.easymock.tests.GenericTest.testPackageScope":323,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":66,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":246,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":278,"org.easymock.tests2.NameTest.nameForMock":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":37,"org.easymock.tests2.UsageStrictMockTest.differentMethods":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":382,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":313,"org.easymock.tests2.MockedExceptionTest.testRealException":47,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":91,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":436,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":252,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":356,"org.easymock.tests2.NameTest.nameForStrictMock":235,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":199,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":89,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":115,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":185,"org.easymock.tests2.UsageStrictMockTest.range":254,"org.easymock.tests2.UsageConstraintsTest.lessThan":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests2.CaptureTest.testCaptureRightOne":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":19,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":519,"org.easymock.tests2.UsageConstraintsTest.testOr":103,"org.easymock.tests.UsageRangeTest.combination":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":196,"org.easymock.tests.UsageTest.wrongArguments":362,"org.easymock.tests2.MockBuilderTest.testWithConstructor":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":16,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":294,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":269,"org.easymock.tests.UsageVarargTest.varargShortAccepted":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":479,"org.easymock.tests2.UsageConstraintsTest.cmpTo":108,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":164,"org.easymock.tests2.CaptureTest.testCaptureFromStub":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":345,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":186,"org.easymock.tests.UsageTest.unexpectedCallWithArray":361,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":456,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":477,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":295,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":458,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.samples.ExampleTest.addAndChangeDocument":77,"org.easymock.tests2.ConstraintsToStringTest.notToString":506,"org.easymock.tests.UsageStrictMockTest.testVerify":462,"org.easymock.tests2.ConstraintsToStringTest.containsToString":0,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":80,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":455,"org.easymock.tests2.CompareToTest.testGreateThan":517,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":446,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":139,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":424,"org.easymock.tests.LimitationsTest.abstractClass":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":425,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":176,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":331}}]
