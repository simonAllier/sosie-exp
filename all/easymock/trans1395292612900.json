[{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,5,6,7,14,130,131,132,133,134,135,136,137,20,22,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,29,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,37,38,39,40,41,42,43,44,207,208,209,45,210,211,212,51,213,214,215,216,217,55,57,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.RecordState:262","failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,256,257,258,259,260,126,261,262,263,264,265,266,267,6,268,269,130,131,132,133,134,135,270,150,271,272,273,196,197,198,199,274,275,225],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[276,204,205,206],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[245],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[277,278,279,280,281],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[181,183,190,228,229,233,234,282,245],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[283,284,285,278,279,286,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[288,289,290,291,292,293],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:85","sourceCode":"return java.util.List<T>.get(0)","type":"CtReturnImpl"},"failures":[181,183,184,294,185,186,187,189,295,190,296,191],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[288,288,289,289,290,204,297,298,254,287],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[299,5,6,7,14,16,17,18,19,20,21,22,41,42,43,44,51,52,53,54,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[288,289,290,291,292,300,293],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[1,299,301,302,5,6,7,14,16,17,18,19,20,21,22,41,42,43,44,51,52,53,54,55,56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[303,304,15,19,305,306],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[71,75,76,78,81,93,97,98,100,103,307,308,309,21,22,310,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[181,183,190,228,229,233,234,282,245],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[276,204,205,206],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[204,283,284,285,311,286,298,254,287],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[113,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[270,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[17,53,312],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[313,255],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[314,315,316],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[317,318],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[283,284,285,319,278,279,311,286,280,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[320,321,322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[313],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":229,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.UsageTest.argumentsOrdered":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":133,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":214,"org.easymock.tests2.StubTest.stubWithReturnValue":225,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":286,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":98,"org.easymock.tests2.SerializationTest.testAllMockedMethod":206,"org.easymock.tests2.DelegateToTest.testReturnException":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":131,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":281,"org.easymock.tests.MockingTest.testPartialClassMocking":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":306,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":313,"org.easymock.tests.MockClassControlTest.testToString":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":67,"org.easymock.tests.UsageExpectAndThrowTest.object":77,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":299,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":171,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":172,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":235,"org.easymock.tests2.UsageTest.wrongArguments":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":127,"org.easymock.samples.ConstructorCalledMockTest.testTax":288,"org.easymock.tests.UsageStrictMockTest.range":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":117,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":11,"org.easymock.tests2.UsageConstraintsTest.testNull":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":176,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":86,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":116,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":153,"org.easymock.tests2.CaptureTest.testCaptureNone":188,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":168,"org.easymock.tests2.ThreadingTest.testThreadSafe":192,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":307,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.UsageVarargTest.varargIntAccepted":163,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":148,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.CaptureTest.testCapture_2617107":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":267,"org.easymock.tests2.UsageConstraintsTest.any":236,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":211,"org.easymock.tests2.StubTest.stub":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests.UsageExpectAndThrowTest.longType":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":132,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":322,"org.easymock.tests2.SerializationTest.testClass":204,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests.LimitationsTest.mockNativeMethod":173,"org.easymock.tests2.AnswerTest.answer":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":108,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":222,"org.easymock.tests2.CaptureTest.testAnd":181,"org.easymock.tests2.UsageTest.strictResetToDefault":212,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":29,"org.easymock.tests2.NameTest.nameForMocksControl":44,"org.easymock.tests2.MockedExceptionTest.testMockedException":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":111,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":269,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":309,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":71,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":142,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":174,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":277,"org.easymock.tests2.CaptureTest.testCaptureLast":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":134,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":40,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":26,"org.easymock.tests2.CaptureTest.testCapture1_2446744":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":75,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":250,"org.easymock.tests.UsageThrowableTest.throwError":260,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":10,"org.easymock.tests2.MockBuilderTest.testCreateMockString":50,"org.easymock.tests.UsageExpectAndThrowTest.floatType":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":155,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":242,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":180,"org.easymock.tests2.UsageTest.niceToStrict":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":68,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":25,"org.easymock.tests2.UsageConstraintsTest.testNotNull":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":265,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":196,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":314,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":210,"org.easymock.tests2.UsageTest.defaultResetToNice":215,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":104,"org.easymock.tests2.CallbackTest.callback":195,"org.easymock.tests2.UsageConstraintsTest.equals":312,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":290,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":226,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":115,"org.easymock.tests.UsageCallCountTest.tooFewCalls":146,"org.easymock.tests.UsageOverloadedMethodTest.overloading":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":270,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":100,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":239,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":118,"org.easymock.tests.UsageThrowableTest.throwCheckedException":262,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":88,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":84,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":121,"org.easymock.tests2.CaptureTest.testCaptureAll":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":39,"org.easymock.tests.MockNameTest.defaultName":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.testMatches":241,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":154,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":278,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":194,"org.easymock.tests2.NameTest.nameForNiceMock":43,"org.easymock.tests.UsageVarargTest.allKinds":170,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":122,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.DelegateToTest.testStubDelegate":208,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":264,"org.easymock.tests2.AnswerTest.stubAnswer":202,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":135,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":311,"org.easymock.tests2.UsageConstraintsTest.greaterThan":243,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":110,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.UsageVarargTest.varargLongAccepted":167,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":193,"org.easymock.tests.UsageExpectAndReturnTest.floatType":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":254,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":289,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":244,"org.easymock.tests.UsageThrowableTest.noUpperLimit":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":274,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":227,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":114,"org.easymock.tests2.SerializationTest.test":205,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":185,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":298,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":126,"org.easymock.tests2.UsageConstraintsTest.testSame":232,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":130,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests2.CaptureTest.testCaptureFirst":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":96,"org.easymock.tests.GenericTest.testPackageScope":87,"org.easymock.tests2.UsageTest.moreThanOneArgument":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":308,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":169,"org.easymock.tests.GenericTest.testBridgedEquals":255,"org.easymock.tests2.NameTest.nameForMock":41,"org.easymock.tests.UsageExpectAndReturnTest.longType":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":83,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":151,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":112,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":145,"org.easymock.tests2.MockedExceptionTest.testRealException":199,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":72,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.testContains":238,"org.easymock.tests2.NameTest.nameForStrictMock":42,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":144,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":198,"org.easymock.tests2.UsageConstraintsTest.testFind":230,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":316,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":252,"org.easymock.tests.MockTypeTest.fromEasyMockClass":9,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":177,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":253,"org.easymock.tests.UsageExpectAndReturnTest.object":99,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":301,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":245,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":179,"org.easymock.tests2.UsageStrictMockTest.range":56,"org.easymock.tests2.UsageConstraintsTest.lessThan":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":310,"org.easymock.tests2.CaptureTest.testCaptureRightOne":190,"org.easymock.tests2.UsageConstraintsTest.testOr":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":287,"org.easymock.tests.UsageRangeTest.combination":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":105,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":161,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests2.MockBuilderTest.testWithConstructor":291,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":102,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":272,"org.easymock.tests.UsageVarargTest.varargShortAccepted":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageConstraintsTest.cmpTo":237,"org.easymock.tests.UsageVarargTest.varargCharAccepted":164,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":271,"org.easymock.tests2.CaptureTest.testCaptureFromStub":296,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":46,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":261,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":147,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":103,"org.easymock.tests2.CaptureTest.testCapture":295,"org.easymock.tests2.UsageConstraintsTest.constraints":228,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":73,"org.easymock.samples.ExampleTest.addAndChangeDocument":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":106,"org.easymock.tests.UsageStrictMockTest.testVerify":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":257,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":3,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":120,"org.easymock.tests2.UsageTest.resumeIfFailure":216,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":95,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":8,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":33,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":162}}]
