[{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:130","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.Range:36","failures":[60],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[61,62,63,64,65,66,3,5,67,68,69,70,71,72,6,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,7,116,117,118,119,120,121,122,123,124,125,126,127,128,9,10,11,129,130,131,132,133,134,135,136,137,138,60,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,15,15,16,16,17,182,183,184,185,186,187,188,189,190,23,24,25,26,191,27,28,192,193,194,195,196,197,198,199,200,201,202,29,203,204,205,206,207,208,30,33,35,37,38,40,43,44,45,46,47,48,209,49,50,51,53,55,56,57,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,58,274,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[15,16,30,276,277,278,279,280,281,282,283,284,285,286,58],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[72,287,73,75,107,288,289,290,169,170,186,188,194,291,292,293,294,295,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[6,117,9,10,11,17,23,24,25,26,191,27,28,207,30,33,35,37,38,40,43,44,45,46,47,209,49,51,220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[72,287,74,298,299,288,289,290,300,169,170,187,291,292,293],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[301,302],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[224,303,231,250,251,253,255,256,304,267,271],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"failures":[61,62,63,64,65,305,306,66,307,308,309,310,311,312,301,3,4,5,302,67,68,69,70,71,72,313,314,315,316,317,318,319,320,321,322,323,324,325,6,326,327,287,73,328,74,75,329,330,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,331,104,332,105,106,107,299,288,108,109,289,290,110,111,112,113,114,115,7,116,117,118,119,120,333,334,335,336,337,121,338,122,123,339,124,300,340,341,342,343,344,345,346,347,348,349,350,125,126,127,351,352,353,354,355,128,356,357,8,9,10,358,11,359,360,361,129,130,131,132,133,134,135,136,137,138,60,12,362,363,13,364,365,139,140,366,367,14,368,369,370,371,372,373,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,374,375,376,377,378,379,380,381,382,383,384,385,386,171,172,173,174,175,176,177,178,179,387,180,388,181,15,15,16,16,17,389,390,18,19,391,182,392,393,394,395,183,396,397,398,399,184,185,400,401,186,402,187,188,403,189,190,404,405,406,407,23,24,25,26,191,27,28,192,193,194,291,195,408,196,197,198,292,293,199,200,201,202,29,203,204,205,206,207,208,30,276,409,410,294,295,296,297,31,277,33,34,278,411,35,36,37,279,38,280,39,40,282,42,412,413,414,43,415,416,44,417,418,419,420,421,422,423,424,425,45,426,427,428,429,430,46,431,432,47,48,209,49,50,51,52,53,286,433,54,55,56,57,434,435,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,303,226,227,436,437,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,438,439,440,441,442,443,247,444,445,446,447,448,449,450,451,248,249,250,251,252,253,254,255,256,257,304,258,259,260,261,262,263,264,265,266,267,268,269,452,270,271,272,273,58,274,59,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[84,85,92,99,140,174],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[453,58,274,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[206],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[72,287,74,298,299,288,289,290,169,170,187,291,292,293],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[453,58,274,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[454],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[455,456,457,458,459,30,276,279,280,58],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[61,62,63,64,65,305,306,66,307,308,309,310,311,312,301,3,4,5,302,67,68,69,70,71,72,313,314,315,316,317,318,319,320,321,322,323,324,325,460,6,461,326,327,287,73,328,74,75,329,330,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,331,104,332,462,105,463,106,107,299,288,108,109,289,290,110,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,111,480,481,482,483,484,112,485,113,114,115,7,116,117,118,119,120,333,334,335,336,337,121,338,122,123,339,124,300,340,341,342,486,343,344,345,346,347,348,349,350,125,126,127,351,352,353,354,355,487,128,356,357,8,9,10,358,11,359,360,361,129,130,131,132,133,134,135,136,137,138,60,12,362,363,13,364,365,139,140,366,367,14,368,369,370,371,372,373,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,374,375,376,377,379,380,381,382,383,384,386,171,172,173,174,175,176,177,178,179,387,180,388,181,15,16,17,389,390,18,19,391,182,392,393,394,488,395,183,396,397,398,489,490,399,491,492,184,185,400,401,186,402,187,188,403,189,190,404,405,406,407,23,24,25,26,191,27,28,192,193,194,291,195,408,196,197,198,292,293,199,200,201,202,29,203,204,205,206,207,208,30,276,410,294,295,296,297,31,33,34,411,35,36,37,38,280,39,40,42,412,413,414,43,415,416,44,417,418,419,420,421,422,423,424,425,45,426,427,428,429,430,46,431,432,47,48,209,49,50,51,52,493,53,286,433,54,55,56,57,434,435,210,211,212,213,214,215,216,494,217,218,219,220,221,222,223,224,225,303,226,227,436,437,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,438,440,441,442,495,443,247,444,445,446,496,497,447,448,449,450,451,248,249,250,251,498,252,253,254,255,256,257,304,258,259,260,261,262,263,264,265,266,267,268,269,452,270,271,272,273,58,274,59,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.ConstructorArgs:50","failures":[15,16,25,28,499,30,276,277,278,279,280,281,282,412,413,414,43,415,416,44,417,418,419,420,421,422,423,424,425,45,426,427,428,429,430,46,431,432,500,501,502,58],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[70,76,79,80,81,82,83,123,133,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,169,190],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[73,106,108,109,110,168,170,186,192,196,197,200,210],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[466,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:290","sourceCode":"return ","type":"CtReturnImpl"},"failures":[61,62,305,66,307,308,309,311,312,3,4,67,68,69,70,71,72,6,326,327,287,73,328,74,75,329,330,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,288,108,109,289,290,110,7,116,117,118,119,120,333,121,122,123,124,340,341,342,343,344,345,346,347,348,349,350,125,9,10,11,133,136,137,139,140,367,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,176,177,178,179,387,180,181,17,389,390,18,19,391,182,183,184,185,400,401,186,402,187,188,403,189,190,23,24,25,26,191,27,28,192,193,194,291,195,408,196,197,198,292,293,199,200,29,204,205,206,207,208,30,294,295,296,297,33,35,37,38,40,43,44,45,46,47,48,209,49,50,51,53,55,56,57,210,213,214,215,216,217,219,220,221,223,224,225,303,226,227,436,437,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,438,247,248,249,250,251,252,253,254,255,256,257,304,258,259,260,261,262,263,264,265,266,267,268,269,452,270,271,272,273,58,274,59,275],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[5,12,13,17,31,33,34,35,36,37,38,39,40,42,44,45,46,52,55,56,435,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[303,231,250],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[224,303,231,250,251,253,255,256,304,267,271],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[61,62,63,64,65,305,306,66,307,308,309,310,311,312,301,3,4,5,302,503,67,68,69,70,71,72,313,314,315,316,317,318,319,320,321,322,323,324,325,460,6,461,326,327,287,73,328,74,75,329,330,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,331,104,332,462,105,463,106,107,299,288,108,109,289,290,110,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,111,480,481,482,483,484,112,485,113,114,115,7,116,117,118,119,120,333,334,335,336,337,121,338,122,123,339,124,300,340,341,342,486,343,344,345,346,347,348,349,350,125,126,127,351,352,353,354,355,487,128,356,357,8,9,10,358,11,359,360,361,129,130,131,132,133,134,135,136,137,138,60,12,504,505,362,363,13,364,365,139,140,366,367,14,368,369,370,371,372,373,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,374,375,376,377,378,379,380,381,382,383,384,385,386,171,172,173,174,175,176,177,178,179,387,180,388,181,15,16,17,389,390,18,19,391,182,392,393,394,488,395,183,396,397,398,489,490,399,491,492,184,185,400,401,186,402,187,188,403,189,190,404,506,507,508,405,406,407,23,24,25,26,509,191,27,28,499,192,193,194,291,195,408,196,197,198,292,293,199,200,201,202,29,203,204,205,206,207,208,30,276,409,410,294,295,296,297,31,277,33,34,278,411,35,36,37,279,38,510,280,39,40,282,42,412,413,414,43,415,416,44,417,418,419,420,421,422,423,424,425,45,426,427,428,429,430,46,431,432,47,48,209,49,50,51,52,493,53,286,433,54,55,56,57,434,435,210,211,212,213,214,215,216,494,217,218,219,220,221,222,223,224,225,303,226,227,436,437,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,438,439,440,441,442,495,443,247,444,445,446,496,497,447,448,449,450,451,248,249,250,251,498,252,253,254,255,256,257,304,258,259,260,261,262,263,264,265,266,267,268,269,452,270,271,272,273,58,274,59,275],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[511,262],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[305,66,307,310,311,312,72,326,287,73,328,74,75,329,331,104,106,107,299,288,289,290,110,338,339,124,300,345,352,355,487,12,362,363,13,364,365,366,368,369,370,164,168,169,170,183,396,400,186,402,187,188,403,24,25,27,28,192,194,291,195,408,292,293,199,200,294,295,296,297,31,33,34,37,38,39,40,42,48,54,57,435,236,238,240,241,243,244,247,444,250,264,275],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":251,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests2.UsageTest.argumentsOrdered":293,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":474,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":408,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":389,"org.easymock.tests2.DelegateToTest.testReturnException":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":130,"org.easymock.tests.MockingTest.testPartialClassMocking":9,"org.easymock.tests.MockClassControlTest.testToString":368,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":410,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":144,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":44,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":455,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageTest.wrongArguments":291,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":376,"org.easymock.samples.ExampleTest.answerVsDelegate":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":13,"org.easymock.tests2.UsageConstraintsTest.testNull":253,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":244,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":373,"org.easymock.tests2.CaptureTest.testPrimitive":226,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":163,"org.easymock.tests.UsageTest.moreThanOneArgument":107,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":173,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":135,"org.easymock.tests.UsageTest.argumentsOrdered":290,"org.easymock.tests.UsageVarargTest.varargIntAccepted":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":116,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":507,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":490,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":120,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":247,"org.easymock.tests.ReplayStateInvalidUsageTest.times":321,"org.easymock.tests2.DependencyTest.testClassMocking":491,"org.easymock.tests2.AnswerTest.answer":210,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":480,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":451,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":505,"org.easymock.tests2.CaptureTest.testAnd":224,"org.easymock.tests2.UsageTest.strictResetToDefault":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":239,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":60,"org.easymock.tests2.DelegateToTest.testDelegate":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":159,"org.easymock.tests.LimitationsTest.mockFinalMethod":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":337,"org.easymock.tests2.DependencyTest.testClassMockingSupport":492,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":331,"org.easymock.tests2.CaptureTest.testCapture1_2446744":227,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":449,"org.easymock.tests.UsageThrowableTest.throwError":76,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":363,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":503,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":175,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":432,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":316,"org.easymock.tests.MockingTest.testInterfaceMocking":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":126,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":421,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":145,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":446,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":153,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":504,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":425,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":262,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":95,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":261,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":230,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":43,"org.easymock.tests.MockClassControlTest.testEquals":372,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":161,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":450,"org.easymock.tests2.CaptureTest.testCaptureAll":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":335,"org.easymock.tests.MockNameTest.defaultName":366,"org.easymock.tests2.UsageConstraintsTest.testMatches":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":174,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":313,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests.UsageVarargTest.allKinds":350,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":336,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":82,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":134,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":459,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":385,"org.easymock.tests2.UsageConstraintsTest.greaterThan":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":165,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":57,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":386,"org.easymock.samples.ExampleTest.voteForRemoval":178,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":434,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":508,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":52,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":7,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":237,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":129,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":218,"org.easymock.tests2.CaptureTest.testCaptureFirst":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":238,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":91,"org.easymock.tests2.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.CaptureTest.testCapture2_2446744":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":481,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":349,"org.easymock.tests.GenericTest.testBridgedEquals":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":162,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":41,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":452,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":114,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":24,"org.easymock.tests.MockingTest.testNiceClassMocking":361,"org.easymock.tests.MockingTest.testClassMocking":357,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":32,"org.easymock.tests2.UsageConstraintsTest.testContains":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":306,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":252,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":143,"org.easymock.tests.MockTypeTest.fromEasyMockClass":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":217,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests.UsageExpectAndReturnTest.object":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":456,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":344,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":354,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":502,"org.easymock.tests.UsageTest.exactCallCountByLastCall":110,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":100,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":340,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":122,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.MockClassControlTest.testHashCode":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":423,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":137,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":64,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":448,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":439,"org.easymock.tests.UsageVarargTest.varargCharAccepted":343,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":378,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":485,"org.easymock.tests2.UsageTest.openCallCountByLastCall":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":0,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":246,"org.easymock.tests.DefaultClassInstantiatorTest.object":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":63,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":352,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":424,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":495,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":150,"org.easymock.tests.CapturesMatcherTest.test":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":46,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":369,"org.easymock.tests2.UsageTest.resumeIfFailure":199,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":12,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":506,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":132,"org.easymock.tests2.StubTest.stubWithReturnValue":190,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":270,"org.easymock.tests2.SerializationTest.testAllMockedMethod":59,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":285,"org.easymock.samples.SupportTest.voteForRemovals":182,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":156,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":453,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":112,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":211,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":463,"org.easymock.tests.UsageExpectAndThrowTest.object":154,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":268,"org.easymock.tests2.DelegateToTest.testWrongClass":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":140,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":406,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":412,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":375,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":127,"org.easymock.tests2.CaptureTest.testCaptureNone":229,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests.UsageVerifyTest.twoReturns":170,"org.easymock.tests.UsageVarargTest.varargByteAccepted":348,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":426,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":355,"org.easymock.tests2.CaptureTest.testCapture_2617107":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests2.UsageConstraintsTest.any":258,"org.easymock.tests2.StubTest.stub":189,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndThrowTest.longType":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":131,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":402,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":183,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":103,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":5,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":442,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":22,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":403,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests2.MockedExceptionTest.testMockedException":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":416,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":494,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":148,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":11,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":10,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":440,"org.easymock.tests2.CaptureTest.testCaptureLast":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":28,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":256,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":269,"org.easymock.tests.MockingTest.testTwoMocks":8,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":499,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":152,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":292,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":272,"org.easymock.samples.ExampleTest.removeNonExistingDocument":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":445,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":381,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":417,"org.easymock.tests.UsageExpectAndThrowTest.floatType":146,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":409,"org.easymock.tests.UsageVerifyTest.twoThrows":169,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":45,"org.easymock.samples.ExampleTest.voteAgainstRemoval":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests.LimitationsTest.privateConstructor":460,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":501,"org.easymock.tests2.UsageConstraintsTest.testNotNull":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":83,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":201,"org.easymock.tests2.UsageTest.defaultResetToNice":198,"org.easymock.samples.ExampleTest.voteAgainstRemovals":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":441,"org.easymock.tests.UsageVarargTest.differentLength":345,"org.easymock.tests2.CallbackTest.callback":275,"org.easymock.tests2.UsageConstraintsTest.equals":498,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":286,"org.easymock.tests.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":69,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":377,"org.easymock.tests.UsageThrowableTest.throwCheckedException":80,"org.easymock.tests.MockingTest.testStrictClassMocking":356,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":444,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":25,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":191,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":215,"org.easymock.tests2.CompareToTest.testGreateOrEqual":511,"org.easymock.tests.ObjectMethodsTest.testHashCode":353,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests2.DependencyTest.testInterfaceMocking":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":457,"org.easymock.samples.ExampleTest.addDocument":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":431,"org.easymock.tests2.DelegateToTest.testStubDelegate":220,"org.easymock.tests2.AnswerTest.stubAnswer":214,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":73,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":510,"org.easymock.tests.UsageVarargTest.varargLongAccepted":347,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":102,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":489,"org.easymock.tests.UsageThrowableTest.noUpperLimit":77,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":266,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":404,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":436,"org.easymock.tests2.SerializationTest.test":274,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.tests2.UsageConstraintsTest.testSame":254,"org.easymock.samples.SupportTest.addDocument":391,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":509,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":418,"org.easymock.tests.GenericTest.testPackageScope":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":398,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":359,"org.easymock.tests2.NameTest.nameForMock":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":96,"org.easymock.tests2.UsageStrictMockTest.differentMethods":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":282,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":433,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":158,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":167,"org.easymock.tests2.MockedExceptionTest.testRealException":203,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":407,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":324,"org.easymock.tests2.NameTest.nameForStrictMock":295,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":411,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":1,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":405,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":267,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":382,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":187,"org.easymock.tests2.UsageConstraintsTest.lessThan":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":472,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":422,"org.easymock.tests2.CaptureTest.testCaptureRightOne":231,"org.easymock.tests2.UsageConstraintsTest.testOr":255,"org.easymock.tests.UsageRangeTest.combination":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":48,"org.easymock.tests.UsageTest.wrongArguments":288,"org.easymock.tests2.MockBuilderTest.testWithConstructor":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":419,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":14,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":97,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":384,"org.easymock.tests.UsageVarargTest.varargShortAccepted":346,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":259,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":197,"org.easymock.tests2.CaptureTest.testCaptureFromStub":232,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":287,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":98,"org.easymock.tests2.UsageConstraintsTest.constraints":250,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.samples.ExampleTest.addAndChangeDocument":181,"org.easymock.tests.UsageStrictMockTest.testVerify":330,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":390,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":334,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":118,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":90,"org.easymock.tests.LimitationsTest.abstractClass":325,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":241,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":341}}]
