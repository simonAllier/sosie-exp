[{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[11],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:318","failures":[13,14],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[15,16,17,18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[21,22,23],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,26,27,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,4,96,97,98,99,100,101,102,103,29,30,31,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,32,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,36,40,42,44,48,164,165,51,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,56,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,0,210,211,212,213,214,13,215,216,14,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,18,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[77,78,80,82,83,89,92,95,101,116,117,150,151,210,248,249,256,267,268,293,295],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[81,82,87,88,100,101,110,112,113,116,117,119,120,122,126,148,150,151,153,159,160,161,162,183,199,209,0,216,245,246,247,248,249,250,251,252,256,257,258,260,261,262,18,265,267,268,293,296,298,300],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[15,16,17,18,19,20],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[112,113,119,120,15,312,16,313,246,17,247,250,251,18,19,20,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[26,28,29,36,48],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[94,315],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[15,16,17,18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[32,130,131,316],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[61,62,63,64,66,67,68,69,71,72,73,24,74,317,26,27,75,103,29,30,31,32,131,145,318,319,320,321,34,322,36,37,40,41,42,44,47,48,323,50,51,54,54,55,55,189,190,56,214,324,253,254,255,259,325,57,58,305,306,60],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[326,327,328,329,330,43,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[326,327,328,329,330,43,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[21,22,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[150,151,256,261,262,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[24,26,27,28,29,30,31,32,34,36,37,40,41,42,44,47,48,50,56,57,58,60],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[62,63,66,67,68,69,70,71,72,73,24,74,332,317,26,27,75,333,334,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,4,96,97,98,99,100,101,102,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,335,336,337,338,123,124,125,126,127,128,129,32,130,131,132,133,134,135,136,137,138,139,140,141,142,339,143,144,33,340,145,341,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,34,36,37,39,40,41,47,48,50,164,165,342,343,344,345,346,51,182,183,184,185,186,187,347,188,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,13,215,216,14,217,218,219,220,348,349,350,351,352,353,354,355,356,357,358,359,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,360,242,243,244,361,362,363,364,365,366,367,368,245,246,17,247,248,249,250,251,252,369,370,253,254,371,255,372,373,374,256,257,258,375,376,377,259,260,263,264,18,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,378,379,380,381,291,292,293,294,382,295,296,297,298,383,299,300,384,325,385,386,387,388,389,390,5,57,391,392,58,393,394,301,302,303,395,396,397,398,399,400,401,402,304,403,305,306,307,308,309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[404],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[405,329,330,406,407],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,24,74,317,26,27,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,4,96,97,98,99,100,101,102,103,29,30,31,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,335,336,337,338,408,123,124,125,409,126,127,128,129,32,130,131,132,133,134,135,136,137,138,139,140,141,142,339,143,144,33,340,145,341,146,147,148,149,150,151,152,153,410,411,154,155,156,157,158,159,160,161,162,163,34,36,40,41,42,44,47,48,50,164,165,51,166,167,168,169,170,171,172,173,174,175,176,177,178,54,54,55,55,179,180,181,182,183,184,185,186,187,188,189,190,56,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,0,412,413,210,211,212,213,414,415,416,214,13,215,216,14,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,360,242,243,417,244,361,418,419,420,362,363,364,365,366,421,367,422,245,246,17,247,248,249,250,251,252,324,253,254,255,256,257,258,423,259,260,11,261,262,424,425,263,264,18,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,426,427,378,379,380,381,291,292,293,294,295,296,297,298,383,299,300,301,302,303,395,396,397,398,399,400,401,402,304,403,305,306,60,307,308,309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":79,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":245,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":176,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":191,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":400,"org.easymock.tests.MockingTest.testPartialClassMocking":253,"org.easymock.tests.MockClassControlTest.testToString":385,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":271,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":85,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":380,"org.easymock.samples.ExampleTest.answerVsDelegate":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":58,"org.easymock.tests2.UsageConstraintsTest.testNull":81,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":71,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":175,"org.easymock.tests2.CaptureTest.testPrimitive":135,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":311,"org.easymock.tests.UsageTest.moreThanOneArgument":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":290,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":364,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":11,"org.easymock.tests.UsageTest.argumentsOrdered":251,"org.easymock.tests.UsageVarargTest.varargIntAccepted":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":192,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":196,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests.ReplayStateInvalidUsageTest.times":356,"org.easymock.tests2.AnswerTest.answer":153,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.CaptureTest.testAnd":132,"org.easymock.tests2.UsageTest.strictResetToDefault":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":425,"org.easymock.tests2.DelegateToTest.testDelegate":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":398,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":421,"org.easymock.tests2.CaptureTest.testCapture1_2446744":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.UsageThrowableTest.throwError":13,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":366,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":351,"org.easymock.tests.MockingTest.testInterfaceMocking":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":412,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":40,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":15,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":280,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":378,"org.easymock.tests.UsageOverloadedMethodTest.overloading":292,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":91,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":22,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":90,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":141,"org.easymock.tests.MockClassControlTest.testEquals":389,"org.easymock.tests2.EasyMockSupportClassTest.testAll":103,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":288,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":312,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":396,"org.easymock.tests2.CaptureTest.testCaptureAll":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests2.UsageConstraintsTest.testMatches":92,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":365,"org.easymock.samples.ExampleTest.voteForRemovals":187,"org.easymock.tests.UsageVarargTest.allKinds":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":397,"org.easymock.samples.BasicClassMockTest.testPrintContent":190,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":219,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":146,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":403,"org.easymock.tests2.UsageConstraintsTest.greaterThan":94,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":75,"org.easymock.samples.ExampleTest.voteForRemoval":184,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":10,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":333,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":24,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":259,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":168,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":399,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":408,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":169,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":228,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":208,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":299,"org.easymock.tests.UsageExpectAndReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":289,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":323,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":422,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":362,"org.easymock.tests.UsageCallCountTest.tooManyCalls":300,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":295,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":218,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests.MockingTest.testNiceClassMocking":374,"org.easymock.tests.MockingTest.testClassMocking":370,"org.easymock.tests2.UsageConstraintsTest.testContains":89,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":322,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":382,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":145,"org.easymock.tests2.UsageConstraintsTest.testFind":80,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":293,"org.easymock.tests.MockTypeTest.fromEasyMockClass":391,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":128,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":174,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":327,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":197,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":242,"org.easymock.tests.MockClassControlTest.testHashCode":388,"org.easymock.tests2.EasyMockSupportTest.testVerify":178,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":334,"org.easymock.tests.UsageVarargTest.varargCharAccepted":202,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":2,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":375,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":12,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":14,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":321,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":414,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests2.UsageTest.resumeIfFailure":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":402,"org.easymock.tests2.StubTest.stubWithReturnValue":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.tests2.SerializationTest.testAllMockedMethod":131,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":426,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":407,"org.easymock.samples.SupportTest.voteForRemovals":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":283,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":316,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":427,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":410,"org.easymock.tests.UsageExpectAndThrowTest.object":281,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":96,"org.easymock.tests2.DelegateToTest.testWrongClass":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":301,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":302,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests.UsageStrictMockTest.range":267,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":42,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":250,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":379,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":19,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":413,"org.easymock.tests2.CaptureTest.testCaptureNone":140,"org.easymock.tests.UsageUnorderedTest.message":260,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":207,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":298,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":189,"org.easymock.tests2.CaptureTest.testCapture_2617107":134,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":310,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests2.StubTest.stub":164,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":401,"org.easymock.tests.UsageExpectAndThrowTest.longType":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":21,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":354,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":214,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":320,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests2.NameTest.nameForMocksControl":162,"org.easymock.tests2.MockedExceptionTest.testMockedException":340,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":275,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":405,"org.easymock.tests2.CaptureTest.testCaptureLast":139,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":367,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":97,"org.easymock.tests.MockingTest.testTwoMocks":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":279,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":101,"org.easymock.samples.ExampleTest.removeNonExistingDocument":347,"org.easymock.tests.UsageStrictMockTest.differentMethods":268,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":352,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":7,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":106,"org.easymock.tests2.MockBuilderTest.testCreateMockString":50,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":273,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":53,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":0,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests2.UsageConstraintsTest.testNotNull":100,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":220,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":236,"org.easymock.tests.UsageVarargTest.differentLength":204,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":309,"org.easymock.tests.UsageCallCountTest.tooFewCalls":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":381,"org.easymock.tests.UsageThrowableTest.throwCheckedException":217,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":20,"org.easymock.tests.MockingTest.testStrictClassMocking":369,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":65,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":156,"org.easymock.tests.ObjectMethodsTest.testHashCode":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":329,"org.easymock.tests2.NameTest.nameForNiceMock":161,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":108,"org.easymock.tests2.DependencyTest.testInterfaceMocking":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":328,"org.easymock.samples.ExampleTest.addDocument":186,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests2.AnswerTest.stubAnswer":155,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":265,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":45,"org.easymock.tests.UsageVarargTest.varargLongAccepted":206,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests.UsageExpectAndReturnTest.floatType":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":95,"org.easymock.tests.UsageThrowableTest.noUpperLimit":215,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":77,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":137,"org.easymock.tests2.SerializationTest.test":130,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":6,"org.easymock.tests2.UsageConstraintsTest.testSame":82,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":222,"org.easymock.samples.SupportTest.addDocument":179,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":353,"org.easymock.tests.GenericTest.testPackageScope":305,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":372,"org.easymock.tests2.NameTest.nameForMock":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.UsageStrictMockTest.differentMethods":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests2.MockedExceptionTest.testRealException":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":346,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":406,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":308,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":359,"org.easymock.tests2.NameTest.nameForStrictMock":160,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":39,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":345,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":8,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":150,"org.easymock.tests2.UsageConstraintsTest.lessThan":102,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":331,"org.easymock.tests2.CaptureTest.testCaptureRightOne":142,"org.easymock.tests2.UsageConstraintsTest.testOr":83,"org.easymock.tests.UsageRangeTest.combination":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.UsageTest.wrongArguments":247,"org.easymock.tests2.MockBuilderTest.testWithConstructor":35,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":9,"org.easymock.tests.UsageVarargTest.varargShortAccepted":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":383,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":411,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.CaptureTest.testCaptureFromStub":339,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":297,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests2.CaptureTest.testCapture":404,"org.easymock.tests2.UsageConstraintsTest.constraints":78,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.samples.ExampleTest.addAndChangeDocument":188,"org.easymock.tests.UsageStrictMockTest.testVerify":270,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":181,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":395,"org.easymock.tests2.CompareToTest.testGreateThan":315,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":194,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":195,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":172,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":200}}]
