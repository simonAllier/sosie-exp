[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,1,101,102,103,104,105,106,107,108,109,110,111,112,113,114,2,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,3,176,177,178,4,5,179,6,180,181,7,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,8,254,255,256,257,258,259,260,261,262,9,10,11,263,264,265,266,267,268,269,270,12,271,272,13,14,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,0,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,15,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,16,506,507,17,18],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[508,373,374,375],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[266],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[97,100,252,253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,68,69,70,72,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,1,101,102,103,104,105,106,107,108,109,110,111,112,113,114,2,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,139,141,142,144,145,172,173,174,175,3,176,177,178,4,5,179,6,180,181,7,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,211,213,217,218,219,220,221,222,223,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,253,254,255,256,257,258,259,260,261,262,9,10,11,268,269,270,12,271,272,13,14,273,275,276,277,278,279,280,281,282,291,292,293,294,295,296,297,299,302,303,304,305,334,335,339,340,342,344,345,346,347,348,350,351,352,353,354,355,357,358,359,360,361,0,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,380,381,386,387,388,389,390,15,391,392,393,394,395,396,397,398,399,400,407,410,411,412,413,414,415,416,443,444,445,446,464,466,467,468,469,470,471,473,474,475,476,477,478,481,484,485,486,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,16,506,507,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.Capture:82","failures":[489,491,492,493,494,495,496,498,509,499,500,502],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[2,116,119,120,217,510,511,512,9,10,11,270,12,272,13,15,391,397,398,443,444,445,446,16,507,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[354],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[459,462],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[227,513,514],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[57,62,143,146,274,283,284,297,300,303,304,307,314,324,330,373,376,515,377,378,516,379,380,381,382,517,383,384,385,386,387,518,388,464,465,519,466],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[508,373,374,375],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[345,347,363,369,520],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[221,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[347,348,351,353,354,356,365,370,489,491,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[348,353,356],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[20,21,22,23,24,25,26,27,28,29,30,31,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,1,101,102,103,521,104,105,106,107,108,109,110,111,112,113,114,2,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,3,176,177,178,4,5,179,6,180,181,7,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,522,223,224,225,226,227,228,523,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,8,254,255,256,257,258,259,260,261,262,9,10,11,263,264,265,266,267,268,269,270,12,271,272,13,14,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,0,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,515,377,378,516,379,380,381,382,517,383,384,385,386,387,518,388,389,390,15,391,392,393,394,395,396,397,398,399,400,401,402,403,524,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,464,465,519,466,467,468,469,470,471,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,16,506,507,17,18],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[525],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[373,517,385,464,465,526,527,528,529,530],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[236,295,362,393],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[529],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[68,69,70,78,80,81,82,83,84,85,94,96,98,99,1,102,103,104,105,106,107,108,109,114,2,117,118,121,139,141,142,144,164,172,173,174,175,3,176,177,178,4,5,179,6,180,181,7,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,211,213,218,219,222,223,242,243,244,245,252,253,9,10,11,12,272,13,274,275,276,277,278,280,288,291,292,293,294,295,296,299,303,304,305,311,314,324,330,333,334,335,336,338,339,340,345,346,347,348,350,351,352,353,354,355,357,358,359,360,361,0,362,363,364,365,366,367,368,369,370,371,372,373,374,377,380,382,383,387,389,390,15,392,394,395,396,399,400,407,411,412,422,429,430,431,432,433,434,435,436,437,438,439,440,452,464,468,470,471,473,474,475,476,478,481,482,484,485,486,488,489,490,491,492,493,496,497,498,499,501,502,16,507,17],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[347,348,351,353,354,356,365,370,489,491,499],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[151],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,69,70,79,80,86,87,88,89,90,91,92,93,94,95,1,102,103,104,105,106,107,108,109,110,111,112,113,2,122,123,124,126,127,129,130,131,132,133,139,141,144,145,172,173,174,175,3,176,177,178,4,5,179,6,180,181,7,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,211,213,218,219,222,242,243,244,245,246,247,248,249,250,8,255,262,9,10,11,269,12,13,14,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,293,294,295,296,299,302,304,311,314,324,330,333,334,335,336,338,339,340,342,344,345,346,347,348,350,351,352,353,354,355,357,358,359,360,361,0,362,363,364,365,366,367,369,370,371,372,373,374,375,376,380,381,382,383,390,15,392,393,396,399,407,410,411,412,413,414,415,416,422,429,430,431,432,433,434,435,436,437,438,439,440,441,443,444,445,446,452,464,466,467,468,469,470,471,473,476,477,478,481,482,484,485,488,489,490,491,492,494,495,496,497,498,499,502,505,16,17,18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[531,532,489,490,491,492,493,494,495,496,498,509,499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[224,228],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,31,68,69,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,2,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,139,141,142,144,145,172,173,174,175,3,176,177,178,4,5,179,6,180,181,7,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,211,213,217,218,219,220,221,222,242,244,245,246,247,248,249,250,262,9,10,11,268,269,270,12,271,272,13,14,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,302,303,304,305,311,314,324,330,333,334,335,336,338,339,340,342,344,345,346,347,348,350,351,352,353,354,355,357,358,359,360,361,0,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,380,381,382,383,386,387,388,389,390,15,391,392,393,394,395,396,397,398,399,400,407,410,411,412,413,414,415,416,422,429,430,431,432,433,434,435,436,437,438,439,440,441,452,464,466,467,468,469,470,471,473,475,476,477,478,481,482,484,485,486,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,16,506,507,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":348,"org.easymock.tests2.UsageTest.argumentsOrdered":398,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":439,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":158,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":393,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":285,"org.easymock.tests2.DelegateToTest.testReturnException":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":91,"org.easymock.tests.MockingTest.testPartialClassMocking":210,"org.easymock.tests.MockClassControlTest.testToString":256,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":442,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":314,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":510,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":482,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":53,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":526,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":355,"org.easymock.tests2.UsageTest.wrongArguments":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":218,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":88,"org.easymock.samples.ExampleTest.answerVsDelegate":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":62,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":215,"org.easymock.tests2.UsageConstraintsTest.testNull":351,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":294,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":438,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":261,"org.easymock.tests2.CaptureTest.testPrimitive":492,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":186,"org.easymock.tests.UsageTest.moreThanOneArgument":2,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":248,"org.easymock.tests.UsageTest.argumentsOrdered":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":263,"org.easymock.tests.UsageVarargTest.varargIntAccepted":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":403,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":108,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":37,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":452,"org.easymock.tests.ReplayStateInvalidUsageTest.times":238,"org.easymock.tests2.DependencyTest.testClassMocking":479,"org.easymock.tests2.AnswerTest.answer":407,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":416,"org.easymock.tests2.CaptureTest.testAnd":489,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":59,"org.easymock.tests2.UsageTest.strictResetToDefault":390,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":516,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests2.DelegateToTest.testDelegate":488,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":267,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":182,"org.easymock.tests.LimitationsTest.mockFinalMethod":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":113,"org.easymock.tests2.DependencyTest.testClassMockingSupport":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":252,"org.easymock.tests2.CaptureTest.testCapture1_2446744":493,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":414,"org.easymock.tests.UsageThrowableTest.throwError":78,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":232,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":61,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":521,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":40,"org.easymock.samples.PartialClassMockTest.testGetArea":274,"org.easymock.tests.MockingTest.testInterfaceMocking":212,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":233,"org.easymock.tests2.CompareToTest.testLessOrEqual":520,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":66,"org.easymock.tests2.UsageTest.niceToStrict":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":173,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":319,"org.easymock.tests2.ThreadingTest.testChangeDefault":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":148,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":380,"org.easymock.tests2.MockBuilderTest.testCreateMock":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":5,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":434,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":86,"org.easymock.tests.UsageOverloadedMethodTest.overloading":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":329,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":361,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":198,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":513,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":360,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":498,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":125,"org.easymock.tests.MockClassControlTest.testEquals":260,"org.easymock.tests2.EasyMockSupportClassTest.testAll":311,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":184,"org.easymock.tests2.CaptureTest.testCaptureAll":490,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":111,"org.easymock.tests.MockNameTest.defaultName":77,"org.easymock.tests2.UsageConstraintsTest.testMatches":0,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":249,"org.easymock.samples.ExampleTest.voteForRemovals":280,"org.easymock.tests.UsageVarargTest.allKinds":133,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":112,"org.easymock.samples.BasicClassMockTest.testPrintContent":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":84,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":504,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":530,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":523,"org.easymock.tests2.UsageConstraintsTest.greaterThan":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":305,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":41,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":229,"org.easymock.samples.ExampleTest.voteForRemoval":277,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":473,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":524,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":297,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":33,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":389,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":431,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":90,"org.easymock.tests2.CaptureTest.testCaptureFirst":502,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":432,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":400,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":194,"org.easymock.tests2.CaptureTest.testCapture2_2446744":501,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":475,"org.easymock.tests2.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":166,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":132,"org.easymock.tests.GenericTest.testBridgedEquals":147,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":30,"org.easymock.tests.UsageExpectAndReturnTest.longType":190,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":185,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":251,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":368,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":246,"org.easymock.tests.UsageCallCountTest.tooManyCalls":31,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":176,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":83,"org.easymock.tests.MockingTest.testNiceClassMocking":216,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":334,"org.easymock.tests.MockingTest.testClassMocking":208,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":24,"org.easymock.tests2.UsageConstraintsTest.testContains":359,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":468,"org.easymock.tests2.UsageConstraintsTest.testFind":350,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":70,"org.easymock.tests.MockTypeTest.fromEasyMockClass":60,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":344,"org.easymock.tests.UsageExpectAndReturnTest.object":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":437,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":527,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":127,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":74,"org.easymock.tests.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":153,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":134,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":465,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":203,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":98,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.MockClassControlTest.testHashCode":259,"org.easymock.tests2.EasyMockSupportTest.testVerify":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":321,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":413,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":503,"org.easymock.tests.UsageVarargTest.varargCharAccepted":126,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":522,"org.easymock.tests2.CaptureTest.testCaptureMultiple":532,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":171,"org.easymock.tests2.UsageTest.openCallCountByLastCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":440,"org.easymock.tests.DefaultClassInstantiatorTest.object":223,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":20,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":39,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":303,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":177,"org.easymock.tests.CapturesMatcherTest.test":531,"org.easymock.tests.ReplayStateInvalidCallsTest.times":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":204,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":54,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":46,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":330,"org.easymock.tests2.UsageTest.resumeIfFailure":399,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":93,"org.easymock.tests2.StubTest.stubWithReturnValue":478,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":517,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":369,"org.easymock.tests2.SerializationTest.testAllMockedMethod":375,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":164,"org.easymock.samples.SupportTest.voteForRemovals":288,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":180,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":170,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":408,"org.easymock.tests.UsageExpectAndThrowTest.object":179,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":136,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":366,"org.easymock.tests2.DelegateToTest.testWrongClass":486,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":102,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":103,"org.easymock.tests.UsageStrictMockTest.range":272,"org.easymock.samples.ConstructorCalledMockTest.testTax":283,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":405,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":333,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":6,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":382,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":87,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":35,"org.easymock.tests2.CaptureTest.testCaptureNone":497,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":67,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":460,"org.easymock.tests.UsageUnorderedTest.message":217,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":19,"org.easymock.tests.UsageVarargTest.varargByteAccepted":131,"org.easymock.tests2.ThreadingTest.testThreadSafe":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":325,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":28,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":75,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":491,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":221,"org.easymock.tests2.UsageConstraintsTest.any":357,"org.easymock.tests2.StubTest.stub":477,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":56,"org.easymock.tests.UsageExpectAndThrowTest.longType":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":92,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":227,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":236,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":506,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":422,"org.easymock.tests2.SerializationTest.testClass":373,"org.easymock.tests.LimitationsTest.mockNativeMethod":139,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":449,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":51,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.tests2.NameTest.nameForMocksControl":446,"org.easymock.tests2.MockedExceptionTest.testMockedException":467,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":313,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":3,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":213,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":343,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":383,"org.easymock.tests.MockingTest.testNicePartialClassMocking":211,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":296,"org.easymock.tests2.CaptureTest.testCaptureLast":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":447,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":253,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":340,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":354,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":367,"org.easymock.tests.MockingTest.testTwoMocks":209,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":47,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":4,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":397,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":371,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":463,"org.easymock.samples.ExampleTest.removeNonExistingDocument":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":234,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":462,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":225,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":474,"org.easymock.tests2.MockBuilderTest.testCreateMockString":388,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":254,"org.easymock.tests.UsageExpectAndThrowTest.floatType":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":519,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":324,"org.easymock.samples.ExampleTest.voteAgainstRemoval":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":159,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":65,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":304,"org.easymock.tests.LimitationsTest.privateConstructor":138,"org.easymock.tests2.UsageConstraintsTest.testNotNull":370,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":466,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":85,"org.easymock.tests2.UsageTest.defaultResetToNice":396,"org.easymock.samples.ExampleTest.voteAgainstRemovals":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":448,"org.easymock.tests.UsageVarargTest.differentLength":128,"org.easymock.tests2.CallbackTest.callback":470,"org.easymock.tests2.UsageConstraintsTest.equals":349,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":300,"org.easymock.tests.UsageTest.openCallCountByLastCall":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":220,"org.easymock.tests.UsageCallCountTest.tooFewCalls":26,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":89,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":461,"org.easymock.tests.UsageThrowableTest.throwCheckedException":82,"org.easymock.tests.MockingTest.testStrictClassMocking":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":142,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":335,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":338,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":412,"org.easymock.tests.ObjectMethodsTest.testHashCode":73,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":525,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":476,"org.easymock.tests2.NameTest.nameForNiceMock":445,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":49,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":44,"org.easymock.tests2.DependencyTest.testInterfaceMocking":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":528,"org.easymock.samples.ExampleTest.addDocument":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":326,"org.easymock.tests2.DelegateToTest.testStubDelegate":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.stubAnswer":411,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":384,"org.easymock.tests.UsageVarargTest.varargLongAccepted":130,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":157,"org.easymock.tests.UsageExpectAndReturnTest.floatType":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":464,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":426,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests.UsageThrowableTest.noUpperLimit":79,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":346,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":401,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":494,"org.easymock.tests2.SerializationTest.test":374,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":514,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":224,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":188,"org.easymock.tests2.UsageConstraintsTest.testSame":352,"org.easymock.samples.SupportTest.addDocument":287,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":337,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":34,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":316,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":425,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":214,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":32,"org.easymock.tests2.NameTest.nameForMock":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":518,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":7,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":71,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests2.MockedExceptionTest.testRealException":469,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":161,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":219,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":241,"org.easymock.tests2.NameTest.nameForStrictMock":444,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":404,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":511,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":226,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":365,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":377,"org.easymock.tests2.UsageStrictMockTest.range":507,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":372,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":529,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":156,"org.easymock.tests2.CaptureTest.testCaptureRightOne":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":320,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":459,"org.easymock.tests2.UsageConstraintsTest.testOr":353,"org.easymock.tests.UsageRangeTest.combination":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":292,"org.easymock.tests.UsageTest.wrongArguments":116,"org.easymock.tests2.MockBuilderTest.testWithConstructor":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":317,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":200,"org.easymock.tests.UsageVarargTest.varargShortAccepted":129,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":228,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":29,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":52,"org.easymock.tests2.UsageConstraintsTest.cmpTo":358,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":409,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":151,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":395,"org.easymock.tests2.CaptureTest.testCaptureFromStub":500,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":231,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":378,"org.easymock.tests.UsageTest.unexpectedCallWithArray":115,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":48,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":27,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":201,"org.easymock.tests2.CaptureTest.testCapture":509,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":271,"org.easymock.tests2.UsageConstraintsTest.constraints":347,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests.UsageStrictMockTest.testVerify":273,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":286,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":110,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":106,"org.easymock.tests.LimitationsTest.abstractClass":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":107,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":1,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":512,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":435,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":123}}]
