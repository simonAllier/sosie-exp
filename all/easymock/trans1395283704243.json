[{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,10,116,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,31,32,145,33,34,35,36,37,38,146,147,148,149,150,151,152,39,153,154,155,156,40,157,158,159,160,41,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,42,239,240,241,242,243,244,245,246,247,248,43,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,0,1,281,2,3,4,5,6,282,283,284,285,7,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,44,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,8,379,380,381,382,383,9,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,45,431,432,433,434,435,436,46,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[280,1,283,363,364,367,369,370,372,381,385],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[74,79,123,262,292,298,299,302,342,352,358,428,461,463,464,467,468,469,471,474,475,477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[57,63,70,71,244,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[488,280,0,1,281,2,3,4,5,6,282,283,284,285,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[489],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,10,116,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,121,122,125,127,128,143,144,31,32,145,33,34,35,36,37,38,146,147,149,150,151,152,39,153,40,157,158,159,160,41,161,162,163,167,168,170,174,175,176,177,187,188,189,191,192,193,194,195,196,197,198,236,238,42,241,242,243,244,245,246,247,248,43,249,250,488,488,251,252,254,255,256,257,258,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,0,1,281,2,3,4,5,6,282,283,284,285,7,286,287,288,289,290,291,292,294,297,298,299,300,303,44,309,310,311,312,313,314,315,316,319,320,321,322,329,339,342,352,358,361,362,363,364,366,367,368,369,370,371,373,374,375,376,377,378,8,379,380,381,382,383,9,384,385,386,387,389,390,391,393,396,397,398,399,400,401,402,408,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,45,431,432,433,434,435,436,46,437,438,439,440,441,442,444,452,453,454,455,457,458,459,461,463,467,468,469,471,474,475,477,478,479,480,481,482,485,486,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[47,48,49,50,74,79,120,121,122,123,124,134,135,136,137,138,139,140,141,142,164,165,166,167,168,170,173,179,180,181,182,183,184,186,250,262,263,264,265,265,266,266,286,287,289,290,291,292,294,295,296,297,298,299,300,301,302,316,317,490,491,492,493,494,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,428,430,445,449,452,453,454,455,458,459,461,495,463,464,466,467,468,469,471,473,474,475,496,477,478,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[54,55,62,69,11,12,19,26,153,176,246,252,321],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:159","failures":[265,266,295,462,497,498,476],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[267,268,324,325,326,332,335,403,404,405,411,414],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,10,116,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,117,118,119,121,125,126,127,128,130,133,143,144,31,32,145,33,34,35,36,37,38,146,147,148,149,150,151,152,39,153,154,155,156,40,157,158,159,160,41,161,162,163,174,175,176,177,187,188,189,191,192,193,194,195,196,197,198,215,221,223,235,236,237,238,42,239,240,241,242,243,244,245,246,247,248,43,249,250,251,252,254,255,256,257,258,259,260,261,267,268,269,270,271,272,273,274,275,276,278,279,280,0,1,281,2,3,4,5,6,282,283,284,285,7,286,288,303,44,305,306,307,308,309,310,311,312,313,314,315,319,320,321,322,329,330,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,8,379,380,381,382,383,9,384,385,386,387,388,389,390,391,392,393,396,397,398,399,400,401,402,408,409,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,45,431,432,433,434,435,436,46,437,438,439,440,441,442,444,452,457,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[74,79,120,123,262,265,265,266,266,292,295,298,299,302,316,317,342,352,358,428,461,463,464,466,467,469,471,472,473,475,477,478],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[316,500,501,502,503,504,505,506],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[507,87,43,249,313],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[386],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[508],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[35,36,43],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,10,116,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,31,32,145,33,34,35,36,37,38,146,147,148,149,150,151,152,39,153,154,155,156,40,157,158,159,160,41,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,42,239,240,241,242,243,244,245,246,247,248,43,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,0,1,281,2,3,4,5,6,282,283,284,285,7,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,44,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,8,379,380,381,382,383,9,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,45,431,432,433,434,435,436,46,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[399,400],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[509,510,511],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[265,266,316,317,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,428,454,459,460,462,465,470,473,497,476,512,513],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[514,515,516,507,85,87,88,157,242,248,43,249,311,313,314,432],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[361,379,384,517],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[363,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[121,123,124],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[511],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[518,428,429,430],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[52,118,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[47,48,49,50,74,79,120,121,122,123,124,134,135,136,137,138,139,140,141,142,164,165,166,167,168,170,173,179,180,181,182,183,184,186,250,262,263,264,265,265,266,266,286,287,289,290,291,292,294,295,296,297,298,299,300,301,302,316,317,519,490,491,492,493,494,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,428,430,445,449,452,453,454,455,458,459,489,461,495,463,464,466,467,468,469,471,473,474,475,520,496,477,478,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","result":"result","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,10,116,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,121,122,125,127,128,143,144,31,32,145,33,34,35,36,37,38,146,147,149,150,151,152,39,153,40,157,158,159,160,41,161,162,163,167,168,170,174,175,176,177,187,188,189,191,192,193,194,195,196,197,198,236,238,42,241,242,243,244,245,246,247,248,43,249,250,488,488,251,252,254,255,256,257,258,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,0,1,281,2,3,4,5,6,282,283,284,285,7,286,287,288,289,290,291,292,294,297,298,299,300,303,44,309,310,311,312,313,314,315,316,319,320,321,322,329,339,342,352,358,361,362,363,364,366,367,368,369,370,371,373,374,375,376,377,378,8,379,380,381,382,383,9,384,385,386,387,389,390,391,393,396,397,398,399,400,401,402,408,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,45,431,432,433,434,435,436,46,437,438,439,440,441,442,444,452,453,454,455,457,458,459,461,463,467,468,469,471,474,475,477,478,479,480,481,482,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:305","failures":[49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,87,88,110,111,113,114,116,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,121,125,126,127,128,143,144,31,32,33,34,35,36,37,38,146,147,39,40,157,160,41,163,167,168,170,215,236,238,42,240,248,43,249,251,252,254,255,256,257,258,262,270,271,272,273,274,276,279,280,0,1,281,2,5,6,282,283,285,7,286,287,288,289,290,291,294,298,299,300,44,311,313,314,316,329,339,342,352,358,361,362,363,364,366,367,368,369,370,371,373,374,375,376,377,378,8,379,380,381,382,383,9,384,385,386,387,389,390,391,393,396,397,398,399,400,401,402,408,415,416,417,418,419,420,421,422,423,424,425,426,428,429,45,431,432,434,436,46,437,440,441,452,453,454,455,457,458,459,463,467,469,471,475,480,482,486,487],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":364,"org.easymock.tests2.UsageTest.argumentsOrdered":439,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":425,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":435,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":268,"org.easymock.tests2.DelegateToTest.testReturnException":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":150,"org.easymock.tests.MockingTest.testPartialClassMocking":167,"org.easymock.tests.MockClassControlTest.testToString":137,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":304,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":11,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":342,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":514,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":371,"org.easymock.tests2.UsageTest.wrongArguments":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":113,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":176,"org.easymock.samples.ExampleTest.answerVsDelegate":272,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":79,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":172,"org.easymock.tests2.UsageConstraintsTest.testNull":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":289,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":424,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":142,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":519,"org.easymock.tests2.CaptureTest.testPrimitive":281,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":116,"org.easymock.tests.UsageTest.moreThanOneArgument":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":30,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":245,"org.easymock.tests.UsageTest.argumentsOrdered":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":91,"org.easymock.tests.UsageVarargTest.varargIntAccepted":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":505,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":258,"org.easymock.tests.ReplayStateInvalidUsageTest.times":231,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":329,"org.easymock.tests2.DependencyTest.testClassMocking":394,"org.easymock.tests2.AnswerTest.answer":482,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":76,"org.easymock.tests2.CaptureTest.testAnd":280,"org.easymock.tests2.UsageTest.strictResetToDefault":431,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":127,"org.easymock.tests2.DelegateToTest.testDelegate":393,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":26,"org.easymock.tests.LimitationsTest.mockFinalMethod":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":109,"org.easymock.tests2.DependencyTest.testClassMockingSupport":395,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":110,"org.easymock.tests2.CaptureTest.testCapture1_2446744":2,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.UsageThrowableTest.throwError":32,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":225,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":78,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":360,"org.easymock.samples.PartialClassMockTest.testGetArea":262,"org.easymock.tests.MockingTest.testInterfaceMocking":169,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":226,"org.easymock.tests2.CompareToTest.testLessOrEqual":517,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":255,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":118,"org.easymock.tests2.UsageTest.niceToStrict":434,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":199,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":467,"org.easymock.tests2.MockBuilderTest.testCreateMock":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":20,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":420,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":174,"org.easymock.tests.UsageOverloadedMethodTest.overloading":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":357,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":42,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":377,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":65,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":376,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":282,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":190,"org.easymock.tests.MockClassControlTest.testEquals":141,"org.easymock.tests2.EasyMockSupportClassTest.testAll":339,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":122,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":28,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":490,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":107,"org.easymock.tests2.CaptureTest.testCaptureAll":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.MockNameTest.defaultName":235,"org.easymock.tests2.UsageConstraintsTest.testMatches":378,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":246,"org.easymock.samples.ExampleTest.voteForRemovals":276,"org.easymock.tests.UsageVarargTest.allKinds":198,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":108,"org.easymock.samples.BasicClassMockTest.testPrintContent":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":37,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":506,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":185,"org.easymock.tests2.UsageConstraintsTest.greaterThan":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":126,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":300,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":186,"org.easymock.samples.ExampleTest.voteForRemoval":273,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":399,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":301,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":520,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":292,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":250,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":417,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":149,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":388,"org.easymock.tests2.CaptureTest.testCaptureFirst":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":418,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":441,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":61,"org.easymock.tests2.UsageTest.moreThanOneArgument":432,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":401,"org.easymock.tests2.CaptureTest.testCapture2_2446744":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":217,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":197,"org.easymock.tests.GenericTest.testBridgedEquals":124,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":103,"org.easymock.tests.UsageExpectAndReturnTest.longType":57,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":105,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":9,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":104,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":453,"org.easymock.tests.MockingTest.testNiceClassMocking":173,"org.easymock.tests.MockingTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":97,"org.easymock.tests2.UsageConstraintsTest.testContains":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":480,"org.easymock.tests2.UsageConstraintsTest.testFind":366,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":31,"org.easymock.tests.MockTypeTest.fromEasyMockClass":77,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":444,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":82,"org.easymock.tests.UsageExpectAndReturnTest.object":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":502,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":192,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":132,"org.easymock.tests.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":204,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":51,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":317,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":70,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.MockClassControlTest.testHashCode":140,"org.easymock.tests2.EasyMockSupportTest.testVerify":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":349,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":323,"org.easymock.tests.UsageVarargTest.varargCharAccepted":191,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":178,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":222,"org.easymock.tests2.UsageTest.openCallCountByLastCall":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":509,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":426,"org.easymock.tests.DefaultClassInstantiatorTest.object":179,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":154,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":350,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":494,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":139,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":17,"org.easymock.tests.CapturesMatcherTest.test":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":259,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":358,"org.easymock.tests2.UsageTest.resumeIfFailure":440,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":74,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":152,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":470,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":63,"org.easymock.tests2.SerializationTest.testAllMockedMethod":430,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":215,"org.easymock.samples.SupportTest.voteForRemovals":270,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":23,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":518,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":221,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":483,"org.easymock.tests.UsageExpectAndThrowTest.object":21,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":53,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":382,"org.easymock.tests2.DelegateToTest.testWrongClass":391,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":251,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":252,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.samples.ConstructorCalledMockTest.testTax":265,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":450,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":22,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":469,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":119,"org.easymock.tests2.CaptureTest.testCaptureNone":6,"org.easymock.tests.UsageUnorderedTest.message":242,"org.easymock.tests.UsageVerifyTest.twoReturns":249,"org.easymock.tests.UsageVarargTest.varargByteAccepted":196,"org.easymock.tests2.ThreadingTest.testThreadSafe":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":353,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":101,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":133,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":263,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":219,"org.easymock.tests2.UsageConstraintsTest.any":373,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":230,"org.easymock.tests2.StubTest.stub":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":151,"org.easymock.tests.UsageExpectAndThrowTest.longType":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":220,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":183,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":229,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.SerializationTest.testClass":428,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":408,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":73,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":493,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":326,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":315,"org.easymock.tests2.NameTest.nameForMocksControl":308,"org.easymock.tests2.MockedExceptionTest.testMockedException":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":341,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":443,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":170,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":15,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":286,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":471,"org.easymock.tests.MockingTest.testNicePartialClassMocking":168,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":291,"org.easymock.tests2.CompareToTest.testNotComparable":508,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":500,"org.easymock.tests2.CaptureTest.testCaptureLast":5,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":459,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":370,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":383,"org.easymock.tests.MockingTest.testTwoMocks":166,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":19,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":438,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":386,"org.easymock.samples.ExampleTest.removeNonExistingDocument":277,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":181,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":400,"org.easymock.tests2.MockBuilderTest.testCreateMockString":477,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":135,"org.easymock.tests.UsageExpectAndThrowTest.floatType":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":343,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":485,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":318,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":352,"org.easymock.samples.ExampleTest.voteAgainstRemoval":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":299,"org.easymock.tests.LimitationsTest.privateConstructor":48,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":513,"org.easymock.tests2.UsageConstraintsTest.testNotNull":385,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":478,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":38,"org.easymock.tests2.UsageTest.defaultResetToNice":437,"org.easymock.samples.ExampleTest.voteAgainstRemovals":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":211,"org.easymock.tests.UsageVarargTest.differentLength":193,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":325,"org.easymock.tests2.CallbackTest.callback":279,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":295,"org.easymock.tests.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":361,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":115,"org.easymock.tests.UsageCallCountTest.tooFewCalls":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":177,"org.easymock.tests.UsageThrowableTest.throwCheckedException":35,"org.easymock.tests.MockingTest.testStrictClassMocking":164,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":458,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":147,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":457,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":487,"org.easymock.tests.ObjectMethodsTest.testHashCode":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":504,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":402,"org.easymock.tests2.NameTest.nameForNiceMock":307,"org.easymock.tests2.DependencyTest.testInterfaceMocking":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":503,"org.easymock.samples.ExampleTest.addDocument":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":354,"org.easymock.tests2.DelegateToTest.testStubDelegate":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.stubAnswer":486,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":85,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":195,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":208,"org.easymock.tests.UsageExpectAndReturnTest.floatType":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":316,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests.UsageThrowableTest.noUpperLimit":145,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":362,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":445,"org.easymock.tests2.SerializationTest.test":429,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":55,"org.easymock.tests2.UsageConstraintsTest.testSame":368,"org.easymock.samples.SupportTest.addDocument":269,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":456,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":344,"org.easymock.tests.GenericTest.testPackageScope":121,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":171,"org.easymock.tests2.NameTest.nameForMock":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":476,"org.easymock.tests2.UsageStrictMockTest.differentMethods":314,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":25,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":128,"org.easymock.tests2.MockedExceptionTest.testRealException":481,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":212,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":114,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":234,"org.easymock.tests2.NameTest.nameForStrictMock":306,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":466,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":510,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":442,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":290,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":449,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":515,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":182,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":381,"org.easymock.tests.ErrorMessageTest.testGetters":516,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":463,"org.easymock.tests2.UsageStrictMockTest.range":313,"org.easymock.tests2.UsageConstraintsTest.lessThan":387,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":489,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":207,"org.easymock.tests2.CaptureTest.testCaptureRightOne":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":348,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":499,"org.easymock.tests2.UsageConstraintsTest.testOr":369,"org.easymock.tests.UsageRangeTest.combination":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":287,"org.easymock.tests.UsageTest.wrongArguments":159,"org.easymock.tests2.MockBuilderTest.testWithConstructor":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":345,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":200,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":184,"org.easymock.tests.UsageVarargTest.varargShortAccepted":194,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":102,"org.easymock.tests2.UsageConstraintsTest.cmpTo":374,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":202,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests2.CaptureTest.testCaptureFromStub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":224,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":464,"org.easymock.tests.UsageTest.unexpectedCallWithArray":158,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":100,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":497,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.UsageConstraintsTest.constraints":363,"org.easymock.samples.ExampleTest.addAndChangeDocument":278,"org.easymock.tests.UsageStrictMockTest.testVerify":90,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":267,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":106,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":4,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":256,"org.easymock.tests.LimitationsTest.abstractClass":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":60,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":257,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":421,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":188}}]
