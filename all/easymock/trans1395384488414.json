[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[16,100,56,101,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[103,104,105,106,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:56","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[110,111,112],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:235","failures":[113,114,115,108,116,117,118,119,120,121,122,109,123,124,125],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,33,35,38,39,43,44,46,47,48,54,55,126,127,128,63,66,71,74,76,78,79,82,87,90,92,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[129,130,16,17,131,132,133,134,39,40,42,135,43,44,46,136,137,138,139,140,141,49,142,143,144,145,146,147,148,149,150,151,152,54,153,154,155,156,157,56,57,158,159,160,161,162,163,164,165,166,167,168,169,170,171,78,172,173,174,175,176,98,177,178,179,180,181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[182,16,17,183,184,185,186,187,156,188,56,57,189,190],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[113,191,132,192],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[193,194,195,196,197,198,199,129,182,130,16,17,131,191,200,201,202,203,18,19,20,204,205,206,21,22,23,207,208,209,210,24,25,26,211,27,28,29,30,212,213,214,215,216,31,32,33,34,217,35,36,218,219,220,133,221,222,37,38,223,224,39,40,225,41,42,135,43,44,226,227,228,45,46,229,230,231,232,233,136,234,235,236,237,238,137,138,139,140,0,1,2,3,110,239,111,240,241,47,242,243,244,245,246,247,48,141,248,49,50,51,249,142,143,52,250,251,53,4,252,253,254,144,145,146,147,148,255,149,150,151,152,54,256,257,258,259,260,5,6,7,8,9,10,261,262,55,127,263,264,155,156,188,157,56,57,158,189,265,266,267,268,269,270,58,59,60,61,271,272,273,12,13,14,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,160,291,292,62,101,102,293,294,295,296,297,298,299,300,301,302,162,163,164,165,166,303,167,168,169,170,171,304,305,306,307,308,63,64,309,310,65,311,66,67,68,69,312,70,71,72,73,313,74,75,76,77,78,79,80,314,315,81,316,82,83,84,85,317,86,87,88,89,318,90,91,92,93,94,95,190,172,96,97,173,174,319,320,321,322,323,324,175,176,325,326,327,98,328,329,330,331,332,333,334,15,335,336,99,177,178,179,337,180,181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[338,339,340],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[211,212,218],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[113,342,116,122,109,123,124,124,125,125],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[16,17,30,36,50,51,55,343,56,57,58,62,96,97,321,322,98,99],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[16,141,142,143,156,56,280,344,101,102,78,190,172,173,174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[345],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[194,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[182,17,207,208,209,210,48,141,142,143,156,188,57,101,102,78,95,172,173,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[213],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[347],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":211,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests2.UsageTest.argumentsOrdered":143,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":112,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":49,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":144,"org.easymock.tests2.SerializationTest.testAllMockedMethod":132,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":121,"org.easymock.samples.SupportTest.voteForRemovals":146,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":87,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":192,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":79,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":194,"org.easymock.tests.UsageExpectAndThrowTest.object":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":254,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":219,"org.easymock.tests2.DelegateToTest.testWrongClass":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":325,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":289,"org.easymock.tests2.UsageTest.wrongArguments":141,"org.easymock.tests.UsageStrictMockTest.range":56,"org.easymock.samples.ConstructorCalledMockTest.testTax":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":255,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":237,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":137,"org.easymock.tests2.CaptureTest.testPrimitive":225,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":292,"org.easymock.tests.UsageTest.moreThanOneArgument":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":93,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":288,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests.UsageUnorderedTest.message":78,"org.easymock.tests.UsageVerifyTest.twoReturns":102,"org.easymock.tests.UsageVarargTest.varargByteAccepted":169,"org.easymock.tests2.ThreadingTest.testThreadSafe":18,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":320,"org.easymock.tests.UsageTest.argumentsOrdered":174,"org.easymock.tests.UsageVarargTest.varargIntAccepted":164,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":179,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":308,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":203,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":291,"org.easymock.tests2.UsageConstraintsTest.any":215,"org.easymock.tests2.StubTest.stub":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":14,"org.easymock.tests.UsageExpectAndThrowTest.longType":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":338,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":130,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":229,"org.easymock.tests2.SerializationTest.testClass":113,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.ReplayStateInvalidUsageTest.times":128,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":77,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":245,"org.easymock.tests2.CaptureTest.testAnd":224,"org.easymock.tests2.UsageTest.strictResetToDefault":247,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":115,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":186,"org.easymock.tests2.NameTest.nameForMocksControl":210,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":60,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":324,"org.easymock.tests2.DelegateToTest.testDelegate":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":318,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":302,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":220,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":175,"org.easymock.tests2.CaptureTest.testCapture1_2446744":41,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":84,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":37,"org.easymock.tests.UsageThrowableTest.throwError":327,"org.easymock.tests.UsageStrictMockTest.differentMethods":57,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":283,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":20,"org.easymock.tests.UsageExpectAndThrowTest.floatType":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":196,"org.easymock.tests.UsageVerifyTest.twoThrows":101,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":119,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":257,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":286,"org.easymock.tests2.UsageTest.niceToStrict":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":80,"org.easymock.tests2.UsageConstraintsTest.testNotNull":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":333,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":341,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.UsageTest.defaultResetToNice":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":126,"org.easymock.tests.UsageVarargTest.differentLength":303,"org.easymock.tests2.CallbackTest.callback":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":123,"org.easymock.tests.UsageTest.openCallCountByLastCall":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":85,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":235,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":24,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":160,"org.easymock.tests.UsageCallCountTest.tooFewCalls":177,"org.easymock.tests.UsageOverloadedMethodTest.overloading":262,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":33,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":339,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":32,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests.UsageThrowableTest.throwCheckedException":330,"org.easymock.tests2.EasyMockSupportClassTest.testAll":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":161,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":244,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":15,"org.easymock.tests.MockNameTest.defaultName":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":201,"org.easymock.tests2.UsageConstraintsTest.testMatches":34,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":251,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.tests.ObjectMethodsTest.testHashCode":306,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":106,"org.easymock.tests2.NameTest.nameForNiceMock":209,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":205,"org.easymock.tests.UsageVarargTest.allKinds":171,"org.easymock.tests2.DependencyTest.testInterfaceMocking":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":301,"org.easymock.samples.BasicClassMockTest.testPrintContent":154,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.DelegateToTest.testStubDelegate":111,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":332,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":199,"org.easymock.tests2.AnswerTest.stubAnswer":197,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":347,"org.easymock.tests2.UsageConstraintsTest.greaterThan":35,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":59,"org.easymock.tests.UsageVarargTest.varargLongAccepted":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":187,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":19,"org.easymock.tests.UsageExpectAndReturnTest.floatType":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":76,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":122,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":125,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests.UsageThrowableTest.noUpperLimit":98,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":246,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":25,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":42,"org.easymock.tests2.SerializationTest.test":191,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":116,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":64,"org.easymock.tests2.UsageConstraintsTest.testSame":29,"org.easymock.samples.SupportTest.addDocument":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":67,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":48,"org.easymock.tests2.CaptureTest.testCapture2_2446744":45,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":170,"org.easymock.tests2.NameTest.nameForMock":207,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":298,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":270,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":90,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":65,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":89,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":61,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":99,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":285,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":316,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":290,"org.easymock.tests2.NameTest.nameForStrictMock":208,"org.easymock.tests2.UsageConstraintsTest.testContains":31,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":55,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":21,"org.easymock.tests.MockTypeTest.fromEasyMockClass":282,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":22,"org.easymock.tests.UsageExpectAndReturnTest.object":312,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":218,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":104,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":166,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":307,"org.easymock.tests.UsageTest.exactCallCountByLastCall":319,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":334,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":232,"org.easymock.tests2.CaptureTest.testCaptureRightOne":227,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":321,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests.UsageRangeTest.combination":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":109,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":74,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":183,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.UsageTest.wrongArguments":172,"org.easymock.tests2.MockBuilderTest.testWithConstructor":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":311,"org.easymock.tests2.EasyMockSupportTest.testVerify":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":322,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":272,"org.easymock.tests.UsageVarargTest.varargShortAccepted":167,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":242,"org.easymock.tests2.UsageConstraintsTest.cmpTo":216,"org.easymock.tests.UsageVarargTest.varargCharAccepted":165,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":195,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests2.UsageTest.openCallCountByLastCall":50,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":271,"org.easymock.tests2.CaptureTest.testCaptureFromStub":228,"org.easymock.tests.UsageTest.unexpectedCallWithArray":190,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":305,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":329,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":178,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":82,"org.easymock.samples.ExampleTest.addAndChangeDocument":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":75,"org.easymock.tests.UsageStrictMockTest.testVerify":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":12,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":147,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":299,"org.easymock.tests2.UsageTest.resumeIfFailure":52,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":66,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":236,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":100,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":163}}]
