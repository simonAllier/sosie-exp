[{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[488,489,352,381,490,491,492,493,494,495,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[496,497,498,499,500],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[191,193,221,399],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[180,181,183,184,187,188,189,501,502,503,215,251,253,256,257,415,417,418,455,456,457,458,477,478,484,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[504,115,505,506,180,183,184,188,189,215,252,253,256,257,417,418,478,484,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[11,11,12,12,13,14,16,72,73,74,76,130,131,132,133,169,170,171,172,173,174,175,177,199,208,237,242,266,267,269,270,271,272,274,277,278,279,280,282,283,284,285,286,289,290,321,346,352,354,369,371,372,375,376,377,379,382,383,385,432,435,445,451],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[272,282,344,369,376,435],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[225],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[285,290,291,322,370,373,378,507,384,508,509,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[163,188,250,255,475,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,11,12,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[111,112,119,120,121,122,123,152,153,154,155,156,180,181,204,205,215,216,245,246,247,248,249,250,274,277,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,348,350,351,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,399,406,415,416,420,421],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[181,187,189,250,254,255,258,386,415,475,481,482,487],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[294,295,298,300,301,303,313,318,355,357,365],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,122,143,161,163,164,165,166,167,168,188,204,250,255,262,422,475,482],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[313,314],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[510,511,180,252,512,513],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[4,50,259,351,386,388,391],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[13,14,62,63,64,65,66,67,69,70,71,72,79,130,131,133,169,170,171,172,173,174,175,176,177,206,207,208,209,266,267,269,270,271,274,276,277,280,281,282,283,286,324,328,345,346,354,429,432,434,436,437,440,443,446,447,450],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[348],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,62,73,74,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,119,120,121,122,123,130,131,134,135,136,137,141,142,143,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,196,197,200,201,202,203,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,264,265,266,267,268,269,270,271,272,274,277,278,279,280,283,284,285,286,288,289,290,292,293,294,295,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,375,376,377,379,382,383,385,386,389,390,391,392,393,394,395,396,397,398,399,400,406,413,414,415,416,417,418,419,421,422,424,425,426,428,432,435,445,451,455,456,457,458,464,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,261,424,426,427,428],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[262,347],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[163,188,250,255,475,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[71,73,74,75,78,79,134,178,183,184,277,287,332,336,337,340,351,383,413,417,418,479],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[129,133],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":295,"org.easymock.tests2.UsageTest.argumentsOrdered":485,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":47,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":480,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":15,"org.easymock.tests2.DelegateToTest.testReturnException":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":201,"org.easymock.tests.MockingTest.testPartialClassMocking":73,"org.easymock.tests.MockClassControlTest.testToString":172,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":454,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":439,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":17,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":501,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":474,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":302,"org.easymock.tests2.UsageTest.wrongArguments":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":119,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":147,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":242,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":78,"org.easymock.tests2.UsageConstraintsTest.testNull":298,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":269,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":340,"org.easymock.tests2.CaptureTest.testPrimitive":358,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":36,"org.easymock.tests.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":124,"org.easymock.tests.UsageTest.argumentsOrdered":257,"org.easymock.tests.UsageVarargTest.varargIntAccepted":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":469,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":326,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":406,"org.easymock.tests.ReplayStateInvalidUsageTest.times":224,"org.easymock.tests2.DependencyTest.testClassMocking":471,"org.easymock.tests2.AnswerTest.answer":386,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":395,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":239,"org.easymock.tests2.CaptureTest.testAnd":355,"org.easymock.tests2.UsageTest.strictResetToDefault":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":335,"org.easymock.tests2.DelegateToTest.testDelegate":428,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":32,"org.easymock.tests.LimitationsTest.mockFinalMethod":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":214,"org.easymock.tests2.DependencyTest.testClassMockingSupport":472,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":149,"org.easymock.tests2.CaptureTest.testCapture1_2446744":359,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":393,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":218,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":241,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":470,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":453,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.MockingTest.testInterfaceMocking":75,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":219,"org.easymock.tests2.CompareToTest.testLessOrEqual":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":139,"org.easymock.tests2.UsageTest.niceToStrict":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":18,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":199,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":37,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":375,"org.easymock.tests2.MockBuilderTest.testCreateMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":448,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":238,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":118,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":145,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":492,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":444,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":308,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":91,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":307,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":364,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":103,"org.easymock.tests2.EasyMockSupportClassTest.testAll":432,"org.easymock.tests.MockClassControlTest.testEquals":176,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":212,"org.easymock.tests2.CaptureTest.testCaptureAll":356,"org.easymock.tests.MockNameTest.defaultName":190,"org.easymock.tests2.UsageConstraintsTest.testMatches":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":159,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":216,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":111,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":187,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":213,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":167,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":466,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":205,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":68,"org.easymock.tests2.UsageConstraintsTest.greaterThan":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":135,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":280,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":69,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":397,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":281,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":243,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":272,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":475,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":169,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":333,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":200,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":423,"org.easymock.tests2.CaptureTest.testCaptureFirst":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":334,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":487,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":87,"org.easymock.tests2.UsageTest.moreThanOneArgument":477,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":399,"org.easymock.tests2.CaptureTest.testCapture2_2446744":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":110,"org.easymock.tests.GenericTest.testBridgedEquals":133,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":493,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":490,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":235,"org.easymock.tests.UsageExpectAndReturnTest.longType":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":210,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":144,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":113,"org.easymock.tests.UsageCallCountTest.tooManyCalls":236,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":166,"org.easymock.tests.MockingTest.testNiceClassMocking":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":284,"org.easymock.tests.MockingTest.testClassMocking":71,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":229,"org.easymock.tests2.UsageConstraintsTest.testContains":306,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":346,"org.easymock.tests2.UsageConstraintsTest.testFind":297,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":143,"org.easymock.tests.MockTypeTest.fromEasyMockClass":240,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":350,"org.easymock.tests.UsageExpectAndReturnTest.object":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":339,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":105,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":197,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":494,"org.easymock.tests.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":42,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":191,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":322,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":460,"org.easymock.tests.MockClassControlTest.testHashCode":175,"org.easymock.tests2.EasyMockSupportTest.testVerify":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":442,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":126,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":117,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":259,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":392,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":420,"org.easymock.tests.UsageVarargTest.varargCharAccepted":104,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":61,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":60,"org.easymock.tests2.UsageTest.openCallCountByLastCall":481,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":488,"org.easymock.tests.DefaultClassInstantiatorTest.object":62,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":116,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":195,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":443,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":404,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":459,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":174,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":451,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":173,"org.easymock.tests2.UsageTest.resumeIfFailure":486,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":203,"org.easymock.tests2.StubTest.stubWithReturnValue":422,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":378,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":317,"org.easymock.tests2.SerializationTest.testAllMockedMethod":354,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":53,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":513,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":29,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":59,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":387,"org.easymock.tests.UsageExpectAndThrowTest.object":27,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":193,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":314,"org.easymock.tests2.DelegateToTest.testWrongClass":426,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":153,"org.easymock.tests.UsageStrictMockTest.range":183,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":329,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":429,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":226,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":146,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":510,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":140,"org.easymock.tests2.CaptureTest.testCaptureNone":363,"org.easymock.tests.UsageUnorderedTest.message":215,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":504,"org.easymock.tests.UsageVerifyTest.twoReturns":189,"org.easymock.tests.UsageVarargTest.varargByteAccepted":109,"org.easymock.tests2.ThreadingTest.testThreadSafe":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":446,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":233,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":198,"org.easymock.tests2.CaptureTest.testCapture_2617107":357,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":151,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":57,"org.easymock.tests2.UsageConstraintsTest.any":304,"org.easymock.tests2.StubTest.stub":421,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":114,"org.easymock.tests.UsageExpectAndThrowTest.longType":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":202,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":222,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":416,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":464,"org.easymock.tests2.SerializationTest.testClass":352,"org.easymock.tests.LimitationsTest.mockNativeMethod":208,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":403,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":419,"org.easymock.tests2.NameTest.nameForMocksControl":458,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":405,"org.easymock.tests2.MockedExceptionTest.testMockedException":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":434,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":21,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":76,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":266,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":379,"org.easymock.tests.MockingTest.testNicePartialClassMocking":74,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":271,"org.easymock.tests2.CompareToTest.testCompareEqual":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":401,"org.easymock.tests2.CaptureTest.testCaptureLast":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":290,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":301,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":315,"org.easymock.tests.MockingTest.testTwoMocks":72,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":291,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":484,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":319,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":220,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":461,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":64,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":398,"org.easymock.tests2.MockBuilderTest.testCreateMockString":385,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":436,"org.easymock.tests.UsageExpectAndThrowTest.floatType":19,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":431,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":389,"org.easymock.tests.UsageVerifyTest.twoThrows":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":323,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":445,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":48,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":279,"org.easymock.tests.LimitationsTest.privateConstructor":207,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":509,"org.easymock.tests2.UsageConstraintsTest.testNotNull":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":344,"org.easymock.tests2.UsageTest.defaultResetToNice":483,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":402,"org.easymock.tests.UsageVarargTest.differentLength":106,"org.easymock.tests2.CallbackTest.callback":351,"org.easymock.tests2.UsageConstraintsTest.equals":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":275,"org.easymock.tests.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":121,"org.easymock.tests.UsageCallCountTest.tooFewCalls":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":148,"org.easymock.tests.UsageThrowableTest.throwCheckedException":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":511,"org.easymock.tests.MockingTest.testStrictClassMocking":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":155,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":285,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":288,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":391,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":196,"org.easymock.tests2.NameTest.nameForNiceMock":457,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":400,"org.easymock.tests2.DependencyTest.testInterfaceMocking":473,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.DelegateToTest.testStubDelegate":425,"org.easymock.tests2.AnswerTest.stubAnswer":390,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":380,"org.easymock.tests.UsageVarargTest.varargLongAccepted":108,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":321,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":468,"org.easymock.tests.UsageThrowableTest.noUpperLimit":162,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":324,"org.easymock.tests2.SerializationTest.test":353,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":360,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":81,"org.easymock.tests2.UsageConstraintsTest.testSame":299,"org.easymock.samples.SupportTest.addDocument":1,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":287,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":437,"org.easymock.tests.GenericTest.testPackageScope":130,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":41,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":467,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":77,"org.easymock.tests2.NameTest.nameForMock":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests2.UsageStrictMockTest.differentMethods":418,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":384,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":31,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":137,"org.easymock.tests2.MockedExceptionTest.testRealException":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":330,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":120,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":227,"org.easymock.tests2.NameTest.nameForStrictMock":456,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":270,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":328,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":65,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":371,"org.easymock.tests2.UsageStrictMockTest.range":417,"org.easymock.tests2.UsageConstraintsTest.lessThan":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":45,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":441,"org.easymock.tests2.CaptureTest.testCaptureRightOne":365,"org.easymock.tests2.UsageConstraintsTest.testOr":300,"org.easymock.tests.UsageRangeTest.combination":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":267,"org.easymock.tests.UsageTest.wrongArguments":253,"org.easymock.tests2.MockBuilderTest.testWithConstructor":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":438,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":93,"org.easymock.tests.UsageVarargTest.varargShortAccepted":107,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":67,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":234,"org.easymock.tests2.UsageConstraintsTest.cmpTo":305,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":388,"org.easymock.tests2.CompareToTest.testLessThan":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":40,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":482,"org.easymock.tests2.CaptureTest.testCaptureFromStub":366,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":217,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":372,"org.easymock.tests.UsageTest.unexpectedCallWithArray":252,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":232,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":94,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests2.UsageConstraintsTest.constraints":294,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":186,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests2.CompareToTest.testGreateThan":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":211,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":86,"org.easymock.tests.LimitationsTest.abstractClass":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":503,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":337}}]
