[{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,0,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[176,177,109,178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[135,136,138,140,141,179,152,157,164,166,172],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[180,181,3,4,182,183,5,6,184,185,7,186,8,9,187,188,10,11,12,13,14,189,190,191,192,193,194,195,196,197,198,199,15,200,201,202,203,204,205,206,207,208,209,210,211,212,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,213,214,215,216,217,218,219,220,221,222,223,36,37,224,38,225,39,40,226,227,228,229,230,41,42,43,231,44,45,46,47,48,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,49,263,50,51,264,52,265,53,54,55,56,57,58,59,60,61,62,63,64,266,267,268,269,270,65,271,271,272,272,66,273,67,68,69,274,70,71,72,73,275,74,276,75,76,77,277,278,78,79,279,80,81,280,82,83,281,84,282,85,86,87,88,89,90,91,92,93,94,95,96,97,283,98,99,100,101,102,103,104,105,106,107,284,285,286,108,287,288,289,0,1,109,110,111,112,113,114,290,291,115,292,116,117,118,119,120,121,122,123,124,125,126,127,293,294,295,296,297,298,299,300,128,301,302,303,304,129,305,130,306,131,132,307,133,134,135,136,137,138,139,140,141,142,179,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,308,164,165,166,167,168,309,310,169,170,171,172,311,173,174,175,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[313,314,315,316,317,318,180,181,3,4,182,183,184,185,7,319,11,320,321,322,196,199,15,200,323,324,325,213,214,215,218,219,220,37,224,38,225,326,261,262,49,263,50,51,264,71,73,275,74,276,277,278,78,79,279,80,327,82,83,281,84,282,86,87,90,91,93,328,101,329,102,330,107,331,117,119,121,122,124,125,294,295,296,297,298,305,130,306,131,132,307,135,149,332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[313,333,334,314,315,316,317,318,180,181,335,3,4,182,183,5,6,184,185,7,336,337,338,339,340,341,319,342,343,344,345,186,8,9,187,188,10,11,12,13,14,189,190,191,192,193,194,346,347,320,321,322,348,349,350,195,196,197,198,199,15,200,201,202,203,351,204,352,205,206,207,208,209,210,211,212,353,323,354,355,324,325,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,213,356,214,215,216,217,218,219,220,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,221,2,373,374,375,376,222,377,223,378,379,36,380,37,224,38,225,39,40,226,227,228,229,230,41,42,43,381,382,231,44,45,383,46,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,47,48,232,233,234,235,326,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,399,262,49,263,50,51,264,400,401,402,403,404,405,406,407,408,409,52,265,53,54,55,56,57,58,59,60,61,62,63,410,64,411,266,412,267,268,269,270,413,65,271,272,66,273,67,68,414,69,415,274,416,417,70,418,419,71,72,73,275,74,276,75,76,77,277,278,78,79,420,421,422,423,279,424,80,327,425,426,81,280,82,176,83,427,428,281,84,429,282,85,86,87,88,430,89,90,91,431,92,93,94,95,96,97,283,432,98,433,434,328,99,100,101,435,329,436,437,438,439,440,102,330,441,442,443,444,445,446,447,448,103,449,450,104,451,452,453,454,455,456,457,458,459,105,460,461,462,463,464,106,465,466,467,468,469,470,471,107,331,472,473,474,475,476,477,284,285,286,108,287,288,289,0,1,478,109,178,479,110,111,112,113,114,290,291,115,292,116,117,118,119,120,121,122,123,124,125,126,127,293,294,480,295,296,297,298,299,300,128,301,302,303,304,129,305,481,130,306,131,132,307,133,134,135,136,482,137,138,139,140,141,142,179,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,483,484,160,161,162,163,308,164,165,166,167,168,309,310,169,170,171,172,311,173,174,175,332,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[406,485,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[84,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[372],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[156],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[3,188,193,198,211,212,360,224,43,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,52,53,54,55,56,57,58,71,129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[77,434,103,123],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[182,488,489,262,490,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[4,183,184,185,37,224,38,225,262,49,50,51,492,493,494,73,275,277,278,295,296,297,298,130,131,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[406,486],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[313,333,334,314,315,316,317,318,180,181,335,3,4,182,183,5,6,184,185,7,336,337,338,339,340,341,319,342,343,344,345,186,8,9,187,188,10,11,12,13,14,189,190,191,192,193,194,346,347,320,321,322,348,349,350,195,196,197,198,199,15,200,201,202,203,351,204,352,205,206,207,208,209,210,211,212,353,323,354,355,324,325,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,213,356,214,215,216,217,218,219,220,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,221,2,373,374,375,376,222,377,223,378,379,36,380,37,224,38,225,39,40,226,227,228,229,230,41,42,43,381,382,231,44,45,383,46,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,47,48,232,233,234,235,326,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,399,262,49,263,50,51,264,400,401,402,403,404,405,406,407,408,409,52,265,53,54,55,56,57,58,59,60,61,62,63,410,64,411,266,412,495,267,268,269,270,413,65,271,272,66,273,67,68,414,69,415,274,416,417,70,418,419,71,72,73,275,74,276,75,76,77,277,278,78,79,420,496,497,498,421,422,423,279,424,80,327,425,426,81,280,82,176,83,427,428,281,84,429,282,85,86,87,88,430,89,90,91,431,92,93,94,95,96,97,283,432,98,433,434,328,99,100,101,435,329,436,437,438,439,440,102,330,441,442,443,444,445,446,447,448,103,449,450,104,451,452,453,454,455,456,457,458,459,105,460,461,462,463,464,106,465,466,467,468,469,470,471,107,331,472,473,474,475,476,477,284,285,286,108,287,288,289,0,1,478,109,178,479,110,111,112,113,114,290,291,115,292,116,117,118,119,120,121,122,123,124,125,126,127,293,294,480,295,296,297,298,299,300,128,301,302,303,304,129,305,481,130,306,131,132,307,133,134,135,136,482,137,138,139,140,141,142,179,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,483,484,160,161,162,163,308,164,165,166,167,168,309,310,169,170,171,172,311,173,174,175,332,312],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.UsageTest.argumentsOrdered":278,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":367,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":276,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":419,"org.easymock.tests2.DelegateToTest.testReturnException":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":190,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests.MockClassControlTest.testToString":320,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":480,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":241,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":492,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":161,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":8,"org.easymock.tests2.UsageTest.wrongArguments":275,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":445,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":234,"org.easymock.samples.ExampleTest.answerVsDelegate":273,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":316,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":385,"org.easymock.tests2.UsageConstraintsTest.testNull":138,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":350,"org.easymock.tests2.CaptureTest.testPrimitive":167,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":10,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":260,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":228,"org.easymock.tests.UsageTest.argumentsOrdered":185,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":236,"org.easymock.tests.UsageVarargTest.varargIntAccepted":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":279,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":63,"org.easymock.tests.ReplayStateInvalidUsageTest.times":395,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests2.DependencyTest.testClassMocking":483,"org.easymock.tests2.AnswerTest.answer":108,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":286,"org.easymock.tests2.CaptureTest.testAnd":164,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":334,"org.easymock.tests2.UsageTest.strictResetToDefault":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":13,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":240,"org.easymock.tests2.DelegateToTest.testDelegate":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":256,"org.easymock.tests.LimitationsTest.mockFinalMethod":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":209,"org.easymock.tests2.DependencyTest.testClassMockingSupport":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":180,"org.easymock.tests2.CaptureTest.testCapture1_2446744":168,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":284,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":389,"org.easymock.tests.UsageThrowableTest.throwError":52,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":315,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":495,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":466,"org.easymock.samples.PartialClassMockTest.testGetArea":70,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":390,"org.easymock.tests.MockingTest.testInterfaceMocking":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":455,"org.easymock.tests2.UsageTest.niceToStrict":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":242,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":81,"org.easymock.tests2.MockBuilderTest.testCreateMock":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":462,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":442,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":250,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":212,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":232,"org.easymock.tests.UsageOverloadedMethodTest.overloading":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":198,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":27,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":485,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":146,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":171,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":339,"org.easymock.tests2.EasyMockSupportClassTest.testAll":103,"org.easymock.tests.MockClassControlTest.testEquals":349,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":258,"org.easymock.tests2.CaptureTest.testCaptureAll":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":285,"org.easymock.tests.MockNameTest.defaultName":326,"org.easymock.tests2.UsageConstraintsTest.testMatches":148,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":229,"org.easymock.samples.ExampleTest.voteForRemovals":69,"org.easymock.tests.UsageVarargTest.allKinds":186,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":37,"org.easymock.samples.BasicClassMockTest.testPrintContent":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":208,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":57,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":194,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":302,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":408,"org.easymock.tests2.UsageConstraintsTest.greaterThan":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":101,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":409,"org.easymock.samples.ExampleTest.voteForRemoval":67,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":435,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":317,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":283,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":270,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":189,"org.easymock.tests2.CaptureTest.testCaptureFirst":174,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":23,"org.easymock.tests2.CaptureTest.testCapture2_2446744":173,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":113,"org.easymock.tests2.UsageTest.moreThanOneArgument":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":373,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.GenericTest.testBridgedEquals":412,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":487,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":219,"org.easymock.tests.UsageExpectAndReturnTest.longType":19,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":259,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":155,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":226,"org.easymock.tests.UsageCallCountTest.tooManyCalls":220,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":444,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":56,"org.easymock.tests.MockingTest.testNiceClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":86,"org.easymock.tests.MockingTest.testClassMocking":382,"org.easymock.tests2.UsageConstraintsTest.testContains":145,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":356,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":137,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":43,"org.easymock.tests.MockTypeTest.fromEasyMockClass":314,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":261,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":312,"org.easymock.tests.UsageExpectAndReturnTest.object":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":341,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":355,"org.easymock.tests.UsageTest.exactCallCountByLastCall":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":237,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":32,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":468,"org.easymock.tests.MockClassControlTest.testHashCode":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":457,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":477,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":478,"org.easymock.tests.UsageVarargTest.varargCharAccepted":340,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":401,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":377,"org.easymock.tests2.UsageTest.openCallCountByLastCall":75,"org.easymock.tests.DefaultClassInstantiatorTest.object":402,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":210,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":458,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":467,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":99,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":33,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":106,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":321,"org.easymock.tests2.UsageTest.resumeIfFailure":78,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":313,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":192,"org.easymock.tests2.StubTest.stubWithReturnValue":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":25,"org.easymock.tests2.SerializationTest.testAllMockedMethod":308,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":65,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":253,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":222,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":287,"org.easymock.tests.UsageExpectAndThrowTest.object":251,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":352,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":153,"org.easymock.tests2.DelegateToTest.testWrongClass":301,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":39,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":40,"org.easymock.tests.UsageStrictMockTest.range":50,"org.easymock.samples.ConstructorCalledMockTest.testTax":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":446,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":397,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":233,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":488,"org.easymock.tests2.CaptureTest.testCaptureNone":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests.UsageUnorderedTest.message":225,"org.easymock.tests.UsageVerifyTest.twoReturns":38,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":460,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":217,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":416,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":166,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageConstraintsTest.any":143,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":394,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":191,"org.easymock.tests.UsageExpectAndThrowTest.longType":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":406,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":393,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.tests2.SerializationTest.testClass":162,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests.LimitationsTest.mockNativeMethod":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":35,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":438,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.NameTest.nameForMocksControl":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":440,"org.easymock.tests2.MockedExceptionTest.testMockedException":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":450,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":245,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":332,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":83,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":436,"org.easymock.tests2.CaptureTest.testCaptureLast":169,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":181,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":154,"org.easymock.tests.MockingTest.testTwoMocks":231,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":249,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":277,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.samples.ExampleTest.removeNonExistingDocument":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":441,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":391,"org.easymock.tests.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":469,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":404,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":112,"org.easymock.tests2.MockBuilderTest.testCreateMockString":282,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":451,"org.easymock.tests.UsageExpectAndThrowTest.floatType":243,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":479,"org.easymock.tests.UsageVerifyTest.twoThrows":224,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":105,"org.easymock.samples.ExampleTest.voteAgainstRemoval":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":100,"org.easymock.tests.LimitationsTest.privateConstructor":379,"org.easymock.tests2.UsageConstraintsTest.testNotNull":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":58,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":290,"org.easymock.tests2.UsageTest.defaultResetToNice":77,"org.easymock.samples.ExampleTest.voteAgainstRemovals":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":437,"org.easymock.tests.UsageVarargTest.differentLength":319,"org.easymock.tests2.CallbackTest.callback":294,"org.easymock.tests2.UsageConstraintsTest.equals":482,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":433,"org.easymock.tests.UsageTest.openCallCountByLastCall":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":187,"org.easymock.tests.UsageCallCountTest.tooFewCalls":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":235,"org.easymock.tests.UsageThrowableTest.throwCheckedException":55,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":489,"org.easymock.tests.MockingTest.testStrictClassMocking":381,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":90,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":396,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":89,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":1,"org.easymock.tests.ObjectMethodsTest.testHashCode":354,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":114,"org.easymock.tests2.NameTest.nameForNiceMock":297,"org.easymock.tests2.DependencyTest.testInterfaceMocking":160,"org.easymock.samples.ExampleTest.addDocument":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":465,"org.easymock.tests2.DelegateToTest.testStubDelegate":128,"org.easymock.tests2.AnswerTest.stubAnswer":0,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":49,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":427,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":34,"org.easymock.tests.UsageExpectAndReturnTest.floatType":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":109,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests.UsageThrowableTest.noUpperLimit":265,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":134,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":420,"org.easymock.tests2.SerializationTest.test":163,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":309,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":486,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":403,"org.easymock.tests2.UsageConstraintsTest.testSame":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":17,"org.easymock.samples.SupportTest.addDocument":413,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":430,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":452,"org.easymock.tests.GenericTest.testPackageScope":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":384,"org.easymock.tests2.NameTest.nameForMock":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":429,"org.easymock.tests2.UsageStrictMockTest.differentMethods":132,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":434,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":255,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":14,"org.easymock.tests2.MockedExceptionTest.testRealException":292,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":177,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":370,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":9,"org.easymock.tests2.NameTest.nameForStrictMock":296,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":426,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":493,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":405,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":80,"org.easymock.tests2.UsageStrictMockTest.range":131,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":456,"org.easymock.tests2.CaptureTest.testCaptureRightOne":172,"org.easymock.tests2.UsageConstraintsTest.testOr":140,"org.easymock.tests.UsageRangeTest.combination":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":183,"org.easymock.tests2.MockBuilderTest.testWithConstructor":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":453,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":358,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":407,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":218,"org.easymock.tests2.UsageConstraintsTest.cmpTo":144,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.CaptureTest.testCaptureFromStub":311,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":388,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":327,"org.easymock.tests.UsageTest.unexpectedCallWithArray":182,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":30,"org.easymock.tests2.UsageConstraintsTest.constraints":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.samples.ExampleTest.addAndChangeDocument":274,"org.easymock.tests.UsageStrictMockTest.testVerify":400,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":418,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":206,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":61,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":22,"org.easymock.tests.LimitationsTest.abstractClass":378,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":62,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":337}}]
