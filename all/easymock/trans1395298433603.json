[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[28,29,30,31,32,33,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[41,42,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[44,45,46,47,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[50],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[51,52,53,54],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[55],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[56,57,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.ConstructorArgs:54","failures":[65,66,67,68,28,69,70,71,72,73,52,74,34,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[103,104,105,106,107,108],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[109],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[103,110,111,112,113,114,115,116,106,14,117,118,119,26],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[65,66,67,68,28,69,70,71,72,73,120,52,74,34,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,65,65,66,66,138,139,140,141,142,16,143,144,145,146,147,148,149,19,150,20,151,152,21,153,22,23,24,154,155,52,54,74,78,81,91,97,156,157,100,158,159,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[160,161,3,162,163,164,165,103,110,166,167,111,112,168,169,170,171,121,172,173,174,175,122,176,177,178,56,57,179,58,59,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,123,212,213,214,215,216,217,218,219,220,221,222,223,224,225,124,125,126,226,127,227,228,229,4,5,6,7,230,231,232,233,234,235,236,237,238,239,240,241,242,114,8,243,244,245,246,247,115,116,248,249,250,251,252,9,253,254,255,256,257,10,11,12,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,128,129,130,278,279,280,281,282,283,284,285,286,131,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,41,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,132,341,342,106,13,343,14,15,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,133,134,135,136,359,360,361,362,363,35,364,365,366,137,367,36,368,37,38,369,39,370,371,65,66,138,139,372,40,373,374,375,117,376,377,378,379,60,118,119,380,381,140,67,141,142,68,382,16,143,144,28,145,383,69,146,147,71,148,384,385,17,18,149,19,386,150,20,151,152,387,21,388,389,153,22,23,24,390,154,391,392,61,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,55,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,155,430,109,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,52,53,54,74,34,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,483,484,485,486,487,488,489,490,491,492,493,494,495,496,25,497,26,27,498,499,500,501,156,157,100,158,502,503,159,101,102,504,505,62,506,507,44,45,46,508,47,63,509,510,49],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[164,165,103,110,111,112,168,174,122,177,206,212,214,215,218,219,220,221,4,231,234,235,236,240,241,114,247,115,116,337,340,132,341,106,13,343,14,15,344,134,135,136,373,375,117,376,377,118,119,380,381,141,144,146,19,24,61,55,438,444,459,463,467,488,495,25,497,26,27,498,100,159],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[41,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"methodName"}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[121,122,123,124,125,126,127,128,129,130,131,133,137,65,65,66,66,138,139,140,511,141,142,16,143,144,145,146,147,512,148,149,19,150,20,151,152,21,153,22,23,24,155,513,514,515,52,54,74,78,81,91,97,156,157,100,158,159,101],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[179,58,59,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[233,430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[160,161,3,162,163,164,165,103,110,166,167,111,112,168,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,123,214,215,216,217,218,219,220,222,223,125,126,127,4,6,7,230,232,233,236,237,238,239,114,8,243,244,245,246,247,115,116,248,249,250,251,252,9,253,254,255,256,257,10,11,12,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,128,129,279,280,281,282,283,284,131,332,333,334,335,341,342,106,13,343,14,15,344,346,347,362,363,35,364,365,366,137,367,36,368,37,38,369,39,371,65,66,138,139,372,40,373,374,375,117,376,377,378,379,60,118,119,380,381,140,141,16,143,144,145,146,147,148,17,18,149,19,386,150,20,151,152,21,153,22,23,24,391,392,61,393,395,396,397,398,399,400,402,403,404,405,406,407,55,408,409,410,411,412,413,414,415,416,417,418,421,422,423,424,425,426,427,428,429,155,430,109,432,433,434,436,437,438,444,452,453,454,456,52,53,54,74,458,459,460,461,462,463,464,465,466,467,468,469,470,78,81,91,97,488,495,496,25,497,26,27,498,499,500,156,157,100,158,503,159,101,504,505,62,506,507,44,45,46,508,47,63,509,510,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[245,499],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[121,122,123,124,125,126,127,128,129,130,131,133,137,65,65,66,66,138,139,140,511,141,142,16,143,144,145,146,147,512,148,149,19,150,20,151,152,21,153,22,23,24,155,513,514,515,52,54,74,78,81,91,97,156,157,100,158,159,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:181","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.util.List<java.lang.reflect.Field>) {\n    final org.easymock.internal.InjectionTarget org.easymock.internal.InjectionTarget = org.easymock.internal.Injector.org.easymock.internal.Injector.injectionTargetWithField(java.lang.reflect.Field);\n    if (org.easymock.internal.InjectionTarget == null) {\n        continue;\n    } \n    final org.easymock.internal.Injection org.easymock.internal.Injection = org.easymock.internal.Injector.org.easymock.internal.Injector.findUniqueAssignable(java.util.List<org.easymock.internal.Injection>, org.easymock.internal.InjectionTarget);\n    if (org.easymock.internal.Injection == null) {\n        continue;\n    } \n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n}","type":"CtForEachImpl"},"failures":[366,367,439,440,441,443,445,446,447,448,449,450,483,484,485,487,489,490,491,492,493,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":393,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.UsageTest.argumentsOrdered":119,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":318,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":377,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":367,"org.easymock.tests2.DelegateToTest.testReturnException":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":280,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":134,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":471,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":81,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":29,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":400,"org.easymock.tests2.UsageTest.wrongArguments":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":8,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":494,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":334,"org.easymock.samples.ExampleTest.answerVsDelegate":368,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":122,"org.easymock.tests2.UsageConstraintsTest.testNull":396,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":150,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":467,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":361,"org.easymock.tests2.CaptureTest.testPrimitive":506,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":246,"org.easymock.tests.UsageTest.moreThanOneArgument":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":199,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":3,"org.easymock.tests.UsageTest.argumentsOrdered":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":449,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":365,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":488,"org.easymock.tests.ReplayStateInvalidUsageTest.times":296,"org.easymock.tests2.DependencyTest.testClassMocking":384,"org.easymock.tests2.AnswerTest.answer":418,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":427,"org.easymock.tests2.CaptureTest.testAnd":504,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":173,"org.easymock.tests2.UsageTest.strictResetToDefault":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":6,"org.easymock.tests2.DelegateToTest.testDelegate":456,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":195,"org.easymock.tests.LimitationsTest.mockFinalMethod":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":276,"org.easymock.tests2.DependencyTest.testClassMockingSupport":385,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":240,"org.easymock.tests2.CaptureTest.testCapture1_2446744":507,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":425,"org.easymock.tests.UsageThrowableTest.throwError":264,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":290,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":175,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":450,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":163,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":99,"org.easymock.samples.PartialClassMockTest.testGetArea":137,"org.easymock.tests.MockingTest.testInterfaceMocking":226,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":363,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":181,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":86,"org.easymock.tests2.UsageTest.niceToStrict":376,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":16,"org.easymock.tests2.MockBuilderTest.testCreateMock":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":107,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":463,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":172,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":332,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":406,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":10,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":405,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":47,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":203,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.MockClassControlTest.testEquals":360,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":197,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":513,"org.easymock.tests2.CaptureTest.testCaptureAll":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":274,"org.easymock.tests.MockNameTest.defaultName":221,"org.easymock.tests2.UsageConstraintsTest.testMatches":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":162,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":288,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests.UsageVarargTest.allKinds":211,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":247,"org.easymock.samples.BasicClassMockTest.testPrintContent":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":270,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":495,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":284,"org.easymock.tests2.UsageConstraintsTest.greaterThan":408,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":5,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":24,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":307,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":434,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":390,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":176,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":123,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":373,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":460,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":279,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":451,"org.easymock.tests2.CaptureTest.testCaptureFirst":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":461,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":381,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":254,"org.easymock.tests2.CaptureTest.testCapture2_2446744":510,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":436,"org.easymock.tests2.UsageTest.moreThanOneArgument":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":326,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":210,"org.easymock.tests.GenericTest.testBridgedEquals":278,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":219,"org.easymock.tests.UsageExpectAndReturnTest.longType":251,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":458,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":272,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":512,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":198,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":413,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":56,"org.easymock.tests.UsageCallCountTest.tooManyCalls":220,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":269,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":157,"org.easymock.tests.MockingTest.testNiceClassMocking":229,"org.easymock.tests.MockingTest.testClassMocking":225,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":511,"org.easymock.tests2.UsageConstraintsTest.testContains":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":213,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":155,"org.easymock.tests2.UsageConstraintsTest.testFind":395,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":239,"org.easymock.tests.MockTypeTest.fromEasyMockClass":174,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":432,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests.UsageExpectAndReturnTest.object":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":492,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":30,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":205,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":339,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":169,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":34,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":232,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":440,"org.easymock.tests.MockClassControlTest.testHashCode":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":88,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":58,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":424,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":501,"org.easymock.tests.UsageVarargTest.varargCharAccepted":204,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":300,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":331,"org.easymock.tests2.UsageTest.openCallCountByLastCall":378,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":469,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests.DefaultClassInstantiatorTest.object":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":179,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":337,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":486,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":439,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":178,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests2.UsageTest.resumeIfFailure":380,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":282,"org.easymock.tests2.StubTest.stubWithReturnValue":500,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":28,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":414,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":256,"org.easymock.tests2.SerializationTest.testAllMockedMethod":54,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":324,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":108,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":192,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":330,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":419,"org.easymock.tests.UsageExpectAndThrowTest.object":190,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":171,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":411,"org.easymock.tests2.DelegateToTest.testWrongClass":454,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":346,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":347,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":65,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":481,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":465,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":144,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":104,"org.easymock.tests2.CaptureTest.testCaptureNone":508,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":350,"org.easymock.tests.UsageUnorderedTest.message":114,"org.easymock.tests.UsageVerifyTest.twoReturns":116,"org.easymock.tests.UsageVarargTest.varargByteAccepted":209,"org.easymock.tests2.ThreadingTest.testThreadSafe":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":92,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":217,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":138,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":340,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageConstraintsTest.any":402,"org.easymock.tests2.StubTest.stub":499,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":57,"org.easymock.tests.UsageExpectAndThrowTest.longType":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":41,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":294,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":497,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":444,"org.easymock.tests2.SerializationTest.testClass":52,"org.easymock.tests.LimitationsTest.mockNativeMethod":131,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":263,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":515,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":485,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":498,"org.easymock.tests2.NameTest.nameForMocksControl":475,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":487,"org.easymock.tests2.MockedExceptionTest.testMockedException":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":80,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":431,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":145,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":483,"org.easymock.tests2.CaptureTest.testCaptureLast":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":241,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":412,"org.easymock.tests.MockingTest.testTwoMocks":124,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":416,"org.easymock.samples.ExampleTest.removeNonExistingDocument":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":490,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":441,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":303,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":435,"org.easymock.tests2.MockBuilderTest.testCreateMockString":148,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":82,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":421,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":457,"org.easymock.tests.UsageVerifyTest.twoThrows":115,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":91,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":348,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":23,"org.easymock.tests.LimitationsTest.privateConstructor":286,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":73,"org.easymock.tests2.UsageConstraintsTest.testNotNull":415,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":428,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":271,"org.easymock.tests2.UsageTest.defaultResetToNice":60,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":484,"org.easymock.tests.UsageVarargTest.differentLength":206,"org.easymock.tests2.CallbackTest.callback":438,"org.easymock.tests2.UsageConstraintsTest.equals":394,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":388,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.UsageCallCountTest.tooFewCalls":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":335,"org.easymock.tests.UsageThrowableTest.throwCheckedException":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":105,"org.easymock.tests.MockingTest.testStrictClassMocking":224,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":489,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":503,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":423,"org.easymock.tests.ObjectMethodsTest.testHashCode":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":32,"org.easymock.tests2.NameTest.nameForNiceMock":474,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":437,"org.easymock.tests2.DependencyTest.testInterfaceMocking":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":31,"org.easymock.samples.ExampleTest.addDocument":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":93,"org.easymock.tests2.DelegateToTest.testStubDelegate":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.AnswerTest.stubAnswer":422,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":383,"org.easymock.tests.UsageVarargTest.varargLongAccepted":208,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndReturnTest.floatType":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":448,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":409,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests.UsageThrowableTest.noUpperLimit":265,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":392,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":476,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":44,"org.easymock.tests2.SerializationTest.test":53,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":302,"org.easymock.tests2.UsageConstraintsTest.testSame":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":249,"org.easymock.samples.SupportTest.addDocument":372,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":502,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":83,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":447,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":227,"org.easymock.tests2.NameTest.nameForMock":472,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":11,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":194,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":7,"org.easymock.tests2.MockedExceptionTest.testRealException":430,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":177,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":243,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":299,"org.easymock.tests2.NameTest.nameForStrictMock":473,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":480,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":410,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":304,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":141,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":316,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":87,"org.easymock.tests2.UsageConstraintsTest.testOr":398,"org.easymock.tests.UsageRangeTest.combination":4,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":110,"org.easymock.tests2.MockBuilderTest.testWithConstructor":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":84,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":309,"org.easymock.tests.UsageVarargTest.varargShortAccepted":207,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":305,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":218,"org.easymock.tests2.UsageConstraintsTest.cmpTo":403,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":311,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":379,"org.easymock.tests2.CaptureTest.testCaptureFromStub":509,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":289,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":142,"org.easymock.tests.UsageTest.unexpectedCallWithArray":103,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":106,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":216,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":70,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":258,"org.easymock.tests2.CaptureTest.testCapture":48,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":343,"org.easymock.samples.ExampleTest.addAndChangeDocument":371,"org.easymock.tests.UsageStrictMockTest.testVerify":345,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":366,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":273,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":45,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":514,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":253,"org.easymock.tests.LimitationsTest.abstractClass":285,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":464,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":201}}]
