[{"position":"org.easymock.internal.matchers.Equals:54","failures":[0],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[4],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[31,32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[33,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[37,38,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[59],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[60,61,62,63,64],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[65,66,67,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[69,70,71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[15,72,26,73],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[74],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,82,83,84,65,85,86,87,88,89,90,33,91,92,93,94,95,96,34,97,98,99,100,35,7,101,8,102,103,9,104,105,106,107,66,108,67,109,110,111,112,113,114,115,68,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,12,132,133,134,135,31,13,14,136,137,138,139,140,141,142,143,144,32,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,41,42,43,44,185,186,187,188,15,72,189,190,45,191,192,193,194,195,46,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,47,267,268,269,48,270,271,272,273,17,18,274,275,19,20,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,21,22,40,301,302,49,50,51,303,304,305,306,307,308,309,310,311,10,312,313,314,315,316,23,317,318,319,320,321,322,323,324,325,326,327,328,28,29,30,24,329,330,25,331,332,26,73,333,334,53,54,55,56,57,58,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[354,354,355,355,356,357,358,1,3,359,360,361,362,150,363,151,364,152,153,154,155,156,157,365,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,366,183,43,197,198,199,200,231,238,239,240,256,367,368,311],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:99","failures":[369,370,371,372,358,373,1,2,359,360,361,362,77,78,79,80,81,82,83,84,65,85,87,88,89,90,33,91,92,93,94,95,96,34,98,99,100,35,7,103,66,108,109,110,113,114,115,68,117,118,119,120,121,122,374,125,129,130,131,132,134,135,31,136,137,138,139,140,141,142,143,144,32,145,146,147,148,151,152,154,155,157,159,160,161,162,163,164,166,168,169,170,171,172,173,174,175,176,177,375,376,178,183,184,43,187,15,72,45,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,226,227,228,229,238,240,253,254,268,269,271,272,273,274,275,276,297,298,299,300,22,303,305,306,307,308,309,310,311,316,317,318,319,320,321,331,26,73],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[4],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[358,1,150,363,151,364,152,153,154,155,156,157,365,158,165,240,367,368],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[369,5,370,371,378,372,356,357,379,380,358,381,373,1,2,3,359,360,361,362,80,65,85,87,88,90,92,95,96,34,97,98,7,102,66,108,67,109,111,112,113,114,115,68,118,122,374,124,126,129,130,12,132,133,13,14,137,138,139,140,141,142,143,144,145,146,147,148,149,152,154,155,159,160,161,162,163,164,166,169,171,172,173,174,175,176,177,375,376,178,183,184,43,186,188,189,198,199,200,203,204,206,211,216,222,238,239,242,243,244,245,246,248,249,250,251,252,256,270,18,19,20,276,279,280,282,287,292,297,298,21,22,303,304,305,306,307,308,309,310,311,10,313,314,316,330,25,332,333,349,350,352,353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[77,33,93,94,35,187,45,253,254,268,269,271,317,318,319,320,321,382,383,384,385,386,331,340,341,342,343,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[77,79,85,88,33,93,96,34,98,35,166,36,387,388,389,390],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[15,72,17,25,26,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[79,80,81,82,83,84,65,85,86,87,95,96,99,100,66,108,67,109,68,116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.internal.RecordState:305","failures":[369,5,370,371,372,358,373,6,1,2,359,360,361,362,77,78,79,80,81,82,83,84,65,85,87,88,89,90,33,91,92,93,94,95,96,34,97,98,99,100,35,7,103,9,66,108,67,109,110,113,114,115,68,117,118,119,120,121,122,374,124,125,126,128,129,130,131,132,134,135,31,136,137,138,139,140,141,142,143,144,32,145,146,147,148,151,152,154,155,157,159,160,161,162,163,164,166,168,169,170,171,172,173,174,175,176,177,375,376,178,183,184,43,187,15,72,45,195,46,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,226,227,228,229,238,253,254,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,21,22,303,305,306,307,308,309,310,311,10,313,314,316,317,318,319,320,321,322,331,26,73,57],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[79,80,82,84,65,86,95,99,66,67,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[129,135,272,275,21,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[354,355,369,5,370,371,378,372,391,356,357,379,380,358,381,373,6,1,2,3,359,360,361,362,75,76,77,78,79,80,81,82,83,84,65,85,87,88,89,90,33,91,92,93,94,95,96,34,98,99,100,35,7,102,103,9,104,105,106,107,66,108,67,109,111,112,113,114,115,68,118,119,120,374,124,125,128,130,131,132,133,31,136,138,139,140,141,142,143,144,32,145,146,147,148,149,150,152,153,154,155,159,161,162,163,164,166,167,169,171,172,173,174,175,176,177,375,376,178,179,180,181,182,183,184,41,42,43,44,186,187,72,189,190,45,191,192,193,194,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,392,226,227,228,229,231,238,239,242,243,244,245,246,248,249,250,251,252,253,254,256,268,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,21,22,304,305,311,316,317,318,319,320,321,324,325,326,327,328,330,331,73,333,334,53,54,55,56,57,58,340,341,342,343,344,345,346,347,348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:99","failures":[369,370,371,372,358,373,1,2,359,360,361,362,77,78,79,80,81,82,83,84,65,85,87,88,89,90,33,91,92,93,94,95,96,34,98,99,100,35,7,103,66,108,109,110,113,114,115,68,117,118,119,120,121,122,374,125,129,130,131,132,134,135,31,136,137,138,139,140,141,142,143,144,32,145,146,147,148,151,152,154,155,157,159,160,161,162,163,164,166,168,169,170,171,172,173,174,175,176,177,375,376,178,183,184,43,187,15,72,45,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,226,227,228,229,238,240,253,254,268,269,271,272,273,274,275,276,297,298,299,300,22,303,305,306,307,308,309,310,311,316,317,318,319,320,321,331,26,73],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:107","sourceCode":"return this","type":"CtReturnImpl"},"failures":[152],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[354,355,369,5,370,371,378,372,393,391,356,357,379,380,358,381,373,6,1,2,3,394,395,396,397,398,399,400,401,402,359,403,404,360,405,406,407,408,409,410,411,412,413,361,414,415,416,417,418,362,419,420,75,59,76,77,78,79,80,0,81,82,83,84,65,85,86,87,88,89,90,33,91,92,93,94,95,96,34,97,98,99,100,35,7,101,8,102,103,9,104,105,106,107,66,108,67,109,110,111,112,113,114,115,68,116,117,118,119,421,120,121,122,374,123,124,125,126,127,128,129,130,131,12,132,133,134,135,31,13,14,136,137,138,139,140,141,142,143,144,32,145,146,147,148,149,422,423,150,151,364,424,152,153,154,155,425,426,156,157,158,159,160,161,162,163,164,165,427,166,428,429,167,168,169,170,430,431,171,172,173,174,432,175,176,177,433,434,435,375,376,436,437,438,439,440,178,441,442,443,444,445,446,447,179,180,181,182,183,448,449,450,451,452,453,184,454,455,456,457,458,459,41,42,43,44,185,186,187,188,15,72,189,190,45,191,192,193,194,460,195,46,196,461,462,463,37,464,465,466,467,197,198,199,468,200,469,470,471,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,392,472,223,224,225,473,474,226,227,228,229,230,231,232,233,234,235,236,237,4,238,239,240,475,476,241,477,242,243,244,478,245,246,247,248,249,250,251,252,253,254,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,255,256,257,258,259,260,261,262,263,264,265,266,47,267,268,269,48,270,271,272,273,17,18,274,275,19,20,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,21,22,40,301,302,367,501,502,503,504,368,505,506,49,50,51,303,304,305,306,307,308,309,310,507,508,311,509,10,312,313,314,315,316,23,317,318,319,320,321,382,510,511,27,383,384,512,52,513,514,515,516,517,11,385,518,322,519,520,386,521,522,323,523,324,325,326,327,328,28,29,30,24,329,330,25,331,332,26,73,333,334,53,54,55,56,57,58,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":80,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":377,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":272,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":515,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":133,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":380,"org.easymock.tests2.DelegateToTest.testReturnException":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":54,"org.easymock.tests.MockingTest.testPartialClassMocking":198,"org.easymock.tests.MockClassControlTest.testToString":232,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":447,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":277,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":376,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":85,"org.easymock.tests2.UsageTest.wrongArguments":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":268,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":446,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":193,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":368,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":470,"org.easymock.tests2.UsageConstraintsTest.testNull":82,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":237,"org.easymock.tests2.CaptureTest.testPrimitive":109,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":271,"org.easymock.tests.UsageTest.moreThanOneArgument":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":296,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":342,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":335,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":518,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":396,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":321,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":484,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests.ReplayStateInvalidUsageTest.times":265,"org.easymock.tests2.DependencyTest.testClassMocking":434,"org.easymock.tests2.AnswerTest.answer":7,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":519,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":107,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":502,"org.easymock.tests2.CaptureTest.testAnd":66,"org.easymock.tests2.UsageTest.strictResetToDefault":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":228,"org.easymock.tests2.DelegateToTest.testDelegate":128,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":339,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":292,"org.easymock.tests.LimitationsTest.mockFinalMethod":509,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":328,"org.easymock.tests2.DependencyTest.testClassMockingSupport":435,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":221,"org.easymock.tests2.CaptureTest.testCapture1_2446744":110,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":105,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":259,"org.easymock.tests.UsageThrowableTest.throwError":303,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":504,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":420,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":487,"org.easymock.samples.PartialClassMockTest.testGetArea":358,"org.easymock.tests.MockingTest.testInterfaceMocking":468,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":260,"org.easymock.tests2.CompareToTest.testLessOrEqual":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":409,"org.easymock.tests2.UsageTest.niceToStrict":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":278,"org.easymock.tests2.ThreadingTest.testChangeDefault":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":152,"org.easymock.tests2.MockBuilderTest.testCreateMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":416,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":443,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":286,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":501,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":191,"org.easymock.tests.UsageOverloadedMethodTest.overloading":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":33,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":212,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":297,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":38,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":90,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":115,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":478,"org.easymock.tests.MockClassControlTest.testEquals":236,"org.easymock.tests2.EasyMockSupportClassTest.testAll":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":294,"org.easymock.tests2.CaptureTest.testCaptureAll":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":326,"org.easymock.tests.MockNameTest.defaultName":460,"org.easymock.tests2.UsageConstraintsTest.testMatches":91,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":343,"org.easymock.samples.ExampleTest.voteForRemovals":372,"org.easymock.tests.UsageVarargTest.allKinds":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":300,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":327,"org.easymock.samples.BasicClassMockTest.testPrintContent":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":309,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":58,"org.easymock.tests2.UsageConstraintsTest.greaterThan":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":170,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":488,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":465,"org.easymock.samples.ExampleTest.voteForRemoval":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":430,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":505,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":165,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":480,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":256,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":140,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":53,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":123,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":512,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":141,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":208,"org.easymock.tests2.UsageTest.moreThanOneArgument":131,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":122,"org.easymock.tests2.CaptureTest.testCapture2_2446744":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":520,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":157,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests.GenericTest.testBridgedEquals":475,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":352,"org.easymock.tests.UsageExpectAndReturnTest.longType":204,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":324,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":295,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":365,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":97,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":340,"org.easymock.tests.UsageCallCountTest.tooManyCalls":353,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":308,"org.easymock.tests.MockingTest.testNiceClassMocking":471,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":172,"org.easymock.tests.MockingTest.testClassMocking":467,"org.easymock.tests2.UsageConstraintsTest.testContains":89,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":346,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":81,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":299,"org.easymock.tests.MockTypeTest.fromEasyMockClass":503,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":76,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests.UsageExpectAndReturnTest.object":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":225,"org.easymock.tests.UsageTest.exactCallCountByLastCall":276,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.MockClassControlTest.testHashCode":235,"org.easymock.tests2.EasyMockSupportTest.testVerify":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":411,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":29,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":104,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":422,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":523,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":28,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":412,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":486,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":168,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":283,"org.easymock.tests.ReplayStateInvalidCallsTest.times":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":49,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":493,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":362,"org.easymock.tests2.UsageTest.resumeIfFailure":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":56,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":62,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":210,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":322,"org.easymock.samples.SupportTest.voteForRemovals":373,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":289,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":323,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":101,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":477,"org.easymock.tests.UsageExpectAndThrowTest.object":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":96,"org.easymock.tests2.DelegateToTest.testWrongClass":126,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":490,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":253,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":254,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":354,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":398,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":32,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":288,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":47,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":192,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":482,"org.easymock.tests2.CaptureTest.testCaptureNone":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":414,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":350,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":473,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":356,"org.easymock.tests2.CaptureTest.testCapture_2617107":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":521,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":270,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests2.StubTest.stub":190,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":522,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":55,"org.easymock.tests.UsageExpectAndThrowTest.longType":280,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":37,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":263,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":220,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":438,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":498,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests2.NameTest.nameForMocksControl":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":440,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":404,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":275,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":59,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":281,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":155,"org.easymock.tests.MockingTest.testNicePartialClassMocking":199,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":164,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":436,"org.easymock.tests2.CompareToTest.testCompareEqual":388,"org.easymock.tests2.CaptureTest.testCaptureLast":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":222,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":497,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":34,"org.easymock.tests.MockingTest.testTwoMocks":197,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":494,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":285,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":100,"org.easymock.samples.ExampleTest.removeNonExistingDocument":393,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":442,"org.easymock.tests.UsageStrictMockTest.differentMethods":73,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":423,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":121,"org.easymock.tests2.MockBuilderTest.testCreateMockString":158,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":279,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":102,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":361,"org.easymock.samples.ExampleTest.voteAgainstRemoval":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":516,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":40,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests.LimitationsTest.privateConstructor":508,"org.easymock.tests2.UsageConstraintsTest.testNotNull":99,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":310,"org.easymock.tests2.UsageTest.defaultResetToNice":31,"org.easymock.samples.ExampleTest.voteAgainstRemovals":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":517,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":437,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.UsageConstraintsTest.equals":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":428,"org.easymock.tests.UsageTest.openCallCountByLastCall":274,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":48,"org.easymock.tests.UsageCallCountTest.tooFewCalls":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":194,"org.easymock.tests.UsageThrowableTest.throwCheckedException":307,"org.easymock.tests.MockingTest.testStrictClassMocking":466,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":176,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":441,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":173,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":175,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":9,"org.easymock.tests2.CompareToTest.testGreateOrEqual":389,"org.easymock.tests.ObjectMethodsTest.testHashCode":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":70,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":496,"org.easymock.tests2.NameTest.nameForNiceMock":181,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":374,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":491,"org.easymock.tests2.DependencyTest.testInterfaceMocking":375,"org.easymock.samples.ExampleTest.addDocument":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.DelegateToTest.testStubDelegate":125,"org.easymock.tests2.AnswerTest.stubAnswer":103,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":331,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":425,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":514,"org.easymock.tests.UsageExpectAndReturnTest.floatType":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":183,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":355,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":94,"org.easymock.tests.UsageThrowableTest.noUpperLimit":304,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":394,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":111,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":39,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testSame":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":202,"org.easymock.samples.SupportTest.addDocument":381,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":432,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":406,"org.easymock.tests.GenericTest.testPackageScope":238,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":469,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":479,"org.easymock.tests2.NameTest.nameForMock":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":63,"org.easymock.tests2.UsageStrictMockTest.differentMethods":72,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":291,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":472,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":229,"org.easymock.tests2.MockedExceptionTest.testRealException":44,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":506,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":269,"org.easymock.tests2.NameTest.nameForStrictMock":180,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":424,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":163,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":397,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":151,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":485,"org.easymock.tests2.UsageConstraintsTest.lessThan":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":513,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":410,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests2.UsageConstraintsTest.testOr":84,"org.easymock.tests.UsageRangeTest.combination":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":160,"org.easymock.tests.UsageTest.wrongArguments":18,"org.easymock.tests2.MockBuilderTest.testWithConstructor":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":407,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":510,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":214,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":464,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":351,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":499,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":8,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":489,"org.easymock.tests2.CompareToTest.testLessThan":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":27,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":116,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":258,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":495,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":215,"org.easymock.tests2.UsageConstraintsTest.constraints":79,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":332,"org.easymock.samples.ExampleTest.addAndChangeDocument":391,"org.easymock.tests.UsageStrictMockTest.testVerify":334,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":379,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests2.CompareToTest.testGreateThan":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":325,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":319,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":366,"org.easymock.tests.LimitationsTest.abstractClass":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":207,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":144,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243}}]
