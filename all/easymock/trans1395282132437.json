[{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[12,13,14,15,16,17],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[48,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[50],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[65,66,67,68],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[69,40,43,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[71,72,73,74,75,76,77,78,79,80,81,82,18,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,37,138,139,140,141,38,39,69,40,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,51,19,41,21,22,42,174,23,24,25,43,26,175,176,27,28,45,31,177,3,178,4,179,180,181,182,183,184,185,5,186,187,188,189,190,191,192,193,194,32,195,196,197,198,199,200,201,202,203,204,205,206,6,7,207,208,48,209,8,9,210,10,211,212,213,214,215,216,217,218,219,11,50,220,221,222,223,224,225,52,53,54,55,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,65,66,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,33,268,269,2,270,271,272,56,273,274,275,276,277,278,279,280,281,282,57,283,284,34,285,286,287,288,35,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,14,314,315,316,317,318,319,0,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,58,59,60,61,62,63,429,430,431,432,433,434,435,436,437,438,439,49,440,441,442,36,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,1,467,468,469,470,471,472,473,474,475,476,477,478,479,480,17,481,482,67,68,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[18,83,84,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[18,83,84,500],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[501,502,503,504,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[507,508,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[501,502,505],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1952","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[179,180],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[245,246,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[217],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[18,69,40,43,176,70,510,511,512,513,514,515,516],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":112,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":312,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":406,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":107,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":256,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":59,"org.easymock.tests.MockingTest.testPartialClassMocking":488,"org.easymock.tests.MockClassControlTest.testToString":446,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":168,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":153,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":363,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests2.UsageTest.wrongArguments":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":281,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":278,"org.easymock.samples.ExampleTest.answerVsDelegate":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":35,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":493,"org.easymock.tests2.UsageConstraintsTest.testNull":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":192,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.CaptureTest.testPrimitive":179,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":284,"org.easymock.tests.UsageTest.moreThanOneArgument":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":382,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":457,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":495,"org.easymock.tests.UsageTest.argumentsOrdered":318,"org.easymock.tests.UsageVarargTest.varargIntAccepted":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":331,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":236,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":335,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.ReplayStateInvalidUsageTest.times":355,"org.easymock.tests2.DependencyTest.testClassMocking":95,"org.easymock.tests2.AnswerTest.answer":89,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":88,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":286,"org.easymock.tests2.UsageTest.strictResetToDefault":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":126,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":499,"org.easymock.tests2.DelegateToTest.testDelegate":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":378,"org.easymock.tests.LimitationsTest.mockFinalMethod":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":474,"org.easymock.tests2.DependencyTest.testClassMockingSupport":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":383,"org.easymock.tests2.CaptureTest.testCapture1_2446744":180,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":195,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":86,"org.easymock.tests.UsageThrowableTest.throwError":386,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":349,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":288,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":469,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":459,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":167,"org.easymock.samples.PartialClassMockTest.testGetArea":33,"org.easymock.tests.MockingTest.testInterfaceMocking":490,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":332,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":270,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":154,"org.easymock.tests2.UsageTest.niceToStrict":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":23,"org.easymock.tests2.MockBuilderTest.testCreateMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":79,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":12,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":372,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":127,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":276,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":158,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":463,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":302,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":214,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":185,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":432,"org.easymock.tests.MockClassControlTest.testEquals":450,"org.easymock.tests2.EasyMockSupportClassTest.testAll":146,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":442,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":380,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":472,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":87,"org.easymock.tests.MockNameTest.defaultName":346,"org.easymock.tests2.UsageConstraintsTest.testMatches":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":458,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":347,"org.easymock.samples.ExampleTest.voteForRemovals":262,"org.easymock.tests.UsageVarargTest.allKinds":49,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":473,"org.easymock.samples.BasicClassMockTest.testPrintContent":269,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":392,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":233,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":516,"org.easymock.tests2.UsageConstraintsTest.greaterThan":218,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":476,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":202,"org.easymock.samples.ExampleTest.voteForRemoval":259,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":203,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":29,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":32,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":311,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":124,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":58,"org.easymock.tests2.CaptureTest.testCaptureFirst":188,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":125,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":114,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":298,"org.easymock.tests2.CaptureTest.testCapture2_2446744":187,"org.easymock.tests2.UsageTest.moreThanOneArgument":104,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":414,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":28,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":439,"org.easymock.tests.GenericTest.testBridgedEquals":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":329,"org.easymock.tests.UsageExpectAndReturnTest.longType":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":470,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":122,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":381,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":221,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":455,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":320,"org.easymock.tests.UsageCallCountTest.tooManyCalls":330,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":368,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":391,"org.easymock.tests.MockingTest.testNiceClassMocking":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":137,"org.easymock.tests.MockingTest.testClassMocking":486,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":20,"org.easymock.tests2.UsageConstraintsTest.testContains":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":323,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":208,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests.MockTypeTest.fromEasyMockClass":287,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":479,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":101,"org.easymock.tests.UsageExpectAndReturnTest.object":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":434,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":426,"org.easymock.tests.UsageTest.exactCallCountByLastCall":319,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":496,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":420,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":40,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":462,"org.easymock.tests.MockClassControlTest.testHashCode":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":227,"org.easymock.tests2.EasyMockSupportTest.testVerify":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":156,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":497,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":85,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":177,"org.easymock.tests.UsageVarargTest.varargCharAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":337,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":507,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":133,"org.easymock.tests.DefaultClassInstantiatorTest.object":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":1,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":74,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":226,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":369,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":0,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":165,"org.easymock.tests2.UsageTest.resumeIfFailure":113,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":61,"org.easymock.tests2.StubTest.stubWithReturnValue":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":300,"org.easymock.tests2.SerializationTest.testAllMockedMethod":84,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":412,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":13,"org.easymock.samples.SupportTest.voteForRemovals":255,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":375,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":418,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":90,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":422,"org.easymock.tests.UsageExpectAndThrowTest.object":373,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":50,"org.easymock.tests2.DelegateToTest.testWrongClass":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":394,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":395,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.samples.ConstructorCalledMockTest.testTax":266,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":120,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":374,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":143,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":317,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":277,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":15,"org.easymock.tests2.CaptureTest.testCaptureNone":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":271,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":502,"org.easymock.tests.UsageUnorderedTest.message":336,"org.easymock.tests.UsageVerifyTest.twoReturns":454,"org.easymock.tests.UsageVarargTest.varargByteAccepted":438,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":160,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":327,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":427,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":283,"org.easymock.tests2.UsageConstraintsTest.any":211,"org.easymock.tests2.StubTest.stub":173,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":60,"org.easymock.tests.UsageExpectAndThrowTest.longType":366,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":342,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":353,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":231,"org.easymock.tests.LimitationsTest.mockNativeMethod":361,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":73,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":503,"org.easymock.tests2.NameTest.nameForMocksControl":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":316,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":491,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":367,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":26,"org.easymock.tests.MockingTest.testNicePartialClassMocking":489,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":510,"org.easymock.tests2.CaptureTest.testCaptureLast":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":384,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":220,"org.easymock.tests.MockingTest.testTwoMocks":487,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":371,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":224,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":506,"org.easymock.samples.ExampleTest.removeNonExistingDocument":263,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":78,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":228,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":505,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":246,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":150,"org.easymock.tests.UsageExpectAndThrowTest.floatType":365,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":92,"org.easymock.tests.UsageVerifyTest.twoThrows":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":142,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":159,"org.easymock.samples.ExampleTest.voteAgainstRemoval":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":2,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":201,"org.easymock.tests.LimitationsTest.privateConstructor":360,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":47,"org.easymock.tests2.UsageConstraintsTest.testNotNull":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":393,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":52,"org.easymock.tests2.UsageTest.defaultResetToNice":110,"org.easymock.samples.ExampleTest.voteAgainstRemovals":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":306,"org.easymock.tests.UsageVarargTest.differentLength":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":72,"org.easymock.tests2.CallbackTest.callback":135,"org.easymock.tests2.UsageConstraintsTest.equals":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":197,"org.easymock.tests.UsageTest.openCallCountByLastCall":315,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":57,"org.easymock.tests.UsageCallCountTest.tooFewCalls":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":279,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":504,"org.easymock.tests.UsageThrowableTest.throwCheckedException":390,"org.easymock.tests.MockingTest.testStrictClassMocking":485,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":16,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":141,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":140,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":94,"org.easymock.tests.ObjectMethodsTest.testHashCode":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":515,"org.easymock.tests2.NameTest.nameForNiceMock":171,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":248,"org.easymock.tests2.DependencyTest.testInterfaceMocking":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":166,"org.easymock.tests2.DelegateToTest.testStubDelegate":240,"org.easymock.tests2.AnswerTest.stubAnswer":93,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":481,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":175,"org.easymock.tests.UsageVarargTest.varargLongAccepted":437,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.floatType":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":69,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":267,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests.UsageThrowableTest.noUpperLimit":387,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":235,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":206,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":115,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":181,"org.easymock.tests2.SerializationTest.test":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testSame":209,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":292,"org.easymock.samples.SupportTest.addDocument":254,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":139,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":151,"org.easymock.tests.GenericTest.testPackageScope":441,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":234,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":492,"org.easymock.tests2.NameTest.nameForMock":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":45,"org.easymock.tests2.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":377,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":478,"org.easymock.tests2.MockedExceptionTest.testRealException":55,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":409,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":358,"org.easymock.tests2.NameTest.nameForStrictMock":170,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":508,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":193,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":119,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":21,"org.easymock.tests2.UsageStrictMockTest.range":65,"org.easymock.tests2.UsageConstraintsTest.lessThan":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":155,"org.easymock.tests2.CaptureTest.testCaptureRightOne":5,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":501,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":190,"org.easymock.tests.UsageTest.wrongArguments":314,"org.easymock.tests2.MockBuilderTest.testWithConstructor":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":152,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":304,"org.easymock.tests.UsageVarargTest.varargShortAccepted":436,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":328,"org.easymock.tests2.UsageConstraintsTest.cmpTo":212,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":399,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.CaptureTest.testCaptureFromStub":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":348,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":22,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":326,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":305,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":482,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":264,"org.easymock.tests.UsageStrictMockTest.testVerify":484,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":265,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":471,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":297,"org.easymock.tests.LimitationsTest.abstractClass":359,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":334,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":128}}]
