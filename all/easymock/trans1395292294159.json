[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"expected"}},{"position":"org.easymock.internal.MocksControl:136","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,115,116,116,117,118,119],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[120],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[121,122,123,124],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,127,128,129,130,131,132,133,134,135,136,137,138,139,11,12,14,15,140,141,142,143,144,145,146,147,148,149,150,151,45,46,47,51,52,54,55,56,60,68,71,73,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,94,95,96,176,177,178,179,180,181,182,183,113,184,185,114,186,187,188,189,190,191,192,193,194,195,196,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[101,105],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[198,199,200,201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[202,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[74,75,76,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[218,219,220,221,164,170],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[12,15,222,223,224,225,226,227,228,229,58],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[43,230,44,231],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[101,105],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[43,230,44,231],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[218,219,232,220,221,206,164,165,233,234,166,167,168,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,170,171],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[256,257,258,259],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[260,0,1,2,261,122,262,123,132,263,125,126,264,265,266,267,268,163,235,241,247,251,253,269,270,183,271,272,273,274,275,276],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[277,59,278,279,280],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[281],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[261,262,282,283],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[14,222,88,89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[100,101,105],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[261,262,282,283],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[218,219,220,221,164,170],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"this","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[143,144,173,174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[107,111],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[128,284,264,285,286,287,288,265,266,267],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[100,101,102,103,105,106],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[289,290,291,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[261,127,262,282],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[293,294,295],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,127,128,131,133,134,135,136,137,138,139,140,142,143,144,46,54,55,56,60,69,71,152,154,155,157,296,297,162,164,165,166,167,168,169,170,172,173,174,298,299,178,183,188,190,191,195,196,197],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[300,301,302,303,227,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[127,304,305,281,257,258,306,285,307],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[46,49,51,52,55,56,117],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[133,136,137,143,297,164,165,166,167,170,173,182,183,190,191],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":304,"org.easymock.tests2.UsageTest.argumentsOrdered":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":130,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":135,"org.easymock.tests2.StubTest.stubWithReturnValue":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":227,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":282,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":88,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":219,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":107,"org.easymock.tests.MockClassControlTest.testToString":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":28,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":235,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":280,"org.easymock.tests.UsageExpectAndThrowTest.object":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":300,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":121,"org.easymock.tests2.UsageTest.wrongArguments":133,"org.easymock.samples.ConstructorCalledMockTest.testTax":115,"org.easymock.tests.UsageStrictMockTest.range":173,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":114,"org.easymock.tests2.UsageConstraintsTest.testNull":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":18,"org.easymock.tests.UsageTest.moreThanOneArgument":163,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":220,"org.easymock.tests2.CaptureTest.testCaptureNone":266,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":290,"org.easymock.tests.UsageUnorderedTest.message":183,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":298,"org.easymock.tests.UsageVerifyTest.twoReturns":191,"org.easymock.tests2.ThreadingTest.testThreadSafe":263,"org.easymock.tests.UsageTest.argumentsOrdered":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":35,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":118,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":159,"org.easymock.tests2.CaptureTest.testCapture_2617107":285,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":79,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests2.StubTest.stub":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":214,"org.easymock.tests.UsageExpectAndThrowTest.longType":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":104,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests2.DependencyTest.testClassMocking":16,"org.easymock.tests2.AnswerTest.answer":3,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":110,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":257,"org.easymock.tests2.CaptureTest.testAnd":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":68,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests2.NameTest.nameForMocksControl":151,"org.easymock.tests2.MockedExceptionTest.testMockedException":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":23,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.DelegateToTest.testDelegate":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":239,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":90,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests.LimitationsTest.mockFinalMethod":84,"org.easymock.tests2.CaptureTest.testCaptureLast":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":281,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":15,"org.easymock.tests.MockingTest.testTwoMocks":87,"org.easymock.tests2.DependencyTest.testClassMockingSupport":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":176,"org.easymock.tests2.CaptureTest.testCapture1_2446744":286,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":243,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":136,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":201,"org.easymock.tests.UsageStrictMockTest.differentMethods":174,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":185,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":102,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":126,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":299,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":92,"org.easymock.tests.UsageExpectAndThrowTest.floatType":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":25,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":5,"org.easymock.tests.UsageVerifyTest.twoThrows":190,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":34,"org.easymock.samples.PartialClassMockTest.testGetArea":117,"org.easymock.tests2.CompareToTest.testLessOrEqual":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":29,"org.easymock.tests2.UsageTest.niceToStrict":134,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":160,"org.easymock.tests.LimitationsTest.privateConstructor":82,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":224,"org.easymock.tests2.UsageConstraintsTest.testNotNull":259,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":74,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":293,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.MockBuilderTest.testCreateMock":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":37,"org.easymock.tests.UsageVarargTest.differentLength":188,"org.easymock.tests2.CallbackTest.callback":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":66,"org.easymock.tests.UsageTest.openCallCountByLastCall":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":244,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":218,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":217,"org.easymock.tests.UsageCallCountTest.tooFewCalls":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":13,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":9,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":291,"org.easymock.tests2.EasyMockSupportClassTest.testAll":21,"org.easymock.tests.MockClassControlTest.testEquals":98,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":109,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":221,"org.easymock.tests.MockingTest.testStrictClassMocking":85,"org.easymock.tests2.CaptureTest.testCaptureAll":264,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":215,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":147,"org.easymock.tests.MockNameTest.defaultName":161,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":6,"org.easymock.tests2.CompareToTest.testGreateOrEqual":124,"org.easymock.tests2.NameTest.nameForNiceMock":150,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":302,"org.easymock.samples.BasicClassMockTest.testPrintContent":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":41,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":199,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":303,"org.easymock.tests2.UsageConstraintsTest.greaterThan":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":22,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":106,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":72,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":275,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":116,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":180,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":112,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":77,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":287,"org.easymock.tests2.SerializationTest.test":230,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":216,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":267,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":153,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":278,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":26,"org.easymock.tests.GenericTest.testPackageScope":108,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":277,"org.easymock.tests2.UsageTest.moreThanOneArgument":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":55,"org.easymock.tests.GenericTest.testBridgedEquals":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":196,"org.easymock.tests2.NameTest.nameForMock":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":253,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":213,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":67,"org.easymock.tests.UsageCallCountTest.tooManyCalls":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":249,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":193,"org.easymock.tests2.MockedExceptionTest.testRealException":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":38,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":240,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":141,"org.easymock.tests.MockingTest.testNiceClassMocking":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":11,"org.easymock.tests.MockingTest.testClassMocking":86,"org.easymock.tests2.NameTest.nameForStrictMock":149,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":268,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":295,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests.MockTypeTest.fromEasyMockClass":184,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":2,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":80,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":258,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":65,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":143,"org.easymock.tests2.UsageConstraintsTest.lessThan":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":301,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":152,"org.easymock.tests2.CaptureTest.testCaptureRightOne":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":30,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":289,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":279,"org.easymock.tests2.UsageConstraintsTest.testOr":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":58,"org.easymock.tests.UsageRangeTest.combination":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":165,"org.easymock.tests2.MockBuilderTest.testWithConstructor":225,"org.easymock.tests.MockClassControlTest.testHashCode":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":27,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":31,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":7,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":105,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":296,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":195,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":4,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":294,"org.easymock.tests.DefaultClassInstantiatorTest.object":100,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":47,"org.easymock.tests.UsageTest.unexpectedCallWithArray":164,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":158,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":32,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":170,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":228,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":198,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":69,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":96,"org.easymock.tests2.UsageConstraintsTest.constraints":127,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.samples.ExampleTest.addAndChangeDocument":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":212,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":288,"org.easymock.tests2.UsageTest.resumeIfFailure":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":272,"org.easymock.tests.LimitationsTest.abstractClass":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":113,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":78}}]
