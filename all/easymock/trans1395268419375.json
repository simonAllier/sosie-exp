[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[16],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[32,33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[36,37,37,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,33,35,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[18,96,97,98,99,20,21,100,23,24,25,26,101,27,102,103,104,105,106,107,28,29,30,108,31,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:108","failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,20,140,141,142,143,144,145,146,147],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[36,148,149,150,151,152,153,154,155,156,157,158,37,38,39,40,159,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,160,161,162,163,164,165,166,41,42,43,44,167,18,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,45,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,46,47,48,49,50,51,52,53,132,222,133,134,135,136,137,138,223,224,225,139,226,99,20,21,54,227,228,229,230,55,231,232,140,100,22,23,233,141,24,25,234,235,236,237,238,142,239,240,241,242,143,243,244,245,246,247,26,101,248,27,102,249,250,251,252,56,57,58,253,59,254,255,256,257,258,259,260,261,262,14,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,144,291,292,293,294,295,296,297,298,299,300,60,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,61,337,338,339,340,62,63,341,64,65,66,67,342,68,343,344,69,70,71,72,345,73,1,2,3,4,5,6,7,8,346,9,10,11,12,13,347,348,349,350,351,352,353,354,74,355,356,75,357,358,359,360,361,362,363,364,365,76,366,367,368,369,370,77,371,372,373,374,375,78,376,377,15,378,379,380,381,33,34,35,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,79,80,81,82,407,408,83,84,409,410,103,104,105,106,411,412,413,414,415,416,85,417,86,87,418,419,88,89,90,420,91,421,422,92,93,423,94,424,425,426,427,428,429,430,145,431,107,28,432,433,434,146,111,29,30,435,436,437,438,108,439,31,109,440,441,442,443,444,445,446,447,448,449,147,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,16,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,110,483,484,485,486,487,488,489,490,491,492,95,493,494],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[495,496,22,26,497,498],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[201,202,206],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[81,84,409,499,500,417,418,420,501,423,493],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[36,148,149,150,151,152,153,154,155,156,157,158,37,38,39,40,159,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,160,161,162,163,164,165,166,41,42,43,44,167,18,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,45,201,202,203,204,205,206,208,210,211,212,213,214,215,216,217,218,219,220,221,46,47,48,49,50,51,52,53,132,222,133,134,135,136,137,138,223,224,225,139,226,99,20,21,54,227,228,229,230,55,231,232,140,100,22,23,233,141,24,25,234,235,236,237,238,142,239,240,241,242,143,243,244,245,246,247,26,101,248,27,102,249,250,251,252,56,57,58,253,59,254,255,256,257,258,259,260,261,262,14,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,144,291,292,293,294,295,296,297,298,299,300,60,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,333,334,335,336,61,337,338,339,340,524,525,526,527,528,529,62,63,341,64,65,66,67,342,68,343,344,69,70,71,72,345,73,1,2,3,4,5,6,7,8,346,9,10,11,12,13,347,530,348,349,350,351,352,353,354,74,355,356,75,357,358,359,360,361,362,363,364,365,76,366,367,368,369,370,77,371,372,373,374,375,78,376,377,15,378,379,380,381,33,34,35,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,79,80,81,82,407,408,83,84,409,410,103,104,105,106,411,412,413,414,415,416,85,86,87,419,88,89,90,91,421,422,92,93,94,424,425,426,428,429,430,145,431,107,28,432,433,434,146,111,29,30,435,436,437,438,108,439,31,109,440,441,442,443,444,445,446,447,448,449,147,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,16,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,110,483,484,485,486,487,488,489,490,491,492,95,493],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[202,203,204,206,208],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[54,91],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[32,33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[345,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[1,3,10,464,465,467,469,470,472,482,486],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[201,202,203,204,206,208],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[18,188,531,209,532,19,20,21,140,22,23,24,25,234,246,26,248,27,102,286,287,288,327,63,70,72,373,383,387,388,391,86,92,93,94,145,28,432,433,29,30,435,436,437,439,31,109,464,479],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[67,73,374,85,89],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[332,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[533,1,3,4,5,6,7,8,9,534,10,11,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[535,536,537,17,538],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":465,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":266,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":433,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":159,"org.easymock.tests2.DelegateToTest.testReturnException":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":236,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests.MockClassControlTest.testToString":48,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":410,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":112,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":96,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":448,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":523,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":471,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":223,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":212,"org.easymock.samples.ExampleTest.answerVsDelegate":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":55,"org.easymock.tests2.UsageConstraintsTest.testNull":467,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":64,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":391,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":53,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":131,"org.easymock.tests.UsageTest.moreThanOneArgument":100,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":293,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":195,"org.easymock.tests.UsageVarargTest.varargIntAccepted":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":537,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":426,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":317,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":507,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":400,"org.easymock.tests.ReplayStateInvalidUsageTest.times":309,"org.easymock.tests2.DependencyTest.testClassMocking":445,"org.easymock.tests2.AnswerTest.answer":377,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":444,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":228,"org.easymock.tests2.UsageTest.strictResetToDefault":431,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":190,"org.easymock.tests2.DelegateToTest.testDelegate":416,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":199,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":506,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":127,"org.easymock.tests.LimitationsTest.mockFinalMethod":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":218,"org.easymock.tests2.DependencyTest.testClassMockingSupport":446,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":442,"org.easymock.tests.UsageThrowableTest.throwError":132,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":303,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":230,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":461,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":295,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":510,"org.easymock.samples.PartialClassMockTest.testGetArea":36,"org.easymock.tests.MockingTest.testInterfaceMocking":253,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests2.UsageTest.niceToStrict":432,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":113,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":361,"org.easymock.tests2.ThreadingTest.testChangeDefault":530,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":121,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":387,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":210,"org.easymock.tests.UsageOverloadedMethodTest.overloading":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":477,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":289,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":476,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":324,"org.easymock.tests.MockClassControlTest.testEquals":52,"org.easymock.tests2.EasyMockSupportClassTest.testAll":74,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":443,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":216,"org.easymock.tests.MockNameTest.defaultName":167,"org.easymock.tests2.UsageConstraintsTest.testMatches":478,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":294,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":301,"org.easymock.samples.ExampleTest.voteForRemovals":153,"org.easymock.tests.UsageVarargTest.allKinds":332,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":99,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":217,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":457,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":239,"org.easymock.tests2.UsageConstraintsTest.greaterThan":480,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":189,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":72,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":511,"org.easymock.samples.ExampleTest.voteForRemoval":150,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":208,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":345,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":348,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":231,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":67,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":503,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":384,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":235,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":411,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":385,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":436,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests2.UsageTest.moreThanOneArgument":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":350,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":274,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":331,"org.easymock.tests.GenericTest.testBridgedEquals":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":287,"org.easymock.tests.UsageExpectAndReturnTest.longType":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":214,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":382,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":130,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":484,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":291,"org.easymock.tests.UsageCallCountTest.tooManyCalls":288,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests.MockingTest.testNiceClassMocking":256,"org.easymock.tests.MockingTest.testClassMocking":252,"org.easymock.tests2.UsageConstraintsTest.testContains":475,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":281,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":78,"org.easymock.tests2.UsageConstraintsTest.testFind":466,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":144,"org.easymock.tests.MockTypeTest.fromEasyMockClass":229,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":492,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":390,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":299,"org.easymock.tests.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":262,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":163,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":184,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":321,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":451,"org.easymock.tests.MockClassControlTest.testHashCode":51,"org.easymock.tests2.EasyMockSupportTest.testVerify":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":363,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":197,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":319,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":532,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":441,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":200,"org.easymock.tests2.CaptureTest.testCaptureMultiple":533,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":279,"org.easymock.tests2.UsageTest.openCallCountByLastCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":393,"org.easymock.tests.DefaultClassInstantiatorTest.object":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":318,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":297,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":450,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":509,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":118,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.ReplayStateInvalidCallsTest.times":515,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":219,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":516,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":77,"org.easymock.tests2.UsageTest.resumeIfFailure":435,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":238,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":420,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":485,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":272,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":538,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":124,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":278,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":15,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":165,"org.easymock.tests.UsageExpectAndThrowTest.object":122,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":110,"org.easymock.tests2.DelegateToTest.testWrongClass":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":513,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":333,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":334,"org.easymock.samples.ConstructorCalledMockTest.testTax":37,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":429,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":389,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":123,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":211,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":505,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests2.CaptureTest.testCaptureNone":346,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":525,"org.easymock.tests.UsageUnorderedTest.message":18,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":531,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":330,"org.easymock.tests2.ThreadingTest.testThreadSafe":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":366,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":285,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":276,"org.easymock.tests2.UsageConstraintsTest.any":473,"org.easymock.tests2.StubTest.stub":449,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":221,"org.easymock.tests.UsageExpectAndThrowTest.longType":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":277,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":205,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":307,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":439,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":455,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests.LimitationsTest.mockNativeMethod":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":397,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":521,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":440,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":526,"org.easymock.tests2.NameTest.nameForMocksControl":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests2.MockedExceptionTest.testMockedException":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":356,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":116,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":535,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":395,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":339,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":520,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":483,"org.easymock.tests.MockingTest.testTwoMocks":56,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":517,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":120,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":487,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":529,"org.easymock.samples.ExampleTest.removeNonExistingDocument":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":452,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":528,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":203,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":349,"org.easymock.tests2.MockBuilderTest.testCreateMockString":94,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":46,"org.easymock.tests.UsageExpectAndThrowTest.floatType":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":494,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":76,"org.easymock.samples.ExampleTest.voteAgainstRemoval":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":71,"org.easymock.tests.LimitationsTest.privateConstructor":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":500,"org.easymock.tests2.UsageConstraintsTest.testNotNull":486,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":374,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.samples.ExampleTest.voteAgainstRemovals":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":396,"org.easymock.tests.UsageVarargTest.differentLength":327,"org.easymock.tests2.CallbackTest.callback":373,"org.easymock.tests2.UsageConstraintsTest.equals":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":343,"org.easymock.tests.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":225,"org.easymock.tests.UsageCallCountTest.tooFewCalls":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":213,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":527,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":408,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":381,"org.easymock.tests.ObjectMethodsTest.testHashCode":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":536,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":519,"org.easymock.tests2.NameTest.nameForNiceMock":105,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":351,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":514,"org.easymock.tests2.DependencyTest.testInterfaceMocking":447,"org.easymock.samples.ExampleTest.addDocument":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":367,"org.easymock.tests2.DelegateToTest.testStubDelegate":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.AnswerTest.stubAnswer":380,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":101,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":421,"org.easymock.tests.UsageVarargTest.varargLongAccepted":329,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.floatType":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":38,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":459,"org.easymock.tests.UsageThrowableTest.noUpperLimit":222,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":463,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":424,"org.easymock.tests2.SerializationTest.test":34,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":202,"org.easymock.tests2.UsageConstraintsTest.testSame":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":169,"org.easymock.samples.SupportTest.addDocument":156,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":407,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":504,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":358,"org.easymock.tests.GenericTest.testPackageScope":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":458,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":254,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":502,"org.easymock.tests2.NameTest.nameForMock":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":423,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":126,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":191,"org.easymock.tests2.MockedExceptionTest.testRealException":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":232,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":17,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":312,"org.easymock.tests2.NameTest.nameForStrictMock":104,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":419,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":490,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":428,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":482,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":97,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":204,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":508,"org.easymock.tests2.UsageConstraintsTest.lessThan":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":264,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":383,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":362,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":524,"org.easymock.tests2.UsageConstraintsTest.testOr":469,"org.easymock.tests.UsageRangeTest.combination":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests2.MockBuilderTest.testWithConstructor":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":359,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":47,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":258,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":206,"org.easymock.tests.UsageVarargTest.varargShortAccepted":328,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":286,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":522,"org.easymock.tests2.UsageConstraintsTest.cmpTo":474,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":378,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":260,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":302,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":87,"org.easymock.tests.UsageTest.unexpectedCallWithArray":22,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":518,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":26,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests2.CaptureTest.testCapture":534,"org.easymock.tests2.UsageConstraintsTest.constraints":464,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":248,"org.easymock.samples.ExampleTest.addAndChangeDocument":155,"org.easymock.tests.UsageStrictMockTest.testVerify":250,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":158,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":215,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.LimitationsTest.abstractClass":335,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":388,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":98,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":322}}]
