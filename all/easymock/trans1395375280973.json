[{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,72,73,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121,0,122,123,124,125,126,127,128,5,8,18,24,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,28,31,33,34,37,38,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,39,40,41,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,46,48,49,50,51,210,52,53,211,212,54,55,213,56,57,58,60,64,65,66,214,215,71,72,72,73,73,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,76,249,250,251,252,253,254,255,256,257,258,259,86,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,91,93,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,98,99,100,356],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[110,113,114,115,357,117,120,121,0,122,1,123,124,125,128,5,8,18,24,129,130,131,358,359,360,361,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,27,31,32,33,34,160,161,162,163,165,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,362,39,40,41,187,189,190,193,194,195,196,363,198,199,201,202,205,208,46,48,49,50,51,210,52,53,211,212,54,213,56,57,58,60,63,65,214,215,71,364,72,73,365,216,366,217,218,219,220,367,221,222,74,75,223,224,225,226,227,228,229,230,231,232,233,235,236,368,241,244,245,369,246,247,248,370,76,250,251,252,253,86,263,268,269,272,273,274,275,276,277,278,279,280,281,282,283,284,285,91,92,371,372,373,374,375,376,377,378,379,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,380,344,345,347,348,354,98,99,100,381,382,356,383,384,385,103],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[110,113,114,115,357,117,118,119,120,121,0,122,1,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,31,160,161,162,163,164,165,166,167,168,169,170,171,172,173,39,40,41,187,189,190,191,193,197,198,199,200,201,202,203,204,206,207,208,209,46,49,50,52,53,211,212,54,55,213,56,57,58,60,65,214,217,218,219,220,367,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,368,240,241,242,243,244,245,76,250,252,253,386,86,260,261,262,263,268,269,270,271,272,273,274,275,276,277,278,279,280,91,92,371,372,373,374,375,376,377,378,379,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,343,344,345,346,347,348,349,350,351,352,353,354,355,98,99,100,356,383,384,385,387,388],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[360,63,68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[119,389,243,274,275],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[154],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[117,119,120,55,56,58,63,66,240,241,243,244,369,330],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[117,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,390,160,161,162,163,164,165,166,167,168,169,170,171,172,173,60,223,224,225,226,227,232,240,241,268,269,270,271,272,286,307,344,345,354,355],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[391,392,240,393,394,330],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[110,112,113,115,129,130,131,218,395,260],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[112,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[396,397,398,399],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[117,119,120,127,5,8,18,24,28,31,33,34,37,190,46,48,49,50,51,210,52,53,54,55,213,56,57,58,60,64,65,66,214,215,71,216,217,219,220,221,223,224,225,226,227,241,243,244,250,251,252,253,86,268,276,277,278,279,287,288,289,290,291,292,295,296,298,299,300,302,303,304,305,306,344,345,98,99,100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[117,119,120,199,400,401,402,389,241,243,244,273,274,275,307,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[403,404,405,406,407,408,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[149],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[90,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[119,120,133,134,136,138,139,145,148,151,158,203,204,236,409,243,244,250,273,332,333,338,339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:78","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[134,140,160,162,170],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":135,"org.easymock.tests2.UsageTest.argumentsOrdered":207,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":328,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":185,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":202,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":364,"org.easymock.tests2.DelegateToTest.testReturnException":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":229,"org.easymock.tests.MockingTest.testPartialClassMocking":98,"org.easymock.tests.MockClassControlTest.testToString":104,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":308,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":400,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":403,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":141,"org.easymock.tests2.UsageTest.wrongArguments":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":268,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":248,"org.easymock.samples.ExampleTest.answerVsDelegate":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":89,"org.easymock.tests2.UsageConstraintsTest.testNull":137,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":184,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":109,"org.easymock.tests2.CaptureTest.testPrimitive":163,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":327,"org.easymock.tests.UsageTest.moreThanOneArgument":329,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":278,"org.easymock.tests.UsageTest.argumentsOrdered":335,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":337,"org.easymock.tests.UsageVarargTest.varargIntAccepted":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":407,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":27,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":227,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":123,"org.easymock.tests2.DependencyTest.testClassMocking":69,"org.easymock.tests2.AnswerTest.answer":110,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":363,"org.easymock.tests2.CaptureTest.testAnd":160,"org.easymock.tests2.UsageTest.strictResetToDefault":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":252,"org.easymock.tests2.DelegateToTest.testDelegate":193,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":323,"org.easymock.tests.LimitationsTest.mockFinalMethod":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":285,"org.easymock.tests2.DependencyTest.testClassMockingSupport":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":164,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":195,"org.easymock.tests.UsageThrowableTest.throwError":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":26,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":224,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":13,"org.easymock.tests2.UsageTest.niceToStrict":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":309,"org.easymock.tests2.ThreadingTest.testChangeDefault":396,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.MockBuilderTest.testCreateMock":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":21,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":391,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":317,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":180,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":246,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":23,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":298,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":146,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":169,"org.easymock.tests.MockClassControlTest.testEquals":108,"org.easymock.tests2.EasyMockSupportClassTest.testAll":5,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":325,"org.easymock.tests2.CaptureTest.testCaptureAll":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":283,"org.easymock.tests2.UsageConstraintsTest.testMatches":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":279,"org.easymock.samples.ExampleTest.voteForRemovals":221,"org.easymock.tests.UsageVarargTest.allKinds":286,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":284,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":352,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":116,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests2.UsageConstraintsTest.greaterThan":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":66,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":83,"org.easymock.samples.ExampleTest.voteForRemoval":219,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":59,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":197,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":177,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":228,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":188,"org.easymock.tests2.CaptureTest.testCaptureFirst":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":178,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":294,"org.easymock.tests2.CaptureTest.testCapture2_2446744":172,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":199,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":379,"org.easymock.tests.GenericTest.testBridgedEquals":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":387,"org.easymock.tests.UsageExpectAndReturnTest.longType":290,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":326,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":155,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":276,"org.easymock.tests.UsageCallCountTest.tooManyCalls":388,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":351,"org.easymock.tests.MockingTest.testNiceClassMocking":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testClassMocking":96,"org.easymock.tests2.UsageConstraintsTest.testContains":145,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":382,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":41,"org.easymock.tests2.UsageConstraintsTest.testFind":136,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":130,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":239,"org.easymock.tests.UsageExpectAndReturnTest.object":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":404,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":375,"org.easymock.tests.UsageTest.exactCallCountByLastCall":336,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":354,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":303,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests.MockClassControlTest.testHashCode":107,"org.easymock.tests2.EasyMockSupportTest.testVerify":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":15,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":194,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":390,"org.easymock.tests.UsageVarargTest.varargCharAccepted":374,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":357,"org.easymock.tests2.UsageTest.openCallCountByLastCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":186,"org.easymock.tests.DefaultClassInstantiatorTest.object":77,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":16,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":349,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":106,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":314,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":257,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":24,"org.easymock.tests2.UsageTest.resumeIfFailure":208,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":231,"org.easymock.tests2.StubTest.stubWithReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":408,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":296,"org.easymock.tests2.SerializationTest.testAllMockedMethod":1,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":237,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":392,"org.easymock.samples.SupportTest.voteForRemovals":216,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":320,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":238,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":111,"org.easymock.tests.UsageExpectAndThrowTest.object":318,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":153,"org.easymock.tests2.DelegateToTest.testWrongClass":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":344,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":345,"org.easymock.samples.ConstructorCalledMockTest.testTax":72,"org.easymock.tests.UsageStrictMockTest.range":243,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":319,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":2,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":247,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":393,"org.easymock.tests2.CaptureTest.testCaptureNone":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":267,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":397,"org.easymock.tests.UsageUnorderedTest.message":307,"org.easymock.tests.UsageVerifyTest.twoReturns":275,"org.easymock.tests.UsageVarargTest.varargByteAccepted":378,"org.easymock.tests2.ThreadingTest.testThreadSafe":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":19,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":385,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":74,"org.easymock.tests2.CaptureTest.testCapture_2617107":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":271,"org.easymock.tests2.UsageConstraintsTest.any":143,"org.easymock.tests2.StubTest.stub":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":230,"org.easymock.tests.UsageExpectAndThrowTest.longType":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":81,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":118,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":306,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests2.NameTest.nameForMocksControl":361,"org.easymock.tests2.MockedExceptionTest.testMockedException":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":7,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":333,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":34,"org.easymock.tests.MockingTest.testNicePartialClassMocking":99,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":58,"org.easymock.tests2.CaptureTest.testCaptureLast":167,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":154,"org.easymock.tests.MockingTest.testTwoMocks":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":316,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":206,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":398,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests.UsageStrictMockTest.differentMethods":244,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":79,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":126,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":9,"org.easymock.tests.UsageExpectAndThrowTest.floatType":310,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":4,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":113,"org.easymock.tests.UsageVerifyTest.twoThrows":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":18,"org.easymock.samples.ExampleTest.voteAgainstRemoval":220,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":265,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":65,"org.easymock.tests.LimitationsTest.privateConstructor":85,"org.easymock.tests2.UsageConstraintsTest.testNotNull":157,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":353,"org.easymock.tests2.UsageTest.defaultResetToNice":205,"org.easymock.samples.ExampleTest.voteAgainstRemovals":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":302,"org.easymock.tests2.CallbackTest.callback":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":61,"org.easymock.tests.UsageTest.openCallCountByLastCall":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":270,"org.easymock.tests.UsageCallCountTest.tooFewCalls":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":370,"org.easymock.tests.UsageThrowableTest.throwCheckedException":350,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":394,"org.easymock.tests.MockingTest.testStrictClassMocking":95,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":355,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":50,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":210,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":406,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":128,"org.easymock.tests2.NameTest.nameForNiceMock":360,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":405,"org.easymock.samples.ExampleTest.addDocument":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":20,"org.easymock.tests2.DelegateToTest.testStubDelegate":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.AnswerTest.stubAnswer":114,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":241,"org.easymock.tests.UsageVarargTest.varargLongAccepted":377,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests.UsageExpectAndReturnTest.floatType":289,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":46,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":73,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests.UsageThrowableTest.noUpperLimit":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":133,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":42,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":165,"org.easymock.tests2.SerializationTest.test":122,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":78,"org.easymock.tests2.UsageConstraintsTest.testSame":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":288,"org.easymock.samples.SupportTest.addDocument":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":10,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":340,"org.easymock.tests2.NameTest.nameForMock":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":299,"org.easymock.tests2.UsageStrictMockTest.differentMethods":120,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":322,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":253,"org.easymock.tests2.MockedExceptionTest.testRealException":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":269,"org.easymock.tests2.NameTest.nameForStrictMock":359,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":30,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":45,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":401,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":152,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":80,"org.easymock.tests.ErrorMessageTest.testGetters":402,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":28,"org.easymock.tests2.UsageStrictMockTest.range":119,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":176,"org.easymock.tests2.CaptureTest.testCaptureRightOne":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":14,"org.easymock.tests2.UsageConstraintsTest.testOr":139,"org.easymock.tests.UsageRangeTest.combination":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":55,"org.easymock.tests.UsageTest.wrongArguments":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":11,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":300,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":82,"org.easymock.tests.UsageVarargTest.varargShortAccepted":376,"org.easymock.tests2.UsageConstraintsTest.cmpTo":144,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":112,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":204,"org.easymock.tests2.CaptureTest.testCaptureFromStub":171,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":29,"org.easymock.tests.UsageTest.unexpectedCallWithArray":330,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":301,"org.easymock.tests2.UsageConstraintsTest.constraints":134,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.samples.ExampleTest.addAndChangeDocument":222,"org.easymock.tests.UsageStrictMockTest.testVerify":369,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":366,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":282,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":225,"org.easymock.tests.LimitationsTest.abstractClass":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":226,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":181,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":372}}]
