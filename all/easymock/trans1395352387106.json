[{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,13,11,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:450","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[32,33,306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[41,42,43,307],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[308,309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:633","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[158,159,161,162,164,188],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[182,183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[83,85,87,88,99,104,121,127,128,133,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[83,312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[62,64,65,69,70,76,77,313,314,315,316,317,318,319,227,228,230,231,254,256,259,260,262,290,291,292],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[320],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":253,"org.easymock.tests2.UsageTest.argumentsOrdered":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":275,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":72,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":242,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":154,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.tests2.DelegateToTest.testReturnException":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":273,"org.easymock.tests.MockingTest.testPartialClassMocking":222,"org.easymock.samples.SupportTest.voteForRemovals":158,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":206,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":110,"org.easymock.tests.UsageExpectAndThrowTest.object":204,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":114,"org.easymock.tests2.DelegateToTest.testWrongClass":58,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":293,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":294,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":266,"org.easymock.tests2.UsageTest.wrongArguments":70,"org.easymock.tests.UsageStrictMockTest.range":230,"org.easymock.samples.ConstructorCalledMockTest.testTax":152,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":280,"org.easymock.samples.ExampleTest.answerVsDelegate":160,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":35,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":139,"org.easymock.tests2.UsageConstraintsTest.testNull":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":37,"org.easymock.tests2.CaptureTest.testPrimitive":123,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":270,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests.UsageTest.moreThanOneArgument":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":279,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":179,"org.easymock.tests2.CaptureTest.testCaptureNone":128,"org.easymock.tests.UsageUnorderedTest.message":262,"org.easymock.tests.UsageVerifyTest.twoReturns":292,"org.easymock.tests.UsageVarargTest.varargByteAccepted":303,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests.UsageTest.argumentsOrdered":260,"org.easymock.tests.UsageVarargTest.varargIntAccepted":297,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":171,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":166,"org.easymock.tests2.CaptureTest.testCapture_2617107":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":4,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":22,"org.easymock.tests2.StubTest.stub":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":274,"org.easymock.tests.UsageExpectAndThrowTest.longType":197,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests.LimitationsTest.mockNativeMethod":271,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":252,"org.easymock.tests2.AnswerTest.answer":14,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":137,"org.easymock.tests2.CaptureTest.testAnd":120,"org.easymock.tests2.UsageTest.strictResetToDefault":68,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":52,"org.easymock.tests2.NameTest.nameForMocksControl":316,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":5,"org.easymock.tests2.MockedExceptionTest.testMockedException":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":32,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":258,"org.easymock.tests2.DelegateToTest.testDelegate":59,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":198,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":209,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":49,"org.easymock.tests2.CaptureTest.testCaptureLast":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":276,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":88,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":286,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests2.CaptureTest.testCapture1_2446744":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":135,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":76,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests.UsageThrowableTest.throwError":214,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":308,"org.easymock.tests.UsageStrictMockTest.differentMethods":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":6,"org.easymock.tests2.ConstraintsToStringTest.andToString":321,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":117,"org.easymock.tests2.MockBuilderTest.testCreateMockString":27,"org.easymock.tests.UsageExpectAndThrowTest.floatType":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":181,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":15,"org.easymock.tests.UsageVerifyTest.twoThrows":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":111,"org.easymock.samples.PartialClassMockTest.testGetArea":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.samples.ExampleTest.voteAgainstRemoval":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":195,"org.easymock.tests2.UsageTest.niceToStrict":71,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":221,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":146,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":21,"org.easymock.tests2.UsageTest.defaultResetToNice":75,"org.easymock.tests2.MockBuilderTest.testCreateMock":25,"org.easymock.samples.ExampleTest.voteAgainstRemovals":159,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":248,"org.easymock.tests.UsageVarargTest.differentLength":300,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests.UsageTest.openCallCountByLastCall":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":203,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":33,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":268,"org.easymock.tests.UsageCallCountTest.tooFewCalls":169,"org.easymock.tests.UsageOverloadedMethodTest.overloading":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":94,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":184,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":142,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":281,"org.easymock.tests.UsageThrowableTest.throwCheckedException":218,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":193,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureAll":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":0,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":143,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":180,"org.easymock.samples.ExampleTest.voteForRemovals":164,"org.easymock.tests2.NameTest.nameForNiceMock":315,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":119,"org.easymock.tests.UsageVarargTest.allKinds":305,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":290,"org.easymock.tests2.DependencyTest.testInterfaceMocking":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":285,"org.easymock.samples.BasicClassMockTest.testPrintContent":167,"org.easymock.samples.ExampleTest.addDocument":163,"org.easymock.tests2.DelegateToTest.testStubDelegate":57,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":220,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":60,"org.easymock.tests2.AnswerTest.stubAnswer":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":228,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests.UsageVarargTest.varargLongAccepted":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":13,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":232,"org.easymock.samples.ExampleTest.voteForRemoval":161,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":251,"org.easymock.tests.UsageExpectAndReturnTest.floatType":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":153,"org.easymock.tests.UsageThrowableTest.noUpperLimit":215,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":3,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":191,"org.easymock.tests2.SerializationTest.test":42,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":30,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":234,"org.easymock.tests2.UsageConstraintsTest.testSame":86,"org.easymock.samples.SupportTest.addDocument":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":272,"org.easymock.tests2.CaptureTest.testCaptureFirst":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":31,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":240,"org.easymock.tests.GenericTest.testPackageScope":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":69,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":304,"org.easymock.tests2.NameTest.nameForMock":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":173,"org.easymock.tests.UsageExpectAndReturnTest.longType":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":282,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":212,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":237,"org.easymock.tests.UsageCallCountTest.tooManyCalls":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":265,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":168,"org.easymock.tests2.MockedExceptionTest.testRealException":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":8,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":199,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":140,"org.easymock.tests2.NameTest.nameForStrictMock":314,"org.easymock.tests2.UsageConstraintsTest.testContains":92,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":148,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":289,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":48,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":225,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":108,"org.easymock.tests.UsageExpectAndReturnTest.object":243,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":318,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":20,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":7,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":36,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":1,"org.easymock.tests.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":175,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":29,"org.easymock.tests2.CaptureTest.testCaptureRightOne":130,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":310,"org.easymock.tests2.UsageConstraintsTest.testOr":87,"org.easymock.tests.UsageRangeTest.combination":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":238,"org.easymock.tests2.EasyMockSupportTest.testVerify":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":246,"org.easymock.tests.UsageVarargTest.varargShortAccepted":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":134,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":172,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests.UsageVarargTest.varargCharAccepted":298,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":61,"org.easymock.tests2.UsageTest.openCallCountByLastCall":73,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":39,"org.easymock.tests2.CaptureTest.testCaptureFromStub":131,"org.easymock.tests.UsageTest.unexpectedCallWithArray":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":201,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":227,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":217,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":170,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":247,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":200,"org.easymock.samples.ExampleTest.addAndChangeDocument":165,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":250,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":156,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":283,"org.easymock.tests2.UsageTest.resumeIfFailure":78,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":189,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":319,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":34}}]
