[{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[155,100,101,102,103,156,104,105,106,107,108,109,157,158,110],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[1,2,3,4,5,6,7,8,9,10,11,12,159,14,160,161,162,163,164,165,166,167,168,169,170,171,21,22,172,173,174,175,176,26,177,27,28,29,30,31,32,33,34,178,179,38,39,180,40,181,182,183,184,41,185,186,187,188,42,189,190,191,192,193,194,195,196,197,198,43,44,45,46,47,48,49,50,51,52,53,54,199,200,201,55,202,203,204,57,58,205,59,206,207,208,209,60,210,211,212,213,61,214,215,216,217,218,219,62,63,64,66,220,68,221,222,69,70,71,72,73,74,75,76,77,78,79,80,83,223,224,84,225,96,226,227,228,98,99,100,101,106,107,109,110,111,112,113,114,116,229,117,230,118,119,120,121,122,231,124,125,232,233,234,128,130,131,235,133,136,139,236,237,238,147,239,148,240,241,149],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[172,173,174,175,176,26,29,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,44,242,243,244,245,200,202,65,220,221,222,246,247,248,249,250,251,252,253,254,223,255,224,86,256,257,258,89,259,260,225,261,262,226,227,228,101,156,106,107,158,110,229,263,121,231,232,233,234,128,130,235,237,239,240,241],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[264,166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,265,265,266,266,4,5,6,7,8,9,10,11,12,267,159,268,269,270,271,272,13,14,15,160,161,162,163,164,165,273,274,275,276,16,17,277,18,19,166,278,279,280,281,282,283,284,285,286,287,288,289,20,167,168,169,170,171,21,22,172,173,174,290,23,175,176,24,25,26,177,291,27,28,29,30,31,32,33,34,292,35,36,37,178,179,38,39,180,40,181,182,183,184,41,185,186,187,188,42,189,190,191,192,193,194,195,196,197,198,43,44,45,46,47,48,49,293,50,51,52,53,54,294,295,296,297,298,299,300,301,242,243,244,245,199,200,201,55,202,203,204,57,58,205,59,206,207,208,209,60,210,211,212,213,61,214,215,216,217,218,219,62,63,64,65,302,303,304,305,306,307,66,67,220,68,221,222,69,308,309,310,311,70,71,72,73,74,75,76,312,77,78,79,80,81,313,314,82,315,251,252,253,83,254,223,255,224,84,85,86,87,256,88,257,258,89,259,260,90,91,92,93,94,225,261,262,96,226,227,228,97,98,99,100,101,102,103,156,104,105,106,107,108,109,157,158,110,111,112,113,114,115,116,229,117,230,316,317,318,319,320,321,118,322,119,120,323,263,324,121,122,231,123,124,125,232,233,325,126,127,234,128,129,130,131,235,326,327,328,132,133,134,135,136,137,329,138,330,331,139,332,140,141,142,143,144,145,146,236,237,238,333,334,335,336,337,147,239,148,240,241,149,150,151,152,153],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[290,67,220,221,222,308,133,135,137,330,332,239,240,241],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[198,221,222,240,241],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[160,161,162,163,164,165,172,173,176,291,27,29,30,31,32,33,34,43,201,55,203,204,57,58,205,59,206,207,208,209,60,210,211,212,213,61,214,215,216,217,313,314,82,315,121,233,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,159,13,14,15,276,16,17,18,19,166,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,242,199,200,201,55,57,58,59,60,61,62,63,64,65,66,67,220,68,221,222,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,223,84,85,86,87,88,89,90,91,92,93,94,225,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,230,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,238,147,239,148,240,241,149,150,151,152,153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[265,266,113,339,340,341,342,343,344,345,346,347,129,348,349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[155,350,101,158,110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[341,346,348,351,352,353,354,355,356],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":163,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":125,"org.easymock.tests2.StubTest.stubWithReturnValue":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":341,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":184,"org.easymock.tests2.SerializationTest.testAllMockedMethod":115,"org.easymock.tests2.DelegateToTest.testReturnException":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":161,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":347,"org.easymock.tests.MockingTest.testPartialClassMocking":35,"org.easymock.samples.SupportTest.voteForRemovals":6,"org.easymock.tests.MockClassControlTest.testToString":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":151,"org.easymock.tests.UsageExpectAndThrowTest.object":60,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":351,"org.easymock.tests2.DelegateToTest.testWrongClass":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":199,"org.easymock.tests2.UsageTest.wrongArguments":123,"org.easymock.samples.ConstructorCalledMockTest.testTax":265,"org.easymock.tests.UsageStrictMockTest.range":221,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":305,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":140,"org.easymock.tests2.UsageConstraintsTest.testNull":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":210,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":135,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":301,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests2.CaptureTest.testPrimitive":103,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":202,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.UsageTest.moreThanOneArgument":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":304,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":169,"org.easymock.tests2.CaptureTest.testCaptureNone":107,"org.easymock.tests.UsageUnorderedTest.message":166,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":52,"org.easymock.tests2.ThreadingTest.testThreadSafe":226,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":47,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":17,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":193,"org.easymock.tests2.CaptureTest.testCapture_2617107":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":55,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":322,"org.easymock.tests2.UsageConstraintsTest.any":86,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":285,"org.easymock.tests2.StubTest.stub":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":249,"org.easymock.tests.UsageExpectAndThrowTest.longType":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":162,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":284,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":148,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.SerializationTest.testClass":113,"org.easymock.tests.ReplayStateInvalidUsageTest.times":286,"org.easymock.tests.LimitationsTest.mockNativeMethod":15,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests2.AnswerTest.answer":130,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":319,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests2.NameTest.nameForMocksControl":336,"org.easymock.tests2.MockedExceptionTest.testMockedException":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":74,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests2.DelegateToTest.testDelegate":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":205,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":37,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":120,"org.easymock.tests.MockingTest.testNicePartialClassMocking":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":61,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":137,"org.easymock.tests2.CaptureTest.testCaptureLast":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":164,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":56,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":84,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":208,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":261,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":280,"org.easymock.tests.UsageThrowableTest.throwError":27,"org.easymock.samples.ExampleTest.removeNonExistingDocument":267,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":282,"org.easymock.tests.UsageStrictMockTest.differentMethods":222,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":228,"org.easymock.tests2.MockBuilderTest.testCreateMockString":324,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.floatType":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":171,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":131,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":152,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":194,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":247,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.UsageTest.niceToStrict":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":225,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":34,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":118,"org.easymock.tests2.UsageTest.defaultResetToNice":325,"org.easymock.tests2.MockBuilderTest.testCreateMock":323,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":42,"org.easymock.tests.UsageVarargTest.differentLength":293,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":349,"org.easymock.tests.UsageTest.openCallCountByLastCall":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":209,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":251,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":201,"org.easymock.tests.UsageCallCountTest.tooFewCalls":276,"org.easymock.tests.UsageOverloadedMethodTest.overloading":22,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":257,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":64,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":21,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":88,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":306,"org.easymock.tests.UsageThrowableTest.throwCheckedException":31,"org.easymock.tests.MockClassControlTest.testEquals":300,"org.easymock.tests2.EasyMockSupportClassTest.testAll":150,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests2.CaptureTest.testCaptureAll":101,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":291,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":145,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":142,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":287,"org.easymock.tests2.UsageConstraintsTest.testMatches":258,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":144,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":326,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":170,"org.easymock.tests.ObjectMethodsTest.testHashCode":310,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":354,"org.easymock.tests2.NameTest.nameForNiceMock":335,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":98,"org.easymock.tests.UsageVarargTest.allKinds":54,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":198,"org.easymock.tests2.DependencyTest.testInterfaceMocking":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.samples.BasicClassMockTest.testPrintContent":2,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testStubDelegate":229,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":33,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":337,"org.easymock.tests2.AnswerTest.stubAnswer":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":165,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":356,"org.easymock.tests2.UsageConstraintsTest.greaterThan":259,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":332,"org.easymock.tests.UsageVarargTest.varargLongAccepted":51,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":246,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":227,"org.easymock.tests.UsageExpectAndReturnTest.floatType":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":129,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":266,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":260,"org.easymock.tests.UsageThrowableTest.noUpperLimit":28,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":252,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":20,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":104,"org.easymock.tests2.SerializationTest.test":114,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":72,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":29,"org.easymock.tests2.UsageConstraintsTest.testSame":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":179,"org.easymock.samples.SupportTest.addDocument":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":160,"org.easymock.tests2.CaptureTest.testCaptureFirst":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":73,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":182,"org.easymock.tests.GenericTest.testPackageScope":13,"org.easymock.tests2.UsageTest.moreThanOneArgument":231,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":97,"org.easymock.tests2.CaptureTest.testCapture2_2446744":158,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":263,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":53,"org.easymock.tests2.NameTest.nameForMock":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":18,"org.easymock.tests.UsageExpectAndReturnTest.longType":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":344,"org.easymock.tests2.UsageStrictMockTest.differentMethods":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":180,"org.easymock.tests.UsageCallCountTest.tooManyCalls":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":275,"org.easymock.tests2.MockedExceptionTest.testRealException":315,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":346,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":141,"org.easymock.tests2.NameTest.nameForStrictMock":334,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":274,"org.easymock.tests2.UsageConstraintsTest.testContains":256,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":254,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":136,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":328,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests.UsageExpectAndReturnTest.object":41,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":264,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":138,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":321,"org.easymock.tests2.UsageStrictMockTest.range":240,"org.easymock.tests2.UsageConstraintsTest.lessThan":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":352,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":49,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":311,"org.easymock.tests.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":71,"org.easymock.tests2.CaptureTest.testCaptureRightOne":109,"org.easymock.tests2.UsageConstraintsTest.testOr":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":348,"org.easymock.tests.UsageRangeTest.combination":242,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":63,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests2.MockBuilderTest.testWithConstructor":339,"org.easymock.tests.MockClassControlTest.testHashCode":299,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":295,"org.easymock.tests2.EasyMockSupportTest.testVerify":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":187,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":62,"org.easymock.tests.UsageVarargTest.varargShortAccepted":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":277,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":95,"org.easymock.tests2.UsageConstraintsTest.cmpTo":87,"org.easymock.tests.UsageVarargTest.varargCharAccepted":48,"org.easymock.tests2.CaptureTest.testCaptureMultiple":350,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":250,"org.easymock.tests2.UsageTest.openCallCountByLastCall":232,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":292,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests2.CaptureTest.testCaptureFromStub":157,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":279,"org.easymock.tests.UsageTest.unexpectedCallWithArray":290,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":207,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":16,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":188,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":331,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":298,"org.easymock.tests2.UsageConstraintsTest.constraints":253,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":206,"org.easymock.samples.ExampleTest.addAndChangeDocument":159,"org.easymock.tests.CapturesMatcherTest.test":155,"org.easymock.tests.UsageStrictMockTest.testVerify":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":4,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":297,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.UsageTest.resumeIfFailure":234,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":195,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":196,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":46}}]
