[{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[17,18,19],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[20,21],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"failures":[22,23,24,25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[29,13,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[37,38,39,40,41,42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[43,44,3,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,4,37,76,77,78,79,80,17,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,22,23,24,25,5,6,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,13,14,15,7,9,145,10,146,147,148,149,26,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,39,172,173,174,175,176,177,178,179,180,40,181,182,19,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,42,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[122,123,124,125,262,126,127,128,129,130,131,263,264,132,265],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[57,13,31,32,266],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[267],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[73,74,268,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name"}},{"position":"org.easymock.EasyMock:2124","failures":[3,5,6,7,9,145],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[269,270],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[170,271],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[71,272,93,94,95,96,97,98,99,100,101,102,273,103,104,105,106,107,108,109,110,111,112,113,114,274,115,116,117,118,5,6,122,123,124,125,262,126,127,128,129,130,131,263,264,132,156,168,169,170,175,176,186,189,190,191,192,193,194,195,196,197,198,219,275,230],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[276,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[98,273,112,116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.Capture:82","failures":[277,122,124,125,262,126,127,128,130,278,131,263,132],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[44,3,45,46,48,49,54,55,279,279,280,280,281,282,56,283,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,4,37,76,77,79,284,38,285,82,83,84,85,86,87,88,89,90,91,286,272,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,5,6,276,119,120,287,288,121,122,123,125,262,128,129,130,131,263,264,132,133,134,135,136,137,138,139,289,140,141,142,143,13,14,7,290,8,9,145,10,146,147,148,149,26,150,151,152,153,154,155,156,157,158,159,291,160,161,162,163,164,165,292,293,294,166,295,168,169,170,171,39,172,296,297,176,178,179,40,181,298,41,184,185,299,300,301,302,186,303,187,12,304,305,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,306,307,308,309,310,219,275,311,231,42,312,313,314,315,316,317,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,318,319,320,252,253,254,256,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[98,273,112,116],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[331,332,175,333,334,335],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[55,57,61,62,63,64,65,66,67,86,87,88,89,272,120,146,147,148,149,26,150,152,153,155,185,195,252,253,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[122,123,124,125,262,126,127,128,130,131,263,264,132,265],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,70,72,73,74,75,78,80,17,81,274,123,124,126,127,128,129,132,136,141,142,143,144,15,147,167,170,174,175,177,178,179,180,182,19,183,187,191,220,221,222,223,224,226,227,228,229,230,231,257,258,259,260,261,336,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[73,39,172,178,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":96,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":302,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":80,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.tests2.SerializationTest.testAllMockedMethod":15,"org.easymock.tests2.DelegateToTest.testReturnException":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":300,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":296,"org.easymock.tests.MockingTest.testPartialClassMocking":252,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":332,"org.easymock.samples.SupportTest.voteForRemovals":54,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":269,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":244,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":232,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":87,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":290,"org.easymock.tests.UsageExpectAndThrowTest.object":242,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":60,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":30,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":169,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":102,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":189,"org.easymock.samples.ConstructorCalledMockTest.testTax":279,"org.easymock.tests.UsageStrictMockTest.range":178,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":61,"org.easymock.tests2.UsageConstraintsTest.testNull":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":148,"org.easymock.tests2.CaptureTest.testPrimitive":125,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":251,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.UsageTest.moreThanOneArgument":181,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":320,"org.easymock.tests2.CaptureTest.testCaptureNone":129,"org.easymock.tests.UsageUnorderedTest.message":170,"org.easymock.tests.UsageVerifyTest.twoReturns":172,"org.easymock.tests.UsageVarargTest.varargByteAccepted":228,"org.easymock.tests2.ThreadingTest.testThreadSafe":90,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":306,"org.easymock.tests.UsageTest.argumentsOrdered":183,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":259,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":194,"org.easymock.tests2.CaptureTest.testCapture_2617107":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":192,"org.easymock.tests2.UsageConstraintsTest.any":103,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":301,"org.easymock.tests.UsageExpectAndThrowTest.longType":235,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":72,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":185,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":218,"org.easymock.tests2.AnswerTest.answer":7,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":273,"org.easymock.tests2.CaptureTest.testAnd":122,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":268,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":75,"org.easymock.tests2.NameTest.nameForMocksControl":25,"org.easymock.tests2.MockedExceptionTest.testMockedException":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":310,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":149,"org.easymock.tests.MockingTest.testNicePartialClassMocking":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":247,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":155,"org.easymock.tests2.CaptureTest.testCaptureLast":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":186,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":336,"org.easymock.tests2.CaptureTest.testCapture1_2446744":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":240,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.tests.UsageThrowableTest.throwError":311,"org.easymock.tests.UsageStrictMockTest.differentMethods":179,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":286,"org.easymock.tests2.MockBuilderTest.testCreateMockString":27,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":326,"org.easymock.tests.UsageExpectAndThrowTest.floatType":234,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":9,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":88,"org.easymock.samples.PartialClassMockTest.testGetArea":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":195,"org.easymock.samples.ExampleTest.voteAgainstRemoval":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":318,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":233,"org.easymock.tests2.UsageTest.niceToStrict":79,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":20,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":316,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":281,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":21,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":147,"org.easymock.tests2.UsageTest.defaultResetToNice":285,"org.easymock.samples.ExampleTest.voteAgainstRemovals":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":214,"org.easymock.tests.UsageVarargTest.differentLength":225,"org.easymock.tests2.CallbackTest.callback":4,"org.easymock.tests2.UsageConstraintsTest.equals":18,"org.easymock.tests.UsageTest.openCallCountByLastCall":298,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":241,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":257,"org.easymock.tests.UsageOverloadedMethodTest.overloading":160,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":305,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":106,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":130,"org.easymock.tests.UsageThrowableTest.throwCheckedException":313,"org.easymock.tests2.EasyMockSupportClassTest.testAll":86,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":249,"org.easymock.tests2.CaptureTest.testCaptureAll":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":275,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":65,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":325,"org.easymock.samples.ExampleTest.voteForRemovals":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":33,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":92,"org.easymock.tests2.NameTest.nameForNiceMock":24,"org.easymock.tests.UsageVarargTest.allKinds":230,"org.easymock.tests2.DependencyTest.testInterfaceMocking":59,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":32,"org.easymock.samples.BasicClassMockTest.testPrintContent":52,"org.easymock.samples.ExampleTest.addDocument":47,"org.easymock.tests2.DelegateToTest.testStubDelegate":120,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":315,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":69,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":303,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":266,"org.easymock.tests2.UsageConstraintsTest.greaterThan":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":163,"org.easymock.tests.UsageVarargTest.varargLongAccepted":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":159,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.samples.ExampleTest.voteForRemoval":45,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":217,"org.easymock.tests.UsageExpectAndReturnTest.floatType":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":280,"org.easymock.tests.UsageThrowableTest.noUpperLimit":231,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":187,"org.easymock.tests2.SerializationTest.test":14,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":126,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":36,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.tests2.UsageConstraintsTest.testSame":99,"org.easymock.samples.SupportTest.addDocument":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":299,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":276,"org.easymock.tests2.CaptureTest.testCaptureFirst":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests.GenericTest.testPackageScope":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.CaptureTest.testCapture2_2446744":264,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":229,"org.easymock.tests.GenericTest.testBridgedEquals":270,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":260,"org.easymock.tests2.NameTest.nameForMock":22,"org.easymock.tests.UsageExpectAndReturnTest.longType":202,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":317,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":274,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":248,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":203,"org.easymock.tests.UsageCallCountTest.tooManyCalls":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":256,"org.easymock.tests2.MockedExceptionTest.testRealException":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests2.NameTest.nameForStrictMock":23,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":97,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":161,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":6,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests.UsageExpectAndReturnTest.object":209,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":271,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":146,"org.easymock.tests2.UsageStrictMockTest.range":73,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":31,"org.easymock.tests.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":131,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":307,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":29,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":151,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":304,"org.easymock.tests.UsageTest.wrongArguments":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":204,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageVarargTest.varargShortAccepted":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":12,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests2.CaptureTest.testCaptureMultiple":277,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":8,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":70,"org.easymock.tests2.UsageTest.openCallCountByLastCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":292,"org.easymock.tests2.CaptureTest.testCaptureFromStub":263,"org.easymock.tests.UsageTest.unexpectedCallWithArray":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":312,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests2.CaptureTest.testCapture":278,"org.easymock.tests2.UsageConstraintsTest.constraints":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":157,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":238,"org.easymock.samples.ExampleTest.addAndChangeDocument":49,"org.easymock.tests.CapturesMatcherTest.test":265,"org.easymock.tests2.ConstraintsToStringTest.containsToString":267,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":327,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":89,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests2.UsageTest.resumeIfFailure":82,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":197,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":337,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139}}]
