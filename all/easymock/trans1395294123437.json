[{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[11,12,13,14,15,16,17,18,19,0,1,20,2,21,3,4,22,23,24,25,26,27,28,29,30,31,6,32,33,34,35,7,36,37,38,39,40,41,42,8,43,9,44,45,46,47,48,10,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[176,177,178,108,179,180,181,182,183,184,185,186,169,187,174],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[188,189,190,191,181,187],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[176,177,178,108,179,180,181,182,183,184,185,186,169,187,174],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[192,193,194,195,70,176,177,178,107,108,109,135,141,182,183,184,185,168,186,169,187,173,174,175],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[192,193,194,195,0,29,196,38,197,40,41,198,42,199,52,200,60,201,67,202,68,70,176,71,203,177,178,75,76,204,79,205,83,84,87,88,90,92,94,95,97,98,206,107,207,108,109,208,209,210,211,212,213,214,215,216,135,179,217,218,136,140,141,181,182,183,184,144,185,219,220,221,222,223,224,225,226,168,186,169,227,228,229,230,231,232,172,187,173,233,174,175,234],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[0,1,20,2,21,3,4,22,5,23,6,32,7,36,8,43,9,44,10,235],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[188,189,190,191,181,187],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[112,113,120,127,236,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[110,111,237,238],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[2],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[239,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[11,241,242,12,243,13,14,244,15,245,246,247,248,249,250,251,16,17,252,253,254,192,193,194,195,255,256,257,18,19,0,1,258,20,2,21,3,4,22,5,23,24,25,26,27,28,29,30,31,6,32,33,34,35,7,36,37,259,260,261,262,196,263,38,197,264,265,39,266,40,267,41,268,269,198,42,270,199,8,43,9,44,45,271,272,46,47,48,10,235,49,50,51,52,53,54,55,56,273,274,57,275,276,200,58,59,60,277,201,61,62,63,64,65,278,279,66,280,281,282,283,284,285,67,202,286,287,288,289,290,68,69,70,176,71,203,72,73,74,177,178,75,76,239,240,77,78,204,291,292,293,294,295,296,79,205,297,298,299,300,301,302,303,80,304,305,306,307,308,309,310,311,312,313,314,81,82,83,84,85,315,86,87,88,316,89,90,91,92,93,94,95,96,97,98,99,100,317,318,319,320,101,321,322,102,323,324,325,326,327,328,329,330,331,103,332,333,334,335,336,104,337,338,105,339,340,341,106,342,206,343,107,207,108,109,208,110,111,237,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,368,369,370,132,133,371,134,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,236,390,209,391,392,210,211,212,213,214,393,215,394,395,216,135,179,217,218,396,397,136,137,138,139,140,141,181,182,142,143,183,184,144,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,185,418,419,420,145,146,219,147,421,148,149,150,151,152,153,422,154,423,424,425,155,156,157,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,220,456,457,458,459,460,461,462,221,222,223,463,464,465,466,467,158,468,159,160,469,470,161,162,471,472,473,163,164,165,166,167,474,475,476,477,224,478,479,225,226,480,481,482,483,484,485,168,186,169,227,486,228,229,487,488,230,231,232,170,171,172,489,187,173,233,174,175,234,490,491,492,493],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[243,303,304,306,394],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[2,5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[11,241,242,12,243,13,14,244,15,245,246,247,248,249,250,251,16,17,252,253,254,192,193,194,195,255,256,257,18,19,0,1,258,20,2,21,3,4,22,5,23,24,25,26,27,28,29,30,31,6,32,33,34,35,7,36,37,259,260,261,262,196,263,38,197,264,265,39,266,40,267,41,268,269,198,42,270,199,8,43,9,44,45,271,272,46,47,48,10,235,49,50,51,52,53,54,55,56,273,274,57,275,276,200,58,59,60,277,201,61,62,63,64,65,278,279,66,280,281,282,283,284,285,67,202,286,287,288,289,290,68,69,70,176,71,203,72,73,74,177,178,75,76,239,240,77,78,204,291,292,293,294,295,296,79,205,297,298,299,300,301,302,303,80,304,305,306,307,308,309,310,311,312,313,314,81,82,83,84,85,315,86,87,88,316,89,90,91,92,93,94,95,96,97,98,99,100,317,318,319,320,101,321,322,102,323,324,325,326,327,328,329,330,331,103,332,333,334,335,336,104,337,338,105,339,340,341,106,342,206,343,107,207,108,109,208,110,111,237,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,368,369,370,132,133,371,134,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,236,390,209,391,392,210,211,212,213,214,393,215,394,395,216,135,179,217,218,396,397,136,137,138,139,140,141,181,182,142,143,183,184,144,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,185,418,419,420,145,146,219,147,421,148,149,150,151,152,153,422,154,423,424,425,155,156,157,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,220,456,457,458,459,460,461,462,221,222,223,463,464,465,466,467,158,468,159,160,469,470,161,162,471,472,473,163,164,165,166,167,474,475,476,477,224,478,479,225,226,480,481,482,483,484,485,168,186,169,227,486,228,229,487,488,230,231,232,170,171,172,489,187,173,233,174,175,234,490,491,492,493],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[494,188,495,496,497,498,70,107,108,109,217,218,191,499,180,141,185,168,186,169,173,174,175],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[410,411,412,413,415,417],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[17,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[302,436],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"delegateTo"}},{"position":"org.easymock.internal.RecordState:217","failures":[68,76,105,107,144,148,186,169,173],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[23,145],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[277,63,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[11,241,242,12,243,13,14,244,15,245,246,247,248,249,250,251,16,17,252,253,254,192,193,194,195,255,256,257,18,19,0,1,258,20,2,21,3,4,22,5,23,24,25,26,27,28,29,30,31,6,32,33,34,35,7,36,37,259,260,261,262,196,263,38,197,264,265,39,266,40,267,41,268,269,198,42,270,199,8,43,9,44,45,271,272,46,47,48,10,235,49,50,51,52,53,54,55,56,273,274,57,275,276,200,58,59,60,277,201,61,62,63,64,65,278,279,66,280,281,282,283,284,285,67,202,286,287,288,289,290,68,69,70,176,71,203,72,73,74,177,178,75,76,239,240,77,78,204,291,292,293,294,295,296,79,205,297,298,299,300,301,302,303,80,304,305,306,307,308,309,310,311,312,313,314,81,82,83,84,85,315,86,87,88,316,89,90,91,92,93,94,95,96,97,98,99,100,317,318,319,320,101,321,322,102,323,324,325,326,327,328,329,330,331,103,332,333,334,335,336,104,337,338,105,339,340,341,106,342,206,343,107,207,108,109,208,110,111,237,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,368,369,370,132,133,371,134,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,236,390,209,391,392,210,211,212,213,214,393,215,394,395,216,135,179,217,218,396,397,136,137,138,139,140,141,181,182,142,143,183,184,144,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,185,418,419,420,145,146,219,147,421,148,149,150,151,152,153,422,154,423,424,425,155,156,157,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,220,456,457,458,459,460,461,462,221,222,223,463,464,465,466,467,158,468,159,160,469,470,161,162,471,472,473,163,164,165,166,167,474,475,476,477,224,478,479,225,226,480,481,482,483,484,485,168,186,169,227,486,228,229,487,488,230,231,232,170,171,172,489,187,173,233,174,175,234,490,491,492,493],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":178,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":436,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":203,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":247,"org.easymock.tests2.DelegateToTest.testReturnException":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":481,"org.easymock.tests.MockingTest.testPartialClassMocking":132,"org.easymock.tests.MockClassControlTest.testToString":221,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":254,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":344,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":22,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":159,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":472,"org.easymock.samples.ExampleTest.answerVsDelegate":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":212,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":54,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":465,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":98,"org.easymock.tests2.CaptureTest.testPrimitive":44,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":161,"org.easymock.tests.UsageTest.moreThanOneArgument":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":363,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":389,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":399,"org.easymock.tests.UsageTest.argumentsOrdered":184,"org.easymock.tests.UsageVarargTest.varargIntAccepted":452,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":167,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests.ReplayStateInvalidUsageTest.times":383,"org.easymock.tests2.DependencyTest.testClassMocking":239,"org.easymock.tests2.AnswerTest.answer":105,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":262,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":392,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":200,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":93,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":403,"org.easymock.tests2.DelegateToTest.testDelegate":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":359,"org.easymock.tests.LimitationsTest.mockFinalMethod":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":408,"org.easymock.tests2.DependencyTest.testClassMockingSupport":240,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":217,"org.easymock.tests2.CaptureTest.testCapture1_2446744":45,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":260,"org.easymock.tests.UsageThrowableTest.throwError":147,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":377,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":211,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":290,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":338,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":371,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":492,"org.easymock.tests2.UsageTest.niceToStrict":71,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":39,"org.easymock.tests2.MockBuilderTest.testCreateMock":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":334,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":298,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":391,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":162,"org.easymock.tests.UsageOverloadedMethodTest.overloading":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":336,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":27,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":123,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":26,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":48,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":453,"org.easymock.tests.MockClassControlTest.testEquals":464,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":423,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":361,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":406,"org.easymock.tests2.CaptureTest.testCaptureAll":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":261,"org.easymock.tests.MockNameTest.defaultName":219,"org.easymock.tests2.UsageConstraintsTest.testMatches":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":375,"org.easymock.samples.ExampleTest.voteForRemovals":15,"org.easymock.tests.UsageVarargTest.allKinds":460,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":407,"org.easymock.samples.BasicClassMockTest.testPrintContent":249,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":286,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":305,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":416,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":321,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":60,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":417,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":62,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":277,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":213,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":398,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":91,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":480,"org.easymock.tests2.CaptureTest.testCaptureFirst":50,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":76,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":459,"org.easymock.tests.GenericTest.testBridgedEquals":425,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":231,"org.easymock.tests.UsageExpectAndReturnTest.longType":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":404,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":362,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":397,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":34,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":387,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":365,"org.easymock.tests.UsageCallCountTest.tooManyCalls":232,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testNiceClassMocking":374,"org.easymock.tests.MockingTest.testClassMocking":369,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":486,"org.easymock.tests2.UsageConstraintsTest.testContains":25,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.UsageConstraintsTest.testFind":20,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":157,"org.easymock.tests.MockTypeTest.fromEasyMockClass":210,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":257,"org.easymock.tests.UsageExpectAndReturnTest.object":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":97,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":455,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":479,"org.easymock.tests.UsageTest.exactCallCountByLastCall":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":400,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":252,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":450,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":128,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":394,"org.easymock.tests.MockClassControlTest.testHashCode":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":282,"org.easymock.tests2.EasyMockSupportTest.testVerify":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":329,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":393,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":259,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":291,"org.easymock.tests.UsageVarargTest.varargCharAccepted":454,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":409,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastCall":72,"org.easymock.tests.DefaultClassInstantiatorTest.object":410,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":224,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":295,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":58,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":364,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":222,"org.easymock.tests2.UsageTest.resumeIfFailure":75,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":209,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":483,"org.easymock.tests2.StubTest.stubWithReturnValue":81,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":267,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":35,"org.easymock.tests2.SerializationTest.testAllMockedMethod":237,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":442,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":189,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":356,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":238,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":448,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":339,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":476,"org.easymock.tests.UsageExpectAndThrowTest.object":354,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":32,"org.easymock.tests2.DelegateToTest.testWrongClass":304,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests.UsageStrictMockTest.range":174,"org.easymock.samples.ConstructorCalledMockTest.testTax":241,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":312,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":355,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":385,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":471,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":493,"org.easymock.tests2.CaptureTest.testCaptureNone":47,"org.easymock.tests.UsageUnorderedTest.message":185,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":458,"org.easymock.tests2.ThreadingTest.testThreadSafe":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":332,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":488,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":225,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":446,"org.easymock.tests2.UsageConstraintsTest.any":23,"org.easymock.tests2.StubTest.stub":314,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndThrowTest.longType":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":414,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":207,"org.easymock.tests2.SerializationTest.testClass":110,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":67,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":424,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":294,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.tests2.NameTest.nameForMocksControl":195,"org.easymock.tests2.MockedExceptionTest.testMockedException":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":322,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":134,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":348,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":133,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":56,"org.easymock.tests2.CaptureTest.testCaptureLast":46,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":33,"org.easymock.tests.MockingTest.testTwoMocks":370,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":352,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":36,"org.easymock.samples.ExampleTest.removeNonExistingDocument":245,"org.easymock.tests.UsageStrictMockTest.differentMethods":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":297,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":283,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":412,"org.easymock.tests2.ConstraintsToStringTest.andToString":497,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":63,"org.easymock.tests2.MockBuilderTest.testCreateMockString":199,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":323,"org.easymock.tests.UsageExpectAndThrowTest.floatType":346,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":341,"org.easymock.tests.UsageVerifyTest.twoThrows":186,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":253,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":59,"org.easymock.tests.LimitationsTest.privateConstructor":467,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":278,"org.easymock.tests2.UsageTest.defaultResetToNice":74,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":127,"org.easymock.tests.UsageVarargTest.differentLength":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":293,"org.easymock.tests2.CallbackTest.callback":204,"org.easymock.tests2.UsageConstraintsTest.equals":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":275,"org.easymock.tests.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":469,"org.easymock.tests.UsageCallCountTest.tooFewCalls":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":473,"org.easymock.tests.UsageThrowableTest.throwCheckedException":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":191,"org.easymock.tests.MockingTest.testStrictClassMocking":368,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":146,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":205,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":86,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":342,"org.easymock.tests.ObjectMethodsTest.testHashCode":478,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":65,"org.easymock.tests2.NameTest.nameForNiceMock":194,"org.easymock.tests2.DependencyTest.testInterfaceMocking":77,"org.easymock.samples.ExampleTest.addDocument":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":333,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.AnswerTest.stubAnswer":106,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":173,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":268,"org.easymock.tests.UsageVarargTest.varargLongAccepted":457,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":130,"org.easymock.tests.UsageExpectAndReturnTest.floatType":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.tests2.ConstraintsToStringTest.orToString":494,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":242,"org.easymock.tests.UsageThrowableTest.noUpperLimit":421,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":307,"org.easymock.tests2.SerializationTest.test":111,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":271,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":113,"org.easymock.tests2.UsageConstraintsTest.testSame":21,"org.easymock.samples.SupportTest.addDocument":251,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":315,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":324,"org.easymock.tests.GenericTest.testPackageScope":154,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":287,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":372,"org.easymock.tests2.NameTest.nameForMock":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":270,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":358,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":313,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":439,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":160,"org.easymock.tests2.NameTest.nameForStrictMock":193,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":265,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":311,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":413,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":38,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.UsageConstraintsTest.lessThan":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":90,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":328,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":52,"org.easymock.tests.UsageTest.wrongArguments":182,"org.easymock.tests2.MockBuilderTest.testWithConstructor":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":325,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":125,"org.easymock.tests.UsageVarargTest.varargShortAccepted":456,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":415,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":230,"org.easymock.tests2.UsageConstraintsTest.cmpTo":24,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CaptureTest.testCaptureFromStub":235,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":376,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":197,"org.easymock.tests.UsageTest.unexpectedCallWithArray":181,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":187,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.samples.ExampleTest.addAndChangeDocument":246,"org.easymock.tests2.ConstraintsToStringTest.notToString":495,"org.easymock.tests.UsageStrictMockTest.testVerify":490,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":250,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":405,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":165,"org.easymock.tests.LimitationsTest.abstractClass":466,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":166,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":135,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":95}}]
