[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[10,11,12,13,14,15],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[16,17,0,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,12,43,1,44,45,46,47,48,13,49,50,51,52,53,2,3,54,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,19,86,87,88,89,90,91,92,93,20,94,21,95,96,97,98,32,99,100,101,102,103,104,105,33,34,106,35,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,122,123,123,124,125,126,127,128,129,130,131,8,132,133,7,9,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[8,132,133,7,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[30,158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[159,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[60,63,73,79,84,85,19,86,87,88,89,90,93,20,94,21,97,32,99,101,102,103,104,33,34,35,107,161,111,112,113,114,115,116,117,118,119,120,121,122,122,123,123,126,127,128,129,132,133,7,136,155],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,23,26,27,12,1,13,49,50,51,163,2,3,4],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[0,23,26,27,12,1,13,49,50,51,163,2,3,164,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[165],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[166,167,168,169],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[170,171,172,30,173,174,175,158,176,177,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[179,180,181,182,183,184,185,186,187,188,189,190,18,191,60,63,73,79,82,83,84,192,193,194,195,196,170,197,171,198,199,200,201,202,203,172,204,205,206,207,85,208,86,87,88,90,93,94,209,210,211,24,25,212,28,213,214,30,173,215,174,165,175,158,216,217,218,219,220,167,221,31,222,223,177,224,168,225,178,226,169,97,101,102,103,104,107,227,228,229,230,37,231,232,233,38,39,234,235,40,236,237,238,41,111,239,112,240,241,242,243,244,113,114,115,116,245,117,118,119,246,120,121,247,248,249,250,251,252,253,122,123,254,255,256,127,128,129,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,44,299,300,301,302,303,304,305,306,307,308,132,133,309,310,311,312,313,314,315,316,136,317,318,319,320,321,322,323,324,325,326,327,328,329,139,53,330,331,332,155,333,2,3,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[173,158,177],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[359],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[360,361,362,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[365,105,108,366,367,368,369,370,111],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"failures":[371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[55,387,388,389,56,390,391,179,392,393,180,181,182,183,394,184,395,185,186,187,188,16,189,190,17,0,18,191,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,192,193,194,195,196,396,170,197,171,198,397,199,200,201,202,203,172,398,399,204,400,401,205,206,402,371,372,403,373,207,404,374,375,376,377,378,85,19,208,86,87,88,89,405,90,91,92,93,20,94,21,95,96,406,379,380,407,381,209,408,382,383,384,385,386,22,210,211,23,24,25,409,410,212,26,27,28,29,213,214,30,173,411,215,174,165,175,158,216,176,217,218,219,220,167,221,31,222,223,177,224,168,412,225,178,226,169,97,413,32,99,414,100,101,102,103,365,104,415,105,33,34,416,35,107,108,417,227,228,36,418,229,230,37,231,232,233,38,39,234,235,40,236,237,238,41,111,239,112,159,240,241,419,420,242,243,244,113,114,115,116,421,245,117,118,422,119,246,120,121,247,248,249,250,251,252,423,253,122,123,254,255,256,424,124,125,126,127,128,425,129,426,427,130,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,360,428,429,430,361,362,431,432,433,434,160,435,436,437,363,438,439,440,441,364,442,443,157,444,42,297,12,298,43,1,44,299,300,445,446,447,448,449,131,301,302,303,304,305,450,451,306,307,308,8,132,133,7,9,452,453,454,309,310,311,312,313,314,45,46,47,455,315,316,134,135,136,137,456,317,318,457,458,459,460,461,48,319,13,49,462,463,50,51,52,320,321,322,323,464,465,466,467,468,469,470,471,324,325,326,327,328,329,138,139,140,141,142,143,144,145,53,330,331,332,472,146,147,148,149,150,151,473,152,474,475,476,477,153,478,479,480,481,154,482,483,155,484,485,486,487,488,489,490,491,492,493,494,495,333,2,3,334,335,496,497,336,498,499,500,501,502,337,164,503,338,339,340,341,342,343,344,345,504,346,347,54,348,349,350,351,352,4,353,505,506,507,508,354,355,356,357,358],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[413,414,365,509,416,108,115,118,422,510,511],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[228,36],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[512,513,514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":173,"org.easymock.tests2.UsageTest.argumentsOrdered":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":160,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":25,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":256,"org.easymock.tests2.DelegateToTest.testReturnException":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":325,"org.easymock.tests.MockingTest.testPartialClassMocking":127,"org.easymock.tests.MockClassControlTest.testToString":140,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":395,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":277,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":366,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":216,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":334,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":248,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":154,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":427,"org.easymock.tests2.UsageConstraintsTest.testNull":174,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":145,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":40,"org.easymock.tests2.CaptureTest.testPrimitive":198,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":296,"org.easymock.tests.UsageTest.moreThanOneArgument":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":303,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":464,"org.easymock.tests.UsageTest.argumentsOrdered":51,"org.easymock.tests.UsageVarargTest.varargIntAccepted":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":338,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":370,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":342,"org.easymock.tests.ReplayStateInvalidUsageTest.times":492,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests2.DependencyTest.testClassMocking":400,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":162,"org.easymock.tests2.AnswerTest.answer":179,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":440,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":196,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":479,"org.easymock.tests2.CaptureTest.testAnd":170,"org.easymock.tests2.UsageTest.strictResetToDefault":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":331,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":468,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":292,"org.easymock.tests.LimitationsTest.mockFinalMethod":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":358,"org.easymock.tests2.DependencyTest.testClassMockingSupport":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":450,"org.easymock.tests2.CaptureTest.testCapture1_2446744":397,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":194,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":486,"org.easymock.tests.UsageThrowableTest.throwError":456,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":481,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":503,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":305,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":81,"org.easymock.samples.PartialClassMockTest.testGetArea":119,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":487,"org.easymock.tests.MockingTest.testInterfaceMocking":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":339,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":507,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":131,"org.easymock.tests2.UsageTest.niceToStrict":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":286,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":38,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageOverloadedMethodTest.overloading":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":78,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":167,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":268,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":220,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":203,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":504,"org.easymock.tests.MockClassControlTest.testEquals":144,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":133,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":514,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":294,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":195,"org.easymock.tests2.CaptureTest.testCaptureAll":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":356,"org.easymock.tests.MockNameTest.defaultName":424,"org.easymock.tests2.UsageConstraintsTest.testMatches":221,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":484,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":304,"org.easymock.samples.ExampleTest.voteForRemovals":252,"org.easymock.tests.UsageVarargTest.allKinds":352,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":333,"org.easymock.samples.BasicClassMockTest.testPrintContent":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":460,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":16,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":473,"org.easymock.tests2.UsageConstraintsTest.greaterThan":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":21,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":152,"org.easymock.samples.ExampleTest.voteForRemoval":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":95,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":89,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":155,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":231,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":324,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":232,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":29,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":264,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":418,"org.easymock.tests2.CaptureTest.testCapture2_2446744":399,"org.easymock.tests2.UsageTest.moreThanOneArgument":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":351,"org.easymock.tests.GenericTest.testBridgedEquals":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":46,"org.easymock.tests.UsageExpectAndReturnTest.longType":260,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":354,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":295,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":477,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":412,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":453,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":301,"org.easymock.tests.UsageCallCountTest.tooManyCalls":47,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":459,"org.easymock.tests.MockingTest.testNiceClassMocking":130,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":114,"org.easymock.tests.MockingTest.testClassMocking":125,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":98,"org.easymock.tests2.UsageConstraintsTest.testContains":219,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":215,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":316,"org.easymock.tests.MockTypeTest.fromEasyMockClass":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":184,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests.UsageExpectAndReturnTest.object":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":235,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":347,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":367,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":448,"org.easymock.tests.UsageTest.exactCallCountByLastCall":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":465,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":273,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":500,"org.easymock.tests.MockClassControlTest.testHashCode":143,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":70,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":512,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":466,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":498,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":193,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":396,"org.easymock.tests.UsageVarargTest.varargCharAccepted":346,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":472,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastCall":409,"org.easymock.tests.DefaultClassInstantiatorTest.object":146,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":474,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":446,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":457,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":402,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":142,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":283,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":452,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":513,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":79,"org.easymock.tests2.UsageTest.resumeIfFailure":28,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":327,"org.easymock.tests2.StubTest.stubWithReturnValue":244,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":365,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":266,"org.easymock.tests2.SerializationTest.testAllMockedMethod":112,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":439,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":11,"org.easymock.samples.SupportTest.voteForRemovals":255,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":289,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":157,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":392,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":471,"org.easymock.tests.UsageExpectAndThrowTest.object":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":224,"org.easymock.tests2.DelegateToTest.testWrongClass":419,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":307,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":308,"org.easymock.samples.ConstructorCalledMockTest.testTax":122,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":390,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":288,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":494,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":508,"org.easymock.tests2.CaptureTest.testCaptureNone":202,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":350,"org.easymock.tests2.ThreadingTest.testThreadSafe":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":74,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":314,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":449,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":120,"org.easymock.tests2.CaptureTest.testCapture_2617107":171,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":442,"org.easymock.tests2.UsageConstraintsTest.any":217,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":491,"org.easymock.tests2.StubTest.stub":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndThrowTest.longType":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":326,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":150,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":490,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":17,"org.easymock.tests2.SerializationTest.testClass":111,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":136,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":380,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.tests2.NameTest.nameForMocksControl":188,"org.easymock.tests2.MockedExceptionTest.testMockedException":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":62,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":463,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":394,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":281,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests2.CaptureTest.testCaptureLast":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":451,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":126,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":285,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":226,"org.easymock.samples.ExampleTest.removeNonExistingDocument":423,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":488,"org.easymock.tests.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":372,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":148,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":36,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":64,"org.easymock.tests.UsageExpectAndThrowTest.floatType":279,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":180,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":417,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.tests.ResultTest.createDelegateResultToString":156,"org.easymock.samples.ExampleTest.voteAgainstRemoval":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":94,"org.easymock.tests.LimitationsTest.privateConstructor":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":511,"org.easymock.tests2.UsageConstraintsTest.testNotNull":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":461,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":82,"org.easymock.tests2.UsageTest.defaultResetToNice":212,"org.easymock.samples.ExampleTest.voteAgainstRemovals":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":272,"org.easymock.tests.UsageVarargTest.differentLength":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":379,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.UsageConstraintsTest.equals":411,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":91,"org.easymock.tests.UsageTest.openCallCountByLastCall":462,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":213,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":359,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":496,"org.easymock.tests.UsageCallCountTest.tooFewCalls":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests.UsageThrowableTest.throwCheckedException":458,"org.easymock.tests.MockingTest.testStrictClassMocking":124,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":505,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":115,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":493,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":245,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":182,"org.easymock.tests.ObjectMethodsTest.testHashCode":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":369,"org.easymock.tests2.NameTest.nameForNiceMock":187,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":229,"org.easymock.tests2.DependencyTest.testInterfaceMocking":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":368,"org.easymock.samples.ExampleTest.addDocument":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.DelegateToTest.testStubDelegate":241,"org.easymock.tests2.AnswerTest.stubAnswer":181,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":298,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":415,"org.easymock.tests.UsageVarargTest.varargLongAccepted":349,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.floatType":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":107,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":123,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":502,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":223,"org.easymock.tests.UsageThrowableTest.noUpperLimit":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":214,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":55,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":199,"org.easymock.tests2.SerializationTest.test":239,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":147,"org.easymock.tests2.UsageConstraintsTest.testSame":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":258,"org.easymock.samples.SupportTest.addDocument":254,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":421,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":65,"org.easymock.tests.GenericTest.testPackageScope":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":426,"org.easymock.tests2.NameTest.nameForMock":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":269,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":416,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":291,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":445,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":332,"org.easymock.tests2.MockedExceptionTest.testRealException":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":437,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":190,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":495,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":335,"org.easymock.tests2.NameTest.nameForStrictMock":186,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":100,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":56,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":177,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":5,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":32,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":169,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":37,"org.easymock.tests2.CaptureTest.testCaptureRightOne":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":69,"org.easymock.tests2.UsageConstraintsTest.testOr":175,"org.easymock.tests.UsageRangeTest.combination":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":49,"org.easymock.tests2.MockBuilderTest.testWithConstructor":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":66,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":270,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":151,"org.easymock.tests.UsageVarargTest.varargShortAccepted":348,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":45,"org.easymock.tests2.UsageConstraintsTest.cmpTo":218,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":393,"org.easymock.tests2.CompareToTest.testLessThan":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":410,"org.easymock.tests2.CaptureTest.testCaptureFromStub":398,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":485,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":99,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":313,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":509,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":271,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.UsageConstraintsTest.constraints":30,"org.easymock.samples.ExampleTest.addAndChangeDocument":253,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":246,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":355,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":200,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":340,"org.easymock.tests.LimitationsTest.abstractClass":134,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":263,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":39,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":6,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":344}}]
