[{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[3,4,5,6,7],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[31],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,8,9,59,60,61,62,63,10,11,64,65,66,67,68,69,70,71,72,73,74,3,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,0,125,126,127,128,129,1,130,131,132,133,134,135,136,137,31,138,139,2,140,141,142,143,144,145,146,147,148,12,149,13,14,150,151,15,16,17,18,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,4,199,200,201,202,203,204,205,206,207,5,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,6,231,232,233,7,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,19,295,20,296,297,21,22,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,23,24,439,25,26,440,441,442,443,444,445,446,447,448,27,28,29,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[93,94,95,96,332,395,456,457,458,459,460,461,471,472,473],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[9,10,11,13,295,20,21,22,304,509,23,25,448,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[381,384],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[33,152,154,157,176,338,442],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[220],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[124,0,127,129,1,131,2,144,158,160,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[39,8,97,99,121,122,136,138,146,159,165,166,171,176,246,248,249,271,19,304,341,349,355,361,365,367,397,403,409,413,415],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[511,512,295,513,514,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,129,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[515],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[9,10,11,13,295,20,21,22,304,509,23,25,448,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,39,40,41,42,43,44,45,46,46,47,47,48,55,57,58,8,9,59,60,61,62,63,10,11,64,65,67,68,72,3,84,90,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,0,126,127,128,129,1,130,131,132,133,134,135,136,137,31,138,139,2,140,141,142,143,144,145,146,147,148,12,149,13,14,150,15,16,17,18,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,176,182,189,190,191,192,194,195,196,4,201,203,204,5,211,212,219,220,221,222,223,224,227,230,6,231,232,239,246,248,249,250,251,252,255,257,262,269,270,271,294,19,20,296,297,21,22,298,299,300,301,302,303,304,307,308,309,311,315,316,318,319,320,322,323,341,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,425,426,427,428,429,430,431,432,433,435,436,437,438,23,24,439,25,26,440,441,442,443,444,445,446,447,27,28,29,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,491,492,493,494,496],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[8,12,13,14,19,304,24,25,26,27,28,29,30,516,517,518],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[42,48,182,239],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[100,101,102,519],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[46,47,55,56,69,70,71,72,73,74,3,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,520,510,521,100,191,196,197,522,523,524,206,525,526],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[342,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[122,124,136,138,146,527,528,529,530,531],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[43,44,45,46,46,47,47,55,72,3,84,90,95,100,102,189,190,191,192,195,196,198,4,199,201,202,203,204,207,5,208,219,220,222,223,224,225,227,230,6,231,232,7,252,255,307,308,309,311,318,319,320,321,417,422,500,501,502,503,504,505,506,507,508],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[449,450,454],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[32,33,34,35,37,39,41,45,46,46,47,47,55,57,58,8,9,59,60,61,62,63,10,11,64,65,67,68,72,3,84,90,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,0,126,127,128,129,1,130,131,132,133,134,135,136,137,31,138,139,2,140,141,142,143,144,145,146,147,12,149,13,14,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,182,189,190,191,192,194,195,196,198,4,201,202,203,204,5,208,211,212,219,220,221,222,223,224,225,227,230,6,231,232,239,246,248,249,250,251,252,255,257,258,259,260,262,264,265,266,267,268,269,270,271,294,19,295,20,296,297,21,22,298,299,300,301,302,303,304,308,309,311,315,316,318,320,322,323,341,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,425,426,427,430,437,23,24,439,25,26,440,442,443,444,445,446,447,448,27,28,29,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[46,46,47,47,55,56,100,206,228],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[9,10,11,13,295,20,21,22,304,509,23,25,448,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[304,516],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[171],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[116,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":294,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":335,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":60,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":42,"org.easymock.tests2.DelegateToTest.testReturnException":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":457,"org.easymock.tests.MockingTest.testPartialClassMocking":308,"org.easymock.tests.MockClassControlTest.testToString":503,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":151,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":397,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":3,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":30,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":212,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":293,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":130,"org.easymock.tests2.UsageTest.wrongArguments":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":299,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":259,"org.easymock.samples.ExampleTest.answerVsDelegate":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":422,"org.easymock.tests2.UsageConstraintsTest.testNull":127,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":222,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":508,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":112,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":416,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":391,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":478,"org.easymock.tests.UsageTest.argumentsOrdered":22,"org.easymock.tests.UsageVarargTest.varargIntAccepted":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":462,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":215,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":466,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":277,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests.ReplayStateInvalidUsageTest.times":377,"org.easymock.tests2.DependencyTest.testClassMocking":209,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":175,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":419,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests2.UsageTest.strictResetToDefault":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":523,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":107,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":482,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":412,"org.easymock.tests.LimitationsTest.mockFinalMethod":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":268,"org.easymock.tests2.DependencyTest.testClassMockingSupport":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":322,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":371,"org.easymock.tests.UsageThrowableTest.throwError":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":421,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":92,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":280,"org.easymock.samples.PartialClassMockTest.testGetArea":45,"org.easymock.tests.MockingTest.testInterfaceMocking":310,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":372,"org.easymock.tests2.CompareToTest.testLessOrEqual":531,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":475,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":500,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":398,"org.easymock.tests2.UsageTest.niceToStrict":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":79,"org.easymock.tests2.ThreadingTest.testChangeDefault":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":242,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":406,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":108,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":418,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":427,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":428,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":257,"org.easymock.tests.UsageOverloadedMethodTest.overloading":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":89,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":445,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":360,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":135,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":486,"org.easymock.tests.MockClassControlTest.testEquals":507,"org.easymock.tests2.EasyMockSupportClassTest.testAll":72,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":174,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":266,"org.easymock.tests.MockNameTest.defaultName":396,"org.easymock.tests2.UsageConstraintsTest.testMatches":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":392,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":369,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests.UsageVarargTest.allKinds":494,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":27,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":267,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":387,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":461,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":184,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":120,"org.easymock.tests2.UsageConstraintsTest.greaterThan":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":468,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":232,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":281,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":455,"org.easymock.samples.ExampleTest.voteForRemoval":34,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":233,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":225,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":273,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":252,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":456,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":356,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":8,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":250,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":343,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":493,"org.easymock.tests.GenericTest.testBridgedEquals":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":435,"org.easymock.tests.UsageExpectAndReturnTest.longType":352,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":415,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":477,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":413,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":472,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":389,"org.easymock.tests.UsageCallCountTest.tooManyCalls":436,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":357,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":402,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testNiceClassMocking":314,"org.easymock.tests.MockingTest.testClassMocking":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":429,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":95,"org.easymock.tests2.UsageConstraintsTest.testFind":126,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":271,"org.easymock.tests.MockTypeTest.fromEasyMockClass":420,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":437,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":99,"org.easymock.tests.UsageExpectAndReturnTest.object":359,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":488,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":521,"org.easymock.tests.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":479,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":56,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":483,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":444,"org.easymock.tests.MockClassControlTest.testHashCode":506,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":178,"org.easymock.tests2.EasyMockSupportTest.testVerify":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":81,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":480,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":442,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":66,"org.easymock.tests.UsageVarargTest.varargCharAccepted":487,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastCall":61,"org.easymock.tests.DefaultClassInstantiatorTest.object":449,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":114,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":425,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":496,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":384,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":177,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":505,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":6,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":403,"org.easymock.tests.ReplayStateInvalidCallsTest.times":285,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":471,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":286,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":90,"org.easymock.tests2.UsageTest.resumeIfFailure":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":459,"org.easymock.tests2.StubTest.stubWithReturnValue":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":524,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":358,"org.easymock.tests2.SerializationTest.testAllMockedMethod":102,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":341,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":512,"org.easymock.samples.SupportTest.voteForRemovals":41,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":409,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":519,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":347,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":153,"org.easymock.tests.UsageExpectAndThrowTest.object":407,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":263,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":119,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":315,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":316,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":217,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":408,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":203,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":258,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":513,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":476,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":50,"org.easymock.tests.UsageUnorderedTest.message":304,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":492,"org.easymock.tests2.ThreadingTest.testThreadSafe":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":85,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":433,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":499,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageConstraintsTest.any":132,"org.easymock.tests2.StubTest.stub":67,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":376,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":458,"org.easymock.tests.UsageExpectAndThrowTest.longType":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":346,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":453,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":375,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests2.SerializationTest.testClass":100,"org.easymock.tests.LimitationsTest.mockNativeMethod":255,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":236,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":291,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":150,"org.easymock.tests2.NameTest.nameForMocksControl":18,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":51,"org.easymock.tests2.MockedExceptionTest.testMockedException":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":74,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":401,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":98,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":204,"org.easymock.tests.MockingTest.testNicePartialClassMocking":309,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":224,"org.easymock.tests2.CompareToTest.testNotComparable":515,"org.easymock.tests2.CompareToTest.testCompareEqual":529,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":234,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":323,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":290,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":307,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":287,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":405,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":54,"org.easymock.samples.ExampleTest.removeNonExistingDocument":38,"org.easymock.tests.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":241,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":179,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":451,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":53,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":249,"org.easymock.tests2.MockBuilderTest.testCreateMockString":208,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":501,"org.easymock.tests.UsageExpectAndThrowTest.floatType":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":75,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":84,"org.easymock.samples.ExampleTest.voteAgainstRemoval":35,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":231,"org.easymock.tests.LimitationsTest.privateConstructor":254,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":510,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":388,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":93,"org.easymock.tests2.UsageTest.defaultResetToNice":63,"org.easymock.samples.ExampleTest.voteAgainstRemovals":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":364,"org.easymock.tests.UsageVarargTest.differentLength":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":235,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":228,"org.easymock.tests.UsageTest.openCallCountByLastCall":296,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":301,"org.easymock.tests.UsageCallCountTest.tooFewCalls":431,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":260,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":52,"org.easymock.tests.UsageThrowableTest.throwCheckedException":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":514,"org.easymock.tests.MockingTest.testStrictClassMocking":305,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":395,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":240,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":378,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests2.CompareToTest.testGreateOrEqual":530,"org.easymock.tests.ObjectMethodsTest.testHashCode":497,"org.easymock.tests2.NameTest.nameForNiceMock":17,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":251,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":289,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":284,"org.easymock.tests2.DependencyTest.testInterfaceMocking":211,"org.easymock.samples.ExampleTest.addDocument":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":86,"org.easymock.tests2.DelegateToTest.testStubDelegate":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":91,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":205,"org.easymock.tests.UsageVarargTest.varargLongAccepted":491,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageExpectAndReturnTest.floatType":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":186,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":139,"org.easymock.tests.UsageThrowableTest.noUpperLimit":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":123,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":213,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.SerializationTest.test":101,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":450,"org.easymock.tests2.UsageConstraintsTest.testSame":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":350,"org.easymock.samples.SupportTest.addDocument":40,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":193,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":274,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":76,"org.easymock.tests.GenericTest.testPackageScope":318,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":185,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":312,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":272,"org.easymock.tests2.NameTest.nameForMock":15,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":361,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":526,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":411,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":495,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":470,"org.easymock.tests2.MockedExceptionTest.testRealException":96,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":300,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":380,"org.easymock.tests2.NameTest.nameForStrictMock":16,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":200,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":216,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":516,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":452,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests.ErrorMessageTest.testGetters":517,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":4,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":278,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":333,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":80,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":49,"org.easymock.tests2.UsageConstraintsTest.testOr":129,"org.easymock.tests.UsageRangeTest.combination":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":220,"org.easymock.tests.UsageTest.wrongArguments":20,"org.easymock.tests2.MockBuilderTest.testWithConstructor":522,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":77,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":502,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":362,"org.easymock.tests.UsageVarargTest.varargShortAccepted":490,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":454,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":434,"org.easymock.tests2.UsageConstraintsTest.cmpTo":133,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":292,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":154,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":282,"org.easymock.tests2.CompareToTest.testLessThan":527,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.CaptureTest.testCaptureFromStub":169,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":370,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":199,"org.easymock.tests.UsageTest.unexpectedCallWithArray":295,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":288,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":432,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":525,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":363,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":439,"org.easymock.tests2.UsageConstraintsTest.constraints":124,"org.easymock.samples.ExampleTest.addAndChangeDocument":39,"org.easymock.tests.UsageStrictMockTest.testVerify":441,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":48,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests2.CompareToTest.testGreateThan":528,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":265,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":464,"org.easymock.tests.LimitationsTest.abstractClass":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":465,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":518,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109}}]
