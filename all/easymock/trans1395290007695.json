[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,253,254,254,255,256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[81,86,97,257],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[259,260,261,262,263,264,265,266,5,7,8,9,10,11,267,13,27,30,31,32,33,34,37,38,39,40,41,42,44,45,268,46,269,270,48,49,50,51,54,271,56,272,61,62,64,65,66,273,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,104,274,105,107,275,108,109,114,115,276,116,117,119,120,123,277,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,278,150,151,152,153,154,279,280,281,282,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,283,284,285,286,287,288,289,290,291,292,182,184,185,186,187,188,194,195,196,293,294,295,296,297,198,199,205,206,207,208,213,214,215,216,217,218,219,220,221,298,299,222,300,301,302,224,228,229,230,231,303,232,234,304,305,239,240,243,245,246,247,248,249,250,306,251,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[307,308,309,310,311,4,312,313,314,315,316,317,318,319,320,321,322,60,323,324,325,326,327,328,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[331,332,333,334,335,336,337],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[38,39,40,41,183,214,215,216,217,218,219],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:222","failures":[338,124,339,340],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[44,268,46,47,269,270,48,50,341,51,52,54],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[6,12,14,16,20,21,24,55,342,59,343,63,344,66,273,345,346,70,71,74,88,347,348,106,107,117,349,350,158,351,195,196,352,353,205,354,355,356,223,357,358,359,360,227,361,362,363,233,234],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[78],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[65,105,107,275,364,194,195,196,213,224,232,234,304],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[365,366,367],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[331,368,332,333,334,369,370,114,116,337],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[371,372,373,374,65,344,345,346,375,376,377,224,357,358,359,360,362],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[378,379,380,381,382,155,156,157,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[371,373,375,376,357,362],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[56,383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[378,379,380,381,382],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[259,260,261,262,263,264,265,266,4,312,7,15,16,17,18,19,20,21,22,23,24,25,26,384,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,268,46,47,269,270,48,49,50,51,52,53,54,271,60,323,61,62,63,64,65,344,66,273,67,68,69,345,346,70,71,72,73,74,75,76,77,78,79,80,81,385,82,83,84,85,86,87,88,89,90,91,92,93,386,94,95,96,97,102,347,274,105,348,106,107,275,108,109,110,115,117,118,119,120,121,122,123,338,124,125,126,387,388,389,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,390,150,151,152,153,154,391,392,393,394,155,156,157,158,279,280,281,282,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,283,284,285,286,287,351,288,289,290,291,292,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,293,294,295,296,297,197,198,199,200,201,202,203,204,205,206,207,208,209,210,339,211,212,340,213,395,214,215,216,217,218,219,220,221,298,222,300,301,302,354,355,356,223,224,357,358,225,226,359,360,227,361,303,362,232,363,233,234,304,305,235,236,237,238,239,240,241,242,243,396,244,245,246,247,248,249,250,306,251,252,329,397,256,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Null:35","failures":[36,77,386,292],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[12,13,398,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[12,13,398,56],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[114,115,276,399],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[36,400,401,402],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[259,260,261,262,4,312,6,267,14,403,18,21,23,57,58,59,343,60,323,99,100,103,104,404,405,406,387,389,407,390,408,391,392,409,393,394],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"name","methodName":"name"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[114,115,276,399],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[106,158,195,196,410,411,233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[259,260,261,262,263,264,265,266,307,308,309,310,311,4,312,313,314,315,316,317,5,6,7,8,9,10,412,11,413,414,267,12,13,14,415,403,15,16,17,18,19,20,21,22,23,24,25,26,384,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,268,46,47,269,270,48,49,50,51,52,53,54,416,271,417,398,55,418,419,420,56,272,57,331,58,368,342,59,421,422,383,423,343,424,318,319,320,321,322,60,323,324,325,326,327,328,61,62,63,64,65,344,66,273,67,68,69,345,346,70,71,72,73,74,75,425,76,77,78,79,80,81,385,82,83,84,85,86,87,88,89,90,91,92,93,386,94,95,96,97,426,98,99,100,101,102,103,104,347,274,105,348,106,107,275,108,427,109,428,332,429,430,431,333,334,369,432,433,434,335,435,336,370,436,437,438,439,440,441,258,442,110,443,444,111,445,446,447,448,449,450,451,452,453,112,454,455,456,457,458,113,459,460,114,115,276,116,337,461,117,118,119,120,121,122,123,338,124,364,462,463,464,465,466,467,468,469,470,378,471,379,472,473,474,475,125,476,477,478,380,381,126,382,479,277,404,405,406,480,481,482,483,387,388,484,389,407,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,390,485,486,147,487,0,148,278,149,488,150,151,152,153,154,408,391,392,409,393,394,155,156,157,158,279,280,281,282,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,283,284,285,489,286,287,351,288,289,290,291,292,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,293,294,295,296,297,490,491,492,493,494,400,495,496,497,498,499,500,197,198,199,200,201,202,203,204,205,206,207,208,209,210,339,211,212,340,213,395,214,215,216,217,218,219,220,221,298,299,222,300,301,302,354,355,356,223,224,357,358,225,226,359,360,227,501,502,503,228,229,504,230,505,506,507,231,361,303,362,232,363,233,234,304,305,235,236,237,401,238,402,239,240,241,242,243,508,396,509,510,511,365,512,513,514,244,245,246,247,248,249,250,306,251,515,252,516,517,253,253,254,254,255,329,397,256,330],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.UsageTest.argumentsOrdered":346,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":471,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":273,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testReturnException":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":215,"org.easymock.tests.MockingTest.testPartialClassMocking":228,"org.easymock.tests.MockClassControlTest.testToString":404,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":162,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":332,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":239,"org.easymock.tests2.UsageTest.wrongArguments":344,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":281,"org.easymock.samples.ExampleTest.answerVsDelegate":248,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":409,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":506,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":8,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":482,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":24,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":430,"org.easymock.tests2.CaptureTest.testPrimitive":46,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":181,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":189,"org.easymock.tests.UsageTest.argumentsOrdered":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":285,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":150,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":316,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":154,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":2,"org.easymock.tests.ReplayStateInvalidUsageTest.times":497,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":60,"org.easymock.tests2.AnswerTest.answer":27,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests2.CaptureTest.testAnd":44,"org.easymock.tests2.UsageTest.strictResetToDefault":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":207,"org.easymock.tests2.DelegateToTest.testDelegate":123,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":177,"org.easymock.tests.LimitationsTest.mockFinalMethod":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":492,"org.easymock.tests.UsageThrowableTest.throwError":197,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":392,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":317,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":460,"org.easymock.samples.PartialClassMockTest.testGetArea":255,"org.easymock.tests.MockingTest.testInterfaceMocking":504,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":449,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":407,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":163,"org.easymock.tests2.UsageTest.niceToStrict":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":56,"org.easymock.tests2.MockBuilderTest.testCreateMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":456,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":171,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":371,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":138,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":366,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":50,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":489,"org.easymock.tests.MockClassControlTest.testEquals":481,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":179,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":372,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":431,"org.easymock.tests2.CaptureTest.testCaptureAll":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests.MockNameTest.defaultName":390,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":490,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":187,"org.easymock.samples.ExampleTest.voteForRemovals":251,"org.easymock.tests.UsageVarargTest.allKinds":292,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":194,"org.easymock.samples.BasicClassMockTest.testPrintContent":517,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":203,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":347,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":313,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":513,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":206,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":14,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":514,"org.easymock.samples.ExampleTest.voteForRemoval":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":415,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":34,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":421,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":412,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":231,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":17,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":214,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":118,"org.easymock.tests2.CaptureTest.testCaptureFirst":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":18,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":36,"org.easymock.tests2.CaptureTest.testCapture2_2446744":53,"org.easymock.tests2.UsageTest.moreThanOneArgument":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":291,"org.easymock.tests.GenericTest.testBridgedEquals":488,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":355,"org.easymock.tests.UsageExpectAndReturnTest.longType":130,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":180,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":383,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":386,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":236,"org.easymock.tests.UsageCallCountTest.tooManyCalls":356,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":3,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests.MockingTest.testNiceClassMocking":507,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests.MockingTest.testClassMocking":502,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":398,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":299,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":40,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":246,"org.easymock.tests.MockTypeTest.fromEasyMockClass":391,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":109,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":361,"org.easymock.tests.UsageExpectAndReturnTest.object":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":23,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":333,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":484,"org.easymock.tests.UsageTest.exactCallCountByLastCall":227,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":337,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":143,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":211,"org.easymock.tests.MockClassControlTest.testHashCode":480,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":308,"org.easymock.tests2.EasyMockSupportTest.testVerify":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":451,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":1,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":160,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":349,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":426,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":508,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":429,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastCall":67,"org.easymock.tests.DefaultClassInstantiatorTest.object":396,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":26,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":159,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":387,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":452,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":169,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":436,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":307,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":406,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":12,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":168,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":235,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests2.UsageTest.resumeIfFailure":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":217,"org.easymock.tests2.StubTest.stubWithReturnValue":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":331,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests2.SerializationTest.testAllMockedMethod":276,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":125,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":424,"org.easymock.samples.SupportTest.voteForRemovals":256,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":373,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":174,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":399,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":126,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":28,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":402,"org.easymock.tests.UsageExpectAndThrowTest.object":172,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":121,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":220,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":221,"org.easymock.tests.UsageStrictMockTest.range":233,"org.easymock.samples.ConstructorCalledMockTest.testTax":253,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":439,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":22,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":173,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":441,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":375,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":157,"org.easymock.tests2.CaptureTest.testCaptureNone":49,"org.easymock.tests.UsageUnorderedTest.message":158,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":352,"org.easymock.tests.UsageVerifyTest.twoReturns":196,"org.easymock.tests.UsageVarargTest.varargByteAccepted":290,"org.easymock.tests2.ThreadingTest.testThreadSafe":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":454,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":302,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":516,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":389,"org.easymock.tests2.CaptureTest.testCapture_2617107":268,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":374,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":364,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":496,"org.easymock.tests2.StubTest.stub":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":237,"org.easymock.tests.UsageExpectAndThrowTest.longType":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":381,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":495,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":348,"org.easymock.tests2.SerializationTest.testClass":114,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":146,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":434,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":320,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":275,"org.easymock.tests2.NameTest.nameForMocksControl":262,"org.easymock.tests2.MockedExceptionTest.testMockedException":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":444,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":427,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":166,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":230,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":5,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests.MockingTest.testNicePartialClassMocking":229,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":428,"org.easymock.tests2.CaptureTest.testCaptureLast":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":104,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":170,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":345,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":515,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":494,"org.easymock.tests.UsageStrictMockTest.differentMethods":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":309,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":510,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":35,"org.easymock.tests2.MockBuilderTest.testCreateMockString":343,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":445,"org.easymock.tests.UsageExpectAndThrowTest.floatType":164,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":461,"org.easymock.tests.UsageVerifyTest.twoThrows":195,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":13,"org.easymock.tests.LimitationsTest.privateConstructor":486,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":204,"org.easymock.tests2.UsageTest.defaultResetToNice":69,"org.easymock.samples.ExampleTest.voteAgainstRemovals":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":319,"org.easymock.tests.UsageVarargTest.differentLength":351,"org.easymock.tests2.CallbackTest.callback":117,"org.easymock.tests2.UsageConstraintsTest.equals":425,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":413,"org.easymock.tests.UsageTest.openCallCountByLastCall":225,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":241,"org.easymock.tests.UsageCallCountTest.tooFewCalls":300,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":282,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests.MockingTest.testStrictClassMocking":501,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":376,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":498,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":102,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":32,"org.easymock.tests.ObjectMethodsTest.testHashCode":388,"org.easymock.tests2.CompareToTest.testGreateOrEqual":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":335,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":37,"org.easymock.tests2.NameTest.nameForNiceMock":261,"org.easymock.tests2.DependencyTest.testInterfaceMocking":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":334,"org.easymock.samples.ExampleTest.addDocument":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.DelegateToTest.testStubDelegate":120,"org.easymock.tests2.AnswerTest.stubAnswer":31,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":232,"org.easymock.tests.UsageVarargTest.varargLongAccepted":289,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":145,"org.easymock.tests.UsageExpectAndReturnTest.floatType":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":116,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":254,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":90,"org.easymock.tests.UsageThrowableTest.noUpperLimit":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":315,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":437,"org.easymock.tests2.SerializationTest.test":115,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":269,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":367,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":509,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":128,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.samples.SupportTest.addDocument":397,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":446,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":314,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":505,"org.easymock.tests2.NameTest.nameForMock":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":422,"org.easymock.tests2.UsageStrictMockTest.differentMethods":107,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":414,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":131,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":176,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":208,"org.easymock.tests2.MockedExceptionTest.testRealException":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":440,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":473,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":500,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":240,"org.easymock.tests2.NameTest.nameForStrictMock":260,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":420,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":438,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":511,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":410,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":55,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":311,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":450,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":358,"org.easymock.tests2.MockBuilderTest.testWithConstructor":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":447,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":140,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":512,"org.easymock.tests.UsageVarargTest.varargShortAccepted":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":354,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests2.CaptureTest.testCaptureFromStub":52,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":491,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":418,"org.easymock.tests.UsageTest.unexpectedCallWithArray":357,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":141,"org.easymock.tests2.CaptureTest.testCapture":341,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":363,"org.easymock.samples.ExampleTest.addAndChangeDocument":252,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":329,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":270,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":152,"org.easymock.tests.LimitationsTest.abstractClass":485,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":153,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":21,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":284}}]
