[{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[16,17,18,19,20,21],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,16,16,17,17,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,0,1,56,57,2,58,3,4,59,5,60,61,62,63,64,65,66,67,68,6,69,70,71,72,7,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,8,110,9,111,112,113,114,115,116,117,10,118,119,120,11,12,13,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,21,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[396,477,478],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[32,33,34,16,16,17,17,47,48,49,79,80,92,93,94,95,96,97,98,99,100,101,102,103,11,13,162,163,164,165,167,168,176,177,179,180,181,182,184,21,185,186,187,188,189,190,191,204,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,261,262,263,264,265,267,270,271,272,273,274,275,281,282,283,284,347,348,349,350,351,352,353,354,367,370,391,392,393,394,395,396,397,398,399],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.RecordState:173","failures":[106],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,27,29,34,36,16,16,17,17,37,38,39,40,41,43,47,48,49,50,51,53,54,55,0,1,57,2,58,3,4,59,5,60,61,62,63,64,65,66,67,68,6,69,70,71,72,7,73,74,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,101,102,103,104,105,106,107,108,109,8,110,9,111,112,113,114,115,116,117,10,118,119,120,11,12,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,142,143,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,184,186,187,188,189,191,197,198,211,214,224,230,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,263,264,265,267,272,274,276,277,278,279,280,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,338,339,340,341,342,343,344,345,346,349,350,351,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,390,391,399,402,409,410,411,412,413,414,415,417,418,419,420,422,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,442,443,445,446,447,448,449,450,451,452,469,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[396,477,478],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[32,33,34,16,16,17,17,47,48,49,75,76,79,80,92,93,94,95,96,97,98,99,100,101,102,103,11,13,162,163,164,165,167,168,176,177,179,180,181,182,184,21,185,186,187,188,189,190,191,204,479,480,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,261,262,263,264,265,267,270,271,272,273,274,275,281,282,283,284,347,348,349,350,351,352,353,354,367,370,392,393,394,395,396,397,398,399],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[275],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[481],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[152,158,159,173,482,379,380,383,384,417,434,438,441,446,447],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[44,189,191],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[271],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[23,86,88,91,136,428],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,474,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[150],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[271],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[483,8,9,111,112,113,114,115,117,484,10,118,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[214],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[173,174,186,441,442],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,474,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[23,104,105,106,107,108,109,430],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:27","sourceCode":"-3743894206806704049L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":377,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":463,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":154,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":30,"org.easymock.tests2.DelegateToTest.testReturnException":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":264,"org.easymock.tests.MockClassControlTest.testToString":349,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":42,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":218,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":241,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":409,"org.easymock.tests2.UsageTest.wrongArguments":152,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":375,"org.easymock.samples.ExampleTest.answerVsDelegate":23,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":370,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":269,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":179,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":354,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":413,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":260,"org.easymock.tests.UsageTest.moreThanOneArgument":378,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.UsageTest.argumentsOrdered":384,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":310,"org.easymock.tests.UsageVarargTest.varargIntAccepted":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":468,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":147,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":280,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.ReplayStateInvalidUsageTest.times":323,"org.easymock.tests2.DependencyTest.testClassMocking":75,"org.easymock.tests2.AnswerTest.answer":86,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":470,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":85,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":127,"org.easymock.tests2.DelegateToTest.testDelegate":109,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":256,"org.easymock.tests.LimitationsTest.mockFinalMethod":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":362,"org.easymock.tests2.DependencyTest.testClassMockingSupport":76,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":414,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":83,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":317,"org.easymock.tests.UsageThrowableTest.throwError":339,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":369,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":232,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.MockingTest.testInterfaceMocking":266,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":277,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":356,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":391,"org.easymock.tests2.UsageTest.niceToStrict":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":96,"org.easymock.tests2.MockBuilderTest.testCreateMock":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":200,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":250,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":400,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":373,"org.easymock.tests.UsageOverloadedMethodTest.overloading":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":229,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":431,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":64,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":296,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":477,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":63,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":117,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":330,"org.easymock.tests2.EasyMockSupportClassTest.testAll":211,"org.easymock.tests.MockClassControlTest.testEquals":353,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":273,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":258,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":360,"org.easymock.tests.MockNameTest.defaultName":363,"org.easymock.tests2.UsageConstraintsTest.testMatches":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":315,"org.easymock.samples.ExampleTest.voteForRemovals":27,"org.easymock.tests.UsageVarargTest.allKinds":338,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":445,"org.easymock.samples.BasicClassMockTest.testPrintContent":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":361,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":345,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":144,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests2.UsageConstraintsTest.greaterThan":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":425,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":189,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":398,"org.easymock.samples.ExampleTest.voteForRemoval":24,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":190,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":38,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":182,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":399,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":125,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.CaptureTest.testCaptureFirst":120,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":126,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":434,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":292,"org.easymock.tests2.UsageTest.moreThanOneArgument":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":471,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":337,"org.easymock.tests.GenericTest.testBridgedEquals":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":407,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":15,"org.easymock.tests.UsageExpectAndReturnTest.longType":288,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":358,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":259,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":435,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":365,"org.easymock.tests.UsageCallCountTest.tooManyCalls":408,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":344,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":163,"org.easymock.tests.MockingTest.testNiceClassMocking":270,"org.easymock.tests.MockingTest.testClassMocking":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":401,"org.easymock.tests2.UsageConstraintsTest.testContains":62,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":57,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":452,"org.easymock.tests.MockTypeTest.fromEasyMockClass":368,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":436,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":53,"org.easymock.tests.UsageExpectAndReturnTest.object":295,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":201,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":131,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":332,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":389,"org.easymock.tests.UsageTest.exactCallCountByLastCall":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":301,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":138,"org.easymock.tests.MockClassControlTest.testHashCode":352,"org.easymock.tests2.EasyMockSupportTest.testVerify":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":221,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":312,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":82,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":81,"org.easymock.tests.UsageVarargTest.varargCharAccepted":331,"org.easymock.tests2.CaptureTest.testCaptureMultiple":483,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":476,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests.DefaultClassInstantiatorTest.object":392,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":134,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":387,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":187,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":351,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":230,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":350,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":294,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":469,"org.easymock.samples.SupportTest.voteForRemovals":36,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":253,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":475,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":87,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":423,"org.easymock.tests.UsageExpectAndThrowTest.object":251,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DelegateToTest.testWrongClass":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":448,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":449,"org.easymock.tests.UsageStrictMockTest.range":441,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":206,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":208,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":325,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":374,"org.easymock.tests2.CaptureTest.testCaptureNone":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":357,"org.easymock.tests.UsageUnorderedTest.message":417,"org.easymock.tests.UsageVerifyTest.twoReturns":447,"org.easymock.tests.UsageVarargTest.varargByteAccepted":336,"org.easymock.tests2.ThreadingTest.testThreadSafe":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":225,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":405,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":390,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":32,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":412,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests2.StubTest.stub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.UsageExpectAndThrowTest.longType":244,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":396,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":321,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":142,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":283,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":194,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests2.NameTest.nameForMocksControl":46,"org.easymock.tests2.MockedExceptionTest.testMockedException":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":213,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":382,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":245,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":267,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":176,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":99,"org.easymock.tests.MockingTest.testNicePartialClassMocking":265,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":181,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":168,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":249,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.samples.ExampleTest.removeNonExistingDocument":28,"org.easymock.tests.UsageStrictMockTest.differentMethods":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":199,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":139,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":394,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":39,"org.easymock.tests2.MockBuilderTest.testCreateMockString":103,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":215,"org.easymock.tests.UsageExpectAndThrowTest.floatType":243,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":89,"org.easymock.tests.UsageVerifyTest.twoThrows":446,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":224,"org.easymock.samples.ExampleTest.voteAgainstRemoval":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":355,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests.LimitationsTest.privateConstructor":282,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":346,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":193,"org.easymock.tests.UsageVarargTest.differentLength":333,"org.easymock.tests2.CallbackTest.callback":136,"org.easymock.tests2.UsageConstraintsTest.equals":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":21,"org.easymock.tests.UsageTest.openCallCountByLastCall":381,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":411,"org.easymock.tests.UsageCallCountTest.tooFewCalls":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":376,"org.easymock.tests.UsageThrowableTest.throwCheckedException":343,"org.easymock.tests.MockingTest.testStrictClassMocking":261,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":167,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":166,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":91,"org.easymock.tests.ObjectMethodsTest.testHashCode":388,"org.easymock.tests2.NameTest.nameForNiceMock":45,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":41,"org.easymock.tests2.DependencyTest.testInterfaceMocking":77,"org.easymock.samples.ExampleTest.addDocument":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":226,"org.easymock.tests2.DelegateToTest.testStubDelegate":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":231,"org.easymock.tests2.AnswerTest.stubAnswer":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":439,"org.easymock.tests.UsageVarargTest.varargLongAccepted":335,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.floatType":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":79,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":146,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":68,"org.easymock.tests.UsageThrowableTest.noUpperLimit":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":204,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests2.SerializationTest.test":12,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":478,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":393,"org.easymock.tests2.UsageConstraintsTest.testSame":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":286,"org.easymock.samples.SupportTest.addDocument":35,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":216,"org.easymock.tests.GenericTest.testPackageScope":272,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":145,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":268,"org.easymock.tests2.NameTest.nameForMock":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":297,"org.easymock.tests2.UsageStrictMockTest.differentMethods":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":255,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":427,"org.easymock.tests2.MockedExceptionTest.testRealException":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":466,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":410,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":326,"org.easymock.tests2.NameTest.nameForStrictMock":44,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":95,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":205,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":395,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":93,"org.easymock.tests2.UsageStrictMockTest.range":173,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":124,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":220,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":177,"org.easymock.tests.UsageTest.wrongArguments":380,"org.easymock.tests2.MockBuilderTest.testWithConstructor":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":217,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":298,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":397,"org.easymock.tests.UsageVarargTest.varargShortAccepted":334,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":406,"org.easymock.tests2.UsageConstraintsTest.cmpTo":61,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":316,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":94,"org.easymock.tests.UsageTest.unexpectedCallWithArray":379,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":438,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":404,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":299,"org.easymock.tests2.CaptureTest.testCapture":484,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":440,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":444,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":31,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":437,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":359,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":278,"org.easymock.tests.LimitationsTest.abstractClass":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":291,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":129,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":328}}]
