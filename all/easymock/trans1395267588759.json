[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[67],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[3,4,7,8,12,68,69,70,71,72,73,74,15],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[15,75,76,77],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[67,78],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[4,7,68,69,70,72,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[79,80,81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[82,83,84],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[85,86,87,88,89,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[67,78],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[15,75,76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[136,137,138],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:327","failures":[139,140,141,142],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[143,144],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[145,1,2,146,147,148,149,150,151,152,91,153,154,92,155,156,3,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,64,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,98,213,214,65,215,216,217,99,218,219,100,220,221,222,223,16,17,18,19,107,20,224,225,226,227,66,228,21,229,137,230,231,232,233,234,235,119,236,237,238,239,240,22,126,241,242,243,244,245,246,247,248,249,127,250,251,128,252,129,253,254,255,256,257,258,259,260,261,262,80,81,263,264,265,266,267,268,269,15,75,76,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,43,300,301,302,303,44,304,89,305,306,45,138,307,308,309,310,311,312,313,314,315,316,46,47,317,48,49,50,51,52,53,318,319,320,321,54,322,323,324,325,326,327,328,329,330,331,332,333,334,335,55,56,336,337,338,339,340,341,342,343,344,345,57,58,59,60,61,62,346,63,347,348,349,350,351,352,353,354,355,356,357,358,90,359,360,361,362,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[161,162,164,166,167,0,177,182,198,200,208],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[272,274,288,289,293,355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[145,1,2,146,147,148,149,150,151,152,91,153,154,92,155,156,3,94,95,96,97,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,64,175,176,177,178,179,181,182,183,184,185,186,187,188,189,191,192,193,194,198,199,200,201,203,204,205,206,207,208,211,212,213,214,65,215,217,99,219,220,221,223,16,17,18,19,107,224,225,227,66,229,231,233,234,235,119,236,237,239,240,22,126,241,242,243,244,245,246,247,248,249,127,250,251,128,252,129,253,254,255,256,257,258,259,260,261,262,80,81,264,265,268,269,15,75,76,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,366,367,301,368,302,303,304,309,310,311,312,313,314,316,317,48,318,319,321,54,322,323,324,325,326,328,329,330,331,332,369,333,334,335,336,337,338,339,340,341,342,343,344,345,57,58,59,60,61,62,346,63,347,370,371,348,349,350,351,355,356,358,359,362,363,372],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[15,75,76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[373,374],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[94,95,96,97,225,265,268,269,304,346,63,347,370,348,349,359,362,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[15,75,76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[225,265,268,269,366,367,304,346,63,347,359,362,363],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[375,376,377],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[378,379,380],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":162,"org.easymock.tests2.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":108,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":66,"org.easymock.tests2.StubTest.stubWithReturnValue":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":279,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":91,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":181,"org.easymock.tests2.SerializationTest.testAllMockedMethod":76,"org.easymock.tests2.DelegateToTest.testReturnException":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":58,"org.easymock.tests.MockingTest.testPartialClassMocking":290,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":13,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":86,"org.easymock.samples.SupportTest.voteForRemovals":156,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":105,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":101,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":77,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":23,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":79,"org.easymock.tests.UsageExpectAndThrowTest.object":33,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":234,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":178,"org.easymock.tests2.DelegateToTest.testWrongClass":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":68,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":355,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":356,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":334,"org.easymock.tests2.UsageTest.wrongArguments":226,"org.easymock.tests.UsageStrictMockTest.range":361,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":339,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":365,"org.easymock.tests2.UsageConstraintsTest.testNull":164,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":34,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":253,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":193,"org.easymock.tests2.CaptureTest.testPrimitive":201,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":336,"org.easymock.tests.UsageTest.moreThanOneArgument":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":42,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":338,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":295,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":87,"org.easymock.tests2.CaptureTest.testCaptureNone":206,"org.easymock.tests.UsageUnorderedTest.message":315,"org.easymock.tests.UsageVerifyTest.twoReturns":347,"org.easymock.tests.UsageVarargTest.varargByteAccepted":330,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests.UsageTest.argumentsOrdered":307,"org.easymock.tests.UsageVarargTest.varargIntAccepted":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":132,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":351,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":341,"org.easymock.tests2.CaptureTest.testCapture_2617107":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":73,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":367,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":112,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":192,"org.easymock.tests2.UsageConstraintsTest.any":169,"org.easymock.tests2.StubTest.stub":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":59,"org.easymock.tests.UsageExpectAndThrowTest.longType":26,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":375,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":83,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests.LimitationsTest.mockNativeMethod":333,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":289,"org.easymock.tests2.AnswerTest.answer":261,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":188,"org.easymock.tests2.CaptureTest.testAnd":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":116,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":99,"org.easymock.tests2.NameTest.nameForMocksControl":97,"org.easymock.tests2.MockedExceptionTest.testMockedException":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":250,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.DelegateToTest.testDelegate":239,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":27,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":194,"org.easymock.tests.MockingTest.testNicePartialClassMocking":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":38,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":215,"org.easymock.tests2.CaptureTest.testCaptureLast":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":246,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":314,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":179,"org.easymock.tests2.CaptureTest.testCapture1_2446744":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":137,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":183,"org.easymock.tests.UsageThrowableTest.throwError":47,"org.easymock.tests.UsageStrictMockTest.differentMethods":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":121,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":104,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":134,"org.easymock.tests2.MockBuilderTest.testCreateMockString":197,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests.UsageExpectAndThrowTest.floatType":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":130,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":64,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests.UsageVerifyTest.twoThrows":63,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":259,"org.easymock.samples.PartialClassMockTest.testGetArea":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":342,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests2.UsageTest.niceToStrict":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":131,"org.easymock.tests2.UsageConstraintsTest.testNotNull":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":53,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":191,"org.easymock.tests2.UsageTest.defaultResetToNice":229,"org.easymock.tests2.MockBuilderTest.testCreateMock":195,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":285,"org.easymock.tests.UsageVarargTest.differentLength":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":115,"org.easymock.tests2.CallbackTest.callback":235,"org.easymock.tests2.UsageConstraintsTest.equals":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":122,"org.easymock.tests.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":32,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":159,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":142,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":55,"org.easymock.tests.UsageCallCountTest.tooFewCalls":349,"org.easymock.tests.UsageOverloadedMethodTest.overloading":321,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":173,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":376,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":172,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":340,"org.easymock.tests.UsageThrowableTest.throwCheckedException":50,"org.easymock.tests2.EasyMockSupportClassTest.testAll":257,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":319,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureAll":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":245,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":46,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":120,"org.easymock.tests2.UsageConstraintsTest.testMatches":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":244,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":72,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":223,"org.easymock.tests2.NameTest.nameForNiceMock":96,"org.easymock.tests.UsageVarargTest.allKinds":332,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":346,"org.easymock.tests2.DependencyTest.testInterfaceMocking":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":313,"org.easymock.samples.BasicClassMockTest.testPrintContent":154,"org.easymock.samples.ExampleTest.addDocument":150,"org.easymock.tests2.DelegateToTest.testStubDelegate":237,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":52,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests2.AnswerTest.stubAnswer":80,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":109,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":359,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":74,"org.easymock.tests2.UsageConstraintsTest.greaterThan":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":368,"org.easymock.tests.UsageVarargTest.varargLongAccepted":329,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":100,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":363,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":288,"org.easymock.tests.UsageExpectAndReturnTest.floatType":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.UsageThrowableTest.noUpperLimit":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":111,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":176,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":309,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":203,"org.easymock.tests2.SerializationTest.test":75,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":249,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":271,"org.easymock.tests2.UsageConstraintsTest.testSame":165,"org.easymock.samples.SupportTest.addDocument":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":57,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":373,"org.easymock.tests2.CaptureTest.testCaptureFirst":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":277,"org.easymock.tests.GenericTest.testPackageScope":318,"org.easymock.tests2.UsageTest.moreThanOneArgument":225,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":222,"org.easymock.tests2.CaptureTest.testCapture2_2446744":210,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":196,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":110,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":331,"org.easymock.tests.GenericTest.testBridgedEquals":78,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":353,"org.easymock.tests2.NameTest.nameForMock":94,"org.easymock.tests.UsageExpectAndReturnTest.longType":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":310,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":41,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":144,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":180,"org.easymock.tests2.UsageStrictMockTest.differentMethods":268,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":274,"org.easymock.tests.UsageCallCountTest.tooManyCalls":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":303,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":348,"org.easymock.tests2.MockedExceptionTest.testRealException":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":12,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":241,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":371,"org.easymock.tests2.NameTest.nameForStrictMock":95,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":143,"org.easymock.tests2.UsageConstraintsTest.testContains":171,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":18,"org.easymock.tests2.UsageConstraintsTest.testFind":163,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":65,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":158,"org.easymock.tests.UsageExpectAndReturnTest.object":280,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":217,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":190,"org.easymock.tests2.UsageStrictMockTest.range":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":123,"org.easymock.tests2.UsageConstraintsTest.lessThan":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":129,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":106,"org.easymock.tests.UsageTest.exactCallCountByLastCall":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":316,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":71,"org.easymock.tests2.CaptureTest.testCaptureRightOne":208,"org.easymock.tests2.UsageConstraintsTest.testOr":166,"org.easymock.tests.UsageRangeTest.combination":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":322,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":98,"org.easymock.tests.UsageTest.wrongArguments":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":299,"org.easymock.tests2.MockBuilderTest.testWithConstructor":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":103,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":275,"org.easymock.tests2.EasyMockSupportTest.testVerify":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":283,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":82,"org.easymock.tests.UsageVarargTest.varargShortAccepted":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":141,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageConstraintsTest.cmpTo":170,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":378,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":255,"org.easymock.tests2.CaptureTest.testCaptureFromStub":209,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":133,"org.easymock.tests.UsageTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":30,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":350,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":284,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":360,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":218,"org.easymock.tests2.UsageConstraintsTest.constraints":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":29,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests.UsageStrictMockTest.testVerify":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":287,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":92,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":311,"org.easymock.tests2.UsageTest.resumeIfFailure":231,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":343,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":276,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":344,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":128}}]
