[{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[50,51,52,53,54,55,55,56,56,57,58,59,60,61,62,63,64,65,66,67,1,68,69,70,71,72,73,74,75,76,77,78,79,80,2,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,4,5,6,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,7,121,122,123,8,9,124,125,10,126,127,128,129,12,130,131,13,14,132,133,134,16,17,18,19,135,136,137,138,139,140,141,20,142,21,22,23,143,144,24,145,146,147,148,149,150,151,25,152,26,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,30,257,31,32,258,259,33,34,35,260,261,262,263,264,36,265,266,267,268,269,39,40,270,271,272,273,274,275,276,277,278,41,42,279,43,44,45,280,281,282,46,47,283,284,285,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[288,289,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[50,51,291,52,292,293,53,294,295,296,297,298,54,299,300,55,56,57,58,59,60,61,301,302,303,304,305,62,63,64,65,306,307,308,66,67,1,68,309,69,70,71,72,73,74,310,75,76,77,78,79,80,2,81,82,83,84,85,311,86,87,88,89,312,313,90,91,92,314,315,316,93,94,95,96,97,317,318,98,99,100,101,319,3,320,321,322,102,103,104,323,105,324,325,4,5,326,6,327,106,107,108,328,109,110,329,330,111,112,331,332,333,334,113,114,115,116,335,117,118,336,337,119,120,7,121,122,123,8,9,124,125,10,126,127,128,11,338,339,340,341,342,129,343,344,345,346,347,348,12,130,131,13,14,15,132,133,134,16,17,18,19,135,136,137,138,349,139,140,141,350,20,351,142,21,22,23,143,144,24,145,146,147,148,149,352,150,353,354,151,25,152,26,355,356,357,358,359,360,361,153,362,363,364,365,366,367,368,288,289,290,369,370,371,372,373,374,154,375,376,155,377,378,379,380,381,382,383,384,385,156,386,387,388,389,390,157,391,392,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,393,394,395,186,187,396,188,397,398,399,400,189,401,402,403,190,191,192,193,194,404,405,195,406,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,407,408,409,410,411,221,222,223,224,225,226,227,228,229,230,231,232,412,413,414,415,416,417,27,418,419,420,421,422,233,423,234,235,236,237,238,239,240,241,242,243,244,245,246,247,424,425,426,248,249,250,251,252,427,428,429,430,431,432,433,434,435,436,437,438,253,254,255,256,30,257,31,32,258,259,33,34,35,439,260,261,262,440,441,442,263,443,444,445,446,447,448,449,450,451,264,452,453,454,455,36,37,38,265,266,456,267,268,457,269,458,39,459,460,461,462,463,464,40,270,271,272,273,274,275,276,465,277,278,466,41,467,42,279,43,44,45,280,281,282,46,47,283,284,285,286,287,49,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[314,492,493,494,495,496,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[497],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[62,63,64,65,119,12,133,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,234,238,239,30,259,456,267,276,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[92,314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[498,499,500,501,31,42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[502,329,116,335,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[504],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[314,492,493,494,495,496,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[110,330,111,112,331,332,333,113,505,114,115,335],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[314,506,492,493,494,495,496,507,323,117],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[314,492,493,494,495,496,323,325,117],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[62,63,64,65,119,12,133,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,234,238,239,30,259,456,267,276,287],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[105,431],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[92,314,506,492,493,494,0,495,507,323,325,508,117],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[403],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[310],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[497],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[50,51,291,52,293,294,54,300,55,55,56,56,57,58,59,60,61,302,62,63,64,65,306,308,66,67,1,68,69,70,71,72,73,74,310,75,76,77,78,79,80,2,81,82,83,84,85,311,86,87,88,89,90,91,92,93,94,95,97,317,318,98,99,100,3,102,104,105,5,6,327,106,107,108,328,109,110,329,330,111,112,331,332,333,334,113,114,115,116,335,117,118,337,119,120,7,121,122,123,8,9,124,125,10,126,127,11,129,12,130,131,13,14,15,132,133,134,16,17,18,19,135,136,137,138,139,140,141,20,142,21,22,23,143,144,24,145,146,147,148,150,25,152,26,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,402,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,407,408,409,410,411,422,233,423,234,235,236,237,238,239,424,425,426,248,249,250,251,252,428,429,430,253,254,255,30,257,31,32,258,259,33,34,35,450,452,265,266,456,267,268,457,269,39,459,460,461,463,40,270,271,272,273,275,276,277,466,41,42,279,43,44,45,280,282,46,47,283,284,285,286,287,484,490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[314,492,493,494,495,496,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[317,99,100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[509,39],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":68,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":478,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":15,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":295,"org.easymock.tests2.DelegateToTest.testReturnException":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":159,"org.easymock.tests.MockingTest.testPartialClassMocking":186,"org.easymock.tests.MockClassControlTest.testToString":242,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":301,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":166,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":74,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":265,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":255,"org.easymock.samples.ExampleTest.answerVsDelegate":51,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":436,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":398,"org.easymock.tests2.UsageConstraintsTest.testNull":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":10,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":247,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":185,"org.easymock.tests.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":218,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":407,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageVarargTest.varargIntAccepted":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":347,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests.ReplayStateInvalidUsageTest.times":229,"org.easymock.tests2.DependencyTest.testClassMocking":312,"org.easymock.tests2.AnswerTest.answer":97,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":485,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":96,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":433,"org.easymock.tests2.CaptureTest.testAnd":110,"org.easymock.tests2.UsageTest.strictResetToDefault":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":181,"org.easymock.tests.LimitationsTest.mockFinalMethod":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":252,"org.easymock.tests2.DependencyTest.testClassMockingSupport":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":457,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":94,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":223,"org.easymock.tests.UsageThrowableTest.throwError":233,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":435,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":49,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":392,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.MockingTest.testInterfaceMocking":396,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":425,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":167,"org.easymock.tests2.UsageTest.niceToStrict":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.tests2.MockBuilderTest.testCreateMock":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":364,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":175,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":8,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":432,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":253,"org.easymock.tests.UsageOverloadedMethodTest.overloading":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":79,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":285,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":78,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":415,"org.easymock.tests2.EasyMockSupportClassTest.testAll":154,"org.easymock.tests.MockClassControlTest.testEquals":246,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":401,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":250,"org.easymock.tests2.CaptureTest.testCaptureAll":329,"org.easymock.tests.MockNameTest.defaultName":427,"org.easymock.tests2.UsageConstraintsTest.testMatches":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":219,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":221,"org.easymock.samples.ExampleTest.voteForRemovals":293,"org.easymock.tests.UsageVarargTest.allKinds":422,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":251,"org.easymock.samples.BasicClassMockTest.testPrintContent":298,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":238,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":163,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":448,"org.easymock.tests2.UsageConstraintsTest.greaterThan":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":449,"org.easymock.samples.ExampleTest.voteForRemoval":291,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":58,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":437,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":149,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":450,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":121,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":158,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":327,"org.easymock.tests2.CaptureTest.testCaptureFirst":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":122,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.UsageTest.moreThanOneArgument":131,"org.easymock.tests2.CaptureTest.testCapture2_2446744":116,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":486,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":5,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":421,"org.easymock.tests.GenericTest.testBridgedEquals":403,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":37,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":466,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":216,"org.easymock.tests.UsageCallCountTest.tooManyCalls":38,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":237,"org.easymock.tests.MockingTest.testNiceClassMocking":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testClassMocking":394,"org.easymock.tests2.UsageConstraintsTest.testContains":77,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":264,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":69,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":287,"org.easymock.tests.MockTypeTest.fromEasyMockClass":434,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":308,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":365,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":504,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":417,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":262,"org.easymock.tests.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":314,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":275,"org.easymock.tests.MockClassControlTest.testHashCode":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":383,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":409,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":273,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":93,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":316,"org.easymock.tests.UsageVarargTest.varargCharAccepted":416,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":442,"org.easymock.tests2.CaptureTest.testCaptureMultiple":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":491,"org.easymock.tests2.UsageTest.openCallCountByLastCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.DefaultClassInstantiatorTest.object":263,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":459,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":260,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":172,"org.easymock.tests.CapturesMatcherTest.test":503,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":243,"org.easymock.tests2.UsageTest.resumeIfFailure":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":161,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":323,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":336,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":484,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":300,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":178,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":490,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":317,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":464,"org.easymock.tests.UsageExpectAndThrowTest.object":176,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":84,"org.easymock.tests2.DelegateToTest.testWrongClass":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":284,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":104,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":426,"org.easymock.tests2.CaptureTest.testCaptureNone":334,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":48,"org.easymock.tests.UsageVerifyTest.twoReturns":47,"org.easymock.tests.UsageVarargTest.varargByteAccepted":420,"org.easymock.tests2.ThreadingTest.testThreadSafe":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":386,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":455,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":440,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":297,"org.easymock.tests2.CaptureTest.testCapture_2617107":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":267,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":228,"org.easymock.tests2.StubTest.stub":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndThrowTest.longType":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":160,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":446,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":227,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.SerializationTest.testClass":117,"org.easymock.tests.LimitationsTest.mockNativeMethod":195,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":359,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests2.NameTest.nameForMocksControl":305,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":376,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":259,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":170,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":307,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":187,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":506,"org.easymock.tests2.CaptureTest.testCaptureLast":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":357,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":269,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":85,"org.easymock.tests.MockingTest.testTwoMocks":395,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.samples.ExampleTest.removeNonExistingDocument":53,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":444,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":59,"org.easymock.tests2.MockBuilderTest.testCreateMockString":6,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":240,"org.easymock.tests.UsageExpectAndThrowTest.floatType":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":98,"org.easymock.tests.UsageVerifyTest.twoThrows":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":315,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.ExampleTest.voteAgainstRemoval":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":424,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":152,"org.easymock.tests.LimitationsTest.privateConstructor":405,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":239,"org.easymock.tests2.UsageTest.defaultResetToNice":134,"org.easymock.samples.ExampleTest.voteAgainstRemovals":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests.UsageVarargTest.differentLength":27,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":358,"org.easymock.tests2.CallbackTest.callback":11,"org.easymock.tests2.UsageConstraintsTest.equals":309,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":258,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":456,"org.easymock.tests.UsageCallCountTest.tooFewCalls":453,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":256,"org.easymock.tests.UsageThrowableTest.throwCheckedException":236,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":393,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":165,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":362,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":100,"org.easymock.tests.ObjectMethodsTest.testHashCode":261,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":497,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":495,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":61,"org.easymock.tests2.NameTest.nameForNiceMock":304,"org.easymock.tests2.DependencyTest.testInterfaceMocking":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":494,"org.easymock.samples.ExampleTest.addDocument":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.DelegateToTest.testStubDelegate":107,"org.easymock.tests2.AnswerTest.stubAnswer":99,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":279,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":324,"org.easymock.tests.UsageVarargTest.varargLongAccepted":419,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":56,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests.UsageThrowableTest.noUpperLimit":423,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":67,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":368,"org.easymock.tests2.SerializationTest.test":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":331,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testSame":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":299,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":349,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":378,"org.easymock.tests.GenericTest.testPackageScope":189,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":345,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":397,"org.easymock.tests2.NameTest.nameForMock":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":180,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":481,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":266,"org.easymock.tests2.NameTest.nameForStrictMock":303,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":306,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":147,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":509,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":445,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":3,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":0,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":382,"org.easymock.tests2.UsageConstraintsTest.testOr":72,"org.easymock.tests.UsageRangeTest.combination":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.UsageTest.wrongArguments":32,"org.easymock.tests2.MockBuilderTest.testWithConstructor":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":379,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":447,"org.easymock.tests.UsageVarargTest.varargShortAccepted":418,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":36,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":222,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":320,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests2.CaptureTest.testCapture":505,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.samples.ExampleTest.addAndChangeDocument":294,"org.easymock.tests.UsageStrictMockTest.testVerify":281,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":467,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":249,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.LimitationsTest.abstractClass":404,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":9}}]
