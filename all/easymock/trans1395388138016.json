[{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[0,1,2],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[15,16,17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[40,41,42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[43,44,45,46,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,3,4,5,68,6,45,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,46,7,102,103,8,9,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,10,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,11,225,226,227,228,229,230,231,232,233,234,235,236,12,237,238,13,14,239,240,241,242,243,244,245,246,247,248,249,250,251,40,41,42,15,252,253,16,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,20,21,22,23,24,25,26,27,29,0,270,271,272,273,274,275,276,30,31,277,278,279,32,33,280,281,282,283,284,285,286,17,1,287,288,289,290,291,292,34,35,36,37,293,294,295,296,297,298,38,39,299,300,301,302,303,304,19,305,306,307],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[308,159,160,309,310],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[311,311,312,312,313,314,315,316,317,318,77,78,79,133,159,160,309,184,189,239,40,42,319,320,321,322,15,323,252,324,253,16,325,326,254,255,327,256,258,259,260,328,261,262,281,282,284,285,286,17,1,288,289,290,291,329,330,331,306],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[75,116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[332,313,49,50,51,52,54,56,57,58,59,60,61,63,64,65,66,67,4,72,73,333,100,101,7,102,103,8,9,105,107,108,109,110,111,138,140,141,142,143,144,153,155,158,162,185,186,187,200,201,203,204,205,206,207,213,219,220,334,335,336,337,338,339,340,341,342,222,224,226,227,231,232,235,236,12,237,238,13,14,246,253,255,268,269,21,22,23,24,25,26,27,29,270,271,272,273,274,275,276,30,31,277,278,279,32,33,280,282,285,290,35,36,37,293,294,295,296,297,298,38,299,300,302,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[271],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[252,255,289,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[268,20,275,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[343,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests2.UsageTest.argumentsOrdered":232,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":137,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":227,"org.easymock.tests2.StubTest.stubWithReturnValue":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":89,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests2.DelegateToTest.testReturnException":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":135,"org.easymock.tests.MockingTest.testPartialClassMocking":77,"org.easymock.samples.SupportTest.voteForRemovals":332,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":48,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":308,"org.easymock.tests.MockClassControlTest.testToString":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":176,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":164,"org.easymock.tests.UsageExpectAndThrowTest.object":174,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":31,"org.easymock.tests2.DelegateToTest.testWrongClass":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":27,"org.easymock.tests2.UsageTest.wrongArguments":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":107,"org.easymock.samples.ConstructorCalledMockTest.testTax":311,"org.easymock.tests.UsageStrictMockTest.range":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":126,"org.easymock.samples.ExampleTest.answerVsDelegate":50,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":258,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":175,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":340,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":325,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":195,"org.easymock.tests2.CaptureTest.testPrimitive":37,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":111,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":183,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":43,"org.easymock.tests2.CaptureTest.testCaptureNone":297,"org.easymock.tests.UsageUnorderedTest.message":187,"org.easymock.tests.UsageVerifyTest.twoReturns":5,"org.easymock.tests.UsageVarargTest.varargByteAccepted":65,"org.easymock.tests2.ThreadingTest.testThreadSafe":263,"org.easymock.tests.UsageTest.argumentsOrdered":73,"org.easymock.tests.UsageVarargTest.varargIntAccepted":59,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":155,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":314,"org.easymock.tests2.CaptureTest.testCapture_2617107":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":110,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":16,"org.easymock.tests2.UsageConstraintsTest.any":29,"org.easymock.tests2.StubTest.stub":219,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":119,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":136,"org.easymock.tests.UsageExpectAndThrowTest.longType":167,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":118,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests.ReplayStateInvalidUsageTest.times":120,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":309,"org.easymock.tests2.AnswerTest.answer":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":251,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":331,"org.easymock.tests2.CaptureTest.testAnd":34,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":288,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":14,"org.easymock.tests2.NameTest.nameForMocksControl":243,"org.easymock.tests2.MockedExceptionTest.testMockedException":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":215,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.DelegateToTest.testDelegate":304,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":168,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":281,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":326,"org.easymock.tests.MockingTest.testNicePartialClassMocking":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":179,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":286,"org.easymock.tests2.CaptureTest.testCaptureLast":296,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":75,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":262,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":149,"org.easymock.tests.MockingTest.testTwoMocks":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":333,"org.easymock.tests2.CaptureTest.testCapture1_2446744":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":172,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.tests.UsageThrowableTest.throwError":200,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":114,"org.easymock.samples.ExampleTest.removeNonExistingDocument":55,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":116,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":265,"org.easymock.tests2.MockBuilderTest.testCreateMockString":256,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":212,"org.easymock.tests.UsageExpectAndThrowTest.floatType":166,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":274,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":245,"org.easymock.tests.UsageVerifyTest.twoThrows":4,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":321,"org.easymock.samples.PartialClassMockTest.testGetArea":313,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":141,"org.easymock.samples.ExampleTest.voteAgainstRemoval":52,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":290,"org.easymock.tests2.UsageTest.niceToStrict":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":165,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":207,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":19,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":253,"org.easymock.tests2.MockBuilderTest.testCreateMock":254,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests.UsageVarargTest.differentLength":62,"org.easymock.tests2.CallbackTest.callback":222,"org.easymock.tests.UsageTest.openCallCountByLastCall":70,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":173,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":338,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":124,"org.easymock.tests.UsageCallCountTest.tooFewCalls":153,"org.easymock.tests.UsageOverloadedMethodTest.overloading":162,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":272,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":91,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":271,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":127,"org.easymock.tests.UsageThrowableTest.throwCheckedException":204,"org.easymock.tests2.EasyMockSupportClassTest.testAll":319,"org.easymock.tests.MockClassControlTest.testEquals":194,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":160,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":44,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":181,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":250,"org.easymock.tests2.CaptureTest.testCaptureAll":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":147,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":261,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.testMatches":273,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":121,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":211,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":112,"org.easymock.tests.ObjectMethodsTest.testHashCode":198,"org.easymock.samples.ExampleTest.voteForRemovals":54,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":267,"org.easymock.tests2.NameTest.nameForNiceMock":242,"org.easymock.tests.UsageVarargTest.allKinds":67,"org.easymock.tests2.DependencyTest.testInterfaceMocking":221,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":3,"org.easymock.samples.BasicClassMockTest.testPrintContent":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":148,"org.easymock.samples.ExampleTest.addDocument":53,"org.easymock.tests2.DelegateToTest.testStubDelegate":302,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":206,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests2.AnswerTest.stubAnswer":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":139,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":214,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":291,"org.easymock.tests.UsageVarargTest.varargLongAccepted":64,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":9,"org.easymock.samples.ExampleTest.voteForRemoval":51,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":292,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":264,"org.easymock.tests.UsageExpectAndReturnTest.floatType":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":312,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":276,"org.easymock.tests.UsageThrowableTest.noUpperLimit":201,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":269,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":133,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":294,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":81,"org.easymock.tests2.UsageConstraintsTest.testSame":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":134,"org.easymock.tests2.CaptureTest.testCaptureFirst":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":337,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":117,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":87,"org.easymock.tests.GenericTest.testPackageScope":159,"org.easymock.tests2.CaptureTest.testCapture2_2446744":299,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":266,"org.easymock.tests2.UsageTest.moreThanOneArgument":11,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":255,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":66,"org.easymock.tests.GenericTest.testBridgedEquals":310,"org.easymock.tests2.NameTest.nameForMock":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":157,"org.easymock.tests.UsageExpectAndReturnTest.longType":83,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":145,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":182,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":278,"org.easymock.tests2.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":84,"org.easymock.tests.UsageCallCountTest.tooManyCalls":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":216,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":152,"org.easymock.tests2.MockedExceptionTest.testRealException":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":88,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":169,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":123,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":259,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":323,"org.easymock.tests2.UsageConstraintsTest.testContains":270,"org.easymock.tests2.NameTest.nameForStrictMock":241,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":151,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":306,"org.easymock.tests2.UsageConstraintsTest.testFind":22,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":285,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":218,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests.UsageExpectAndReturnTest.object":90,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":1,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":252,"org.easymock.tests2.UsageStrictMockTest.range":238,"org.easymock.tests2.UsageConstraintsTest.lessThan":280,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":61,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":199,"org.easymock.tests.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":38,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":282,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.UsageTest.wrongArguments":69,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":130,"org.easymock.tests.MockClassControlTest.testHashCode":193,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":93,"org.easymock.tests.UsageVarargTest.varargShortAccepted":63,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":156,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":257,"org.easymock.tests2.UsageConstraintsTest.cmpTo":0,"org.easymock.tests.UsageVarargTest.varargCharAccepted":60,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":342,"org.easymock.tests.DefaultClassInstantiatorTest.object":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":343,"org.easymock.tests2.CaptureTest.testCaptureFromStub":39,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":113,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":324,"org.easymock.tests.UsageTest.unexpectedCallWithArray":45,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":203,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":154,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":289,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":192,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.samples.ExampleTest.addAndChangeDocument":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.UsageStrictMockTest.testVerify":104,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":101,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":146,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":295,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":86,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":339,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":58}}]
