[{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[3,4,6,8,9,11,36,37,38,39,40,41,42,43,44,47,48,50,51,52,54,55,56,57,58,61,63,64,67,78,79,80,81,82,114,115,116,249,250,251,252,128,253,129,130,147,148,163,165,166,168,175,176,177,178,254,179,180,181,255,182,183,184,185,186,187,188,192,221,222,223,224,225,226,227,256,228,257,245],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:142","sourceCode":"final java.lang.Long java.lang.Long = org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializableUID(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[258,259,260],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1205","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[259],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[261,179,256,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:36","sourceCode":"return (java.lang.Object != null) && (java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))","type":"CtReturnImpl"},"failures":[196,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[1,262,262,263,263,2,3,4,5,6,7,8,9,10,11,264,12,13,14,15,16,17,18,19,265,20,21,22,23,24,25,26,27,28,29,266,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,267,59,60,61,62,63,64,65,268,66,269,67,68,69,70,71,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,72,73,74,75,286,76,287,288,289,290,77,291,78,79,80,81,82,292,293,294,295,296,297,298,83,84,85,86,299,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,300,301,302,303,304,305,306,307,308,309,310,311,118,119,120,121,122,123,124,125,249,250,251,252,312,128,253,129,130,131,132,133,134,135,136,137,138,139,140,141,313,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,314,158,159,160,161,315,162,163,164,165,166,167,168,316,317,318,319,169,170,171,320,321,322,323,324,172,173,174,175,176,177,178,325,254,179,326,180,181,327,255,328,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,329,227,330,256,228,257,229,230,231,232,233,234,235,236,237,238,239,240,331,241,242,243,244,245,246,247,332,333,248,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[118,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[1,2,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,265,20,21,22,23,24,335,30,33,34,267,59,60,61,62,63,64,65,268,69,70,76,297,83,84,85,86,87,88,90,117,336,119,126,127,131,132,133,138,143,144,145,146,149,153,155,158,159,315,162,163,164,165,166,167,316,317,318,319,170,174,254,179,255,337,204,216,217,231,232,235,236,237,238,242,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[338,339],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,264,13,14,15,16,17,18,19,20,21,22,23,24,26,27,266,30,33,34,35,340,36,37,38,41,42,44,49,54,59,60,62,65,268,70,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,72,73,74,75,286,76,292,293,294,295,296,298,85,86,299,87,88,89,90,91,92,96,97,99,104,109,114,300,301,302,303,304,305,306,307,308,309,310,311,118,119,120,121,122,123,124,125,135,136,137,138,139,140,141,313,142,143,144,145,146,147,148,150,151,153,154,155,314,158,159,161,162,164,167,168,169,170,321,322,323,324,172,173,174,175,176,177,178,325,179,326,180,181,327,328,182,183,184,185,186,187,188,192,193,197,202,203,204,205,207,210,213,214,215,216,217,221,222,223,224,225,226,329,227,330,228,229,230,231,232,233,235,236,237,238,239,240,242,243,244,246,332,333,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[118,121],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":197,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":290,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":155,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":217,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":48,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":5,"org.easymock.tests2.SerializationTest.testAllMockedMethod":174,"org.easymock.tests2.DelegateToTest.testReturnException":244,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":288,"org.easymock.tests.MockingTest.testPartialClassMocking":36,"org.easymock.samples.SupportTest.voteForRemovals":3,"org.easymock.tests.MockClassControlTest.testToString":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":94,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":176,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":338,"org.easymock.tests.UsageExpectAndThrowTest.object":104,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":148,"org.easymock.tests2.DelegateToTest.testWrongClass":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":116,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageTest.wrongArguments":153,"org.easymock.samples.ConstructorCalledMockTest.testTax":262,"org.easymock.tests.UsageStrictMockTest.range":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":284,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":182,"org.easymock.tests2.UsageConstraintsTest.testNull":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":307,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":180,"org.easymock.tests2.CaptureTest.testPrimitive":233,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":280,"org.easymock.tests.UsageTest.moreThanOneArgument":29,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":283,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests2.CaptureTest.testCaptureNone":238,"org.easymock.tests.UsageUnorderedTest.message":117,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":22,"org.easymock.tests2.ThreadingTest.testThreadSafe":189,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageVarargTest.varargIntAccepted":17,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":86,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests2.CaptureTest.testCapture_2617107":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":78,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":326,"org.easymock.tests2.UsageConstraintsTest.any":204,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":277,"org.easymock.tests2.StubTest.stub":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":289,"org.easymock.tests.UsageExpectAndThrowTest.longType":97,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":258,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":276,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":229,"org.easymock.tests2.SerializationTest.testClass":172,"org.easymock.tests.ReplayStateInvalidUsageTest.times":278,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests.LimitationsTest.mockNativeMethod":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":58,"org.easymock.tests2.AnswerTest.answer":169,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":324,"org.easymock.tests2.CaptureTest.testAnd":230,"org.easymock.tests2.UsageTest.strictResetToDefault":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests2.NameTest.nameForMocksControl":319,"org.easymock.tests2.MockedExceptionTest.testMockedException":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests2.DelegateToTest.testDelegate":247,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":98,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":221,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":181,"org.easymock.tests.MockingTest.testNicePartialClassMocking":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":109,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":226,"org.easymock.tests2.CaptureTest.testCaptureLast":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":77,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":340,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":296,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":215,"org.easymock.tests2.CaptureTest.testCapture1_2446744":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":102,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":219,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":272,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.samples.ExampleTest.removeNonExistingDocument":264,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":274,"org.easymock.tests.UsageStrictMockTest.differentMethods":64,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":191,"org.easymock.tests2.MockBuilderTest.testCreateMockString":328,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":312,"org.easymock.tests.UsageExpectAndThrowTest.floatType":96,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":210,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":170,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":177,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":79,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":95,"org.easymock.tests2.UsageTest.niceToStrict":154,"org.easymock.tests2.UsageConstraintsTest.testNotNull":218,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":125,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":327,"org.easymock.tests2.UsageTest.defaultResetToNice":314,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":54,"org.easymock.tests.UsageVarargTest.differentLength":265,"org.easymock.tests2.CallbackTest.callback":149,"org.easymock.tests.UsageTest.openCallCountByLastCall":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":103,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":194,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":69,"org.easymock.tests.UsageCallCountTest.tooFewCalls":84,"org.easymock.tests.UsageOverloadedMethodTest.overloading":92,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":208,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":74,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":50,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":207,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":285,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests.MockClassControlTest.testEquals":306,"org.easymock.tests2.EasyMockSupportClassTest.testAll":175,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureAll":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":269,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":184,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":279,"org.easymock.tests2.UsageConstraintsTest.testMatches":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":320,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.tests.ObjectMethodsTest.testHashCode":310,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests2.NameTest.nameForNiceMock":318,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":193,"org.easymock.tests.UsageVarargTest.allKinds":24,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.tests2.DependencyTest.testInterfaceMocking":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":295,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testStubDelegate":245,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":124,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests2.AnswerTest.stubAnswer":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":291,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":61,"org.easymock.tests2.UsageConstraintsTest.greaterThan":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":257,"org.easymock.tests.UsageVarargTest.varargLongAccepted":21,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":57,"org.easymock.tests.UsageExpectAndReturnTest.floatType":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":168,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":263,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":212,"org.easymock.tests.UsageThrowableTest.noUpperLimit":119,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":195,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":235,"org.easymock.tests2.SerializationTest.test":173,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests2.UsageConstraintsTest.testSame":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":40,"org.easymock.samples.SupportTest.addDocument":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":287,"org.easymock.tests2.CaptureTest.testCaptureFirst":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":46,"org.easymock.tests.GenericTest.testPackageScope":89,"org.easymock.tests2.CaptureTest.testCapture2_2446744":241,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":255,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":23,"org.easymock.tests2.NameTest.nameForMock":316,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":292,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":112,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":335,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":110,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":43,"org.easymock.tests.UsageCallCountTest.tooManyCalls":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":108,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":130,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":83,"org.easymock.tests2.MockedExceptionTest.testRealException":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":99,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":163,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":183,"org.easymock.tests2.NameTest.nameForStrictMock":317,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":298,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":261,"org.easymock.tests2.UsageConstraintsTest.testContains":206,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":248,"org.easymock.tests2.UsageConstraintsTest.testFind":198,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":93,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":225,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":267,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.UsageExpectAndReturnTest.object":49,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":254,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":142,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":19,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":311,"org.easymock.tests.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":66,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests2.CaptureTest.testCaptureRightOne":240,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":126,"org.easymock.tests2.UsageConstraintsTest.testOr":201,"org.easymock.tests.UsageRangeTest.combination":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":15,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":73,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests.MockClassControlTest.testHashCode":305,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":44,"org.easymock.tests2.EasyMockSupportTest.testVerify":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":52,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":72,"org.easymock.tests.UsageVarargTest.varargShortAccepted":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":321,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":299,"org.easymock.tests2.UsageConstraintsTest.cmpTo":205,"org.easymock.tests.UsageVarargTest.varargCharAccepted":18,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":339,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests2.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests.DefaultClassInstantiatorTest.object":308,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":145,"org.easymock.tests2.CaptureTest.testCaptureFromStub":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":271,"org.easymock.tests.UsageTest.unexpectedCallWithArray":266,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":101,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":53,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":304,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":256,"org.easymock.tests2.UsageConstraintsTest.constraints":196,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":62,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":100,"org.easymock.tests.UsageStrictMockTest.testVerify":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":56,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":303,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":236,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":81,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":141}}]
