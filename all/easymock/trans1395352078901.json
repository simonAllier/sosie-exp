[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,1,2,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[4,5,6,0,86,7,8,9,10,87,88,89,90,91,11,12,13,14,92,15,16,93,94,95,96,97,98,17,18,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,19,20,142,21,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,22,1,2,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,23,189,190,24,25,26,191,192,193,27,194,195,196,197,198,199,28,200,201,202,203,204,205,29,30,206,31,32,207,33,34,208,209,210,35,36,37,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,38,234,39,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,40,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,41,42,311,312,43,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,44,45,46,47,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,48,49,368,369,50,51,370,371,372,373,374,375,376,377,378,379,380,381,382,383,52,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,53,414,415,416,417,418,419,420,54,55,421,422,56,423,57,58,59,60,424,61,62,63,64,425,65,66,67,68,426,427,428,429,430,431,432,433,434,435,436,437,438,69,70,439,440,71,441,72,73,74,75,442,76,77,78,79,443,80,81,82,83,444,84,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,85,464,465,466,467,468,469,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[145,146,148,151,152,155,212,213,215,218,219,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"matched"}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:181","sourceCode":"java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class })","type":"CtAssignmentImpl"},"failures":[54],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[472],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[473,474,475,476,308,368],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[4,5,7,8,9,10,11,13,14,15,16,93,98,17,18,140,143,210,288,309,334,335,338,377,378,379,380,381,409,410,411,412,413,426,427,469,469,470,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[165,190],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[21,277,278,337,354,361,363],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[92,19,189,192,193,479,480,298,308,41,313,314,368,369,370,371,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[354],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[147,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.UsageTest.argumentsOrdered":193,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":349,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":24,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":468,"org.easymock.tests2.DelegateToTest.testReturnException":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":300,"org.easymock.tests.MockingTest.testPartialClassMocking":324,"org.easymock.tests.MockClassControlTest.testToString":265,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":252,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":69,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":106,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":334,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":375,"org.easymock.samples.ExampleTest.answerVsDelegate":458,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":394,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":169,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":270,"org.easymock.tests2.CaptureTest.testPrimitive":206,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":338,"org.easymock.tests.UsageTest.moreThanOneArgument":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":83,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":379,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":434,"org.easymock.tests.UsageTest.argumentsOrdered":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":409,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":154,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":413,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests.ReplayStateInvalidUsageTest.times":283,"org.easymock.tests2.DependencyTest.testClassMocking":103,"org.easymock.tests2.AnswerTest.answer":132,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":233,"org.easymock.tests2.CaptureTest.testAnd":205,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":46,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":438,"org.easymock.tests2.DelegateToTest.testDelegate":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":443,"org.easymock.tests.LimitationsTest.mockFinalMethod":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":367,"org.easymock.tests2.DependencyTest.testClassMockingSupport":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":428,"org.easymock.tests2.CaptureTest.testCapture1_2446744":31,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":231,"org.easymock.tests.UsageThrowableTest.throwError":444,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":277,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":131,"org.easymock.samples.PartialClassMockTest.testGetArea":471,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":278,"org.easymock.tests.MockingTest.testInterfaceMocking":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":316,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":70,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":126,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":219,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":473,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":75,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":373,"org.easymock.tests.UsageOverloadedMethodTest.overloading":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":13,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":61,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":12,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":208,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.MockClassControlTest.testEquals":269,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":453,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":81,"org.easymock.tests2.CaptureTest.testCaptureAll":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests.MockNameTest.defaultName":287,"org.easymock.tests2.UsageConstraintsTest.testMatches":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":380,"org.easymock.samples.ExampleTest.voteForRemovals":462,"org.easymock.tests.UsageVarargTest.allKinds":408,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":43,"org.easymock.samples.BasicClassMockTest.testPrintContent":467,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":449,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":151,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":304,"org.easymock.tests2.UsageConstraintsTest.greaterThan":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":111,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":45,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":249,"org.easymock.samples.ExampleTest.voteForRemoval":459,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":420,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":1,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":250,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":241,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":305,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":299,"org.easymock.tests2.CaptureTest.testCaptureFirst":36,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":163,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":58,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":173,"org.easymock.tests2.CaptureTest.testCapture2_2446744":35,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":357,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":407,"org.easymock.tests.GenericTest.testBridgedEquals":455,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":388,"org.easymock.tests.UsageExpectAndReturnTest.longType":422,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":82,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":80,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":377,"org.easymock.tests.UsageCallCountTest.tooManyCalls":389,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":441,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":448,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":224,"org.easymock.tests.MockingTest.testNiceClassMocking":330,"org.easymock.tests.MockingTest.testClassMocking":322,"org.easymock.tests2.UsageConstraintsTest.testContains":11,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":383,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":158,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":40,"org.easymock.tests.MockTypeTest.fromEasyMockClass":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":39,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":306,"org.easymock.tests.UsageExpectAndReturnTest.object":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":168,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":402,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":260,"org.easymock.tests.UsageTest.exactCallCountByLastCall":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":435,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":204,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":65,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":145,"org.easymock.tests.MockClassControlTest.testHashCode":268,"org.easymock.tests2.EasyMockSupportTest.testVerify":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":120,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":436,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":230,"org.easymock.tests.UsageVarargTest.varargCharAccepted":401,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":362,"org.easymock.tests2.UsageTest.openCallCountByLastCall":25,"org.easymock.tests.DefaultClassInstantiatorTest.object":414,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":318,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":258,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":214,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":144,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":247,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":267,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":72,"org.easymock.tests.CapturesMatcherTest.test":472,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":66,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":129,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":266,"org.easymock.tests2.UsageTest.resumeIfFailure":27,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":302,"org.easymock.tests2.StubTest.stubWithReturnValue":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":60,"org.easymock.tests2.SerializationTest.testAllMockedMethod":202,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":355,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":474,"org.easymock.samples.SupportTest.voteForRemovals":465,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":451,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":77,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":361,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":133,"org.easymock.tests.UsageExpectAndThrowTest.object":442,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":333,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":94,"org.easymock.tests2.DelegateToTest.testWrongClass":198,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":426,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":427,"org.easymock.samples.ConstructorCalledMockTest.testTax":469,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":101,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":107,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":285,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":374,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":475,"org.easymock.tests2.CaptureTest.testCaptureNone":34,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":317,"org.easymock.tests.UsageUnorderedTest.message":53,"org.easymock.tests.UsageVerifyTest.twoReturns":314,"org.easymock.tests.UsageVarargTest.varargByteAccepted":406,"org.easymock.tests2.ThreadingTest.testThreadSafe":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":124,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":386,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":466,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":30,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":359,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests2.StubTest.stub":21,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":433,"org.easymock.tests.UsageExpectAndThrowTest.longType":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":360,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":418,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":281,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests2.SerializationTest.testClass":200,"org.easymock.tests.LimitationsTest.mockNativeMethod":273,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":68,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":213,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":256,"org.easymock.tests2.MockedExceptionTest.testMockedException":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":112,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":71,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":234,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":327,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":235,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":182,"org.easymock.tests.MockingTest.testNicePartialClassMocking":325,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":240,"org.easymock.tests2.CaptureTest.testCaptureLast":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":429,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":229,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":95,"org.easymock.tests.MockingTest.testTwoMocks":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":74,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":17,"org.easymock.samples.ExampleTest.removeNonExistingDocument":463,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":218,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":279,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":146,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":478,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":416,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":2,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":263,"org.easymock.tests.UsageExpectAndThrowTest.floatType":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":114,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":109,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":135,"org.easymock.tests.UsageVerifyTest.twoThrows":313,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":123,"org.easymock.samples.ExampleTest.voteAgainstRemoval":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":248,"org.easymock.tests.LimitationsTest.privateConstructor":272,"org.easymock.tests2.UsageConstraintsTest.testNotNull":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":450,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":156,"org.easymock.tests2.UsageTest.defaultResetToNice":191,"org.easymock.samples.ExampleTest.voteAgainstRemovals":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":351,"org.easymock.tests.UsageVarargTest.differentLength":403,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":212,"org.easymock.tests2.CallbackTest.callback":37,"org.easymock.tests2.UsageConstraintsTest.equals":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":244,"org.easymock.tests.UsageTest.openCallCountByLastCall":50,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":336,"org.easymock.tests.UsageCallCountTest.tooFewCalls":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":376,"org.easymock.tests.UsageThrowableTest.throwCheckedException":447,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":476,"org.easymock.tests.MockingTest.testStrictClassMocking":321,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":228,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":225,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":227,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":137,"org.easymock.tests.ObjectMethodsTest.testHashCode":259,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":174,"org.easymock.tests2.NameTest.nameForNiceMock":255,"org.easymock.tests2.DependencyTest.testInterfaceMocking":105,"org.easymock.samples.ExampleTest.addDocument":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":130,"org.easymock.tests2.DelegateToTest.testStubDelegate":197,"org.easymock.tests2.AnswerTest.stubAnswer":136,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":309,"org.easymock.tests.UsageVarargTest.varargLongAccepted":405,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":348,"org.easymock.tests.UsageExpectAndReturnTest.floatType":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":203,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":470,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":153,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":16,"org.easymock.tests.UsageThrowableTest.noUpperLimit":84,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":296,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":5,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":99,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":32,"org.easymock.tests2.SerializationTest.test":201,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":415,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":55,"org.easymock.samples.SupportTest.addDocument":464,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":115,"org.easymock.tests.GenericTest.testPackageScope":452,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":152,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":328,"org.easymock.tests2.NameTest.nameForMock":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":62,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":79,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":47,"org.easymock.tests2.MockedExceptionTest.testRealException":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":479,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":352,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":335,"org.easymock.tests2.NameTest.nameForStrictMock":254,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":100,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":417,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":176,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":119,"org.easymock.tests2.CaptureTest.testCaptureRightOne":209,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":477,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":236,"org.easymock.tests.UsageTest.wrongArguments":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":116,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":340,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":419,"org.easymock.tests.UsageVarargTest.varargShortAccepted":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":387,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":134,"org.easymock.tests2.CompareToTest.testLessThan":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":342,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":26,"org.easymock.tests2.CaptureTest.testCaptureFromStub":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":276,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":177,"org.easymock.tests.UsageTest.unexpectedCallWithArray":368,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":308,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":64,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageStrictMockTest.testVerify":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":456,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":57,"org.easymock.tests.LimitationsTest.abstractClass":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":412,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166}}]
