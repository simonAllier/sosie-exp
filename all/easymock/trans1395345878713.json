[{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[10,1,11,12,13,14,15,16,17,18,19,20,21,22,23,2,3,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,4,6,72,7,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,8,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,9,246,247],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[81,82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[10,1,11,12,13,14,15,249,250,16,251,17,18,19,20,21,22,23,2,3,252,24,25,26,27,28,29,253,254,255,256,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,4,6,72,7,73,74,75,76,77,78,257,79,258,259,260,261,262,80,81,82,83,84,85,86,87,88,89,90,91,263,92,93,94,95,96,264,265,266,267,268,269,270,271,272,97,98,99,273,100,101,102,103,274,104,275,105,106,107,108,109,110,111,112,276,277,113,114,278,279,280,115,116,117,281,282,283,118,119,120,121,8,122,123,284,285,286,287,124,125,127,128,129,130,131,288,132,289,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,290,291,292,172,173,174,177,178,179,180,181,293,182,183,186,187,294,295,188,189,190,296,191,192,193,194,195,196,297,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,298,299,300,301,302,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,9,246,247,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[304,305,306,307,308,309,310,311,312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[313,314,315,316,317],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[318],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[262,319,320,321,280,322,323,324,318,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[262,319,326,320,321,327,328,280,329,322,323,324,318,330,331,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[40,45,57,332],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[252,25,26,27,28,29,30,333,33,47,74,258,261,334,86,88,90,91,92,93,264,265,335,268,269,270,271,272,97,99,273,100,101,104,275,105,106,111,336,276,277,278,279,337,338,339,340,8,288,289,133,134,135,136,137,164,167,168,169,341,342,343,344,345,346,347,348,349,350,351,352,178,179,293,182,183,353,354,355,186,187,294,295,190,296,191,297,356,235,357,358,359,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[360],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[249,250,262,319,361,362,320,321,363,364,365,366,277,279,367,280,368,369,370,117,371,372,281,373,374,375,376,377,378,379,380,381,282,382,383,384,385,386,283,387,388],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[319,320,322,323,324,330,331],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[10,1,14,252,24,25,26,27,28,29,36,41,47,53,55,59,60,62,63,64,65,66,68,70,71,4,74,77,259,260,261,85,86,90,91,93,97,98,100,101,102,103,104,275,106,121,8,122,123,288,132,289,133,134,135,136,137,389,167,168,169,390,173,174,186,188,189,190,296,191,192,201,209,210,235,236,237,238,239,240,241,242,243],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,1,11,12,13,14,391,15,249,249,250,250,16,251,17,18,19,20,21,392,393,22,23,394,395,396,397,2,398,3,252,24,25,26,27,28,29,253,254,255,256,399,400,401,402,403,30,333,404,405,406,407,408,31,32,33,34,409,35,36,37,38,39,40,410,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,4,411,5,6,72,7,412,73,74,75,76,77,78,257,413,79,414,415,258,259,260,261,416,334,262,319,326,80,81,82,83,84,85,86,87,88,89,90,91,263,92,93,94,95,96,264,361,265,335,362,417,266,267,268,320,269,321,270,271,364,272,97,98,99,273,100,101,102,103,274,104,275,105,106,107,108,109,110,418,419,420,421,422,111,336,423,424,425,426,427,112,276,277,113,114,278,279,280,115,116,368,369,370,117,371,372,281,373,374,375,376,377,378,379,380,381,282,382,383,384,385,386,283,387,388,428,337,338,339,340,429,118,119,120,430,121,8,122,123,284,285,286,287,431,124,125,432,126,127,128,129,130,131,433,434,435,436,437,438,439,440,441,288,132,289,133,134,135,136,137,389,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,442,165,166,443,304,444,167,168,169,170,171,341,342,445,446,447,448,449,450,451,452,313,453,305,454,306,455,456,457,458,0,459,460,461,307,308,462,309,463,464,465,290,291,466,292,467,468,469,310,311,312,172,173,174,175,343,470,176,344,345,346,347,348,349,350,351,471,472,177,473,352,474,178,179,180,181,293,182,183,475,476,477,478,479,480,481,482,483,360,314,484,485,486,353,354,355,487,184,185,315,316,317,186,187,294,295,188,189,190,296,191,192,193,194,488,195,196,297,197,198,199,200,201,202,203,204,205,206,489,356,207,208,209,210,211,212,213,214,298,299,300,301,302,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,490,244,245,491,492,493,494,495,9,357,246,247,358,359,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[316,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[248],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[107,108,109,110,123,158,159,160,161,162,163,168,171,174,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,239,240,241,242,243,247],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[249,250,414,363,364,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[319,361,362,320,363,364,365,366,277,279,367],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[489],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[10,1,11,12,14,15,249,249,250,250,251,19,22,23,2,3,25,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,61,62,65,66,67,68,69,70,71,4,411,5,6,72,7,73,74,75,76,77,78,79,259,260,261,262,80,81,82,83,84,85,86,87,88,89,90,91,263,92,93,94,95,265,266,268,269,271,97,98,99,100,102,103,274,105,106,107,108,109,110,111,112,276,277,113,114,278,279,280,115,117,281,282,283,429,118,119,120,430,121,8,122,123,124,432,127,128,129,130,131,133,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,442,165,166,304,167,168,169,170,171,342,0,462,290,291,292,310,311,312,172,173,174,177,178,315,316,317,186,187,188,189,191,202,203,204,205,206,489,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,490,244,245,491,492,493,494,495,9,246,247,359],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[497,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[34,39,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[498,499,500],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:153","failures":[107,108,109,110,158,159,160,161,162,163,171,210],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":34,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.UsageTest.argumentsOrdered":275,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":454,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":17,"org.easymock.tests2.DelegateToTest.testReturnException":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":159,"org.easymock.tests.MockingTest.testPartialClassMocking":290,"org.easymock.tests.MockClassControlTest.testToString":353,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":428,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":215,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":281,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":208,"org.easymock.tests2.UsageTest.wrongArguments":273,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":286,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":349,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":468,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":185,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":93,"org.easymock.tests2.CaptureTest.testPrimitive":61,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":212,"org.easymock.tests.UsageTest.moreThanOneArgument":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":234,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":490,"org.easymock.tests.UsageTest.argumentsOrdered":296,"org.easymock.tests.UsageVarargTest.varargIntAccepted":194,"org.easymock.tests.InvocationTest.testEquals":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":206,"org.easymock.tests.ReplayStateInvalidUsageTest.times":483,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":30,"org.easymock.tests2.DependencyTest.testClassMocking":392,"org.easymock.tests2.AnswerTest.answer":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":256,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":89,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":492,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":230,"org.easymock.tests.LimitationsTest.mockFinalMethod":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":302,"org.easymock.tests2.DependencyTest.testClassMockingSupport":393,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":341,"org.easymock.tests2.CaptureTest.testCapture1_2446744":62,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":228,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":254,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":477,"org.easymock.tests.UsageThrowableTest.throwError":236,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":348,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":131,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":496,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":388,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":478,"org.easymock.tests.MockingTest.testInterfaceMocking":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":311,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":216,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":266,"org.easymock.tests2.MockBuilderTest.testCreateMock":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":384,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":405,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":224,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":495,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":284,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":45,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":44,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":488,"org.easymock.tests.MockClassControlTest.testEquals":184,"org.easymock.tests2.EasyMockSupportClassTest.testAll":117,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":125,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":232,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":300,"org.easymock.tests.MockNameTest.defaultName":356,"org.easymock.tests2.UsageConstraintsTest.testMatches":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":130,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests.UsageVarargTest.allKinds":201,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":167,"org.easymock.samples.BasicClassMockTest.testPrintContent":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":242,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":430,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":163,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":440,"org.easymock.tests2.UsageConstraintsTest.greaterThan":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":442,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":261,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":441,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":416,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":81,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":257,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":207,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":87,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":158,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":429,"org.easymock.tests2.CaptureTest.testCaptureFirst":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":88,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.CaptureTest.testCapture2_2446744":70,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":460,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":271,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":200,"org.easymock.tests.GenericTest.testBridgedEquals":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":182,"org.easymock.tests.UsageExpectAndReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":233,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":489,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":127,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":316,"org.easymock.tests.UsageCallCountTest.tooManyCalls":183,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":241,"org.easymock.tests.MockingTest.testNiceClassMocking":469,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":276,"org.easymock.tests.MockingTest.testClassMocking":464,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":474,"org.easymock.tests2.UsageConstraintsTest.testContains":43,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":35,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":92,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":323,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":176,"org.easymock.tests.UsageTest.exactCallCountByLastCall":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":154,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":192,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests.MockClassControlTest.testHashCode":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests2.EasyMockSupportTest.testVerify":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":379,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":498,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":494,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":253,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":412,"org.easymock.tests.UsageVarargTest.varargCharAccepted":195,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":433,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":309,"org.easymock.tests2.UsageTest.openCallCountByLastCall":102,"org.easymock.tests.DefaultClassInstantiatorTest.object":434,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":493,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":402,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":259,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":315,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":283,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":354,"org.easymock.tests2.UsageTest.resumeIfFailure":105,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":161,"org.easymock.tests2.StubTest.stubWithReturnValue":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":54,"org.easymock.tests2.SerializationTest.testAllMockedMethod":116,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":328,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":227,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":462,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":411,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":444,"org.easymock.tests.UsageExpectAndThrowTest.object":225,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":51,"org.easymock.tests2.DelegateToTest.testWrongClass":120,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":213,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":214,"org.easymock.tests.UsageStrictMockTest.range":135,"org.easymock.samples.ConstructorCalledMockTest.testTax":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":396,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":268,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":285,"org.easymock.tests2.CaptureTest.testCaptureNone":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":312,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":248,"org.easymock.tests.UsageUnorderedTest.message":235,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":199,"org.easymock.tests2.ThreadingTest.testThreadSafe":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":382,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":181,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":20,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":60,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":307,"org.easymock.tests2.UsageConstraintsTest.any":41,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":482,"org.easymock.tests2.StubTest.stub":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":160,"org.easymock.tests.UsageExpectAndThrowTest.longType":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":308,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":438,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":481,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests2.SerializationTest.testClass":280,"org.easymock.tests.LimitationsTest.mockNativeMethod":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":401,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests2.NameTest.nameForMocksControl":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":403,"org.easymock.tests2.MockedExceptionTest.testMockedException":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":372,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":398,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":219,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":292,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":269,"org.easymock.tests.MockingTest.testNicePartialClassMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":399,"org.easymock.tests2.CaptureTest.testCaptureLast":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":342,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":279,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":52,"org.easymock.tests.MockingTest.testTwoMocks":465,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":223,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":56,"org.easymock.samples.ExampleTest.removeNonExistingDocument":391,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":404,"org.easymock.tests.UsageStrictMockTest.differentMethods":136,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":436,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":82,"org.easymock.tests2.MockBuilderTest.testCreateMockString":272,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":485,"org.easymock.tests.UsageExpectAndThrowTest.floatType":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":373,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":6,"org.easymock.tests.UsageVerifyTest.twoThrows":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":326,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":282,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":306,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":310,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":260,"org.easymock.tests.LimitationsTest.privateConstructor":472,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":366,"org.easymock.tests2.UsageConstraintsTest.testNotNull":55,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":243,"org.easymock.tests2.UsageTest.defaultResetToNice":274,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":400,"org.easymock.tests.UsageVarargTest.differentLength":297,"org.easymock.tests2.CallbackTest.callback":8,"org.easymock.tests2.UsageConstraintsTest.equals":409,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":414,"org.easymock.tests.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":210,"org.easymock.tests.UsageCallCountTest.tooFewCalls":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":287,"org.easymock.tests.UsageThrowableTest.throwCheckedException":240,"org.easymock.tests.MockingTest.testStrictClassMocking":463,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":278,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":114,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":7,"org.easymock.tests.ObjectMethodsTest.testHashCode":470,"org.easymock.tests2.CompareToTest.testGreateOrEqual":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":330,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":84,"org.easymock.tests2.NameTest.nameForNiceMock":339,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":324,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.DelegateToTest.testStubDelegate":119,"org.easymock.tests2.AnswerTest.stubAnswer":72,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":133,"org.easymock.tests.UsageVarargTest.varargLongAccepted":198,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.floatType":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":262,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":49,"org.easymock.tests.UsageThrowableTest.noUpperLimit":237,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":32,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":394,"org.easymock.tests2.SerializationTest.test":115,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":63,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":139,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.samples.SupportTest.addDocument":18,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":374,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":467,"org.easymock.tests2.NameTest.nameForMock":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":150,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":364,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":229,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests2.MockedExceptionTest.testRealException":110,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":397,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":456,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":209,"org.easymock.tests2.NameTest.nameForStrictMock":338,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":417,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":395,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":437,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":265,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":318,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":378,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests.UsageRangeTest.combination":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":295,"org.easymock.tests2.MockBuilderTest.testWithConstructor":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":375,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":486,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":151,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":439,"org.easymock.tests.UsageVarargTest.varargShortAccepted":197,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":293,"org.easymock.tests2.UsageConstraintsTest.cmpTo":42,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests2.CaptureTest.testCaptureFromStub":69,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":476,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":335,"org.easymock.tests.UsageTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":180,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":363,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":152,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.tests2.UsageConstraintsTest.constraints":33,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageStrictMockTest.testVerify":389,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":16,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":299,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":204,"org.easymock.tests.LimitationsTest.abstractClass":471,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":205,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":91,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":193}}]
