[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"classConstructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[53,54,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,5,6,73,15,74,75,76,77,78,79,16,80,81,82,83,84,85,86,17,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,12,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,0,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,13,235,236,14,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,18,19,305,306,307,308,20,309,310,311,312,313,314,21,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,22,393,23,24,25,26,27,28,394,395,396,397,398,399,400,401,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,49,434,435,436,437,50,438,439,440,441,442,443,444,445,446,447,448,449,450,451,51,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,112,113,114,115,314,344,391,400,448,449,450,451,51,452,462,463,464],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[12,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[69,93,103,109,12,226,228,229,232,233,234,235,237,238,240,258,264,265,268,332,402,407],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[56,57,58,59,60,61,63,64,65,66,67,68,69,72,5,15,74,75,76,77,78,81,82,83,84,86,17,90,93,103,109,114,116,118,12,119,120,121,122,123,124,125,126,127,129,130,131,132,133,135,136,139,140,141,142,143,145,146,147,148,149,150,152,153,154,155,156,157,0,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,183,184,185,186,187,188,189,191,192,193,194,195,196,199,204,210,217,218,219,220,222,223,224,228,232,234,235,238,243,244,252,253,254,255,256,257,260,264,265,266,274,281,282,285,286,289,304,18,19,305,307,309,310,311,312,313,314,21,315,316,320,321,323,327,328,330,331,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,393,23,399,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,413,415,416,417,418,420,421,422,423,424,425,426,427,428,429,435,437,50,438,51,453,454,455,456,457,458,459,460,461,474,475,476,478,479,480,481,482,483,484,485],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[56,57,58,59,60,61,63,64,65,66,67,68,69,70,70,71,71,72,5,15,74,75,76,77,78,79,16,80,81,82,83,84,86,17,90,93,103,109,112,113,114,115,116,118,12,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,152,153,154,155,156,157,0,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,217,218,219,220,222,223,224,226,228,232,233,234,235,237,238,240,243,244,252,253,254,255,256,257,258,260,263,264,265,266,274,281,282,283,284,285,286,289,291,292,293,294,296,298,299,300,301,302,303,304,18,19,305,306,307,308,20,309,310,311,312,313,314,21,315,316,319,320,321,323,327,328,330,331,332,334,335,353,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,22,393,23,24,25,26,27,28,394,395,396,397,398,399,400,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,410,411,412,413,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,49,434,435,436,437,50,438,448,449,450,451,51,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,478,479,480,481,482,483,484,485],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[15,17,19,340,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[70,70,71,71,5,6,12,236,14,261],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[6,7,8,9,501,502,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[410,411,412],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[158,504],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[505],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[267,283,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[76,81,82,172,306,307,309,310,316,506,424,427,436,50,438],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[359],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[75,76,81,82,0,170,172,173,508,1,505,509,510,511,512,513,2,514,515,305,306,307,309,310,316,516,517,3,4,518,519,506,334,335,424,425,427,428,432,434,435,436,437,50,438],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[505],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[520],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:520","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[93,112,226,233,258,268],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[329,333],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[76,81,82,172,306,307,309,310,316,506,424,427,436,50,438],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[76,81,82,172,306,307,309,310,316,521,506,424,427,436,50,438],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[191,192,193,195,522,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,5,6,73,15,74,75,76,77,78,79,16,80,81,82,83,84,85,86,17,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,12,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,0,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,13,235,236,14,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,18,19,305,306,307,308,20,309,310,311,312,313,314,21,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,22,393,23,24,25,26,27,28,394,395,396,397,398,399,400,401,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,49,434,435,436,437,50,438,439,440,441,442,443,444,445,446,447,448,449,450,451,51,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,61,63,5,15,74,75,76,77,78,79,16,80,81,82,83,84,85,86,17,112,113,114,115,116,118,12,119,120,135,136,137,139,140,141,142,143,145,146,147,148,149,150,152,153,154,155,156,157,0,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,223,224,226,232,233,238,240,243,252,253,254,255,256,257,260,263,265,281,282,283,284,285,286,289,291,292,293,294,298,299,300,301,302,304,18,19,305,306,307,308,20,309,310,311,312,313,314,21,315,316,320,321,323,327,328,330,331,335,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,385,22,393,23,24,25,26,27,28,394,395,396,397,398,399,400,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,413,414,415,416,417,418,422,423,424,425,426,427,428,429,430,435,437,50,438,448,449,450,451,51,452,453,454,455,456,457,458,459,460,461,474,475,476,478,479,481,482,483,484,485,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[142,143,146,148,149,151,160,165,186,188,196],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":143,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.UsageTest.argumentsOrdered":82,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":347,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":66,"org.easymock.tests2.DelegateToTest.testReturnException":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":449,"org.easymock.tests.MockingTest.testPartialClassMocking":320,"org.easymock.tests.MockClassControlTest.testToString":494,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":175,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":29,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":93,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":150,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":312,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":57,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":407,"org.easymock.tests2.UsageConstraintsTest.testNull":146,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":325,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":255,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":130,"org.easymock.tests2.CaptureTest.testPrimitive":189,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":315,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":48,"org.easymock.tests.UsageTest.moreThanOneArgument":305,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":396,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":469,"org.easymock.tests.UsageTest.argumentsOrdered":310,"org.easymock.tests.UsageVarargTest.varargIntAccepted":476,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":457,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":510,"org.easymock.tests.ReplayStateInvalidUsageTest.times":389,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests2.DependencyTest.testClassMocking":241,"org.easymock.tests2.AnswerTest.answer":180,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":203,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":404,"org.easymock.tests2.CaptureTest.testAnd":186,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":125,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":473,"org.easymock.tests2.DelegateToTest.testDelegate":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":44,"org.easymock.tests.LimitationsTest.mockFinalMethod":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":302,"org.easymock.tests2.DependencyTest.testClassMockingSupport":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":334,"org.easymock.tests2.CaptureTest.testCapture1_2446744":190,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":201,"org.easymock.tests.UsageThrowableTest.throwError":22,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":383,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":406,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":500,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":111,"org.easymock.samples.PartialClassMockTest.testGetArea":69,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":384,"org.easymock.tests.MockingTest.testInterfaceMocking":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":466,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":30,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":232,"org.easymock.tests2.MockBuilderTest.testCreateMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":38,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":126,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":403,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":412,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":413,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":156,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":49,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":372,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":155,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":195,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":477,"org.easymock.tests.MockClassControlTest.testEquals":498,"org.easymock.tests2.EasyMockSupportClassTest.testAll":90,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":331,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":46,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":503,"org.easymock.tests2.CaptureTest.testCaptureAll":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":300,"org.easymock.tests.MockNameTest.defaultName":401,"org.easymock.tests2.UsageConstraintsTest.testMatches":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":397,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":381,"org.easymock.samples.ExampleTest.voteForRemovals":61,"org.easymock.tests.UsageVarargTest.allKinds":485,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":437,"org.easymock.samples.BasicClassMockTest.testPrintContent":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":27,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":452,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":212,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":446,"org.easymock.tests2.UsageConstraintsTest.greaterThan":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":459,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":266,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":447,"org.easymock.samples.ExampleTest.voteForRemoval":58,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":267,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":258,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":15,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":123,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":448,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":134,"org.easymock.tests2.CaptureTest.testCaptureFirst":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":124,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":368,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.CaptureTest.testCapture2_2446744":198,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":284,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":484,"org.easymock.tests.GenericTest.testBridgedEquals":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":420,"org.easymock.tests.UsageExpectAndReturnTest.longType":364,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":47,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":468,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":463,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":394,"org.easymock.tests.UsageCallCountTest.tooManyCalls":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":517,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":218,"org.easymock.tests.MockingTest.testNiceClassMocking":326,"org.easymock.tests.MockingTest.testClassMocking":318,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":414,"org.easymock.tests2.UsageConstraintsTest.testContains":154,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":145,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":18,"org.easymock.tests.MockTypeTest.fromEasyMockClass":405,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":422,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":118,"org.easymock.tests.UsageExpectAndReturnTest.object":371,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":278,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":129,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":479,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":489,"org.easymock.tests.UsageTest.exactCallCountByLastCall":311,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":295,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":519,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":474,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":377,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":433,"org.easymock.tests.MockClassControlTest.testHashCode":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":206,"org.easymock.tests2.EasyMockSupportTest.testVerify":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":100,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":509,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":471,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":431,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":411,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":521,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":200,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":85,"org.easymock.tests.UsageVarargTest.varargCharAccepted":478,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":439,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests.DefaultClassInstantiatorTest.object":440,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":53,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":410,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":487,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":272,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":205,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":496,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":378,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":462,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":511,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests2.UsageTest.resumeIfFailure":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":451,"org.easymock.tests2.StubTest.stubWithReturnValue":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":370,"org.easymock.tests2.SerializationTest.testAllMockedMethod":120,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":353,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.samples.SupportTest.voteForRemovals":65,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":41,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":359,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":181,"org.easymock.tests.UsageExpectAndThrowTest.object":39,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":161,"org.easymock.tests2.DelegateToTest.testWrongClass":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":328,"org.easymock.tests.UsageStrictMockTest.range":427,"org.easymock.samples.ConstructorCalledMockTest.testTax":70,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":250,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":128,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":87,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":516,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":467,"org.easymock.tests2.CaptureTest.testCaptureNone":194,"org.easymock.tests.UsageUnorderedTest.message":316,"org.easymock.tests.UsageVerifyTest.twoReturns":438,"org.easymock.tests.UsageVarargTest.varargByteAccepted":483,"org.easymock.tests2.ThreadingTest.testThreadSafe":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":104,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":418,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":490,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":67,"org.easymock.tests2.CaptureTest.testCapture_2617107":188,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":515,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageConstraintsTest.any":152,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":388,"org.easymock.tests2.StubTest.stub":86,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":450,"org.easymock.tests.UsageExpectAndThrowTest.longType":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":444,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":387,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":210,"org.easymock.tests.LimitationsTest.mockNativeMethod":289,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":271,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":179,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":92,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":33,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":235,"org.easymock.tests.MockingTest.testNicePartialClassMocking":321,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":257,"org.easymock.tests2.CaptureTest.testCaptureLast":193,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":335,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":224,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":162,"org.easymock.tests.MockingTest.testTwoMocks":319,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":37,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":166,"org.easymock.samples.ExampleTest.removeNonExistingDocument":62,"org.easymock.tests.UsageStrictMockTest.differentMethods":428,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":207,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":442,"org.easymock.tests2.ConstraintsToStringTest.andToString":513,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":283,"org.easymock.tests2.MockBuilderTest.testCreateMockString":240,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":492,"org.easymock.tests.UsageExpectAndThrowTest.floatType":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":94,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":183,"org.easymock.tests.UsageVerifyTest.twoThrows":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":73,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.ExampleTest.voteAgainstRemoval":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":348,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":265,"org.easymock.tests.LimitationsTest.privateConstructor":288,"org.easymock.tests2.UsageConstraintsTest.testNotNull":165,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":28,"org.easymock.tests2.UsageTest.defaultResetToNice":80,"org.easymock.samples.ExampleTest.voteAgainstRemovals":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":376,"org.easymock.tests.UsageVarargTest.differentLength":480,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":270,"org.easymock.tests2.CallbackTest.callback":204,"org.easymock.tests2.UsageConstraintsTest.equals":144,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":261,"org.easymock.tests.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":314,"org.easymock.tests.UsageCallCountTest.tooFewCalls":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":25,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.MockingTest.testStrictClassMocking":317,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":400,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":223,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":222,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":185,"org.easymock.tests.ObjectMethodsTest.testHashCode":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.NameTest.nameForNiceMock":178,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":285,"org.easymock.tests2.DependencyTest.testInterfaceMocking":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.ExampleTest.addDocument":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":105,"org.easymock.tests2.DelegateToTest.testStubDelegate":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":110,"org.easymock.tests2.AnswerTest.stubAnswer":184,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":425,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":482,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":346,"org.easymock.tests.UsageExpectAndReturnTest.floatType":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.tests2.ConstraintsToStringTest.orToString":508,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":71,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":434,"org.easymock.tests.UsageThrowableTest.noUpperLimit":393,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":214,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":141,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":245,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":191,"org.easymock.tests2.SerializationTest.test":119,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":441,"org.easymock.tests2.UsageConstraintsTest.testSame":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":362,"org.easymock.samples.SupportTest.addDocument":64,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":221,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":95,"org.easymock.tests.GenericTest.testPackageScope":330,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":213,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":324,"org.easymock.tests2.NameTest.nameForMock":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":373,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":239,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":43,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":486,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":461,"org.easymock.tests2.MockedExceptionTest.testRealException":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":518,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":350,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":313,"org.easymock.tests2.NameTest.nameForStrictMock":177,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":256,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":249,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":443,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":160,"org.easymock.tests.ErrorMessageTest.testGetters":520,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":228,"org.easymock.tests2.UsageStrictMockTest.range":172,"org.easymock.tests2.UsageConstraintsTest.lessThan":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":99,"org.easymock.tests2.CaptureTest.testCaptureRightOne":196,"org.easymock.tests2.UsageConstraintsTest.testOr":148,"org.easymock.tests.UsageRangeTest.combination":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":253,"org.easymock.tests.UsageTest.wrongArguments":307,"org.easymock.tests2.MockBuilderTest.testWithConstructor":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":96,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":493,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":374,"org.easymock.tests.UsageVarargTest.varargShortAccepted":481,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":445,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":419,"org.easymock.tests2.UsageConstraintsTest.cmpTo":153,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":340,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests2.CaptureTest.testCaptureFromStub":197,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":382,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":229,"org.easymock.tests.UsageTest.unexpectedCallWithArray":306,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":424,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":417,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":375,"org.easymock.tests2.CaptureTest.testCapture":522,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":426,"org.easymock.tests2.UsageConstraintsTest.constraints":142,"org.easymock.samples.ExampleTest.addAndChangeDocument":63,"org.easymock.tests2.ConstraintsToStringTest.notToString":505,"org.easymock.tests.UsageStrictMockTest.testVerify":430,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":72,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":423,"org.easymock.tests2.CompareToTest.testGreateThan":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":299,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":455,"org.easymock.tests.LimitationsTest.abstractClass":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":456,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":127}}]
