[{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[4],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[18,19,20,21,22,23],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[24,25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[30,31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[35,36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[38,39,40,41,42,43,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[45,46,47,48,49,50,51,52,53,54,59,55,56,57,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[61,62,63,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[65,66,67,68],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[70,71],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[72,73,74,75],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[76,31,32,77,34],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[78,79,80],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[81,38,44,82],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[83,84,85,86,87,45,46,47,88,48,89,90,49,50,51,52,53,91,92,93,54,94,59,55,56,95,57,58,96,97],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[98,99,100,101,102,103,104,105,106,85,86,107,108,109,110,111,112,113,45,114,115,116,46,47,117,118,119,48,89,120,121,122,123,124,125,126,127,128,129,130,131,132,50,51,52,53,133,54,134,55,135,56,95,57,58],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[136,137,138,139,65,140,141,68,30,142,143,144,145,146,147,148,149,150,151,9,152,113,153,45,154,155,46,47,117,156,119,48,89,14,157,158,132,159,51,160,161,52,53,133,162,163,54,55,164,135,56,95,165,57,58,166],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[38,39,40,41,42,43,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[167],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[72,73,74,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[168,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[38,39,40,41,42,43,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[170,171,172],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":132,"org.easymock.tests2.UsageTest.argumentsOrdered":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":13,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.tests2.StubTest.stubWithReturnValue":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":2,"org.easymock.tests2.NameTest.nameForNiceMock":138,"org.easymock.tests2.SerializationTest.testAllMockedMethod":74,"org.easymock.tests.UsageVarargTest.allKinds":157,"org.easymock.tests2.DelegateToTest.testReturnException":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":11,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":165,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":126,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":70,"org.easymock.tests2.DelegateToTest.testStubDelegate":143,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":118,"org.easymock.tests2.AnswerTest.stubAnswer":142,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":75,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":15,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":164,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":39,"org.easymock.tests2.DelegateToTest.testWrongClass":32,"org.easymock.tests2.UsageTest.wrongArguments":45,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.UsageStrictMockTest.range":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.samples.ExampleTest.answerVsDelegate":76,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.UsageConstraintsTest.testNull":65,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":147,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":87,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":29,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":107,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":79,"org.easymock.tests.UsageTest.moreThanOneArgument":159,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":10,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.CaptureTest.testCaptureNone":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":69,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":171,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":96,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests2.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":4,"org.easymock.tests.UsageVerifyTest.twoReturns":58,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":85,"org.easymock.tests.UsageTest.argumentsOrdered":53,"org.easymock.tests.GenericTest.testBridgedEquals":71,"org.easymock.tests2.CaptureTest.testCapture_2617107":145,"org.easymock.tests2.NameTest.nameForMock":136,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":43,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":22,"org.easymock.tests2.UsageStrictMockTest.differentMethods":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":12,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":27,"org.easymock.tests.UsageCallCountTest.tooManyCalls":93,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":112,"org.easymock.tests2.SerializationTest.testClass":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests2.AnswerTest.answer":30,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":66,"org.easymock.tests2.MockedExceptionTest.testRealException":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":121,"org.easymock.tests2.NameTest.nameForMocksControl":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":82,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests2.MockedExceptionTest.testMockedException":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":108,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":161,"org.easymock.tests2.NameTest.nameForStrictMock":137,"org.easymock.tests2.DelegateToTest.testDelegate":77,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":7,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":106,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":36,"org.easymock.tests2.CaptureTest.testCaptureLast":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":14,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":134,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":127,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":83,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.CaptureTest.testCapture1_2446744":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":40,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":100,"org.easymock.tests.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":26,"org.easymock.tests.UsageStrictMockTest.differentMethods":95,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":38,"org.easymock.tests.UsageRangeTest.combination":94,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":172,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":34,"org.easymock.tests.UsageTest.wrongArguments":51,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":167,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":97,"org.easymock.tests2.MockBuilderTest.testWithConstructor":20,"org.easymock.tests2.MockBuilderTest.testCreateMockString":86,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":141,"org.easymock.tests.UsageVerifyTest.twoThrows":57,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":33,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":63,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":99,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":90,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":91,"org.easymock.tests2.CompareToTest.testLessOrEqual":3,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests2.ThreadingTest.testChangeDefault":24,"org.easymock.tests2.UsageTest.openCallCountByLastCall":154,"org.easymock.tests2.UsageConstraintsTest.testNotNull":68,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":155,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":35,"org.easymock.tests.DefaultClassInstantiatorTest.object":78,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":37,"org.easymock.tests2.UsageTest.defaultResetToNice":116,"org.easymock.tests2.MockBuilderTest.testCreateMock":84,"org.easymock.tests2.CallbackTest.callback":152,"org.easymock.tests.UsageTest.unexpectedCallWithArray":50,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":23,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":49,"org.easymock.tests.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":109,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":64,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":17,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":135,"org.easymock.tests2.UsageConstraintsTest.constraints":98,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":124,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":148,"org.easymock.tests2.UsageTest.resumeIfFailure":88,"org.easymock.tests2.CaptureTest.testCaptureAll":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":101}}]
