[{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[8,9,10,11],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,8,17,18,0,19,20,21,1,22,23,2,24,25,26,27,28,29,30,9,31,32,33,34,35,10,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[81,81,82,82,83,84,85,86,87,88,89,90,91,55,56,4,5,92,93,94,6,95,96,7,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"failures":[24,61,63,64,73,76],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[132],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:384","sourceCode":"if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n    java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[133,134,135,136,137,138,139,140,141,142,143,84,85,144,145,12,13,14,146,15,16,147,148,149,150,8,17,18,0,19,20,21,1,22,23,24,25,26,27,28,29,30,9,31,32,33,34,35,10,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,151,152,153,86,87,154,88,89,90,55,92,155,156,157,57,158,58,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,104,184,185,105,108,186,187,112,113,188,132,189,190,191,192,193,120,121,194,195,196,197,198,199,200,201,59,60,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,61,62,231,232,233,234,235,236,63,64,237,238,239,240,241,129,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,66,67,68,69,70,71,131,72,73,74,75,76,77,78,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,79,80,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[99,127],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[12,13,15,8,17,18,0,19,20,21,1,22,23,2,24,25,26,27,28,29,30,9,31,32,33,34,35,10,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,59,60,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:327","failures":[300,301,302,303],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[93,304,305,306,307,308,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[139,12,13,8,28,9,38,40,46,47,52,155,156,172,190,191,207,213,219,223,225,311,312,239,251,268,274,280,284,286,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[30,35,40,41,43,44,45,46,47,52],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[83,86,154,88,90,93,57,95,7,98,99,101,105,106,107,108,186,109,110,113,114,115,116,132,124,125,126,129,68],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:163","failures":[81,82,315,316,317],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[318,319,320,321,322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.UsageTest.argumentsOrdered":179,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":230,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.tests2.StubTest.stubWithReturnValue":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":10,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":141,"org.easymock.tests2.SerializationTest.testAllMockedMethod":112,"org.easymock.tests2.DelegateToTest.testReturnException":188,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":228,"org.easymock.tests.MockingTest.testPartialClassMocking":124,"org.easymock.samples.SupportTest.voteForRemovals":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":268,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":114,"org.easymock.tests.UsageExpectAndThrowTest.object":278,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":33,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":305,"org.easymock.tests2.DelegateToTest.testWrongClass":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":72,"org.easymock.tests2.UsageTest.wrongArguments":173,"org.easymock.tests.UsageStrictMockTest.range":203,"org.easymock.samples.ConstructorCalledMockTest.testTax":81,"org.easymock.samples.ExampleTest.answerVsDelegate":134,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":105,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":128,"org.easymock.tests2.UsageConstraintsTest.testNull":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":279,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":88,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":166,"org.easymock.tests2.CaptureTest.testPrimitive":42,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":287,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":255,"org.easymock.tests.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":197,"org.easymock.tests2.CaptureTest.testCaptureNone":47,"org.easymock.tests.UsageUnorderedTest.message":79,"org.easymock.tests.UsageVerifyTest.twoReturns":236,"org.easymock.tests.UsageVarargTest.varargByteAccepted":266,"org.easymock.tests2.ThreadingTest.testThreadSafe":155,"org.easymock.tests.UsageTest.argumentsOrdered":256,"org.easymock.tests.UsageVarargTest.varargIntAccepted":260,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":245,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":67,"org.easymock.tests2.CaptureTest.testCapture_2617107":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":75,"org.easymock.tests2.UsageConstraintsTest.any":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":97,"org.easymock.tests2.StubTest.stub":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":71,"org.easymock.tests.UsageExpectAndThrowTest.longType":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":229,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":16,"org.easymock.tests2.SerializationTest.testClass":111,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests.LimitationsTest.mockNativeMethod":129,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":226,"org.easymock.tests2.AnswerTest.answer":53,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests2.CaptureTest.testAnd":39,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":119,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests2.MockedExceptionTest.testMockedException":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":162,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests2.DelegateToTest.testDelegate":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":272,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":99,"org.easymock.tests.MockingTest.testNicePartialClassMocking":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":283,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":304,"org.easymock.tests2.CaptureTest.testCaptureLast":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":110,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":34,"org.easymock.tests.MockingTest.testTwoMocks":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":65,"org.easymock.tests2.CaptureTest.testCapture1_2446744":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":276,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":37,"org.easymock.tests.UsageThrowableTest.throwError":80,"org.easymock.tests.UsageStrictMockTest.differentMethods":204,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":103,"org.easymock.tests.UsageExpectAndThrowTest.floatType":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":199,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":30,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests.UsageVerifyTest.twoThrows":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests2.CompareToTest.testLessOrEqual":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":68,"org.easymock.samples.ExampleTest.voteAgainstRemoval":136,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":5,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":269,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests2.UsageConstraintsTest.testNotNull":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":294,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":100,"org.easymock.samples.ExampleTest.voteAgainstRemovals":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":222,"org.easymock.tests.UsageVarargTest.differentLength":263,"org.easymock.tests2.CallbackTest.callback":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":315,"org.easymock.tests.UsageTest.openCallCountByLastCall":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":277,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":8,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":74,"org.easymock.tests.UsageCallCountTest.tooFewCalls":243,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":108,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":27,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":48,"org.easymock.tests.UsageThrowableTest.throwCheckedException":291,"org.easymock.tests.MockClassControlTest.testEquals":248,"org.easymock.tests2.EasyMockSupportClassTest.testAll":113,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":285,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":117,"org.easymock.tests2.CaptureTest.testCaptureAll":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":198,"org.easymock.samples.ExampleTest.voteForRemovals":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":308,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":158,"org.easymock.tests.UsageVarargTest.allKinds":66,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":234,"org.easymock.tests2.DependencyTest.testInterfaceMocking":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":85,"org.easymock.samples.ExampleTest.addDocument":137,"org.easymock.tests2.DelegateToTest.testStubDelegate":132,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":293,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":14,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":310,"org.easymock.tests2.UsageConstraintsTest.greaterThan":9,"org.easymock.tests.UsageVarargTest.varargLongAccepted":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.samples.ExampleTest.voteForRemoval":135,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":156,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":225,"org.easymock.tests.UsageExpectAndReturnTest.floatType":209,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":82,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":17,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":131,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":44,"org.easymock.tests2.SerializationTest.test":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":160,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":208,"org.easymock.tests2.UsageConstraintsTest.testSame":21,"org.easymock.samples.SupportTest.addDocument":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":227,"org.easymock.tests2.CaptureTest.testCaptureFirst":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":161,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":214,"org.easymock.tests.GenericTest.testPackageScope":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":57,"org.easymock.tests2.CaptureTest.testCapture2_2446744":51,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":267,"org.easymock.tests.GenericTest.testBridgedEquals":194,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":246,"org.easymock.tests.UsageExpectAndReturnTest.longType":210,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":219,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":102,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":324,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":284,"org.easymock.tests2.UsageStrictMockTest.differentMethods":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":211,"org.easymock.tests.UsageCallCountTest.tooManyCalls":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":282,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":240,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":233,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":242,"org.easymock.tests2.MockedExceptionTest.testRealException":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":273,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":73,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":106,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":6,"org.easymock.tests2.UsageConstraintsTest.testContains":26,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":19,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":12,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":89,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":13,"org.easymock.tests.UsageExpectAndReturnTest.object":217,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":95,"org.easymock.tests2.UsageStrictMockTest.range":147,"org.easymock.tests2.UsageConstraintsTest.lessThan":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":306,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":262,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":241,"org.easymock.tests.UsageTest.exactCallCountByLastCall":257,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests2.CaptureTest.testCaptureRightOne":49,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":295,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests.UsageRangeTest.combination":231,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":298,"org.easymock.tests.UsageTest.wrongArguments":252,"org.easymock.tests2.MockBuilderTest.testWithConstructor":316,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":212,"org.easymock.tests2.EasyMockSupportTest.testVerify":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":220,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":297,"org.easymock.tests.UsageVarargTest.varargShortAccepted":264,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":54,"org.easymock.tests2.UsageConstraintsTest.cmpTo":25,"org.easymock.tests.UsageVarargTest.varargCharAccepted":261,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":146,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":168,"org.easymock.tests2.CaptureTest.testCaptureFromStub":50,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":290,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":221,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":274,"org.easymock.samples.ExampleTest.addAndChangeDocument":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":224,"org.easymock.tests.UsageStrictMockTest.testVerify":206,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":116,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":45,"org.easymock.tests2.UsageTest.resumeIfFailure":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":69,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":70,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":164}}]
