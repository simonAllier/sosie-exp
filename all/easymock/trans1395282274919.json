[{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[37,5,14,38],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[1,1,2,2,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[72,99,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:165","sourceCode":"final net.sf.cglib.proxy.Enhancer net.sf.cglib.proxy.Enhancer = org.easymock.internal.ClassProxyFactory.createEnhancer(java.lang.Class<T>)","type":"CtLocalVariableImpl"},"failures":[1,1,2,2,39,42,43,44,45,46,47,48,49,51,100,101,54,55,56,58,59,61,62,63,64,65,66,67,68,69,70,71,102,73,74,75,76,77,103,78,79,80,81,104,105,84,85,86,87,88,89,90,91,106,107,93,94,96,98,0],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[1,2,39,108,40,41,109,110,111,112,113,114,115,116,117,118,42,43,119,44,45,46,47,48,49,50,51,52,100,101,54,120,121,122,3,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,4,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,55,56,58,59,60,61,62,63,64,65,66,67,68,69,171,70,71,102,172,173,174,72,99,73,175,74,75,76,77,103,176,177,178,179,180,181,182,183,184,185,5,6,186,187,7,8,9,10,188,189,190,191,11,192,12,13,193,14,15,16,194,195,196,38,17,18,19,197,198,199,200,201,202,203,204,79,80,81,104,205,206,20,207,208,209,210,21,22,211,212,23,24,25,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,107,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,26,27,28,29,30,31,32,33,34,35,93,94,95,286,287,288,289,290,291,98,36,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[313],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[115,128,134,135,139,147,103,181,182,183,314,5,12,14,19,199,200,225,231,237,241,243,246,315,316,263,274,293,299,305,309,311],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[109,110,111,112,113,114,115,42,43,119,44,45,46,48,49,51,100,101,54,120,121,122,3,123,124,125,126,317,318,319,320,127,128,129,130,131,132,133,134,135,136,137,4,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,55,58,59,63,64,65,67,68,70,71,102,172,173,174,321,72,99,73,103,176,177,178,179,180,181,182,183,314,184,185,5,6,186,187,7,8,9,10,188,189,190,191,11,192,12,13,193,14,15,16,194,195,38,17,18,19,197,199,200,322,79,80,81,104,205,206,20,207,208,209,210,323,21,22,211,212,23,24,25,324,325,326,213,214,215,216,327,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,85,258,328,259,260,262,263,107,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,26,27,28,29,30,31,32,33,34,35,93,94,95,286,287,288,289,290,291,98,36,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[329],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[110,178,180,181,202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[330,331,206,247,332,333],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[124,148,154,155,206,208,247,248,251,252,334,274,276,277],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,124,125,147,335,330,336,337,338,339,340,341,322,204,20,208,209,342,327,246,333,343,334,274,275,276,277],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:89","failures":[50,51,344,58],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[193],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[345],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[346,347,348],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[1,1,2,2,39,108,40,41,109,110,111,112,113,114,349,115,116,117,118,42,43,119,44,45,46,47,48,350,351,49,50,51,52,352,100,101,54,120,121,122,3,123,124,125,126,353,127,128,129,130,131,132,133,134,135,136,137,4,138,139,354,355,356,357,358,140,359,360,361,362,363,364,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,167,168,169,170,56,365,58,59,60,366,62,65,367,68,69,171,70,368,369,370,371,102,372,373,172,173,174,321,72,99,73,374,375,376,377,378,175,379,380,381,382,383,384,385,74,386,75,387,388,389,390,391,392,76,393,394,77,395,396,103,176,177,397,178,179,180,398,181,182,183,314,184,185,5,6,186,187,399,7,8,9,10,188,189,400,190,191,11,192,12,13,193,14,15,16,194,195,196,38,17,18,19,197,198,199,401,200,201,340,202,203,341,322,204,402,403,78,79,80,404,81,405,406,407,104,205,206,20,207,208,209,210,323,21,22,211,212,23,24,25,408,409,410,411,324,412,413,414,415,416,417,418,325,326,213,214,215,216,217,218,219,419,420,421,422,423,342,327,424,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,425,83,426,105,254,255,256,257,84,85,86,87,88,89,90,91,258,328,259,260,427,428,429,430,431,432,433,434,435,436,345,437,315,438,439,440,316,441,442,443,444,445,446,447,261,262,263,448,449,450,451,452,92,106,453,454,455,346,456,457,458,107,264,265,459,266,267,268,269,270,271,272,273,460,461,462,274,275,276,277,278,279,280,281,282,283,284,285,26,27,28,29,30,31,32,33,34,35,93,463,94,95,96,97,464,465,466,286,287,288,289,290,291,467,468,98,469,0,470,471,472,473,474,36,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,177,5,12,14,15,19,20,21,22,23,24,25,408,105,427,431,432,439,443,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[124,208,475,276,277],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[124,148,154,155,204,206,208,247,248,251,252,334,274,276,277],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[477,127,129,130,131,132,133,134,136,478,137,4,139],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[463,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[453,456],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[1,2,39,108,40,41,109,110,111,112,113,114,115,116,117,118,42,43,119,44,45,46,47,48,49,50,51,52,100,101,54,120,121,122,3,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,4,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,55,56,58,59,60,61,62,63,64,65,66,67,68,69,171,70,71,102,172,173,174,72,99,73,175,74,75,76,77,103,176,177,178,179,180,181,182,183,314,184,185,5,6,186,187,7,8,9,10,188,189,190,191,11,192,12,13,193,14,15,16,194,195,196,38,17,18,19,197,198,199,200,201,202,203,204,79,80,81,104,205,206,20,207,208,209,210,21,22,211,212,23,24,25,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,107,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,26,27,28,29,30,31,32,33,34,35,93,94,95,286,287,288,289,290,291,98,36,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":187,"org.easymock.tests2.UsageTest.argumentsOrdered":155,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":245,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":345,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":150,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":108,"org.easymock.tests2.DelegateToTest.testReturnException":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":287,"org.easymock.tests.MockingTest.testPartialClassMocking":79,"org.easymock.tests.MockClassControlTest.testToString":86,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":53,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":225,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":198,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests2.UsageTest.wrongArguments":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":21,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":256,"org.easymock.samples.ExampleTest.answerVsDelegate":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":83,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":406,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":44,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":91,"org.easymock.tests2.CaptureTest.testPrimitive":130,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":244,"org.easymock.tests.UsageTest.moreThanOneArgument":246,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":419,"org.easymock.tests.UsageTest.argumentsOrdered":252,"org.easymock.tests.UsageVarargTest.varargIntAccepted":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":440,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":31,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":383,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":35,"org.easymock.tests.ReplayStateInvalidUsageTest.times":415,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":476,"org.easymock.tests2.AnswerTest.answer":102,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":441,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":144,"org.easymock.tests2.CaptureTest.testAnd":127,"org.easymock.tests2.UsageTest.strictResetToDefault":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":259,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":423,"org.easymock.tests2.DelegateToTest.testDelegate":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":240,"org.easymock.tests.LimitationsTest.mockFinalMethod":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":142,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":410,"org.easymock.tests.UsageThrowableTest.throwError":278,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":396,"org.easymock.samples.PartialClassMockTest.testGetArea":39,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":411,"org.easymock.tests.MockingTest.testInterfaceMocking":404,"org.easymock.tests2.CompareToTest.testLessOrEqual":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":470,"org.easymock.tests2.UsageTest.niceToStrict":149,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":58,"org.easymock.tests2.MockBuilderTest.testCreateMock":62,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":234,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":330,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":462,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":254,"org.easymock.tests.UsageOverloadedMethodTest.overloading":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":12,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":203,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":304,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":192,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":347,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":136,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":74,"org.easymock.tests.MockClassControlTest.testEquals":90,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":143,"org.easymock.tests2.CaptureTest.testCaptureAll":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":222,"org.easymock.tests.MockNameTest.defaultName":458,"org.easymock.tests2.UsageConstraintsTest.testMatches":13,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":29,"org.easymock.samples.ExampleTest.voteForRemovals":114,"org.easymock.tests.UsageVarargTest.allKinds":273,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":275,"org.easymock.samples.BasicClassMockTest.testPrintContent":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":223,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":284,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":380,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":457,"org.easymock.samples.ExampleTest.voteForRemoval":111,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":183,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":47,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":93,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":160,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":286,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":397,"org.easymock.tests2.CaptureTest.testCaptureFirst":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":161,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":300,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":184,"org.easymock.tests2.UsageTest.moreThanOneArgument":147,"org.easymock.tests2.CaptureTest.testCapture2_2446744":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":272,"org.easymock.tests.GenericTest.testBridgedEquals":97,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":296,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":243,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":105,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":26,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":283,"org.easymock.tests.MockingTest.testNiceClassMocking":407,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests.MockingTest.testClassMocking":403,"org.easymock.tests2.UsageConstraintsTest.testContains":11,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":326,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":263,"org.easymock.tests.MockTypeTest.fromEasyMockClass":425,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":200,"org.easymock.tests.UsageExpectAndReturnTest.object":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":267,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":451,"org.easymock.tests.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":420,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":367,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":202,"org.easymock.tests.MockClassControlTest.testHashCode":89,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":390,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":421,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":461,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":141,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":321,"org.easymock.tests.UsageVarargTest.varargCharAccepted":266,"org.easymock.tests2.CaptureTest.testCaptureMultiple":477,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":447,"org.easymock.tests2.UsageTest.openCallCountByLastCall":151,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests.DefaultClassInstantiatorTest.object":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":460,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":449,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":374,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":77,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":87,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":337,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":289,"org.easymock.tests2.StubTest.stubWithReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":302,"org.easymock.tests2.SerializationTest.testAllMockedMethod":73,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":316,"org.easymock.samples.SupportTest.voteForRemovals":117,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":331,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":377,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":237,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":446,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":372,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":466,"org.easymock.tests.UsageExpectAndThrowTest.object":235,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":194,"org.easymock.tests2.DelegateToTest.testWrongClass":180,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":208,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":60,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":385,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":332,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":471,"org.easymock.tests2.CaptureTest.testCaptureNone":135,"org.easymock.tests.UsageUnorderedTest.message":274,"org.easymock.tests.UsageVerifyTest.twoReturns":277,"org.easymock.tests.UsageVarargTest.varargByteAccepted":271,"org.easymock.tests2.ThreadingTest.testThreadSafe":182,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":216,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":452,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":40,"org.easymock.tests2.CaptureTest.testCapture_2617107":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":212,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":414,"org.easymock.tests2.StubTest.stub":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndThrowTest.longType":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":288,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":346,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":413,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.SerializationTest.testClass":72,"org.easymock.tests.LimitationsTest.mockNativeMethod":98,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests2.NameTest.nameForMocksControl":320,"org.easymock.tests2.MockedExceptionTest.testMockedException":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":386,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":250,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":401,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":229,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":61,"org.easymock.tests.MockingTest.testNicePartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":46,"org.easymock.tests2.CompareToTest.testNotComparable":329,"org.easymock.tests2.CaptureTest.testCaptureLast":134,"org.easymock.tests2.CompareToTest.testCompareEqual":313,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":327,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":195,"org.easymock.tests.MockingTest.testTwoMocks":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":233,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":18,"org.easymock.samples.ExampleTest.removeNonExistingDocument":349,"org.easymock.tests.UsageStrictMockTest.differentMethods":209,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":376,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":454,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":314,"org.easymock.tests2.ConstraintsToStringTest.andToString":338,"org.easymock.tests2.MockBuilderTest.testCreateMockString":64,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":84,"org.easymock.tests.UsageExpectAndThrowTest.floatType":227,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":193,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":172,"org.easymock.tests.UsageVerifyTest.twoThrows":276,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":76,"org.easymock.samples.ExampleTest.voteAgainstRemoval":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":0,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests.LimitationsTest.privateConstructor":468,"org.easymock.tests2.UsageConstraintsTest.testNotNull":17,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":285,"org.easymock.tests2.UsageTest.defaultResetToNice":153,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":315,"org.easymock.tests.UsageVarargTest.differentLength":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.CallbackTest.callback":103,"org.easymock.tests2.UsageConstraintsTest.equals":399,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":350,"org.easymock.tests.UsageTest.openCallCountByLastCall":249,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":211,"org.easymock.tests.UsageCallCountTest.tooFewCalls":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":257,"org.easymock.tests.UsageThrowableTest.throwCheckedException":282,"org.easymock.tests.MockingTest.testStrictClassMocking":402,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":333,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":292,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":174,"org.easymock.tests.ObjectMethodsTest.testHashCode":450,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":185,"org.easymock.tests2.NameTest.nameForNiceMock":319,"org.easymock.tests2.DependencyTest.testInterfaceMocking":197,"org.easymock.samples.ExampleTest.addDocument":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.DelegateToTest.testStubDelegate":179,"org.easymock.tests2.AnswerTest.stubAnswer":173,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests.UsageVarargTest.varargLongAccepted":270,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.floatType":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":65,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.ConstraintsToStringTest.orToString":335,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":15,"org.easymock.tests.UsageThrowableTest.noUpperLimit":279,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":368,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":132,"org.easymock.tests2.SerializationTest.test":99,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":453,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":294,"org.easymock.samples.SupportTest.addDocument":116,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":94,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":381,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":405,"org.easymock.tests2.NameTest.nameForMock":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":305,"org.easymock.tests2.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":239,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":448,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":260,"org.easymock.tests2.MockedExceptionTest.testRealException":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":438,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":3,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":22,"org.easymock.tests2.NameTest.nameForStrictMock":318,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":365,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":455,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":56,"org.easymock.tests2.UsageStrictMockTest.range":124,"org.easymock.tests2.UsageConstraintsTest.lessThan":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":389,"org.easymock.tests2.CaptureTest.testCaptureRightOne":137,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":43,"org.easymock.tests.UsageTest.wrongArguments":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":306,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":456,"org.easymock.tests.UsageVarargTest.varargShortAccepted":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":217,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":152,"org.easymock.tests2.CaptureTest.testCaptureFromStub":4,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":409,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":57,"org.easymock.tests.UsageTest.unexpectedCallWithArray":247,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":206,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":307,"org.easymock.tests2.CaptureTest.testCapture":478,"org.easymock.tests2.UsageConstraintsTest.constraints":186,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":207,"org.easymock.samples.ExampleTest.addAndChangeDocument":115,"org.easymock.tests2.ConstraintsToStringTest.notToString":336,"org.easymock.tests.UsageStrictMockTest.testVerify":323,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":118,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":221,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":33,"org.easymock.tests.LimitationsTest.abstractClass":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":34,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":164,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":264}}]
