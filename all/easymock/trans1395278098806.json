[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[11,12,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,13,14,15,16,17,18,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,19,20,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,21,22,23,24,25,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,26,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,27,236,237,238,239,240,241,242,243,244,245,246,247,248,249,28,29,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,4,5,6,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,30,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,31,376,377,378,379,380,381,382,383,384,385,386,387,388,389,7,8,390,391,392,393,394,395,396,397,398,399,400,9,401,402,403,404,405,406,407,408,409,10,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,32,426,427,428,429,430,431,432,433,434,435,436,437,438,439,33,440,34,441,442,443,444,445,446,35,36,37,38,39,40,41,42,43,44,45,46,47,48,447,448,449,450,451,452,453,454,455,456,457,458,459,49,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,50,51,52,53,476,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,477,478,479,480],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[18,19,114,503,154,155,158,159,200,287,288,338,359,365,366],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[419],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[506,477,478,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[506,477,478,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[11,12,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,507,13,14,15,16,17,18,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,19,20,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,21,22,23,24,25,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,26,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,27,236,237,238,239,240,241,242,243,244,245,246,247,248,249,28,29,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,508,293,294,295,296,297,298,509,299,300,301,302,303,304,305,306,307,308,309,310,311,312,4,5,6,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,30,337,338,339,340,341,342,343,510,511,512,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,31,376,377,378,513,379,380,381,382,383,384,514,385,386,515,387,388,389,7,516,8,390,391,392,393,517,394,395,396,397,398,399,400,9,401,402,403,404,405,406,407,408,409,10,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,32,426,427,428,429,430,431,432,433,434,435,436,437,438,439,33,440,34,441,442,443,444,445,446,35,36,37,38,39,40,41,42,43,44,45,46,47,48,447,448,449,450,451,452,453,454,455,456,457,458,459,49,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,50,51,52,53,476,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,477,478,479,480],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[518],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"failures":[252],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[11,81,83,84,85,86,88,89,91,92,13,14,15,16,17,18,109,111,112,19,20,113,114,115,116,119,120,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,155,158,159,160,188,21,22,23,24,25,199,201,202,203,205,206,207,208,209,210,211,26,225,226,228,27,28,29,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,305,306,307,308,309,310,312,6,313,314,315,316,317,318,324,333,334,335,336,30,337,338,339,340,341,342,347,348,349,350,352,353,354,356,357,358,359,360,361,365,366,367,368,371,373,374,376,377,380,381,382,383,385,388,7,8,393,398,9,10,415,418,419,420,421,422,423,32,429,430,431,434,437,438,439,33,34,442,443,446,35,36,37,38,40,41,42,43,44,45,48,447,448,449,450,451,452,453,455,456,457,458,459,465,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,477,478,479,480],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[18,19,20,114,115,146,147,153,154,155,158,159,216,219,220,242,245,246,247,248,249,250,253,254,255,286,287,288,324,325,30,338,339,348,349,353,354,358,359,365,366,380,381,382,383,384,386,7,8,393,394,419,428,431,433,450,453,455,465,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[519],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[477,478,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[294,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[520,68],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[440],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[11,12,78,79,80,83,91,93,13,14,15,16,17,18,100,109,20,114,115,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,156,157,160,177,183,185,186,187,188,21,22,23,24,25,194,196,197,199,212,213,214,221,225,226,228,232,233,234,235,27,236,237,238,239,240,241,28,29,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,300,301,302,303,304,305,306,307,308,310,312,4,4,5,5,6,318,324,333,334,30,338,339,341,342,347,348,349,350,352,353,354,356,357,358,360,362,363,364,367,368,369,370,371,372,373,374,375,31,376,377,385,388,7,8,393,398,9,10,415,418,419,420,421,422,423,32,429,430,431,434,435,436,437,438,439,33,34,441,442,443,444,445,446,35,36,38,39,42,43,44,45,46,47,48,447,448,449,450,451,452,453,454,455,456,457,458,465,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,477,478,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[521],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"classConstructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[35,37,45,52,53,55,57,58,60,70,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[58,59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[506,477,478,479],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests2.UsageTest.argumentsOrdered":366,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":171,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":361,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":313,"org.easymock.tests2.DelegateToTest.testReturnException":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":233,"org.easymock.tests.MockingTest.testPartialClassMocking":225,"org.easymock.tests.MockClassControlTest.testToString":253,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":379,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":334,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":502,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":13,"org.easymock.tests2.UsageTest.wrongArguments":359,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":291,"org.easymock.samples.ExampleTest.answerVsDelegate":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":247,"org.easymock.tests2.UsageConstraintsTest.testNull":55,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":456,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":258,"org.easymock.tests2.CaptureTest.testPrimitive":38,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":17,"org.easymock.tests.UsageTest.moreThanOneArgument":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":281,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":302,"org.easymock.tests.UsageTest.argumentsOrdered":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":237,"org.easymock.tests.UsageVarargTest.varargIntAccepted":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":21,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":511,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":329,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":25,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":486,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":465,"org.easymock.tests.ReplayStateInvalidUsageTest.times":103,"org.easymock.tests2.DependencyTest.testClassMocking":331,"org.easymock.tests2.AnswerTest.answer":434,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":475,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":244,"org.easymock.tests2.UsageTest.strictResetToDefault":357,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":515,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":284,"org.easymock.tests2.DelegateToTest.testDelegate":446,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":241,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":485,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":277,"org.easymock.tests.LimitationsTest.mockFinalMethod":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":193,"org.easymock.tests2.DependencyTest.testClassMockingSupport":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":146,"org.easymock.tests2.CaptureTest.testCapture1_2446744":39,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":473,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":97,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":246,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":507,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":489,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":98,"org.easymock.tests.MockingTest.testInterfaceMocking":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":22,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":405,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":263,"org.easymock.tests2.UsageTest.niceToStrict":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":161,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":388,"org.easymock.tests2.MockBuilderTest.testCreateMock":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":412,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":468,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":271,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":452,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":289,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":137,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":204,"org.easymock.tests2.EasyMockSupportClassTest.testAll":398,"org.easymock.tests.MockClassControlTest.testEquals":257,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":191,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests.MockNameTest.defaultName":250,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":303,"org.easymock.samples.ExampleTest.voteForRemovals":310,"org.easymock.tests.UsageVarargTest.allKinds":26,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":192,"org.easymock.samples.BasicClassMockTest.testPrintContent":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":124,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":326,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":509,"org.easymock.tests2.UsageConstraintsTest.greaterThan":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":283,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":431,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":490,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":299,"org.easymock.samples.ExampleTest.voteForRemoval":307,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":432,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":374,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":248,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":512,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":424,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":482,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":188,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":356,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":449,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":232,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":441,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":450,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":368,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":133,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":31,"org.easymock.tests2.UsageTest.moreThanOneArgument":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":179,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":211,"org.easymock.tests.GenericTest.testBridgedEquals":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":88,"org.easymock.tests.UsageExpectAndReturnTest.longType":129,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":280,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":73,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":300,"org.easymock.tests.UsageCallCountTest.tooManyCalls":89,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests.MockingTest.testNiceClassMocking":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":348,"org.easymock.tests.MockingTest.testClassMocking":223,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":82,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":371,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests.MockTypeTest.fromEasyMockClass":245,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":34,"org.easymock.tests.UsageExpectAndReturnTest.object":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":469,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":519,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":455,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":206,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":218,"org.easymock.tests.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":166,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":149,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":378,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":142,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":196,"org.easymock.tests.MockClassControlTest.testHashCode":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":407,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":79,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":472,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":49,"org.easymock.tests.UsageVarargTest.varargCharAccepted":205,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":508,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":184,"org.easymock.tests2.UsageTest.openCallCountByLastCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":458,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":0,"org.easymock.tests.DefaultClassInstantiatorTest.object":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":78,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":216,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":408,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":319,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":488,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":429,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":268,"org.easymock.tests.CapturesMatcherTest.test":518,"org.easymock.tests.ReplayStateInvalidCallsTest.times":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":185,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":415,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":254,"org.easymock.tests2.UsageTest.resumeIfFailure":367,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":242,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":510,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":235,"org.easymock.tests2.StubTest.stubWithReturnValue":342,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":74,"org.easymock.tests2.SerializationTest.testAllMockedMethod":479,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":177,"org.easymock.samples.SupportTest.voteForRemovals":318,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":274,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":506,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":183,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":435,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":151,"org.easymock.tests.UsageExpectAndThrowTest.object":272,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":71,"org.easymock.tests2.DelegateToTest.testWrongClass":444,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":492,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":28,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":29,"org.easymock.tests.UsageStrictMockTest.range":114,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":345,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":454,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":290,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":484,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":214,"org.easymock.tests.UsageUnorderedTest.message":18,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":504,"org.easymock.tests.UsageVerifyTest.twoReturns":288,"org.easymock.tests.UsageVarargTest.varargByteAccepted":210,"org.easymock.tests2.ThreadingTest.testThreadSafe":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":410,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":86,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":219,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":315,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":16,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":102,"org.easymock.tests2.StubTest.stub":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":234,"org.easymock.tests.UsageExpectAndThrowTest.longType":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":297,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":101,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":337,"org.easymock.tests2.SerializationTest.testClass":477,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests.LimitationsTest.mockNativeMethod":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":462,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":500,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":340,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":505,"org.easymock.tests2.NameTest.nameForMocksControl":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":464,"org.easymock.tests2.MockedExceptionTest.testMockedException":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":400,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":440,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":266,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":418,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":8,"org.easymock.tests.MockingTest.testNicePartialClassMocking":226,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":423,"org.easymock.tests2.CompareToTest.testCompareEqual":521,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":460,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":147,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":499,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":354,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":72,"org.easymock.tests.MockingTest.testTwoMocks":224,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":496,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":355,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":270,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":365,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":76,"org.easymock.samples.ExampleTest.removeNonExistingDocument":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":467,"org.easymock.tests.UsageStrictMockTest.differentMethods":115,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":321,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":295,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":375,"org.easymock.tests2.MockBuilderTest.testCreateMockString":394,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":401,"org.easymock.tests.UsageExpectAndThrowTest.floatType":264,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":437,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":513,"org.easymock.tests.UsageVerifyTest.twoThrows":287,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":10,"org.easymock.samples.ExampleTest.voteAgainstRemoval":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":430,"org.easymock.tests.LimitationsTest.privateConstructor":108,"org.easymock.tests2.UsageConstraintsTest.testNotNull":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":125,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":369,"org.easymock.tests2.UsageTest.defaultResetToNice":364,"org.easymock.samples.ExampleTest.voteAgainstRemovals":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":461,"org.easymock.tests.UsageVarargTest.differentLength":207,"org.easymock.tests2.CallbackTest.callback":480,"org.easymock.tests2.UsageConstraintsTest.equals":476,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":426,"org.easymock.tests.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":15,"org.easymock.tests.UsageCallCountTest.tooFewCalls":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":292,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests.MockingTest.testStrictClassMocking":222,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":12,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":466,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":352,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":439,"org.easymock.tests.ObjectMethodsTest.testHashCode":217,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":498,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":376,"org.easymock.tests2.NameTest.nameForNiceMock":382,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":493,"org.easymock.tests2.DependencyTest.testInterfaceMocking":333,"org.easymock.samples.ExampleTest.addDocument":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":411,"org.easymock.tests2.DelegateToTest.testStubDelegate":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.AnswerTest.stubAnswer":438,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":390,"org.easymock.tests.UsageVarargTest.varargLongAccepted":209,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":144,"org.easymock.tests.UsageExpectAndReturnTest.floatType":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":377,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.UsageThrowableTest.noUpperLimit":119,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":328,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":343,"org.easymock.tests2.SerializationTest.test":478,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":40,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":127,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.samples.SupportTest.addDocument":317,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":351,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":483,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":402,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":165,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":327,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":229,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":481,"org.easymock.tests2.NameTest.nameForMock":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":517,"org.easymock.tests2.UsageStrictMockTest.differentMethods":339,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":276,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":285,"org.easymock.tests2.MockedExceptionTest.testRealException":372,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":174,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":14,"org.easymock.tests2.NameTest.nameForStrictMock":381,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":33,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":422,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":344,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":296,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":385,"org.easymock.tests2.UsageStrictMockTest.range":338,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":487,"org.easymock.tests2.UsageConstraintsTest.lessThan":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":323,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":406,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests2.UsageConstraintsTest.testOr":57,"org.easymock.tests.UsageRangeTest.combination":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":419,"org.easymock.tests.UsageTest.wrongArguments":155,"org.easymock.tests2.MockBuilderTest.testWithConstructor":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":403,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":139,"org.easymock.tests.UsageVarargTest.varargShortAccepted":208,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":298,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":87,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":501,"org.easymock.tests2.UsageConstraintsTest.cmpTo":62,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":436,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":164,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":363,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":96,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":386,"org.easymock.tests.UsageTest.unexpectedCallWithArray":154,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":497,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":140,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":113,"org.easymock.tests2.UsageConstraintsTest.constraints":52,"org.easymock.samples.ExampleTest.addAndChangeDocument":312,"org.easymock.tests.UsageStrictMockTest.testVerify":117,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":314,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":112,"org.easymock.tests2.CompareToTest.testGreateThan":520,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":190,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":132,"org.easymock.tests.LimitationsTest.abstractClass":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":24,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":453,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":202}}]
