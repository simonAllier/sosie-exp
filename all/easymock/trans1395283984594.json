[{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[0],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[1,2,3,4,5],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[6,7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[20,21,22,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[26,27,28,29],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[31,32,33,1,34,35,36,37,38,3,4,39,40,41,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[42,31,43,44,32,33,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,1,63,64,34,35,36,37,65,66,67,68,38,69,3,4,70,71,72,40,73,74,41,75,5,76],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[77,78,79,80,26],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[81,82,83,84],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[78,28],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[81,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[99,81,82,100,101,102,103,104,42,105,106,43,107,108,109,45,46,110,47,111,112,113,48,49,114,115,50,116,117,51,118,119,120,121,122,123,124,85,125,126,127,128,129,52,130,131,132,54,20,133,21,134,135,136,137,138,22,139,140,141,56,142,143,144,145,146,57,147,58,27,148,59,6,7,0,149,150,23,151,9,152,153,154,155,156,60,28,157,30,158,159,160,29,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,1,63,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,64,211,212,213,65,214,215,216,217,218,38,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,16,253,3,4,254,255,256,257,73,258,259,260,261,5,76,262,263,264],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[106,175,1,63,211,38,265,266,267,2,253,3,4,261,5,76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[81,83,118,119,120,121,123,124,85,125,126,127,128,268,269,52,270,130,271,131,132,53,54,272,55,273,274,275,141,56,143,144,145,276,146,277,57,147,58,164,95,95,96,96,182,278,279,280,281,282,219,16,17,18,283,284,262,263,264],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[77,163],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[285,286,160,161],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[154],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[191,192,199,206,250,287],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[288,167,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":64,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":97,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":44,"org.easymock.tests2.StubTest.stubWithReturnValue":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":200,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":29,"org.easymock.tests2.SerializationTest.testAllMockedMethod":83,"org.easymock.tests2.DelegateToTest.testReturnException":166,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":251,"org.easymock.tests.MockingTest.testPartialClassMocking":262,"org.easymock.samples.SupportTest.voteForRemovals":176,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":232,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":220,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":126,"org.easymock.tests.UsageExpectAndThrowTest.object":230,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":265,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":104,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":158,"org.easymock.tests2.DelegateToTest.testWrongClass":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":249,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":250,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":188,"org.easymock.samples.ConstructorCalledMockTest.testTax":95,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.samples.ExampleTest.answerVsDelegate":178,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":118,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":50,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":131,"org.easymock.tests2.CaptureTest.testPrimitive":134,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":239,"org.easymock.tests.UsageTest.moreThanOneArgument":211,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":142,"org.easymock.tests2.CaptureTest.testCaptureNone":137,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":70,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests2.ThreadingTest.testThreadSafe":170,"org.easymock.tests.UsageTest.argumentsOrdered":37,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":214,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":271,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":218,"org.easymock.tests.UsageExpectAndThrowTest.longType":223,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":62,"org.easymock.tests2.SerializationTest.testClass":81,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests.LimitationsTest.mockNativeMethod":219,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.DependencyTest.testClassMocking":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":210,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests2.AnswerTest.answer":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":275,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests2.UsageTest.strictResetToDefault":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":113,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests2.DelegateToTest.testDelegate":169,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":224,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":132,"org.easymock.tests.MockingTest.testNicePartialClassMocking":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":235,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.CompareToTest.testCompareEqual":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":10,"org.easymock.tests2.CaptureTest.testCaptureLast":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":252,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":241,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":124,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":284,"org.easymock.tests2.DependencyTest.testClassMockingSupport":25,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":240,"org.easymock.tests2.CaptureTest.testCapture1_2446744":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":228,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":162,"org.easymock.tests.UsageThrowableTest.throwError":242,"org.easymock.tests.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":172,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":71,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.UsageExpectAndThrowTest.floatType":222,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":87,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":127,"org.easymock.samples.PartialClassMockTest.testGetArea":182,"org.easymock.tests2.CompareToTest.testLessOrEqual":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":215,"org.easymock.samples.ExampleTest.voteAgainstRemoval":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":221,"org.easymock.tests2.UsageTest.niceToStrict":43,"org.easymock.tests2.UsageConstraintsTest.testNotNull":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":248,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":130,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.tests2.UsageTest.defaultResetToNice":109,"org.easymock.samples.ExampleTest.voteAgainstRemovals":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":206,"org.easymock.tests.UsageVarargTest.differentLength":69,"org.easymock.tests2.CallbackTest.callback":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":94,"org.easymock.tests.UsageTest.openCallCountByLastCall":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":229,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageOverloadedMethodTest.overloading":186,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":256,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":185,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":154,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":138,"org.easymock.tests.UsageThrowableTest.throwCheckedException":245,"org.easymock.tests2.EasyMockSupportClassTest.testAll":125,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":273,"org.easymock.tests2.CaptureTest.testCaptureAll":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":184,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.testMatches":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":122,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":287,"org.easymock.tests2.CompareToTest.testGreateOrEqual":80,"org.easymock.samples.ExampleTest.voteForRemovals":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":11,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":174,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":253,"org.easymock.tests2.DependencyTest.testInterfaceMocking":103,"org.easymock.samples.BasicClassMockTest.testPrintContent":279,"org.easymock.tests2.DelegateToTest.testStubDelegate":167,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":247,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests2.AnswerTest.stubAnswer":101,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":261,"org.easymock.tests2.UsageConstraintsTest.greaterThan":28,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":58,"org.easymock.samples.ExampleTest.voteForRemoval":179,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":209,"org.easymock.tests.UsageExpectAndReturnTest.floatType":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":96,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":282,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.SerializationTest.test":82,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":111,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":192,"org.easymock.tests2.UsageConstraintsTest.testSame":149,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":288,"org.easymock.tests2.CaptureTest.testCaptureFirst":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":112,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":46,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":198,"org.easymock.tests.GenericTest.testPackageScope":16,"org.easymock.tests2.UsageTest.moreThanOneArgument":106,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":173,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":67,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":98,"org.easymock.tests.UsageExpectAndReturnTest.longType":194,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":110,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":203,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":236,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":93,"org.easymock.tests2.UsageStrictMockTest.differentMethods":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":195,"org.easymock.tests.UsageCallCountTest.tooManyCalls":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":225,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":119,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":269,"org.easymock.tests2.UsageConstraintsTest.testContains":153,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":164,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":286,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":74,"org.easymock.tests.UsageExpectAndReturnTest.object":201,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":266,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":146,"org.easymock.tests.ErrorMessageTest.testGetters":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":86,"org.easymock.tests.UsageRangeTest.combination":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":255,"org.easymock.tests.UsageTest.wrongArguments":35,"org.easymock.tests2.MockBuilderTest.testWithConstructor":88,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":254,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":14,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":72,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":66,"org.easymock.tests2.UsageConstraintsTest.cmpTo":152,"org.easymock.tests2.CompareToTest.testLessThan":77,"org.easymock.tests2.UsageTest.openCallCountByLastCall":107,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":108,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":270,"org.easymock.tests.UsageTest.unexpectedCallWithArray":34,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":227,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":244,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":205,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":75,"org.easymock.tests2.UsageConstraintsTest.constraints":59,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":128,"org.easymock.tests2.CompareToTest.testGreateThan":78,"org.easymock.tests2.UsageTest.resumeIfFailure":45,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":197,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":49,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":2}}]
