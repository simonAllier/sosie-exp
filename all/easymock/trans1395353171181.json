[{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,12,7,13,14,15,16,17,8,9,18,10,19,11,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,12,7,13,14,15,16,17,8,9,18,10,19,11,20,21,22],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:70","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[42,10,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[45,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,26,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[95,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[99,100],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[101,102,103,104,105,106,107,108,109,110,45,46,111,47,48,49,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,50,134,135,136,137,138,139,140,141,142,51,143,52,144,53,54,55,56,145,146,57,58,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,60,61,162,62,63,64,65,163,66,164,165,67,68,69,70,166,167,168,94,169,24,25,26,27,170,171,172,173,174,175,176,177,178,179,180,181,44,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,95,199,200,201,202,203,204,28,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,42,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,71,244,72,73,245,246,74,75,76,247,77,248,249,78,79,250,80,251,252,253,254,255,256,257,258,23,14,15,259,260,261,262,96,16,17,263,264,265,266,267,81,268,269,82,270,271,272,273,274,275,276,277,278,83,279,280,281,282,283,84,284,285,0,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,10,317,318,319,320,321,322,29,30,31,323,324,99,325,326,97,100,327,328,329,330,331,332,333,334,32,33,34,35,36,37,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,85,86,87,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,38,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,88,416,417,418,419,420,421,422,39,423,424,425,426,427,428,429,430,40,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,43,447,448,449,450,451,452,453,454,455,89,90,91,456,92,457,458,459,460,461,462,463,464,465,466,467,93,468,469,470,1,471,472,473,2,3,474,41,475,476,477,478,479,480,4,481,482,483,484,5,485,486,487,488,489,490,491,492,493,19,11,20,494,495,21,22,496],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[103,104,105,106,107,108,110,113,114,115,116,117,132,50,136,137,138,139,140,141,142,51,143,52,144,54,55,57,58,148,149,150,151,152,153,154,155,156,157,158,159,160,161,60,61,162,62,63,64,66,67,69,168,169,24,25,26,27,44,182,183,184,185,187,188,189,191,204,28,205,206,207,208,210,211,212,213,214,215,217,218,219,42,220,221,222,223,224,225,226,227,229,230,231,232,234,235,236,237,238,241,242,243,71,74,75,79,80,258,23,14,15,259,260,261,262,96,16,17,263,264,289,290,291,292,293,294,295,296,297,298,299,300,305,307,308,309,310,311,312,313,314,315,316,10,317,318,319,320,321,322,32,33,34,35,36,37,344,345,346,347,348,349,85,86,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,379,391,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,88,422,39,424,425,426,427,428,429,430,40,431,432,434,435,436,437,438,440,441,443,444,445,446,43,447,448,449,450,451,452,453,90,91,92,461,93,489,490,491,492,493,19,11,20,494,495,21,22,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.Find:41","failures":[497],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[45,45,46,46,47,48,49,130,131,50,134,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,164,165,67,68,69,70,166,167,24,25,26,71,72,73,246,74,75,76,77,249,78,79,80,251,252,255,265,266,267,81,268,269,82,270,271,272,273,274,275,276,277,278,83,279,280,281,282,283,84,284,285,324,99,325,326,97,100,328,336,341,353,85,86,87,354,414,415,88,416,454,455,89,90,91,92,459,460,461,462,463,464,465,466,467,93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[6,7,8,9,10,11],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[430,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[225,226],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:114","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[97,498,98],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[204,377,431,481,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[140,141,206,207,210,212,213,219,221,224,231,261,262,293,308,319,320,346,418,419,435,471,489,494,495],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[96],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":208,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":493,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":477,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":111,"org.easymock.tests2.DelegateToTest.testReturnException":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":33,"org.easymock.tests.MockingTest.testPartialClassMocking":90,"org.easymock.tests.MockClassControlTest.testToString":462,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":233,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":393,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":133,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":429,"org.easymock.tests2.UsageTest.wrongArguments":15,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":291,"org.easymock.samples.ExampleTest.answerVsDelegate":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":341,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":458,"org.easymock.tests2.UsageConstraintsTest.testNull":211,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":62,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":200,"org.easymock.tests2.CaptureTest.testPrimitive":151,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":432,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":412,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":451,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":417,"org.easymock.tests.UsageTest.argumentsOrdered":22,"org.easymock.tests.UsageVarargTest.varargIntAccepted":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":296,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":253,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":300,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":123,"org.easymock.tests.ReplayStateInvalidUsageTest.times":383,"org.easymock.tests2.DependencyTest.testClassMocking":130,"org.easymock.tests2.AnswerTest.answer":238,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":185,"org.easymock.tests2.CaptureTest.testAnd":148,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":338,"org.easymock.tests2.UsageTest.strictResetToDefault":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":67,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":421,"org.easymock.tests2.DelegateToTest.testDelegate":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":408,"org.easymock.tests.LimitationsTest.mockFinalMethod":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":428,"org.easymock.tests2.DependencyTest.testClassMockingSupport":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":304,"org.easymock.tests2.CaptureTest.testCapture1_2446744":152,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":406,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":183,"org.easymock.tests.UsageThrowableTest.throwError":307,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":377,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":340,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":181,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":285,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.MockingTest.testInterfaceMocking":456,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":297,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":394,"org.easymock.tests2.UsageTest.niceToStrict":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":274,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":74,"org.easymock.tests2.MockBuilderTest.testCreateMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":281,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":402,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":289,"org.easymock.tests.UsageOverloadedMethodTest.overloading":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":283,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":220,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":366,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":498,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":157,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":439,"org.easymock.tests.MockClassControlTest.testEquals":466,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":410,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":12,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":184,"org.easymock.tests2.CaptureTest.testCaptureAll":149,"org.easymock.tests.MockNameTest.defaultName":423,"org.easymock.tests2.UsageConstraintsTest.testMatches":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":452,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":375,"org.easymock.samples.ExampleTest.voteForRemovals":108,"org.easymock.tests.UsageVarargTest.allKinds":43,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":427,"org.easymock.samples.BasicClassMockTest.testPrintContent":49,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":313,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":136,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":37,"org.easymock.tests2.UsageConstraintsTest.greaterThan":223,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.samples.ExampleTest.voteForRemoval":105,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":166,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":65,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":93,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":32,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":186,"org.easymock.tests2.CaptureTest.testCaptureFirst":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":362,"org.easymock.tests2.CaptureTest.testCapture2_2446744":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":116,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":484,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":79,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":446,"org.easymock.tests.GenericTest.testBridgedEquals":354,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":351,"org.easymock.tests.UsageExpectAndReturnTest.longType":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":424,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":411,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":0,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":449,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":30,"org.easymock.tests.UsageCallCountTest.tooManyCalls":352,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":363,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":398,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":312,"org.easymock.tests.MockingTest.testNiceClassMocking":459,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests.MockingTest.testClassMocking":455,"org.easymock.tests2.UsageConstraintsTest.testContains":219,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":345,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":26,"org.easymock.tests2.UsageConstraintsTest.testFind":210,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":435,"org.easymock.tests.MockTypeTest.fromEasyMockClass":339,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndReturnTest.object":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":199,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":441,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":332,"org.easymock.tests.UsageTest.exactCallCountByLastCall":496,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":3,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":418,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":301,"org.easymock.tests2.ConstraintsToStringTest.findToString":497,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":134,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":436,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":388,"org.easymock.tests.MockClassControlTest.testHashCode":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":171,"org.easymock.tests2.EasyMockSupportTest.testVerify":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":276,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":469,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":182,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":44,"org.easymock.tests.UsageVarargTest.varargCharAccepted":440,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":323,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":488,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":202,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":468,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":121,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":170,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":464,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":29,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests2.UsageTest.resumeIfFailure":263,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":35,"org.easymock.tests2.StubTest.stubWithReturnValue":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":364,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":482,"org.easymock.samples.SupportTest.voteForRemovals":102,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":405,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":487,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":239,"org.easymock.tests.UsageExpectAndThrowTest.object":403,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":303,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":226,"org.easymock.tests2.DelegateToTest.testWrongClass":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":447,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":448,"org.easymock.samples.ConstructorCalledMockTest.testTax":45,"org.easymock.tests.UsageStrictMockTest.range":319,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":256,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":404,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":76,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":38,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":290,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests2.CaptureTest.testCaptureNone":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":288,"org.easymock.tests.UsageUnorderedTest.message":413,"org.easymock.tests.UsageVerifyTest.twoReturns":295,"org.easymock.tests.UsageVarargTest.varargByteAccepted":445,"org.easymock.tests2.ThreadingTest.testThreadSafe":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":279,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":349,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":48,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":333,"org.easymock.tests2.CaptureTest.testCapture_2617107":150,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":431,"org.easymock.tests2.UsageConstraintsTest.any":217,"org.easymock.tests2.StubTest.stub":204,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":486,"org.easymock.tests.UsageExpectAndThrowTest.longType":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":34,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":97,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.SerializationTest.testClass":51,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":120,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":122,"org.easymock.tests2.MockedExceptionTest.testMockedException":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":269,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":397,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":92,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":94,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":77,"org.easymock.tests.MockingTest.testNicePartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":64,"org.easymock.tests2.CaptureTest.testCaptureLast":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":118,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":305,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":214,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":227,"org.easymock.tests.MockingTest.testTwoMocks":89,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":401,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":231,"org.easymock.samples.ExampleTest.removeNonExistingDocument":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":125,"org.easymock.tests.UsageStrictMockTest.differentMethods":320,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":172,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":325,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":115,"org.easymock.tests2.MockBuilderTest.testCreateMockString":80,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":460,"org.easymock.tests.UsageExpectAndThrowTest.floatType":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":270,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":267,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":135,"org.easymock.tests.UsageVerifyTest.twoThrows":294,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.ExampleTest.voteAgainstRemoval":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":286,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests.LimitationsTest.privateConstructor":415,"org.easymock.tests2.UsageConstraintsTest.testNotNull":230,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":314,"org.easymock.tests2.UsageTest.defaultResetToNice":96,"org.easymock.samples.ExampleTest.voteAgainstRemovals":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":370,"org.easymock.tests.UsageVarargTest.differentLength":442,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":119,"org.easymock.tests2.CallbackTest.callback":144,"org.easymock.tests2.UsageConstraintsTest.equals":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":164,"org.easymock.tests.UsageTest.openCallCountByLastCall":494,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":40,"org.easymock.tests.UsageCallCountTest.tooFewCalls":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":292,"org.easymock.tests.UsageThrowableTest.throwCheckedException":311,"org.easymock.tests.MockingTest.testStrictClassMocking":454,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":55,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":146,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":243,"org.easymock.tests.ObjectMethodsTest.testHashCode":331,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":117,"org.easymock.tests2.NameTest.nameForNiceMock":236,"org.easymock.tests2.DependencyTest.testInterfaceMocking":132,"org.easymock.samples.ExampleTest.addDocument":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":280,"org.easymock.tests2.DelegateToTest.testStubDelegate":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":284,"org.easymock.tests2.AnswerTest.stubAnswer":242,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":317,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":248,"org.easymock.tests.UsageVarargTest.varargLongAccepted":444,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.floatType":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":46,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":224,"org.easymock.tests.UsageThrowableTest.noUpperLimit":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":206,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":251,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":153,"org.easymock.tests2.SerializationTest.test":143,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":98,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":99,"org.easymock.tests2.UsageConstraintsTest.testSame":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":356,"org.easymock.samples.SupportTest.addDocument":101,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":145,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":271,"org.easymock.tests.GenericTest.testPackageScope":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":2,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":178,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":457,"org.easymock.tests2.NameTest.nameForMock":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":367,"org.easymock.tests2.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":407,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":492,"org.easymock.tests2.MockedExceptionTest.testRealException":27,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":480,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":430,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":385,"org.easymock.tests2.NameTest.nameForStrictMock":235,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":246,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":255,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":72,"org.easymock.tests2.UsageStrictMockTest.range":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":193,"org.easymock.tests2.CaptureTest.testCaptureRightOne":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":275,"org.easymock.tests2.UsageConstraintsTest.testOr":213,"org.easymock.tests.UsageRangeTest.combination":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":20,"org.easymock.tests2.MockBuilderTest.testWithConstructor":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":272,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":368,"org.easymock.tests.UsageVarargTest.varargShortAccepted":443,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":350,"org.easymock.tests2.UsageConstraintsTest.cmpTo":218,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.CaptureTest.testCaptureFromStub":159,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":376,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":73,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":369,"org.easymock.tests2.UsageConstraintsTest.constraints":207,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.samples.ExampleTest.addAndChangeDocument":110,"org.easymock.tests.UsageStrictMockTest.testVerify":322,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":112,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":425,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":298,"org.easymock.tests.LimitationsTest.abstractClass":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":361,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":299,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":198}}]
