[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[2,3,4,5,6],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[345,347,350,351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[298,300,308,344,345,348,350,351,353,363,368],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[80,147,148,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[82,94,164,206,251,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[374,375,376,377,378,379,380,381,382,383,384,385,386],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[374,375,376,377,378,379,380,381,382,383,384,385,386],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[26,41,42,44,45,83,85,88,89,387,388,389,205,206,207,245,247,248,257,258,264,265,278,279,280,281],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[390,391,392,393,394,381,382,395,396,383,384,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,386],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,19,20,426,427,428,21,22,23,24,25,26,27,429,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,82,83,85,86,87,88,89,90,107,113,115,116,117,430,118,119,120,121,122,128,129,130,131,132,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,151,156,431,432,433,434,160,161,162,163,164,165,166,167,168,169,170,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,212,213,214,215,216,217,218,219,220,221,222,224,390,390,391,391,435,225,226,436,437,227,228,234,241,242,243,244,245,246,247,248,249,250,251,438,439,392,440,254,441,393,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,381,278,279,280,281,442,443,444,445,446,447,402,405,415,421,448,449,282,450,451,452,453,454,455,456,457,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,331,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,386,371,458,372],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,459,426,427,428,460,461,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,462,463,429,464,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,430,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,465,466,431,432,433,157,434,158,159,467,160,161,162,163,164,165,166,167,168,169,170,468,469,470,171,172,471,173,174,175,176,177,472,473,474,475,476,477,478,479,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,480,481,0,482,483,484,1,485,486,212,213,214,215,216,217,218,219,220,221,222,223,224,390,391,435,225,226,436,437,227,228,229,230,231,232,233,234,235,236,237,238,239,240,487,488,241,242,243,244,245,246,247,248,249,250,251,489,490,491,492,493,252,253,438,439,392,440,494,254,441,393,394,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,381,382,495,277,278,279,280,281,442,395,443,496,396,497,444,498,445,383,446,499,384,500,447,398,501,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,448,449,282,450,451,452,502,503,453,504,505,454,455,456,457,506,507,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,386,371,458,372],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[459,460],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[508],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[7,12,13,14,15,16,17,426,427,21,22,25,429,40,42,45,46,47,49,50,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,83,430,118,119,120,121,122,123,124,125,126,127,133,135,136,137,139,140,142,143,144,145,146,432,433,434,160,161,162,163,164,165,175,176,473,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,241,244,245,248,249,250,251,439,392,441,393,256,257,259,260,263,266,268,269,270,271,272,273,276,381,278,279,280,281,442,444,498,448,282,450,451,452,453,454,456,283,286,287,288,289,291,293,294,297,298,299,300,301,303,304,305,306,307,308,311,338,339,340,341,342,343,344,345,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,386,371,458,372],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[39,44,45,201,243,247,248,259,447,313,317,318,321,372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[381,382],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[26,41,44,509,84,85,88,89,206,207,247,258,264,265],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[7,8,426,21,22,25,26,429,42,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,86,87,90,107,118,119,120,121,122,123,128,130,131,133,432,433,434,164,175,176,472,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,217,218,219,220,222,435,228,234,241,242,245,247,248,251,438,439,392,440,254,441,393,255,256,257,259,261,262,263,266,267,270,272,273,274,275,276,381,443,444,445,446,447,402,405,415,421,448,449,282,450,451,452,453,455,456,457,283,287,288,293,294,295,297,298,299,300,301,302,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,331,342,343,344,345,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,386,371,372],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[386,371,458],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[7,8,14,15,16,17,18,19,20,426,427,21,22,23,24,25,26,429,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,82,83,84,85,86,87,88,89,90,430,118,119,120,121,122,123,124,125,126,127,128,130,131,134,135,136,137,139,140,141,142,143,144,145,146,432,433,434,160,161,162,163,164,165,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,390,391,435,225,226,436,437,227,228,234,241,242,243,244,245,246,247,248,249,250,251,438,439,392,440,254,441,393,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,381,442,443,444,498,445,446,500,447,501,402,405,415,421,448,449,282,450,451,452,502,453,454,455,456,457,283,286,287,288,289,291,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,331,338,339,340,341,342,343,344,345,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,386,371,458,372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[8,115,116,117,160,161,162,163,164,165,251,268,269,270,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:126","failures":[130,218,293,295,297],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[510,511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":345,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests2.UsageTest.argumentsOrdered":265,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":101,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":225,"org.easymock.tests2.DelegateToTest.testReturnException":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":161,"org.easymock.tests.MockingTest.testPartialClassMocking":432,"org.easymock.tests.MockClassControlTest.testToString":474,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":277,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":405,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":181,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":387,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":352,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":21,"org.easymock.tests2.UsageTest.wrongArguments":258,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":210,"org.easymock.samples.ExampleTest.answerVsDelegate":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":471,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":159,"org.easymock.tests2.UsageConstraintsTest.testNull":348,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":450,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":321,"org.easymock.tests2.CaptureTest.testPrimitive":301,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":25,"org.easymock.tests.UsageTest.moreThanOneArgument":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":200,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":214,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":166,"org.easymock.tests.UsageTest.argumentsOrdered":89,"org.easymock.tests.UsageVarargTest.varargIntAccepted":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests.ReplayStateInvalidUsageTest.times":35,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":331,"org.easymock.tests2.DependencyTest.testClassMocking":487,"org.easymock.tests2.AnswerTest.answer":283,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":341,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":470,"org.easymock.tests2.CaptureTest.testAnd":298,"org.easymock.tests2.UsageTest.strictResetToDefault":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":454,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":316,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":170,"org.easymock.tests2.DelegateToTest.testDelegate":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":196,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":127,"org.easymock.tests2.DependencyTest.testClassMockingSupport":488,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":76,"org.easymock.tests2.CaptureTest.testCapture1_2446744":302,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":503,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":339,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":29,"org.easymock.tests.UsageThrowableTest.throwError":48,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":172,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":461,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":216,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":423,"org.easymock.samples.PartialClassMockTest.testGetArea":435,"org.easymock.tests.MockingTest.testInterfaceMocking":157,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":30,"org.easymock.tests2.CompareToTest.testLessOrEqual":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":182,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":155,"org.easymock.tests2.UsageTest.niceToStrict":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":91,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":444,"org.easymock.tests2.MockBuilderTest.testCreateMock":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":418,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":190,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":469,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":208,"org.easymock.tests.UsageOverloadedMethodTest.overloading":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":358,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":357,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":307,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":138,"org.easymock.tests.MockClassControlTest.testEquals":478,"org.easymock.tests2.EasyMockSupportClassTest.testAll":402,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":427,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":125,"org.easymock.tests2.CaptureTest.testCaptureAll":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":340,"org.easymock.tests.MockNameTest.defaultName":177,"org.easymock.tests2.UsageConstraintsTest.testMatches":359,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":215,"org.easymock.samples.ExampleTest.voteForRemovals":222,"org.easymock.tests.UsageVarargTest.allKinds":146,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":205,"org.easymock.samples.BasicClassMockTest.testPrintContent":437,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":126,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":54,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":236,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":296,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":485,"org.easymock.tests2.UsageConstraintsTest.greaterThan":361,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":202,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":457,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":486,"org.easymock.samples.ExampleTest.voteForRemoval":219,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":506,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":502,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":430,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":314,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":160,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":292,"org.easymock.tests2.CaptureTest.testCaptureFirst":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":315,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":275,"org.easymock.tests2.CaptureTest.testCapture2_2446744":310,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":109,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":145,"org.easymock.tests.GenericTest.testBridgedEquals":460,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":19,"org.easymock.tests.UsageExpectAndReturnTest.longType":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":123,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":312,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":511,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":199,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":156,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":212,"org.easymock.tests.UsageCallCountTest.tooManyCalls":20,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":53,"org.easymock.tests.MockingTest.testNiceClassMocking":467,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":439,"org.easymock.tests.MockingTest.testClassMocking":466,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":510,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":13,"org.easymock.tests2.UsageConstraintsTest.testContains":356,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":270,"org.easymock.tests2.UsageConstraintsTest.testFind":347,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":180,"org.easymock.tests.MockTypeTest.fromEasyMockClass":171,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":291,"org.easymock.tests.UsageExpectAndReturnTest.object":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":320,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":376,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":153,"org.easymock.tests.UsageTest.exactCallCountByLastCall":90,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":96,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":167,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":79,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":382,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":130,"org.easymock.tests.MockClassControlTest.testHashCode":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":230,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":412,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":168,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":338,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":325,"org.easymock.tests.UsageVarargTest.varargCharAccepted":139,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":480,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":114,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests.DefaultClassInstantiatorTest.object":481,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":9,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":151,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":413,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":229,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":476,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":455,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":115,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":421,"org.easymock.tests2.UsageTest.resumeIfFailure":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":163,"org.easymock.tests2.StubTest.stubWithReturnValue":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":383,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":367,"org.easymock.tests2.SerializationTest.testAllMockedMethod":458,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":107,"org.easymock.samples.SupportTest.voteForRemovals":228,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":193,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":113,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":284,"org.easymock.tests.UsageExpectAndThrowTest.object":191,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":81,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":364,"org.easymock.tests2.DelegateToTest.testWrongClass":295,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":390,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":252,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":399,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":37,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":149,"org.easymock.tests2.CaptureTest.testCaptureNone":306,"org.easymock.tests.UsageUnorderedTest.message":26,"org.easymock.tests.UsageVerifyTest.twoReturns":207,"org.easymock.tests.UsageVarargTest.varargByteAccepted":144,"org.easymock.tests2.ThreadingTest.testThreadSafe":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":416,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":17,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":436,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":154,"org.easymock.tests2.CaptureTest.testCapture_2617107":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":24,"org.easymock.tests2.UsageConstraintsTest.any":354,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":34,"org.easymock.tests2.StubTest.stub":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":117,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":112,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":484,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":33,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.tests2.SerializationTest.testClass":386,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.LimitationsTest.mockNativeMethod":429,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":428,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":328,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":249,"org.easymock.tests2.NameTest.nameForMocksControl":281,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":373,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":404,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":87,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":434,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":185,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":448,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":446,"org.easymock.tests.MockingTest.testNicePartialClassMocking":433,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":452,"org.easymock.tests2.CompareToTest.testCompareEqual":4,"org.easymock.tests2.CaptureTest.testCaptureLast":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":374,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":77,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":393,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":351,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":365,"org.easymock.tests.MockingTest.testTwoMocks":431,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":189,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":369,"org.easymock.samples.ExampleTest.removeNonExistingDocument":223,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":231,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":482,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":274,"org.easymock.tests2.MockBuilderTest.testCreateMockString":501,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":406,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":495,"org.easymock.tests.UsageVerifyTest.twoThrows":206,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":415,"org.easymock.samples.ExampleTest.voteAgainstRemoval":220,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":102,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":456,"org.easymock.tests.LimitationsTest.privateConstructor":463,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":425,"org.easymock.tests2.UsageConstraintsTest.testNotNull":368,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":55,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests2.UsageTest.defaultResetToNice":263,"org.easymock.samples.ExampleTest.voteAgainstRemovals":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests.UsageVarargTest.differentLength":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":327,"org.easymock.tests2.CallbackTest.callback":372,"org.easymock.tests2.UsageConstraintsTest.equals":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":504,"org.easymock.tests.UsageTest.openCallCountByLastCall":86,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":23,"org.easymock.tests.UsageCallCountTest.tooFewCalls":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":440,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":211,"org.easymock.tests.UsageThrowableTest.throwCheckedException":52,"org.easymock.tests.MockingTest.testStrictClassMocking":465,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":441,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":36,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":254,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":288,"org.easymock.tests.ObjectMethodsTest.testHashCode":152,"org.easymock.tests2.CompareToTest.testGreateOrEqual":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":379,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":276,"org.easymock.tests2.NameTest.nameForNiceMock":280,"org.easymock.tests2.DependencyTest.testInterfaceMocking":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":377,"org.easymock.samples.ExampleTest.addDocument":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":294,"org.easymock.tests2.AnswerTest.stubAnswer":287,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":499,"org.easymock.tests.UsageVarargTest.varargLongAccepted":143,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":100,"org.easymock.tests.UsageExpectAndReturnTest.floatType":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":381,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":391,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageThrowableTest.noUpperLimit":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":238,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":343,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":489,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":303,"org.easymock.tests2.SerializationTest.test":371,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":57,"org.easymock.tests2.UsageConstraintsTest.testSame":349,"org.easymock.samples.SupportTest.addDocument":227,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":494,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":407,"org.easymock.tests.GenericTest.testPackageScope":426,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":95,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":237,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":158,"org.easymock.tests2.NameTest.nameForMock":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":398,"org.easymock.tests2.UsageStrictMockTest.differentMethods":248,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":505,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":195,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":204,"org.easymock.tests2.MockedExceptionTest.testRealException":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":253,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":104,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":245,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":22,"org.easymock.tests2.NameTest.nameForStrictMock":279,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":497,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":493,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":483,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":388,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":363,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":443,"org.easymock.tests2.UsageStrictMockTest.range":247,"org.easymock.tests2.UsageConstraintsTest.lessThan":370,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":411,"org.easymock.tests2.CaptureTest.testCaptureRightOne":308,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":350,"org.easymock.tests.UsageRangeTest.combination":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":449,"org.easymock.tests.UsageTest.wrongArguments":85,"org.easymock.tests2.MockBuilderTest.testWithConstructor":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":408,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":92,"org.easymock.tests.UsageVarargTest.varargShortAccepted":142,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":18,"org.easymock.tests2.UsageConstraintsTest.cmpTo":355,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":285,"org.easymock.tests2.CompareToTest.testLessThan":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":94,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.CaptureTest.testCaptureFromStub":309,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":28,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":496,"org.easymock.tests.UsageTest.unexpectedCallWithArray":84,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":16,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":397,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.UsageConstraintsTest.constraints":344,"org.easymock.samples.ExampleTest.addAndChangeDocument":224,"org.easymock.tests.UsageStrictMockTest.testVerify":47,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":226,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":124,"org.easymock.tests2.CompareToTest.testGreateThan":3,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.LimitationsTest.abstractClass":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":62,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":389,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":318}}]
